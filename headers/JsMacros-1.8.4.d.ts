declare const event: Events.BaseEvent;
declare const file: _javatypes.java.io.File;
declare const context: _javatypes.xyz.wagyourtail.jsmacros.core.language.EventContainer<any>;

declare namespace Events {
    export interface BaseEvent extends _javatypes.java.lang.Object {
        getEventName(): string;
    }    
    
    interface CommandContext extends BaseEvent {
        
        /**
         * 
         * @param name
         * @return 
         * @since 1.4.2
         * @throws CommandSyntaxException
         */
        getArg(name: string): any;
        getChild(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CommandContextHelper;
        getRange(): _javatypes.com.mojang.brigadier.context.StringRange;
        getInput(): string;
        
    }    
    
    interface AirChange extends BaseEvent {
        readonly air: number;
        
        toString(): string;
        
    }    
    
    interface Title extends BaseEvent {
        readonly type: string;
        message: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
        
        toString(): string;
        
    }    
    
    interface AttackBlock extends BaseEvent {
        readonly block: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockDataHelper;
        readonly side: number;
        
        toString(): string;
        
    }    
    
    interface RecvMessage extends BaseEvent {
        text: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
        
        /**
         * 
         * @since 1.8.2
         */
        signature: number[];
        
        /**
         * 
         * @since 1.8.2
         */
        messageType: string;
        
        toString(): string;
        
    }    
    
    interface Heal extends BaseEvent {
        readonly source: string;
        readonly health: number;
        readonly change: number;
        
        toString(): string;
        
    }    
    
    interface Tick extends BaseEvent {
        
        toString(): string;
        
    }    
    
    interface DimensionChange extends BaseEvent {
        readonly dimension: string;
        
        toString(): string;
        
    }    
    
    interface LaunchGame extends BaseEvent {
        readonly playerName: string;
        
        toString(): string;
        
    }    
    
    interface EXPChange extends BaseEvent {
        readonly progress: number;
        readonly total: number;
        readonly level: number;
        
        /**
         * 
         * @since 1.6.5
         */
        readonly prevProgress: number;
        
        /**
         * 
         * @since 1.6.5
         */
        readonly prevTotal: number;
        
        /**
         * 
         * @since 1.6.5
         */
        readonly prevLevel: number;
        
        toString(): string;
        
    }    
    
    interface BlockUpdate extends BaseEvent {
        readonly block: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockDataHelper;
        readonly updateType: string;
        
        toString(): string;
        
    }    
    
    interface OpenContainer extends BaseEvent {
        readonly inventory: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Inventory<any>;
        readonly screen: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen;
        cancelled: boolean;
        
        cancel(): void;
        isCanceled(): boolean;
        toString(): string;
        
    }    
    
    interface InteractEntity extends BaseEvent {
        readonly offhand: boolean;
        readonly result: string;
        readonly entity: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>;
        
        toString(): string;
        
    }    
    
    interface HeldItemChange extends BaseEvent {
        readonly offHand: boolean;
        readonly item: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
        readonly oldItem: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
        
        toString(): string;
        
    }    
    
    interface Disconnect extends BaseEvent {
        
        /**
         * 
         * @since 1.6.4
         */
        readonly message: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
        
        toString(): string;
        
    }    
    
    interface HealthChange extends BaseEvent {
        readonly health: number;
        readonly change: number;
        
        toString(): string;
        
    }    
    
    interface ClickSlot extends BaseEvent {
        
        /**
         * <a href="https://wiki.vg/Protocol#Click_Window" target="_blank">https://wiki.vg/Protocol#Click_Window</a>
         */
        readonly mode: number;
        readonly button: number;
        readonly slot: number;
        
        /**
         * set to `true` to prevent the default action
         */
        cancel: boolean;
        
        
        /**
         * 
         * @return inventory associated with the event
         */
        getInventory(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Inventory<any>;
        cancel(): void;
        isCanceled(): boolean;
        toString(): string;
        
    }    
    
    interface ResourcePackLoaded extends BaseEvent {
        readonly isGameStart: boolean;
        readonly loadedPacks: _javatypes.java.util.List<string>;
        
        toString(): string;
        
    }    
    
    interface Riding extends BaseEvent {
        readonly state: boolean;
        readonly entity: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>;
        
        toString(): string;
        
    }    
    
    interface ChunkUnload extends BaseEvent {
        readonly x: number;
        readonly z: number;
        
        toString(): string;
        
    }    
    
    interface Bossbar extends BaseEvent {
        readonly bossBar: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BossBarHelper;
        readonly uuid: string;
        readonly type: string;
        
        toString(): string;
        
    }    
    
    interface Sound extends BaseEvent {
        readonly sound: string;
        readonly volume: number;
        readonly pitch: number;
        readonly position: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
        
        toString(): string;
        
    }    
    
    interface QuitGame extends BaseEvent {
        
        toString(): string;
        
    }    
    
    interface ChunkLoad extends BaseEvent {
        readonly x: number;
        readonly z: number;
        readonly isFull: boolean;
        
        toString(): string;
        
    }    
    
    interface InteractBlock extends BaseEvent {
        readonly offhand: boolean;
        readonly result: string;
        readonly block: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockDataHelper;
        readonly side: number;
        
        toString(): string;
        
    }    
    
    interface PlayerJoin extends BaseEvent {
        readonly UUID: string;
        readonly player: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PlayerListEntryHelper;
        
        toString(): string;
        
    }    
    
    interface InventoryChange extends BaseEvent {
        readonly inventory: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Inventory<any>;
        readonly changedSlots: number[];
        readonly oldItems: _javatypes.java.util.Map<number, _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper>;
        readonly newItems: _javatypes.java.util.Map<number, _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper>;
        
        toString(): string;
        
    }    
    
    interface RecvPacket extends BaseEvent {
        readonly packet: /* minecraft classes, as any, because obfuscation: */ any;
        readonly type: string;
        
        
        /**
         * After modifying the buffer, use {@link _javatypes.PacketByteBufferHelper#toPacket} to get the modified
         *  packet and replace this packet with the modified one.
         * @return a helper for accessing and modifying the packet's data.
         * @since 1.8.4
         */
        getPacketBuffer(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
        toString(): string;
        
    }    
    
    interface PlayerLeave extends BaseEvent {
        readonly UUID: string;
        readonly player: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PlayerListEntryHelper;
        
        toString(): string;
        
    }    
    
    interface JoinedRecvPacket extends BaseEvent {
        cancel: boolean;
        packet: /* minecraft classes, as any, because obfuscation: */ any;
        readonly type: string;
        
        
        /**
         * After modifying the buffer, use {@link _javatypes.PacketByteBufferHelper#toPacket} to get the modified
         *  packet and replace this packet with the modified one.
         * @return a helper for accessing and modifying the packet's data.
         * @since 1.8.4
         */
        getPacketBuffer(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
        cancel(): void;
        isCanceled(): boolean;
        toString(): string;
        
    }    
    
    interface ItemPickup extends BaseEvent {
        readonly item: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
        
        toString(): string;
        
    }    
    
    interface JoinedTick extends BaseEvent {
        
        toString(): string;
        
    }    
    
    interface EntityUnload extends BaseEvent {
        readonly entity: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>;
        readonly reason: string;
        
        toString(): string;
        
    }    
    
    interface SendMessage extends BaseEvent {
        message: string;
        
        toString(): string;
        
    }    
    
    interface JoinedKey extends BaseEvent {
        cancel: boolean;
        
        cancel(): void;
        isCanceled(): boolean;
        
    }    
    
    interface HungerChange extends BaseEvent {
        readonly foodLevel: number;
        
        toString(): string;
        
    }    
    
    interface AttackEntity extends BaseEvent {
        readonly entity: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>;
        
        toString(): string;
        
    }    
    
    interface EntityHealed extends BaseEvent {
        readonly entity: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>;
        readonly health: number;
        readonly damage: number;
        
        toString(): string;
        
    }    
    
    interface SendPacket extends BaseEvent {
        readonly packet: /* minecraft classes, as any, because obfuscation: */ any;
        readonly type: string;
        
        
        /**
         * After modifying the buffer, use {@link _javatypes.PacketByteBufferHelper#toPacket} to get the modified
         *  packet and replace this packet with the modified one.
         * @return a helper for accessing and modifying the packet's data.
         * @since 1.8.4
         */
        getPacketBuffer(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
        toString(): string;
        
    }    
    
    interface StatusEffectUpdate extends BaseEvent {
        readonly oldEffect: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.StatusEffectHelper;
        readonly newEffect: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.StatusEffectHelper;
        readonly added: boolean;
        readonly removed: boolean;
        
        toString(): string;
        
    }    
    
    interface FallFlying extends BaseEvent {
        readonly state: boolean;
        
        toString(): string;
        
    }    
    
    interface Death extends BaseEvent {
        readonly deathPos: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
        readonly inventory: _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper>;
        
        
        /**
         * Respawns the player. Should be used with some delay, one tick should be enough.
         * @since 1.8.5
         */
        respawn(): void;
        toString(): string;
        
    }    
    
    interface EntityDamaged extends BaseEvent {
        readonly entity: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>;
        
        /**
         * 
         * @since 1.6.5
         */
        readonly health: number;
        readonly damage: number;
        
        toString(): string;
        
    }    
    
    interface JoinedSendPacket extends BaseEvent {
        cancel: boolean;
        packet: /* minecraft classes, as any, because obfuscation: */ any;
        readonly type: string;
        
        
        /**
         * Replaces the packet of this event with a new one of the same type, created from the given
         *  arguments. It's recommended to use {@link #getPacketBuffer} to modify the packet instead.
         * @param args the arguments to pass to the packet's constructor
         * @since 1.8.4
         */
        replacePacket(args: any[]): void;
        
        /**
         * After modifying the buffer, use {@link _javatypes.PacketByteBufferHelper#toPacket} to get the modified
         *  packet and replace this packet with the modified one.
         * @return a helper for accessing and modifying the packet's data.
         * @since 1.8.4
         */
        getPacketBuffer(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
        cancel(): void;
        isCanceled(): boolean;
        toString(): string;
        
    }    
    
    interface OpenScreen extends BaseEvent {
        readonly screen: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen;
        readonly screenName: string;
        
        toString(): string;
        
    }    
    
    interface JoinServer extends BaseEvent {
        readonly player: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper</* minecraft classes, as any, because obfuscation: */ any>;
        readonly address: string;
        
        toString(): string;
        
    }    
    
    interface ArmorChange extends BaseEvent {
        readonly slot: string;
        readonly item: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
        readonly oldItem: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
        
        toString(): string;
        
    }    
    
    interface SignEdit extends BaseEvent {
        readonly pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
        closeScreen: boolean;
        signText: _javatypes.java.util.List<string>;
        
        toString(): string;
        
    }    
    
    interface ItemDamage extends BaseEvent {
        readonly item: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
        readonly damage: number;
        
        toString(): string;
        
    }    
    
    interface DropSlot extends BaseEvent {
        readonly slot: number;
        
        /**
         * whether it's all or a single item being dropped
         */
        readonly all: boolean;
        
        /**
         * set to `true` to cancel the default action
         */
        cancel: boolean;
        
        
        /**
         * 
         * @return inventory associated with the event
         */
        getInventory(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Inventory<any>;
        cancel(): void;
        isCanceled(): boolean;
        toString(): string;
        
    }    
    
    interface Key extends BaseEvent {
        readonly action: number;
        readonly key: string;
        readonly mods: string;
        
        toString(): string;
        
    }    
    
    interface Damage extends BaseEvent {
        readonly attacker: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>;
        readonly source: string;
        readonly health: number;
        readonly change: number;
        
        toString(): string;
        
    }    
    
    interface EntityLoad extends BaseEvent {
        readonly entity: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>;
        
        toString(): string;
        
    }    
    
    interface CodeRender extends BaseEvent {
        readonly cursor: _javatypes.xyz.wagyourtail.jsmacros.client.gui.editor.SelectCursor;
        readonly code: string;
        readonly language: string;
        readonly screen: _javatypes.xyz.wagyourtail.jsmacros.client.gui.screens.EditorScreen;
        
        /**
         * you are expected to fill this in with text styling, if not filled, nothing will render
         *  if the code is an empty string, you are still expected to put an empty string as the first line here
         */
        readonly textLines: _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper>;
        
        /**
         * you are expected to fill this with suggestions for autocomplete created using
         *  {@link #createSuggestion}
         */
        readonly autoCompleteSuggestions: _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.gui.editor.highlighting.AutoCompleteSuggestion>;
        
        /**
         * you are expected to fill this with a method to create right click actions.
         *  method should be `(index:number) => Map&lt;string,() => void&gt;`,
         *  meaning it accepts a character index and returns a map of names to actions.
         */
        rightClickActions: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<number, any, _javatypes.java.util.Map<string, _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<any, any, any, any>>, any>;
        
        
        /**
         * 
         * @return <a target="_blank" href="https://github.com/noties/Prism4j/blob/75ac3dae6f8eff5b1b0396df3b806f44ce86c484/prism4j/src/main/java/io/noties/prism4j/Prism4j.java#L54">Prism4j's
         *      node list</a> you don't have to use it but if you're not compiling your own...
         *      peek at the code of {@link TextStyleCompiler} for the default impl for walking the node tree.
         */
        genPrismNodes(): _javatypes.java.util.List<_javatypes.io.noties.prism4j.Prism4j$Node>;
        
        /**
         * Easy access to the {@link _javatypes.Map} object for use with {@link #rightClickActions}
         * @return specifically a {@link LinkedHashMap}
         */
        createMap(): _javatypes.java.util.Map<any, any>;
        
        /**
         * more convenient access to TextBuilder
         * @return new instance for use with {@link #textLines}
         */
        createTextBuilder(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.TextBuilder;
        createSuggestion(startIndex: number, suggestion: string): _javatypes.xyz.wagyourtail.jsmacros.client.gui.editor.highlighting.AutoCompleteSuggestion;
        
        /**
         * 
         * @param startIndex index that is where the suggestion starts from before the already typed part
         * @param suggestion complete suggestion including the already typed part
         * @param displayText how the text should be displayed in the dropdown, default is suggestion text
         * @return a new suggestion object
         */
        createSuggestion(startIndex: number, suggestion: string, displayText: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper): _javatypes.xyz.wagyourtail.jsmacros.client.gui.editor.highlighting.AutoCompleteSuggestion;
        
        /**
         * prefix tree data structure written for you, it's a bit intensive to add things to, especially how I wrote it, but
         *  lookup times are much better at least on larger data sets,
         *  so create a single copy of this for your static autocompletes and don't be re-creating this every time, store it
         *  in `globalvars`, probably per language
         * 
         *  or just don't use it, I'm not forcing you to.
         * @return a new {@link StringHashTrie}
         */
        createPrefixTree(): _javatypes.xyz.wagyourtail.StringHashTrie;
        
        /**
         * 
         * @return {@code key -> hex integer} values for theme data points, this can be used with the prism data for
         *      coloring, just have to use {@link TextBuilder#withColor(int, int, int)}
         *      on 1.15 and older versions the integer values with be the default color's index so you can directly pass it
         *      to {@link TextBuilder#withColor(int)}
         */
        getThemeData(): _javatypes.java.util.Map<string, number[]>;
        
    }    
    
    interface Service extends BaseEvent {
        readonly serviceName: string;
        
        /**
         * when this service is stopped, this is run...
         */
        stopListener: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<any, any, any, any>;
        
        toString(): string;
        
        /**
         * Put an Integer into the global variable space.
         * @param name
         * @param i
         * @return 
         * @since 1.6.5
         */
        putInt(name: string, i: number): number;
        
        /**
         * put a String into the global variable space.
         * @param name
         * @param str
         * @return 
         * @since 1.6.5
         */
        putString(name: string, str: string): string;
        
        /**
         * put a Double into the global variable space.
         * @param name
         * @param d
         * @return 
         * @since 1.6.5
         */
        putDouble(name: string, d: number): number;
        
        /**
         * put a Boolean into the global variable space.
         * @param name
         * @param b
         * @return 
         * @since 1.6.5
         */
        putBoolean(name: string, b: boolean): boolean;
        
        /**
         * put anything else into the global variable space.
         * @param name
         * @param o
         * @return 
         * @since 1.6.5
         */
        putObject(name: string, o: any): any;
        
        /**
         * Returns the type of the defined item in the global variable space as a string.
         * @param name
         * @return 
         * @since 1.6.5
         */
        getType(name: string): string;
        
        /**
         * Gets an Integer from the global variable space.
         * @param name
         * @return 
         * @since 1.6.5
         */
        getInt(name: string): number;
        
        /**
         * Gets an Integer from the global variable space. and then increment it there.
         * @param name
         * @return 
         * @since 1.6.5
         */
        getAndIncrementInt(name: string): number;
        
        /**
         * Gets an integer from the global variable pace. and then decrement it there.
         * @param name
         * @return 
         * @since 1.6.5
         */
        getAndDecrementInt(name: string): number;
        
        /**
         * increment an Integer in the global variable space. then return it.
         * @param name
         * @return 
         * @since 1.6.5
         */
        incrementAndGetInt(name: string): number;
        
        /**
         * decrement an Integer in the global variable space. then return it.
         * @param name
         * @return 
         * @since 1.6.5
         */
        decrementAndGetInt(name: string): number;
        
        /**
         * Gets a String from the global variable space
         * @param name
         * @return 
         * @since 1.6.5
         */
        getString(name: string): string;
        
        /**
         * Gets a Double from the global variable space.
         * @param name
         * @return 
         * @since 1.6.5
         */
        getDouble(name: string): number;
        
        /**
         * Gets a Boolean from the global variable space.
         * @param name
         * @return 
         * @since 1.6.5
         */
        getBoolean(name: string): boolean;
        
        /**
         * toggles a global boolean and returns its new value
         * @param name
         * @return 
         * @since 1.6.5
         */
        toggleBoolean(name: string): boolean;
        
        /**
         * Gets an Object from the global variable space.
         * @param name
         * @return 
         * @since 1.6.5
         */
        getObject(name: string): any;
        
        /**
         * removes a key from the global variable space.
         * @param key
         * @since 1.6.5
         */
        remove(key: string): void;
        getRaw(): _javatypes.java.util.Map<string, any>;
        
    }    
    
    interface WrappedScript extends BaseEvent {
        readonly arg1: T;
        readonly arg2: U;
        result: R;
        
        toString(): string;
        setReturnBoolean(b: boolean): void;
        setReturnInt(i: number): void;
        setReturnDouble(d: number): void;
        setReturnString(s: string): void;
        setReturnObject(o: any): void;
        
    }    
    
    interface ProfileLoad extends BaseEvent {
        readonly profileName: string;
        
        toString(): string;
        
    }    
    
    interface Custom extends BaseEvent {
        eventName: string;
        
        
        /**
         * Triggers the event.
         *  Try not to cause infinite looping by triggering the same {@link _javatypes.EventCustom} from its own listeners.
         * @since 1.2.8
         */
        trigger(): void;
        
        /**
         * trigger the event listeners, then run `callback` when they finish.
         * @since 1.3.1
         * @param callback used as a {@link Runnable}, so no args, no return value.
         */
        trigger(callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<any, any, any, any>): void;
        
        /**
         * Triggers the event and waits for it to complete.
         *  In languages with threading issues (js/jep) this may cause circular waiting when triggered from the same thread as
         *  the `jsmacros.on` registration for the event
         * @since 1.2.8
         */
        triggerJoin(): void;
        
        /**
         * Put an Integer into the event.
         * @param name
         * @param i
         * @return 
         * @since 1.2.8
         */
        putInt(name: string, i: number): number;
        
        /**
         * put a String into the event.
         * @param name
         * @param str
         * @return 
         * @since 1.2.8
         */
        putString(name: string, str: string): string;
        
        /**
         * put a Double into the event.
         * @param name
         * @param d
         * @return 
         * @since 1.2.8
         */
        putDouble(name: string, d: number): number;
        
        /**
         * put a Boolean into the event.
         * @param name
         * @param b
         * @return 
         * @since 1.2.8
         */
        putBoolean(name: string, b: boolean): boolean;
        
        /**
         * put anything else into the event.
         * @param name
         * @param o
         * @return 
         * @since 1.2.8
         */
        putObject(name: string, o: any): any;
        
        /**
         * Returns the type of the defined item in the event as a string.
         * @param name
         * @return 
         * @since 1.2.8
         */
        getType(name: string): string;
        
        /**
         * Gets an Integer from the event.
         * @param name
         * @return 
         * @since 1.2.8
         */
        getInt(name: string): number;
        
        /**
         * Gets a String from the event
         * @param name
         * @return 
         * @since 1.2.8
         */
        getString(name: string): string;
        
        /**
         * Gets a Double from the event.
         * @param name
         * @return 
         * @since 1.2.8
         */
        getDouble(name: string): number;
        
        /**
         * Gets a Boolean from the event.
         * @param name
         * @return 
         * @since 1.2.8
         */
        getBoolean(name: string): boolean;
        
        /**
         * Gets an Object from the event.
         * @param name
         * @return 
         * @since 1.2.8
         */
        getObject(name: string): any;
        
        /**
         * 
         * @since 1.6.4
         * @return map backing the event
         */
        getUnderlyingMap(): _javatypes.java.util.Map<string, any>;
        
        /**
         * registers event so you can see it in the gui
         * @since 1.3.0
         */
        registerEvent(): void;
        
    }
}

namespace Utils {
    
    /**
     * 
     * @param url the url to open
     * @since 1.8.4
     */
    function openUrl(url: string): void;
    
    /**
     * 
     * @param path the path top open, relative the config folder
     * @since 1.8.4
     */
    function openFile(path: string): void;
    
    /**
     * Copies the text to the clipboard.
     * @param text the text to copy
     * @since 1.8.4
     */
    function copyToClipboard(text: string): void;
    
    /**
     * 
     * @return the text from the clipboard.
     * @since 1.8.4
     */
    function getClipboard(): string;
    
    /**
     * Tries to guess the name of the sender of a given message. This is not guaranteed to work and
     *  for specific servers it may be better to use regex instead.
     * @param text the text to check
     * @return the name of the sender or {@code null} if it couldn't be guessed.
     * @since 1.8.4
     */
    function guessName(text: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper): string;
    
    /**
     * Tries to guess the name of the sender of a given message. This is not guaranteed to work and
     *  for specific servers it may be better to use regex instead.
     * @param text the text to check
     * @return the name of the sender or {@code null} if it couldn't be guessed.
     * @since 1.8.4
     */
    function guessName(text: string): string;
    
    /**
     * Tries to guess the name, as well as the titles and roles of the sender of the given message.
     *  This is not guaranteed to work and for specific servers it may be better to use regex
     *  instead.
     * @param text the text to check
     * @return a list of names, titles and roles of the sender or an empty list if it couldn't be
     *          guessed.
     * @since 1.8.4
     */
    function guessNameAndRoles(text: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper): _javatypes.java.util.List<string>;
    
    /**
     * Tries to guess the name, as well as the titles and roles of the sender of the given message.
     *  This is not guaranteed to work and for specific servers it may be better to use regex
     *  instead.
     * @param text the text to check
     * @return a list of names, titles and roles of the sender or an empty list if it couldn't be
     *          guessed.
     * @since 1.8.4
     */
    function guessNameAndRoles(text: string): _javatypes.java.util.List<string>;
    
    /**
     * Hashes the given string with sha-256.
     * @param message the message to hash
     * @return the hashed message.
     * @since 1.8.4
     */
    function hashString(message: string): string;
    
    /**
     * Hashes the given string with sha-256 the selected algorithm.
     * @param message the message to hash
     * @param algorithm sha1 | sha256 | sha384 | sha512 | md2 | md5
     * @return the hashed message.
     * @since 1.8.4
     */
    function hashString(message: string, algorithm: string): string;
    
    /**
     * Encodes the given string with Base64.
     * @param message the message to encode
     * @return the encoded message.
     * @since 1.8.4
     */
    function encode(message: string): string;
    
    /**
     * Decodes the given string with Base64.
     * @param message the message to decode
     * @return the decoded message.
     * @since 1.8.4
     */
    function decode(message: string): string;
    
}

namespace PositionCommon {
    
    /**
     * create a new vector object
     * @since 1.6.3
     * @param x1
     * @param y1
     * @param z1
     * @param x2
     * @param y2
     * @param z2
     * @return 
     */
    function createVec(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
    
    /**
     * 
     * @since 1.8.4
     * @param entity
     * @return 
     */
    function createLookingVector(entity: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
    
    /**
     * 
     * @since 1.8.4
     * @param yaw
     * @param pitch
     * @return 
     */
    function createLookingVector(yaw: number, pitch: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
    
    /**
     * 
     * @since 1.6.3
     * @param x1
     * @param y1
     * @param x2
     * @param y2
     * @return 
     */
    function createVec(x1: number, y1: number, x2: number, y2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec2D;
    
    /**
     * 
     * @since 1.6.3
     * @param x
     * @param y
     * @param z
     * @return 
     */
    function createPos(x: number, y: number, z: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
    
    /**
     * 
     * @since 1.6.3
     * @param x
     * @param y
     * @return 
     */
    function createPos(x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D;
    
    /**
     * 
     * @param x the x position of the block
     * @param y the y position of the block
     * @param z the z position of the block
     * @return a {@link BlockPosHelper} for the given coordinates.
     * @since 1.8.4
     */
    function createBlockPos(x: number, y: number, z: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
    
}

namespace Player {
    
    /**
     * 
     * @return the Inventory handler
     * @see Inventory
     */
    function openInventory(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Inventory<any>;
    
    /**
     * 
     * @return the player entity wrapper.
     * @see ClientPlayerEntityHelper
     * @since 1.0.3
     */
    function getPlayer(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper</* minecraft classes, as any, because obfuscation: */ any>;
    
    /**
     * 
     * @return the player's current gamemode.
     * @since 1.0.9
     */
    function getGameMode(): string;
    
    /**
     * 
     * @param gameMode possible values are survival, creative, adventure, spectator (case insensitive)
     * @since 1.8.4
     */
    function setGameMode(gameMode: string): void;
    
    /**
     * 
     * @param distance
     * @param fluid
     * @return the block/liquid the player is currently looking at.
     * @see BlockDataHelper
     * @since 1.0.5
     */
    function rayTraceBlock(distance: number, fluid: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockDataHelper;
    
    /**
     * 
     * @return the entity the camera is currently looking at.
     * @see EntityHelper
     * @since 1.0.5
     */
    function rayTraceEntity(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>;
    
    /**
     * 
     * @param distance
     * @since 1.8.3
     * @return entity the player entity is currently looking at (if any).
     */
    function rayTraceEntity(distance: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>;
    
    /**
     * Write to a sign screen if a sign screen is currently open.
     * @param l1
     * @param l2
     * @param l3
     * @param l4
     * @return of success.
     * @since 1.2.2
     */
    function writeSign(l1: string, l2: string, l3: string, l4: string): boolean;
    
    /**
     * 
     * @param folder
     * @param callback calls your method as a {@link Consumer}&lt;{@link TextHelper}&gt;
     * @see #takeScreenshot(String, String, MethodWrapper)
     * @since 1.2.6
     */
    function takeScreenshot(folder: string, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper, any, any, any>): void;
    
    /**
     * Take a screenshot and save to a file.
     *  <p>
     *  `file` is the optional one, typescript doesn't like it not being the last one that's optional
     * @param folder
     * @param file
     * @param callback calls your method as a {@link Consumer}&lt;{@link TextHelper}&gt;
     * @since 1.2.6
     */
    function takeScreenshot(folder: string, file: string, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper, any, any, any>): void;
    
    /**
     * 
     * @param folder the folder to save the screenshot to, relative to the macro folder
     * @param width the width of the panorama
     * @param height the height of the panorama
     * @param callback calls your method as a {@link Consumer}&lt;{@link TextHelper}&gt;
     * @since 1.8.4
     */
    function takePanorama(folder: string, width: number, height: number, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper, any, any, any>): void;
    function getStatistics(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.StatsHelper;
    
    /**
     * 
     * @return the current reach distance of the player.
     * @since 1.8.4
     */
    function getReach(): number;
    
    /**
     * Creates a new PlayerInput object.
     * @see xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput
     * @since 1.4.0
     */
    function createPlayerInput(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput;
    
    /**
     * Creates a new PlayerInput object.
     * @see xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput
     * @since 1.4.0
     */
    function createPlayerInput(movementForward: number, movementSideways: number, yaw: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput;
    
    /**
     * Creates a new PlayerInput object.
     * @see xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput
     * @since 1.4.0
     */
    function createPlayerInput(movementForward: number, yaw: number, jumping: boolean, sprinting: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput;
    
    /**
     * Creates a new PlayerInput object.
     * @param movementForward 1 = forward input (W); 0 = no input; -1 = backward input (S)
     * @param movementSideways 1 = left input (A); 0 = no input; -1 = right input (D)
     * @param yaw yaw of the player
     * @param pitch pitch of the player
     * @param jumping jump input
     * @param sneaking sneak input
     * @param sprinting sprint input
     * @see xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput
     * @since 1.4.0
     */
    function createPlayerInput(movementForward: number, movementSideways: number, yaw: number, pitch: number, jumping: boolean, sneaking: boolean, sprinting: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput;
    
    /**
     * Parses each row of CSV string into a `PlayerInput`.
     *  The capitalization of the header matters.<br>
     *  About the columns:
     *  <ul>
     *    <li> `movementForward` and `movementSideways` as a number</li>
     *    <li>`yaw` and `pitch` as an absolute number</li>
     *    <li>`jumping`, `sneaking` and `sprinting` have to be boolean</li>
     *  </ul>
     *  <p>
     *  The separation must be a "," it's a csv...(but spaces don't matter)<br>
     *  Quoted values don't work
     * @param csv CSV string to be parsed
     * @see PlayerInput#PlayerInput(float, float, float, float, boolean, boolean, boolean)
     * @since 1.4.0
     */
    function createPlayerInputsFromCsv(csv: string): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput>;
    
    /**
     * Parses a JSON string into a `PlayerInput` Object
     *  For details see `PlayerInput.fromCsv()`, on what has to be present.<br>
     *  Capitalization of the keys matters.
     * @param json JSON string to be parsed
     * @return The JSON parsed into a {@code PlayerInput}
     * @see #createPlayerInputsFromCsv(String)
     * @since 1.4.0
     */
    function createPlayerInputsFromJson(json: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput;
    
    /**
     * Creates a new `PlayerInput` object with the current inputs of the player.
     * @see xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput
     * @since 1.4.0
     */
    function getCurrentPlayerInput(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput;
    
    /**
     * Adds a new `PlayerInput` to `MovementQueue` to be executed
     * @param input the PlayerInput to be executed
     * @see xyz.wagyourtail.jsmacros.client.movement.MovementQueue
     * @since 1.4.0
     */
    function addInput(input: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput): void;
    
    /**
     * Adds multiple new `PlayerInput` to `MovementQueue` to be executed
     * @param inputs the PlayerInputs to be executed
     * @see xyz.wagyourtail.jsmacros.client.movement.MovementQueue
     * @since 1.4.0
     */
    function addInputs(inputs: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput[]): void;
    
    /**
     * Clears all inputs in the `MovementQueue`
     * @see xyz.wagyourtail.jsmacros.client.movement.MovementQueue
     * @since 1.4.0
     */
    function clearInputs(): void;
    function setDrawPredictions(val: boolean): void;
    
    /**
     * Predicts where one tick with a `PlayerInput` as input would lead to.
     * @param input the PlayerInput for the prediction
     * @return the position after the input
     * @see #predictInput(PlayerInput, boolean)
     * @since 1.4.0
     */
    function predictInput(input: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
    
    /**
     * Predicts where one tick with a `PlayerInput` as input would lead to.
     * @param input the PlayerInput for the prediction
     * @param draw whether to visualize the result or not
     * @return the position after the input
     * @since 1.4.0
     */
    function predictInput(input: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput, draw: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
    
    /**
     * Predicts where each `PlayerInput` executed in a row would lead
     *  without drawing it.
     * @param inputs the PlayerInputs for each tick for the prediction
     * @return the position after each input
     * @see #predictInputs(PlayerInput[], boolean)
     * @since 1.4.0
     */
    function predictInputs(inputs: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput[]): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D>;
    
    /**
     * 
     * @since 1.8.0
     * @return 
     */
    function isBreakingBlock(): boolean;
    
    /**
     * Predicts where each `PlayerInput` executed in a row would lead
     * @param inputs the PlayerInputs for each tick for the prediction
     * @param draw whether to visualize the result or not
     * @return the position after each input
     * @since 1.4.0
     */
    function predictInputs(inputs: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput[], draw: boolean): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D>;
    
    /**
     * Adds a forward movement with a relative yaw value to the MovementQueue.
     * @param yaw the relative yaw for the player
     * @since 1.4.0
     */
    function moveForward(yaw: number): void;
    
    /**
     * Adds a backward movement with a relative yaw value to the MovementQueue.
     * @param yaw the relative yaw for the player
     * @since 1.4.0
     */
    function moveBackward(yaw: number): void;
    
    /**
     * Adds sideways movement with a relative yaw value to the MovementQueue.
     * @param yaw the relative yaw for the player
     * @since 1.4.2
     */
    function moveStrafeLeft(yaw: number): void;
    
    /**
     * Adds sideways movement with a relative yaw value to the MovementQueue.
     * @param yaw the relative yaw for the player
     * @since 1.4.2
     */
    function moveStrafeRight(yaw: number): void;
    
}

namespace Client {
    
    /**
     * 
     * @since 1.0.0 (was in the {@code jsmacros} library until 1.2.9)
     * @return the raw minecraft client class, it may be useful to use <a target="_blank" href="https://wagyourtail.xyz/Projects/Minecraft%20Mappings%20Viewer/App">Minecraft Mappings Viewer</a> for this.
     */
    function getMinecraft(): /* minecraft classes, as any, because obfuscation: */ any;
    
    /**
     * 
     * @return a helper for interacting with minecraft's registry.
     * @since 1.8.4
     */
    function getRegistryManager(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.RegistryHelper;
    
    /**
     * 
     * @return a helper to modify and send minecraft packets.
     * @since 1.8.4
     */
    function createPacketByteBuffer(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
    
    /**
     * Run your task on the main minecraft thread
     * @param runnable task to run
     * @since 1.4.0
     */
    function runOnMainThread(runnable: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<any, any, any, any>): void;
    
    /**
     * 
     * @since 1.6.5
     * @param runnable
     * @param watchdogMaxTime max time for the watchdog to wait before killing the script
     */
    function runOnMainThread(runnable: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<any, any, any, any>, watchdogMaxTime: number): void;
    
    /**
     * 
     * @return a helper which gives access to all game options and some other useful features.
     * @since 1.1.7 (was in the {@code jsmacros} library until 1.2.9)
     */
    function getGameOptions(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
    
    /**
     * 
     * @return the current minecraft version as a {@link java.lang.String String}.
     * @since 1.1.2 (was in the {@code jsmacros} library until 1.2.9)
     */
    function mcVersion(): string;
    
    /**
     * 
     * @since 1.2.0 (was in the {@code jsmacros} library until 1.2.9)
     * @return the fps debug string from minecraft.
     */
    function getFPS(): string;
    
    /**
     * Join singleplayer world
     * @since 1.6.6
     * @param folderName
     */
    function loadWorld(folderName: string): void;
    
    /**
     * 
     * @since 1.2.3 (was in the {@code jsmacros} library until 1.2.9)
     * @see #connect(String, int)
     * @param ip
     */
    function connect(ip: string): void;
    
    /**
     * Connect to a server
     * @since 1.2.3 (was in the {@code jsmacros} library until 1.2.9)
     * @param ip
     * @param port
     */
    function connect(ip: string, port: number): void;
    
    /**
     * 
     * @since 1.2.3 (was in the {@code jsmacros} library until 1.2.9)
     * @see #disconnect(MethodWrapper)
     */
    function disconnect(): void;
    
    /**
     * Disconnect from a server with callback.
     * @since 1.2.3 (was in the {@code jsmacros} library until 1.2.9)
     * 
     *  {@code callback} defaults to {@code null}
     * @param callback calls your method as a {@link java.util.function.Consumer Consumer}&lt;{@link java.lang.Boolean Boolean}&gt;
     */
    function disconnect(callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<boolean, any, any, any>): void;
    
    /**
     * Closes the client (stops the game).
     *  Waits until the game has stopped, meaning no further code is executed (for obvious reasons).
     *  Warning: this does not wait on joined threads, so your script may stop at an undefined point.
     * @since 1.6.0
     */
    function shutdown(): void;
    
    /**
     * 
     * @since 1.2.4
     * @see #waitTick(int)
     * @throws InterruptedException
     */
    function waitTick(): void;
    
    /**
     * waits the specified number of client ticks.
     *  don't use this on an event that the main thread waits on (joins)... that'll cause circular waiting.
     * @since 1.2.6
     * @param i
     * @throws InterruptedException
     */
    function waitTick(i: number): void;
    
    /**
     * 
     * @param ip
     * @return 
     * @since 1.6.5
     * @throws UnknownHostException
     * @throws InterruptedException
     */
    function ping(ip: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ServerInfoHelper;
    
    /**
     * 
     * @param ip
     * @param callback
     * @since 1.6.5
     * @throws UnknownHostException
     */
    function pingAsync(ip: string, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ServerInfoHelper, _javatypes.java.io.IOException, any, any>): void;
    
    /**
     * 
     * @since 1.6.5
     */
    function cancelAllPings(): void;
    
    /**
     * 
     * @return a list of all loaded mods.
     * @since 1.8.4
     */
    function getLoadedMods(): _javatypes.java.util.List<any>;
    
    /**
     * 
     * @param modId the mod modId
     * @return {@code true} if the mod with the given modId is loaded, {@code false} otherwise.
     * @since 1.8.4
     */
    function isModLoaded(modId: string): boolean;
    
    /**
     * 
     * @param modId the mod modId
     * @return the mod container for the given modId or {@code null} if the mod is not loaded.
     * @since 1.8.4
     */
    function getMod(modId: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ModContainerHelper<any>;
    
    /**
     * Makes minecraft believe that the mouse is currently inside the window.
     *  This will automatically set pause on lost focus to false.
     * @since 1.8.4
     */
    function grabMouse(): void;
    
    /**
     * 
     * @return {@code true} if the mod is loaded inside a development environment, {@code false} otherwise.
     * @since 1.8.4
     */
    function isDevEnv(): boolean;
    
    /**
     * 
     * @return the name of the mod loader.
     * @since 1.8.4
     */
    function getModLoader(): string;
    
    /**
     * 
     * @return a list of all loaded blocks as {@link BlockHelper BlockHelper} objects.
     * @since 1.8.4
     */
    function getRegisteredBlocks(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockHelper>;
    
    /**
     * 
     * @return a list of all loaded items as {@link ItemHelper ItemHelper} objects.
     * @since 1.8.4
     */
    function getRegisteredItems(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemHelper>;
    
    /**
     * Tries to peacefully close the game.
     * @since 1.8.4
     */
    function exitGamePeacefully(): void;
    
    /**
     * Will close the game forcefully.
     * @since 1.8.4
     */
    function exitGameForcefully(): void;
    
    /**
     * 
     * @param packet the packet to send
     * @see #createPacketByteBuffer()
     * @since 1.8.4
     */
    function sendPacket(packet: /* minecraft classes, as any, because obfuscation: */ any): void;
    
    /**
     * 
     * @param packet the packet to receive
     * @see #createPacketByteBuffer()
     * @since 1.8.4
     */
    function receivePacket(packet: /* minecraft classes, as any, because obfuscation: */ any): void;
    
}

namespace KeyBind {
    
    /**
     * Dont use this one... get the raw minecraft keycode class.
     * @param keyName
     * @return the raw minecraft keycode class
     */
    function getKeyCode(keyName: string): /* minecraft classes, as any, because obfuscation: */ any;
    
    /**
     * 
     * @since 1.2.2
     * @return A {@link java.util.Map Map} of all the minecraft keybinds.
     */
    function getKeyBindings(): _javatypes.java.util.Map<string, string>;
    
    /**
     * Sets a minecraft keybind to the specified key.
     * @since 1.2.2
     * @param bind
     * @param key
     */
    function setKeyBind(bind: string, key: string): void;
    
    /**
     * Set a key-state for a key.
     * @param keyName
     * @param keyState
     */
    function key(keyName: string, keyState: boolean): void;
    
    /**
     * Calls {@link #key} with keyState set to true.
     * @param keyName the name of the key to press
     * @since 1.8.4
     */
    function pressKey(keyName: string): void;
    
    /**
     * Calls {@link #key} with keyState set to false.
     * @param keyName the name of the key to release
     * @since 1.8.4
     */
    function releaseKey(keyName: string): void;
    
    /**
     * Set a key-state using the name of the keybind rather than the name of the key.
     *  
     *  This is probably the one you should use.
     * @since 1.2.2
     * @param keyBind
     * @param keyState
     */
    function keyBind(keyBind: string, keyState: boolean): void;
    
    /**
     * Calls {@link #keyBind} with keyState set to true.
     * @param keyBind the name of the keybinding to press
     * @since 1.8.4
     */
    function pressKeyBind(keyBind: string): void;
    
    /**
     * Calls {@link #keyBind} with keyState set to false.
     * @param keyBind the name of the keybinding to release
     * @since 1.8.4
     */
    function releaseKeyBind(keyBind: string): void;
    
    /**
     * 
     * @since 1.2.6 (turned into set instead of list in 1.6.5)
     * @return a set of currently pressed keys.
     */
    function getPressedKeys(): _javatypes.java.util.Set<string>;
    
}

namespace JavaUtils {
    
    /**
     * Creates a java {@link _javatypes.ArrayList}.
     * @return a java ArrayList.
     * @since 1.8.4
     */
    function createArrayList(): _javatypes.java.util.ArrayList<any>;
    
    /**
     * Creates a java {@link _javatypes.ArrayList}.
     * @param array the array to add to the list
     * @param <T> the type of the array
     * @return a java ArrayList from the given array.
     * @since 1.8.4
     */
    function createArrayList<T>(array: T[]): _javatypes.java.util.ArrayList<T>;
    
    /**
     * Creates a java {@link _javatypes.HashMap}.
     * @return a java HashMap.
     * @since 1.8.4
     */
    function createHashMap(): _javatypes.java.util.HashMap<any, any>;
    
    /**
     * Creates a java {@link _javatypes.HashSet}.
     * @return a java HashSet.
     * @since 1.8.4
     */
    function createHashSet(): _javatypes.java.util.HashSet<any>;
    
    /**
     * Returns a {@link _javatypes.SplittableRandom}.
     * @return a SplittableRandom.
     * @since 1.8.4
     */
    function getRandom(): _javatypes.java.util.SplittableRandom;
    
    /**
     * Returns {@link _javatypes.SplittableRandom}, initialized with the seed to get identical sequences of
     *  values at all times.
     * @param seed the seed
     * @return a SplittableRandom.
     * @since 1.8.4
     */
    function getRandom(seed: number): _javatypes.java.util.SplittableRandom;
    
    /**
     * 
     * @param raw the object to wrap
     * @return the correct instance of {@link BaseHelper} for the given object if it exists and
     *          {@code null} otherwise.
     * @since 1.8.4
     */
    function getHelperFromRaw(raw: any): _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper<any>;
    
    /**
     * 
     * @param array the array to convert
     * @return the String representation of the given array.
     * @since 1.8.4
     */
    function arrayToString(array: any[]): string;
    
    /**
     * This method will convert any objects hold in the array data to Strings and should be used for
     *  multidimensional arrays.
     * @param array the array to convert
     * @return the String representation of the given array.
     * @since 1.8.4
     */
    function arrayDeepToString(array: any[]): string;
    
}

namespace Hud {
    
    /**
     * 
     * @see IScreen
     * @since 1.0.5
     * @param title
     * @param dirtBG boolean of whether to use a dirt background or not.
     * @return a new {@link IScreen IScreen} Object.
     */
    function createScreen(title: string, dirtBG: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.ScriptScreen;
    
    /**
     * Opens a {@link _javatypes.IScreen} Object.
     * @since 1.0.5
     * @see IScreen
     * @param s
     */
    function openScreen(s: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen): void;
    
    /**
     * 
     * @since 1.2.7
     * @see IScreen
     * @return the currently open Screen as an {@link IScreen IScreen}
     */
    function getOpenScreen(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen;
    
    /**
     * 
     * @param width the width of the canvas
     * @param height the height of the canvas
     * @return a {@link CustomImage} that can be used as a texture for screen backgrounds, rendering
     *          images, etc.
     * @since 1.8.4
     */
    function createTexture(width: number, height: number, name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
    
    /**
     * 
     * @param path absolute path to an image file
     * @return a {@link CustomImage} that can be used as a texture for screen backgrounds, rendering
     *          images, etc.
     * @since 1.8.4
     */
    function createTexture(path: string, name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
    
    /**
     * 
     * @return an immutable Map of all registered custom textures.
     * @since 1.8.4
     */
    function getRegisteredTextures(): _javatypes.java.util.Map<string, _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage>;
    
    /**
     * 
     * @return the current gui scale factor of minecraft.
     * @since 1.8.4
     */
    function getScaleFactor(): number;
    
    /**
     * 
     * @since 1.0.5, renamed from {@code getOpenScreen} in 1.2.7
     * @return The name of the currently open screen.
     */
    function getOpenScreenName(): string;
    
    /**
     * 
     * @since 1.1.2
     * @return a {@link java.lang.Boolean boolean} denoting if the currently open screen is a container.
     */
    function isContainer(): boolean;
    
    /**
     * 
     * @since 1.0.5
     * @see IDraw2D
     * @return 
     */
    function createDraw2D(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D;
    
    /**
     * 
     * @since 1.0.5
     *  
     *  Registers an {@link IDraw2D IDraw2D} to be rendered.
     * @deprecated since 1.6.5, use {@link Draw2D#register()} instead.
     * @see IDraw2D
     * @param overlay
     */
    function registerDraw2D(overlay: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IDraw2D<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D>): void;
    
    /**
     * 
     * @since 1.0.5
     *  
     *  Unregisters an {@link IDraw2D IDraw2D} to stop it being rendered.
     * @deprecated since 1.6.5, use {@link Draw2D#unregister()} instead.
     * @see IDraw2D
     * @param overlay
     */
    function unregisterDraw2D(overlay: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IDraw2D<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D>): void;
    
    /**
     * 
     * @since 1.0.5
     * @see IDraw2D
     * @return A list of current {@link IDraw2D IDraw2Ds}.
     */
    function listDraw2Ds(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IDraw2D<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D>>;
    
    /**
     * 
     * @since 1.0.5
     *  
     *  clears the Draw2D render list.
     * @see IDraw2D
     */
    function clearDraw2Ds(): void;
    
    /**
     * 
     * @since 1.0.6
     * @see Draw3D
     * @return a new {@link Draw3D Draw3D}.
     */
    function createDraw3D(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D;
    
    /**
     * 
     * @since 1.0.6
     *  
     *  Registers an {@link Draw3D Draw3D} to be rendered.
     * @deprecated since 1.6.5 use {@link Draw3D#register()} instead.
     * @see Draw3D
     * @param draw
     */
    function registerDraw3D(draw: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D): void;
    
    /**
     * 
     * @since 1.0.6
     *  
     *  Unregisters an {@link Draw3D Draw3D} to stop it being rendered.
     * @since 1.6.5 use {@link Draw3D#unregister()} instead.
     * @see Draw3D
     * @param draw
     */
    function unregisterDraw3D(draw: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D): void;
    
    /**
     * 
     * @since 1.0.6
     * @see Draw3D
     * @return A list of current {@link Draw3D Draw3D}.
     */
    function listDraw3Ds(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D>;
    
    /**
     * 
     * @since 1.0.6
     *  
     *  clears the Draw2D render list.
     * @see Draw3D
     */
    function clearDraw3Ds(): void;
    
    /**
     * 
     * @since 1.1.3
     * @return the current X coordinate of the mouse
     */
    function getMouseX(): number;
    
    /**
     * 
     * @since 1.1.3
     * @return the current Y coordinate of the mouse
     */
    function getMouseY(): number;
    
    /**
     * 
     * @return the current window width.
     * @since 1.8.4
     */
    function getWindowWidth(): number;
    
    /**
     * 
     * @return the current window height.
     * @since 1.8.4
     */
    function getWindowHeight(): number;
    
}

namespace Chat {
    
    /**
     * Log to player chat.
     * @since 1.1.3
     * @param message
     */
    function log(message: any): void;
    
    /**
     * 
     * @param message
     * @param await should wait for message to actually be sent to chat to continue.
     * @throws InterruptedException
     */
    function log(message: any, await: boolean): void;
    
    /**
     * Logs the formatted message to the player's chat. The message is formatted using the default
     *  java {@link _javatypes.String#format} syntax.
     * @param message the message to format and log
     * @param args the arguments used to format the message
     * @throws InterruptedException
     * @since 1.8.4
     */
    function logf(message: string, args: any[]): void;
    
    /**
     * Logs the formatted message to the player's chat. The message is formatted using the default
     *  java {@link _javatypes.String#format} syntax.
     * @param message the message to format and log
     * @param await whether to wait for message to be sent to chat before continuing
     * @param args the arguments used to format the message
     * @throws InterruptedException
     * @since 1.8.4
     */
    function logf(message: string, await: boolean, args: any[]): void;
    
    /**
     * Say to server as player.
     * @since 1.0.0
     * @param message
     */
    function say(message: string): void;
    
    /**
     * Say to server as player.
     * @param message
     * @param await
     * @since 1.3.1
     * @throws InterruptedException
     */
    function say(message: string, await: boolean): void;
    
    /**
     * Sends the formatted message to the server. The message is formatted using the default java
     *  {@link _javatypes.String#format} syntax.
     * @param message the message to format and send to the server
     * @param args the arguments used to format the message
     * @throws InterruptedException
     * @since 1.8.4
     */
    function sayf(message: string, args: any[]): void;
    
    /**
     * Sends the formatted message to the server. The message is formatted using the default java
     *  {@link _javatypes.String#format} syntax.
     * @param message the message to format and send to the server
     * @param await whether to wait for message to be sent to chat before continuing
     * @param args the arguments used to format the message
     * @throws InterruptedException
     * @since 1.8.4
     */
    function sayf(message: string, await: boolean, args: any[]): void;
    
    /**
     * open the chat input box with specific text already typed.
     * @since 1.6.4
     * @param message the message to start the chat screen with
     */
    function open(message: string): void;
    
    /**
     * open the chat input box with specific text already typed.
     *  hint: you can combine with {@link _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.FJsMacros#waitForEvent} or
     *  {@link _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.FJsMacros#once} to wait for the chat screen
     *  to close and/or the to wait for the sent message
     * @since 1.6.4
     * @param message the message to start the chat screen with
     * @param await
     */
    function open(message: string, await: boolean): void;
    
    /**
     * Display a Title to the player.
     * @since 1.2.1
     * @param title
     * @param subtitle
     * @param fadeIn
     * @param remain
     * @param fadeOut
     */
    function title(title: any, subtitle: any, fadeIn: number, remain: number, fadeOut: number): void;
    
    /**
     * 
     * @since 1.8.1
     * @param text
     */
    function actionbar(text: any): void;
    
    /**
     * Display the smaller title that's above the actionbar.
     * @since 1.2.1
     * @param text
     * @param tinted
     */
    function actionbar(text: any, tinted: boolean): void;
    
    /**
     * Display a toast.
     * @since 1.2.5
     * @param title
     * @param desc
     */
    function toast(title: any, desc: any): void;
    
    /**
     * Creates a {@link _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper} for use where you need one and not a string.
     * @see xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper
     * @since 1.1.3
     * @param content
     * @return a new {@link xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper TextHelper}
     */
    function createTextHelperFromString(content: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
    
    /**
     * 
     * @since 1.5.2
     * @return 
     */
    function getLogger(): _javatypes.org.slf4j.Logger;
    
    /**
     * returns a log4j logger, for logging to console only.
     * @since 1.5.2
     * @param name
     * @return 
     */
    function getLogger(name: string): _javatypes.org.slf4j.Logger;
    
    /**
     * Create a  {@link _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper} for use where you need one and not a string.
     * @see xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper
     * @since 1.1.3
     * @param json
     * @return a new {@link xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper TextHelper}
     */
    function createTextHelperFromJSON(json: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
    
    /**
     * 
     * @see TextBuilder
     * @since 1.3.0
     * @return a new builder
     */
    function createTextBuilder(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.TextBuilder;
    
    /**
     * 
     * @param name name of command
     * @since 1.4.2
     * @return 
     * @see #getCommandManager()
     */
    function createCommandBuilder(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
    
    /**
     * 
     * @param name
     * @since 1.6.5
     * @see #getCommandManager()
     */
    function unregisterCommand(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CommandNodeHelper;
    
    /**
     * 
     * @since 1.6.5
     * @param node
     * @see #getCommandManager()
     */
    function reRegisterCommand(node: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CommandNodeHelper): void;
    
    /**
     * 
     * @since 1.7.0
     * @return 
     */
    function getCommandManager(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandManager;
    
    /**
     * 
     * @since 1.7.0
     * @return 
     */
    function getHistory(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.ChatHistoryManager;
    
    /**
     * 
     * @param text the text to get the width of
     * @return the width of the given text in pixels.
     * @since 1.8.4
     */
    function getTextWidth(text: string): number;
    
    /**
     * 
     * @param string
     * @since 1.6.5
     * @return &#167; -> &amp;
     */
    function sectionSymbolToAmpersand(string: string): string;
    
    /**
     * 
     * @param string
     * @since 1.6.5
     * @return &amp; -> &#167;
     */
    function ampersandToSectionSymbol(string: string): string;
    
    /**
     * 
     * @param string
     * @since 1.6.5
     * @return 
     */
    function stripFormatting(string: string): string;
    
}

namespace World {
    
    /**
     * returns whether a world is currently loaded
     * @since 1.3.0
     * @return 
     */
    function isWorldLoaded(): boolean;
    
    /**
     * 
     * @return players within render distance.
     */
    function getLoadedPlayers(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PlayerEntityHelper</* minecraft classes, as any, because obfuscation: */ any>>;
    
    /**
     * 
     * @return players on the tablist.
     */
    function getPlayers(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PlayerListEntryHelper>;
    
    /**
     * 
     * @param name the name of the player to get the entry for
     * @return player entry for the given player's name or {@code null} if not found.
     * @since 1.8.4
     */
    function getPlayerEntry(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PlayerListEntryHelper;
    
    /**
     * 
     * @param x
     * @param y
     * @param z
     * @return The block at that position.
     */
    function getBlock(x: number, y: number, z: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockDataHelper;
    function getBlock(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockDataHelper;
    function getBlock(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockDataHelper;
    
    /**
     * The x and z position of the chunk can be calculated by the following formula: xChunk = x >>
     *  4; zChunk = z >> 4;
     * @param x the x coordinate of the chunk, not the absolute position
     * @param z the z coordinate of the chunk, not the absolute position
     * @return ChunkHelper for the chunk coordinates {@link ChunkHelper}.
     * @since 1.8.4
     */
    function getChunk(x: number, z: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ChunkHelper;
    
    /**
     * Usage: <br>
     *  This will return all blocks that are facing south, don't require a tool to break, 
     *  have a hardness of 10 or less and whose name contains either chest or barrel.
     *  <pre>
     *  World.getWorldScanner()
     *      .withBlockFilter("getHardness").is("<=", 10)
     *      .andStringBlockFilter().contains("chest", "barrel")
     *      .withStringStateFilter().contains("facing=south")
     *      .andStateFilter("isToolRequired").is(false)
     *      .build()
     *  </pre>
     * @return a builder to create a WorldScanner.
     * @since 1.6.5
     */
    function getWorldScanner(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder;
    
    /**
     * 
     * @return a scanner for the current world.
     * @since 1.6.5
     */
    function getWorldScanner(blockFilter: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockHelper, any, boolean, any>, stateFilter: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockStateHelper, any, boolean, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScanner;
    
    /**
     * 
     * @since 1.6.4
     * @param id
     * @param chunkrange
     * @return 
     */
    function findBlocksMatching(centerX: number, centerZ: number, id: string, chunkrange: number): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D>;
    
    /**
     * 
     * @since 1.6.4
     * @param id
     * @param chunkrange
     * @return 
     */
    function findBlocksMatching(id: string, chunkrange: number): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D>;
    
    /**
     * 
     * @since 1.6.4
     * @param ids
     * @param chunkrange
     * @return 
     */
    function findBlocksMatching(ids: string[], chunkrange: number): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D>;
    
    /**
     * 
     * @since 1.6.4
     * @param centerX
     * @param centerZ
     * @param ids
     * @param chunkrange
     * @return 
     */
    function findBlocksMatching(centerX: number, centerZ: number, ids: string[], chunkrange: number): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D>;
    
    /**
     * 
     * @since 1.6.4
     * @param blockFilter
     * @param stateFilter
     * @param chunkrange
     * @return 
     */
    function findBlocksMatching(blockFilter: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockHelper, any, boolean, any>, stateFilter: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockStateHelper, any, boolean, any>, chunkrange: number): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D>;
    
    /**
     * 
     * @since 1.6.4
     * @param chunkX
     * @param chunkZ
     * @param blockFilter
     * @param stateFilter
     * @param chunkrange
     * @return 
     */
    function findBlocksMatching(chunkX: number, chunkZ: number, blockFilter: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockHelper, any, boolean, any>, stateFilter: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockStateHelper, any, boolean, any>, chunkrange: number): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D>;
    
    /**
     * By default, air blocks are ignored and the callback is only called for real blocks.
     * @param pos the center position
     * @param radius the radius to scan
     * @param callback the callback to call for each block
     * @since 1.8.4
     */
    function iterateSphere(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper, radius: number, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockDataHelper, any, any, any>): void;
    
    /**
     * 
     * @param pos the center position
     * @param radius the radius to scan
     * @param ignoreAir whether to ignore air blocks
     * @param callback the callback to call for each block
     * @since 1.8.4
     */
    function iterateSphere(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper, radius: number, ignoreAir: boolean, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockDataHelper, any, any, any>): void;
    
    /**
     * 
     * @param pos1 the first position
     * @param pos2 the second position
     * @param callback the callback to call for each block
     * @since 1.8.4
     */
    function iterateBox(pos1: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper, pos2: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockDataHelper, any, any, any>): void;
    
    /**
     * 
     * @param pos1 the first position
     * @param pos2 the second position
     * @param callback the callback to call for each block
     * @param ignoreAir whether to ignore air blocks
     * @since 1.8.4
     */
    function iterateBox(pos1: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper, pos2: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper, ignoreAir: boolean, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockDataHelper, any, any, any>): void;
    
    /**
     * 
     * @since 1.2.9
     * @return a helper for the scoreboards provided to the client.
     */
    function getScoreboards(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ScoreboardsHelper;
    
    /**
     * 
     * @return all entities in the render distance.
     */
    function getEntities(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>>;
    
    /**
     * 
     * @param types the entity types to consider
     * @return all entities in the render distance, that match the specified entity type.
     * @since 1.8.4
     */
    function getEntities(types: string[]): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>>;
    
    /**
     * 
     * @param distance the maximum distance to search for entities
     * @return a list of entities within the specified distance to the player.
     * @since 1.8.4
     */
    function getEntities(distance: number): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>>;
    
    /**
     * 
     * @param distance the maximum distance to search for entities
     * @param types the entity types to consider
     * @return a list of entities within the specified distance to the player, that match the specified entity type.
     * @since 1.8.4
     */
    function getEntities(distance: number, types: string[]): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>>;
    
    /**
     * 
     * @param filter the entity filter
     * @return a list of entities that match the specified filter.
     * @since 1.8.4
     */
    function getEntities(filter: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>, any, any, any>): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>>;
    
    /**
     * raytrace between two points returning the first block hit.
     * @since 1.6.5
     * @param x1
     * @param y1
     * @param z1
     * @param x2
     * @param y2
     * @param z2
     * @param fluid
     * @return 
     */
    function rayTraceBlock(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, fluid: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockDataHelper;
    
    /**
     * raytrace between two points returning the first entity hit.
     * @since 1.8.3
     * @param x1
     * @param y1
     * @param z1
     * @param x2
     * @param y2
     * @param z2
     * @return 
     */
    function rayTraceEntity(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>;
    
    /**
     * 
     * @since 1.1.2
     * @return the current dimension.
     */
    function getDimension(): string;
    
    /**
     * 
     * @since 1.1.5
     * @return the current biome.
     */
    function getBiome(): string;
    
    /**
     * 
     * @since 1.1.5
     * @return the current world time.
     */
    function getTime(): number;
    
    /**
     * This is supposed to be time of day, but it appears to be the same as {@link _javatypes.FWorld#getTime} to me...
     * @since 1.1.5
     * @return the current world time of day.
     */
    function getTimeOfDay(): number;
    
    /**
     * 
     * @return {@code true} if it is daytime, {@code false} otherwise.
     * @since 1.8.4
     */
    function isDay(): boolean;
    
    /**
     * 
     * @return {@code true} if it is nighttime, {@code false} otherwise.
     * @since 1.8.4
     */
    function isNight(): boolean;
    
    /**
     * 
     * @return {@code true} if it is raining, {@code false} otherwise.
     * @since 1.8.4
     */
    function isRaining(): boolean;
    
    /**
     * 
     * @return {@code true} if it is thundering, {@code false} otherwise.
     * @since 1.8.4
     */
    function isThundering(): boolean;
    
    /**
     * 
     * @return an identifier for the loaded world that is based on the world's name or server ip and
     *          thus most likely unique enough to identify a specific world, or
     *          {@code "UNKNOWN_NAME"} if no world was found.
     * @since 1.8.4
     */
    function getWorldIdentifier(): string;
    
    /**
     * 
     * @since 1.2.6
     * @return respawn position.
     */
    function getRespawnPos(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
    
    /**
     * 
     * @since 1.2.6
     * @return world difficulty as an {@link java.lang.Integer Integer}.
     */
    function getDifficulty(): number;
    
    /**
     * 
     * @since 1.2.6
     * @return moon phase as an {@link java.lang.Integer Integer}.
     */
    function getMoonPhase(): number;
    
    /**
     * 
     * @since 1.1.2
     * @param x
     * @param y
     * @param z
     * @return sky light as an {@link java.lang.Integer Integer}.
     */
    function getSkyLight(x: number, y: number, z: number): number;
    
    /**
     * 
     * @since 1.1.2
     * @param x
     * @param y
     * @param z
     * @return block light as an {@link java.lang.Integer Integer}.
     */
    function getBlockLight(x: number, y: number, z: number): number;
    
    /**
     * plays a sound file using javax's sound stuff.
     * @since 1.1.7
     * @param file
     * @param volume
     * @return 
     * @throws LineUnavailableException
     * @throws IOException
     * @throws UnsupportedAudioFileException
     */
    function playSoundFile(file: string, volume: number): _javatypes.javax.sound.sampled.Clip;
    
    /**
     * 
     * @since 1.1.7
     * @see FWorld#playSound(String, double, double, double, double, double)
     * @param id
     */
    function playSound(id: string): void;
    
    /**
     * 
     * @since 1.1.7
     * @see FWorld#playSound(String, double, double, double, double, double)
     * @param id
     * @param volume
     */
    function playSound(id: string, volume: number): void;
    
    /**
     * 
     * @since 1.1.7
     * @see FWorld#playSound(String, double, double, double, double, double)
     * @param id
     * @param volume
     * @param pitch
     */
    function playSound(id: string, volume: number, pitch: number): void;
    
    /**
     * plays a minecraft sound using the internal system.
     * @since 1.1.7
     * @param id
     * @param volume
     * @param pitch
     * @param x
     * @param y
     * @param z
     */
    function playSound(id: string, volume: number, pitch: number, x: number, y: number, z: number): void;
    
    /**
     * 
     * @since 1.2.1
     * @return a map of boss bars by the boss bar's UUID.
     */
    function getBossBars(): _javatypes.java.util.Map<string, _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BossBarHelper>;
    
    /**
     * Check whether a chunk is within the render distance and loaded.
     * @since 1.2.2
     * @param chunkX
     * @param chunkZ
     * @return 
     */
    function isChunkLoaded(chunkX: number, chunkZ: number): boolean;
    
    /**
     * 
     * @since 1.2.2
     * @return the current server address as a string ({@code server.address/server.ip:port}).
     */
    function getCurrentServerAddress(): string;
    
    /**
     * 
     * @since 1.2.2 [Citation Needed]
     * @param x
     * @param z
     * @return biome at specified location, only works if the block/chunk is loaded.
     */
    function getBiomeAt(x: number, z: number): string;
    
    /**
     * 
     * @since 1.2.7
     * @return best attempt to measure and give the server tps with various timings.
     */
    function getServerTPS(): string;
    
    /**
     * 
     * @since 1.3.1
     * @return text helper for the top part of the tab list (above the players)
     */
    function getTabListHeader(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
    
    /**
     * 
     * @since 1.3.1
     * @return text helper for the bottom part of the tab list (below the players)
     */
    function getTabListFooter(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
    
    /**
     * Summons the amount of particles at the desired position.
     * @param id the particle id
     * @param x the x position to spawn the particle
     * @param y the y position to spawn the particle
     * @param z the z position to spawn the particle
     * @param count the amount of particles to spawn
     * @since 1.8.4
     */
    function spawnParticle(id: string, x: number, y: number, z: number, count: number): void;
    
    /**
     * Summons the amount of particles at the desired position with some variation of delta and the
     *  given speed.
     * @param id the particle id
     * @param x the x position to spawn the particle
     * @param y the y position to spawn the particle
     * @param z the z position to spawn the particle
     * @param deltaX the x variation of the particle
     * @param deltaY the y variation of the particle
     * @param deltaZ the z variation of the particle
     * @param speed the speed of the particle
     * @param count the amount of particles to spawn
     * @param force whether to show the particle if it's more than 32 blocks away
     * @since 1.8.4
     */
    function spawnParticle(id: string, x: number, y: number, z: number, deltaX: number, deltaY: number, deltaZ: number, speed: number, count: number, force: boolean): void;
    
    /**
     * 
     * @since 1.2.7
     * @return best attempt to measure and give the server tps.
     */
    function getServerInstantTPS(): number;
    
    /**
     * 
     * @since 1.2.7
     * @return best attempt to measure and give the server tps over the previous 1 minute average.
     */
    function getServer1MAverageTPS(): number;
    
    /**
     * 
     * @since 1.2.7
     * @return best attempt to measure and give the server tps over the previous 5 minute average.
     */
    function getServer5MAverageTPS(): number;
    
    /**
     * 
     * @since 1.2.7
     * @return best attempt to measure and give the server tps over the previous 15 minute average.
     */
    function getServer15MAverageTPS(): number;
    
}

namespace Request {
    
    /**
     * create a HTTPRequest handler to the specified URL
     * @since 1.1.8
     * @see HTTPRequest
     * @param url
     * @return Request Wrapper
     * @throws IOException
     */
    function create(url: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.HTTPRequest;
    
    /**
     * 
     * @since 1.1.8
     * @see FRequest#get(String, Map)
     * @param url
     * @return 
     * @throws IOException
     */
    function get(url: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.HTTPRequest$Response;
    
    /**
     * send a GET request to the specified URL.
     * @since 1.1.8
     * @see HTTPRequest.Response
     * @param url
     * @param headers
     * @return Response Data
     * @throws IOException
     */
    function get(url: string, headers: _javatypes.java.util.Map<string, string>): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.HTTPRequest$Response;
    
    /**
     * 
     * @see FRequest#post(String, String, Map)
     * @since 1.1.8
     * @param url
     * @param data
     * @return 
     * @throws IOException
     */
    function post(url: string, data: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.HTTPRequest$Response;
    
    /**
     * send a POST request to the specified URL.
     * @since 1.1.8
     * @param url
     * @param data
     * @param headers
     * @return Response Data
     * @throws IOException
     */
    function post(url: string, data: string, headers: _javatypes.java.util.Map<string, string>): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.HTTPRequest$Response;
    
    /**
     * Create a Websocket handler.
     * @since 1.2.7
     * @see Websocket
     * @param url
     * @return 
     * @throws IOException
     */
    function createWS(url: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.Websocket;
    
    /**
     * Create a Websocket handler.
     * @since 1.1.9
     * @deprecated 1.2.7
     * @param url
     * @return 
     * @throws IOException
     */
    function createWS2(url: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.Websocket;
    
}

namespace FS {
    
    /**
     * List files in path.
     * @since 1.1.8
     * @param path relative to the script's folder.
     * @return An array of file names as {@link java.lang.String Strings}.
     */
    function list(path: string): string[];
    
    /**
     * Check if a file exists.
     * @since 1.1.8
     * @param path relative to the script's folder.
     * @return 
     */
    function exists(path: string): boolean;
    
    /**
     * Check if a file is a directory.
     * @since 1.1.8
     * @param path relative to the script's folder.
     * @return 
     */
    function isDir(path: string): boolean;
    
    /**
     * 
     * @param path the path relative to the script's folder
     * @return {@code true} if the path leads to a file, {@code false} otherwise.
     * @since 1.8.4
     */
    function isFile(path: string): boolean;
    
    /**
     * Get the last part (name) of a file.
     * @since 1.1.8
     * @param path relative to the script's folder.
     * @return a {@link java.lang.String String} of the file name.
     */
    function getName(path: string): string;
    
    /**
     * 
     * @param absolutePath the absolute path to the file
     * @return a path relative to the script's folder to the given absolute path.
     * @since 1.8.4
     */
    function toRelativePath(absolutePath: string): string;
    
    /**
     * Creates a new file in the specified path, relative to the script's folder. This will only
     *  work if the parent directory already exists. See {@link #createFile}
     *  to automatically create all parent directories.
     * @param path the path relative to the script's folder
     * @param name the name of the file
     * @return {@code true} if the file was created successfully, {@code false} otherwise.
     * @throws IOException if there occurs an error while creating the file.
     * @since 1.8.4
     */
    function createFile(path: string, name: string): boolean;
    
    /**
     * Creates a new file in the specified path, relative to the script's folder. Optionally parent
     *  directories can be created if they do not exist.
     * @param path the path relative to the script's folder
     * @param name the name of the file
     * @param createDirs whether to create parent directories if they do not exist or not
     * @return {@code true} if the file was created successfully, {@code false} otherwise.
     * @throws IOException if there occurs an error while creating the file.
     * @since 1.8.4
     */
    function createFile(path: string, name: string, createDirs: boolean): boolean;
    
    /**
     * Make a directory.
     * @since 1.1.8
     * @param path relative to the script's folder.
     * @return a {@link java.lang.Boolean boolean} for success.
     */
    function makeDir(path: string): boolean;
    
    /**
     * Move a file.
     * @since 1.1.8
     * @param from relative to the script's folder.
     * @param to relative to the script's folder.
     * @throws IOException
     */
    function move(from: string, to: string): void;
    
    /**
     * Copy a file.
     * @since 1.1.8
     * @param from relative to the script's folder.
     * @param to relative to the script's folder.
     * @throws IOException
     */
    function copy(from: string, to: string): void;
    
    /**
     * Delete a file.
     * @since 1.2.9
     * @param path relative to the script's folder.
     * @return a {@link java.lang.Boolean boolean} for success.
     */
    function unlink(path: string): boolean;
    
    /**
     * Combine 2 paths.
     * @since 1.1.8
     * @param patha path is relative to the script's folder.
     * @param pathb
     * @return a {@link java.lang.String String} of the combined path.
     * @throws IOException
     */
    function combine(patha: string, pathb: string): string;
    
    /**
     * Gets the directory part of a file path, or the parent directory of a folder.
     * @since 1.1.8
     * @param path relative to the script's folder.
     * @return a {@link java.lang.String String} of the combined path.
     * @throws IOException
     */
    function getDir(path: string): string;
    
    /**
     * Open a FileHandler for the file at the specified path.
     * @since 1.1.8
     * @see FileHandler
     * @param path relative to the script's folder.
     * @return a {@link FileHandler FileHandler} for the file path.
     */
    function open(path: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.FileHandler;
    
    /**
     * An advanced method to walk a directory tree and get some information about the files, as well
     *  as their paths.
     * @param path the relative path of the directory to walk through
     * @param maxDepth the maximum depth to follow, can cause stack overflow if too high
     * @param followLinks whether to follow symbolic links
     * @param visitor the visitor that is called for each file with the path of the file and its
     *                     attributes
     * @throws IOException
     * @since 1.8.4
     */
    function walkFiles(path: string, maxDepth: number, followLinks: boolean, visitor: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<string, _javatypes.java.nio.file.attribute.BasicFileAttributes, any, any>): void;
    
    /**
     * 
     * @param path the relative path to get the file object for
     * @return the file object for the specified path.
     * @since 1.8.4
     */
    function toRawFile(path: string): _javatypes.java.io.File;
    
    /**
     * 
     * @param path the relative path to get the path object for
     * @return the path object for the specified path.
     * @since 1.8.4
     */
    function toRawPath(path: string): _javatypes.java.nio.file.Path;
    
    /**
     * 
     * @param path the path relative to the script's folder
     * @return the attributes of the file at the specified path.
     * @throws IOException
     * @since 1.8.4
     */
    function getRawAttributes(path: string): _javatypes.java.nio.file.attribute.BasicFileAttributes;
    
}

namespace Reflection {
    
    /**
     * 
     * @param name name of class like {@code path.to.class}
     * @return resolved class
     * @throws ClassNotFoundException
     * @see FReflection#getClass(String, String)
     * @since 1.2.3
     */
    function getClass<T>(name: string): _javatypes.java.lang.Class<T> & { new(...values): T };
    
    /**
     * Use this to specify a class with intermediary and yarn names of classes for cleaner code. also has support for
     *  java primitives by using their name in lower case.
     * @param name first try
     * @param name2 second try
     * @return a {@link java.lang.Class Class} reference.
     * @throws ClassNotFoundException
     * @since 1.2.3
     */
    function getClass<T>(name: string, name2: string): _javatypes.java.lang.Class<T> & { new(...values): T };
    
    /**
     * 
     * @param c
     * @param name
     * @param parameterTypes
     * @return 
     * @throws NoSuchMethodException
     * @throws SecurityException
     * @see FReflection#getDeclaredMethod(Class, String, String, Class...)
     * @since 1.2.3
     */
    function getDeclaredMethod(c: _javatypes.java.lang.Class<any>, name: string, parameterTypes: _javatypes.java.lang.Class<any>[]): _javatypes.java.lang.reflect.Method;
    
    /**
     * Use this to specify a method with intermediary and yarn names of classes for cleaner code.
     * @param c
     * @param name
     * @param name2
     * @param parameterTypes
     * @return a {@link java.lang.reflect.Method Method} reference.
     * @throws NoSuchMethodException
     * @throws SecurityException
     * @since 1.2.3
     */
    function getDeclaredMethod(c: _javatypes.java.lang.Class<any>, name: string, name2: string, parameterTypes: _javatypes.java.lang.Class<any>[]): _javatypes.java.lang.reflect.Method;
    
    /**
     * 
     * @since 1.6.0
     * @param c
     * @param name
     * @param name2
     * @param parameterTypes
     * @return 
     * @throws NoSuchMethodException
     */
    function getMethod(c: _javatypes.java.lang.Class<any>, name: string, name2: string, parameterTypes: _javatypes.java.lang.Class<any>[]): _javatypes.java.lang.reflect.Method;
    
    /**
     * 
     * @since 1.6.0
     * @param c
     * @param name
     * @param parameterTypes
     * @return 
     * @throws NoSuchMethodException
     */
    function getMethod(c: _javatypes.java.lang.Class<any>, name: string, parameterTypes: _javatypes.java.lang.Class<any>[]): _javatypes.java.lang.reflect.Method;
    
    /**
     * 
     * @param c
     * @param name
     * @return 
     * @throws NoSuchFieldException
     * @throws SecurityException
     * @see FReflection#getDeclaredField(Class, String, String)
     * @since 1.2.3
     */
    function getDeclaredField(c: _javatypes.java.lang.Class<any>, name: string): _javatypes.java.lang.reflect.Field;
    
    /**
     * Use this to specify a field with intermediary and yarn names of classes for cleaner code.
     * @param c
     * @param name
     * @param name2
     * @return a {@link java.lang.reflect.Field Field} reference.
     * @throws NoSuchFieldException
     * @throws SecurityException
     * @since 1.2.3
     */
    function getDeclaredField(c: _javatypes.java.lang.Class<any>, name: string, name2: string): _javatypes.java.lang.reflect.Field;
    
    /**
     * 
     * @since 1.6.0
     * @param c
     * @param name
     * @return 
     * @throws NoSuchFieldException
     */
    function getField(c: _javatypes.java.lang.Class<any>, name: string): _javatypes.java.lang.reflect.Field;
    
    /**
     * 
     * @since 1.6.0
     * @param c
     * @param name
     * @param name2
     * @return 
     * @throws NoSuchFieldException
     */
    function getField(c: _javatypes.java.lang.Class<any>, name: string, name2: string): _javatypes.java.lang.reflect.Field;
    
    /**
     * Invoke a method on an object with auto type coercion for numbers.
     * @param m method
     * @param c object (can be {@code null} for statics)
     * @param objects
     * @return 
     * @throws IllegalAccessException
     * @throws IllegalArgumentException
     * @throws InvocationTargetException
     * @since 1.2.3
     */
    function invokeMethod(m: _javatypes.java.lang.reflect.Method, c: any, objects: any[]): any;
    
    /**
     * Attempts to create a new instance of a class. You probably don't have to use this one and can just call `
     *  new` on a {@link _javatypes.java.lang.Class} unless you're in LUA, but then you also have the (kinda poorly
     *  documented, can someone find a better docs link for me)
     *  <a target="_blank" href="http://luaj.sourceforge.net/api/3.2/org/luaj/vm2/lib/jse/LuajavaLib.html">LuaJava Library</a>.
     * @param c
     * @param objects
     * @return 
     * @since 1.2.7
     */
    function newInstance<T>(c: _javatypes.java.lang.Class<T>, objects: any[]): T;
    
    /**
     * proxy for extending java classes in the guest language with proper threading support.
     * @param clazz
     * @param interfaces
     * @param <T>
     * @since 1.6.0
     * @return 
     */
    function createClassProxyBuilder<T>(clazz: _javatypes.java.lang.Class<T>, interfaces: _javatypes.java.lang.Class<any>[]): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ProxyBuilder<T>;
    
    /**
     * 
     * @param cName
     * @param clazz
     * @param interfaces
     * @param <T>
     * @since 1.6.5
     * @return 
     * @throws NotFoundException
     * @throws CannotCompileException
     */
    function createClassBuilder<T>(cName: string, clazz: _javatypes.java.lang.Class<T>, interfaces: _javatypes.java.lang.Class<any>[]): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder<T>;
    
    /**
     * 
     * @param cName
     * @since 1.6.5
     * @return 
     * @throws ClassNotFoundException
     */
    function getClassFromClassBuilderResult(cName: string): _javatypes.java.lang.Class<any>;
    function createLibraryBuilder(name: string, perExec: boolean, acceptedLangs: string[]): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.LibraryBuilder;
    
    /**
     * A library class always has a {@link _javatypes.Library} annotation containing the name of the library,
     *  which may differ from the actual class name. A library class must also extend
     *  {@link _javatypes.BaseLibrary} in some way, either directly or through
     *  {@link _javatypes.PerExecLibrary},
     *  {@link _javatypes.xyz.wagyourtail.jsmacros.core.library.PerExecLanguageLibrary}
     *  or {@link _javatypes.xyz.wagyourtail.jsmacros.core.library.PerLanguageLibrary}.
     * @param className the fully qualified name of the class, including the package
     * @param javaCode the source code of the library
     * @since 1.8.4
     */
    function createLibrary(className: string, javaCode: string): void;
    
    /**
     * A Java Development Kit (JDK) must be installed (and potentially used to start Minecraft) in
     *  order to compile whole classes.
     *  <p>
     *  Compiled classes can't be accessed from any guest language, but must be either stored through
     *  {@link _javatypes.FGlobalVars#putObject} or retrieved from this library. Unlike normal
     *  hot swapping, already created instances of the class will not be updated. Thus, it's
     *  important to know which version of the class you're using when instantiating it.
     * @param className the fully qualified name of the class, including the package
     * @param code the java code to compile
     * @return the compiled class.
     * @since 1.8.4
     */
    function compileJavaClass(className: string, code: string): _javatypes.java.lang.Class<any>;
    
    /**
     * 
     * @param className the fully qualified name of the class, including the package
     * @return the latest compiled class or {@code null} if it doesn't exist.
     * @since 1.8.4
     */
    function getCompiledJavaClass(className: string): _javatypes.java.lang.Class<any>;
    
    /**
     * 
     * @param className the fully qualified name of the class, including the package
     * @return all compiled versions of the class, in order of compilation.
     * @since 1.8.4
     */
    function getAllCompiledJavaClassVersions(className: string): _javatypes.java.util.List<_javatypes.java.lang.Class<any>>;
    
    /**
     * See <a href="https://github.com/jOOQ/jOOR">jOOR Github</a> for more information.
     * @param obj the object to wrap
     * @return a wrapper for the passed object to do help with java reflection.
     * @since 1.8.4
     */
    function getReflect(obj: any): _javatypes.org.joor.Reflect;
    
    /**
     * Loads a jar file to be accessible with this library.
     * @param file relative to the script's folder.
     * @return success value
     * @throws IOException
     * @since 1.2.6
     */
    function loadJarFile(file: string): boolean;
    
    /**
     * 
     * @since 1.3.1
     * @return the previous mapping helper generated with {@link #loadMappingHelper(String)}
     */
    function loadCurrentMappingHelper(): _javatypes.xyz.wagyourtail.jsmacros.core.classes.Mappings;
    
    /**
     * 
     * @param o class you want the name of
     * @since 1.3.1
     * @return the fully qualified class name (with "."'s not "/"'s)
     */
    function getClassName(o: any): string;
    
    /**
     * 
     * @param urlorfile a url or file path the the yarn mappings {@code -v2.jar} file, or {@code .tiny} file. for example {@code https://maven.fabricmc.net/net/fabricmc/yarn/1.16.5%2Bbuild.3/yarn-1.16.5%2Bbuild.3-v2.jar}, if same url/path as previous this will load from cache.
     * @since 1.3.1
     * @return the associated mapping helper.
     */
    function loadMappingHelper(urlorfile: string): _javatypes.xyz.wagyourtail.jsmacros.core.classes.Mappings;
    
    /**
     * 
     * @since 1.6.5
     * @param instance
     * @param <T>
     * @return 
     */
    function wrapInstace<T>(instance: T): _javatypes.xyz.wagyourtail.jsmacros.core.classes.WrappedClassInstance<T>;
    
    /**
     * 
     * @since 1.6.5
     * @param className
     * @return 
     * @throws ClassNotFoundException
     */
    function getWrappedClass(className: string): _javatypes.xyz.wagyourtail.jsmacros.core.classes.WrappedClassInstance<any>;
    
}

namespace Time {
    
    /**
     * 
     * @return current time in MS.
     */
    function time(): number;
    
    /**
     * Sleeps the current thread for the specified time in MS.
     * @param millis
     * @throws InterruptedException
     */
    function sleep(millis: number): void;
    
}

namespace GlobalVars {
    
    /**
     * Put an Integer into the global variable space.
     * @param name
     * @param i
     * @return 
     * @since 1.0.4
     */
    function putInt(name: string, i: number): number;
    
    /**
     * put a String into the global variable space.
     * @param name
     * @param str
     * @return 
     * @since 1.0.4
     */
    function putString(name: string, str: string): string;
    
    /**
     * put a Double into the global variable space.
     * @param name
     * @param d
     * @return 
     * @since 1.0.8
     */
    function putDouble(name: string, d: number): number;
    
    /**
     * put a Boolean into the global variable space.
     * @param name
     * @param b
     * @return 
     * @since 1.1.7
     */
    function putBoolean(name: string, b: boolean): boolean;
    
    /**
     * put anything else into the global variable space.
     * @param name
     * @param o
     * @return 
     * @since 1.1.7
     */
    function putObject(name: string, o: any): any;
    
    /**
     * Returns the type of the defined item in the global variable space as a string.
     * @param name
     * @return 
     * @since 1.0.4
     */
    function getType(name: string): string;
    
    /**
     * Gets an Integer from the global variable space.
     * @param name
     * @return 
     * @since 1.0.4
     */
    function getInt(name: string): number;
    
    /**
     * Gets an Integer from the global variable space. and then increment it there.
     * @param name
     * @return 
     * @since 1.6.5
     */
    function getAndIncrementInt(name: string): number;
    
    /**
     * Gets an integer from the global variable pace. and then decrement it there.
     * @param name
     * @return 
     * @since 1.6.5
     */
    function getAndDecrementInt(name: string): number;
    
    /**
     * increment an Integer in the global variable space. then return it.
     * @param name
     * @return 
     * @since 1.6.5
     */
    function incrementAndGetInt(name: string): number;
    
    /**
     * decrement an Integer in the global variable space. then return it.
     * @param name
     * @return 
     * @since 1.6.5
     */
    function decrementAndGetInt(name: string): number;
    
    /**
     * Gets a String from the global variable space
     * @param name
     * @return 
     * @since 1.0.4
     */
    function getString(name: string): string;
    
    /**
     * Gets a Double from the global variable space.
     * @param name
     * @return 
     * @since 1.0.8
     */
    function getDouble(name: string): number;
    
    /**
     * Gets a Boolean from the global variable space.
     * @param name
     * @return 
     * @since 1.1.7
     */
    function getBoolean(name: string): boolean;
    
    /**
     * toggles a global boolean and returns its new value
     * @param name
     * @return 
     * @since 1.6.5
     */
    function toggleBoolean(name: string): boolean;
    
    /**
     * Gets an Object from the global variable space.
     * @param name
     * @return 
     * @since 1.1.7
     */
    function getObject(name: string): any;
    
    /**
     * removes a key from the global variable space.
     * @param key
     * @since 1.2.0
     */
    function remove(key: string): void;
    function getRaw(): _javatypes.java.util.Map<string, any>;
    
}

namespace JsMacros {
    
    /**
     * 
     * @return the JsMacros profile class.
     */
    function getProfile(): _javatypes.xyz.wagyourtail.jsmacros.core.config.BaseProfile;
    
    /**
     * 
     * @return the JsMacros config management class.
     */
    function getConfig(): _javatypes.xyz.wagyourtail.jsmacros.core.config.ConfigManager;
    
    /**
     * services are background scripts designed to run full time and are mainly noticed by their side effects.
     * @since 1.6.3
     * @return for managing services.
     */
    function getServiceManager(): _javatypes.xyz.wagyourtail.jsmacros.core.service.ServiceManager;
    
    /**
     * 
     * @return list of non-garbage-collected ScriptContext's
     * @since 1.4.0
     */
    function getOpenContexts(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.core.language.BaseScriptContext<any>>;
    
    /**
     * 
     * @see FJsMacros#runScript(String, String, MethodWrapper)
     * @since 1.1.5
     * @param file
     */
    function runScript(file: string): _javatypes.xyz.wagyourtail.jsmacros.core.language.EventContainer<any>;
    
    /**
     * 
     * @since 1.6.3
     * @param file
     * @param fakeEvent you probably actually want to pass an instance created by {@link #createCustomEvent(String)}
     * @return 
     */
    function runScript(file: string, fakeEvent: Events.BaseEvent): _javatypes.xyz.wagyourtail.jsmacros.core.language.EventContainer<any>;
    
    /**
     * runs a script with a eventCustom to be able to pass args
     * @since 1.6.3 (1.1.5 - 1.6.3 didn't have fakeEvent)
     * @param file
     * @param fakeEvent
     * @param callback
     * @return container the script is running on.
     */
    function runScript(file: string, fakeEvent: Events.BaseEvent, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.java.lang.Throwable, any, any, any>): _javatypes.xyz.wagyourtail.jsmacros.core.language.EventContainer<any>;
    
    /**
     * 
     * @see FJsMacros#runScript(String, String, MethodWrapper)
     * @since 1.2.4
     * @param language
     * @param script
     * @return 
     */
    function runScript(language: string, script: string): _javatypes.xyz.wagyourtail.jsmacros.core.language.EventContainer<any>;
    
    /**
     * Runs a string as a script.
     * @since 1.2.4
     * @param language
     * @param script
     * @param callback calls your method as a {@link java.util.function.Consumer Consumer}&lt;{@link String}&gt;
     * @return the {@link EventContainer} the script is running on.
     */
    function runScript(language: string, script: string, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.java.lang.Throwable, any, any, any>): _javatypes.xyz.wagyourtail.jsmacros.core.language.EventContainer<any>;
    
    /**
     * 
     * @since 1.6.0
     * @param language
     * @param script
     * @param file
     * @param callback
     * @return 
     */
    function runScript(language: string, script: string, file: string, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.java.lang.Throwable, any, any, any>): _javatypes.xyz.wagyourtail.jsmacros.core.language.EventContainer<any>;
    
    /**
     * 
     * @since 1.7.0
     * @param language
     * @param script
     * @param file
     * @param event
     * @param callback
     * @return 
     */
    function runScript(language: string, script: string, file: string, event: Events.BaseEvent, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.java.lang.Throwable, any, any, any>): _javatypes.xyz.wagyourtail.jsmacros.core.language.EventContainer<any>;
    
    /**
     * 
     * @since 1.7.0
     * @param file
     * @return 
     * @param <T>
     * @param <U>
     * @param <R>
     */
    function wrapScriptRun<T, U, R>(file: string): _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<T, U, R, any>;
    
    /**
     * 
     * @since 1.7.0
     * @param language
     * @param script
     * @return 
     * @param <T>
     * @param <U>
     * @param <R>
     */
    function wrapScriptRun<T, U, R>(language: string, script: string): _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<T, U, R, any>;
    
    /**
     * 
     * @since 1.7.0
     * @param language
     * @param script
     * @param file
     * @return 
     * @param <T>
     * @param <U>
     * @param <R>
     */
    function wrapScriptRun<T, U, R>(language: string, script: string, file: string): _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<T, U, R, any>;
    
    /**
     * 
     * @since 1.7.0
     * @param file
     * @return 
     * @param <T>
     * @param <U>
     * @param <R>
     */
    function wrapScriptRunAsync<T, U, R>(file: string): _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<T, U, R, any>;
    
    /**
     * 
     * @since 1.7.0
     * @param language
     * @param script
     * @return 
     * @param <T>
     * @param <U>
     * @param <R>
     */
    function wrapScriptRunAsync<T, U, R>(language: string, script: string): _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<T, U, R, any>;
    
    /**
     * 
     * @since 1.7.0
     * @param language
     * @param script
     * @param file
     * @return 
     * @param <T>
     * @param <U>
     * @param <R>
     */
    function wrapScriptRunAsync<T, U, R>(language: string, script: string, file: string): _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<T, U, R, any>;
    
    /**
     * Opens a file with the default system program.
     * @since 1.1.8
     * @param path relative to the script's folder.
     * @deprecated use the Utils library instead.
     */
    function open(path: string): void;
    
    /**
     * 
     * @since 1.6.0
     * @param url
     * @throws MalformedURLException
     * @deprecated use the Utils library instead.
     */
    function openUrl(url: string): void;
    
    /**
     * Creates a listener for an event, this function can be more efficient that running a script file when used properly.
     * @see IEventListener
     * @since 1.2.7
     * @param event
     * @param callback calls your method as a {@link java.util.function.BiConsumer BiConsumer}&lt;{@link BaseEvent}, {@link EventContainer}&gt;
     * @return 
     */
    function on(event: string, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<Events.BaseEvent, _javatypes.xyz.wagyourtail.jsmacros.core.language.EventContainer<any>, any, any>): _javatypes.xyz.wagyourtail.jsmacros.core.event.IEventListener;
    
    /**
     * Creates a single-run listener for an event, this function can be more efficient that running a script file when used properly.
     * @see IEventListener
     * @since 1.2.7
     * @param event
     * @param callback calls your method as a {@link java.util.function.BiConsumer BiConsumer}&lt;{@link BaseEvent}, {@link EventContainer}&gt;
     * @return the listener.
     */
    function once(event: string, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<Events.BaseEvent, _javatypes.xyz.wagyourtail.jsmacros.core.language.EventContainer<any>, any, any>): _javatypes.xyz.wagyourtail.jsmacros.core.event.IEventListener;
    
    /**
     * 
     * @see FJsMacros#off(String, IEventListener)
     * @since 1.2.3
     * @param listener
     * @return 
     */
    function off(listener: _javatypes.xyz.wagyourtail.jsmacros.core.event.IEventListener): boolean;
    
    /**
     * Removes a {@link _javatypes.IEventListener} from an event.
     * @see IEventListener
     * @since 1.2.3
     * @param event
     * @param listener
     * @return 
     */
    function off(event: string, listener: _javatypes.xyz.wagyourtail.jsmacros.core.event.IEventListener): boolean;
    
    /**
     * Will also disable all listeners for the given event, including JsMacros own event listeners.
     * @param event the event to remove all listeners from
     * @since 1.8.4
     */
    function disableAllListeners(event: string): void;
    
    /**
     * Will also disable all listeners, including JsMacros own event listeners.
     * @since 1.8.4
     */
    function disableAllListeners(): void;
    
    /**
     * Will only disable user created event listeners for the given event. This includes listeners
     *  created from {@link #on}, {@link #once},
     *  {@link #waitForEvent}, {@link #waitForEvent} and
     *  {@link #waitForEvent}.
     * @param event the event to remove all listeners from
     * @since 1.8.4
     */
    function disableScriptListeners(event: string): void;
    
    /**
     * Will only disable user created event listeners.  This includes listeners created from
     *  {@link #on}, {@link #once},
     *  {@link #waitForEvent}, {@link #waitForEvent} and
     *  {@link #waitForEvent}.
     * @since 1.8.4
     */
    function disableScriptListeners(): void;
    
    /**
     * 
     * @param event event to wait for
     * @since 1.5.0
     * @return a event and a new context if the event you're waiting for was joined, to leave it early.
     * @throws InterruptedException
     */
    function waitForEvent(event: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.FJsMacros$EventAndContext;
    
    /**
     * 
     * @param event
     * @return 
     * @throws InterruptedException
     */
    function waitForEvent(event: string, filter: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<Events.BaseEvent, any, boolean, any>): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.FJsMacros$EventAndContext;
    
    /**
     * waits for an event. if this thread is bound to an event already, this will release current lock.
     * @param event event to wait for
     * @param filter filter the event until it has the proper values or whatever.
     * @param runBeforeWaiting runs as a {@link Runnable}, run before waiting, this is a thread-safety thing to prevent "interrupts" from going in between this and things like deferCurrentTask
     * @since 1.5.0
     * @return a event and a new context if the event you're waiting for was joined, to leave it early.
     * @throws InterruptedException
     */
    function waitForEvent(event: string, filter: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<Events.BaseEvent, any, boolean, any>, runBeforeWaiting: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<any, any, any, any>): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.FJsMacros$EventAndContext;
    
    /**
     * 
     * @since 1.2.3
     * @param event
     * @return a list of script-added listeners.
     */
    function listeners(event: string): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.core.event.IEventListener>;
    
    /**
     * create a custom event object that can trigger a event. It's recommended to use 
     *  {@link _javatypes.EventCustom#registerEvent} to set up the event to be visible in the GUI.
     * @see BaseEventRegistry#addEvent(String)
     * @param eventName name of the event. please don't use an existing one... your scripts might not like that.
     * @since 1.2.8
     * @return 
     */
    function createCustomEvent(eventName: string): _javatypes.xyz.wagyourtail.jsmacros.core.event.impl.EventCustom;
    
}

namespace JavaWrapper {
    
    /**
     * 
     * @since 1.4.0
     * @param c
     * @return a new {@link MethodWrapper MethodWrapper}
     */
    function methodToJava<A, B, R>(c: (arg0?: A, arg1?: B) => R | void): _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<A, B, R, any>;
    
    /**
     * 
     * @since 1.4.0
     * @param c
     * @return a new {@link MethodWrapper MethodWrapper}
     */
    function methodToJavaAsync<A, B, R>(c: (arg0?: A, arg1?: B) => R | void): _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<A, B, R, any>;
    
    /**
     * JS/JEP ONLY
     *  allows you to set the position of the thread in the queue. you can use this for return value one's too...
     * @since 1.8.0
     * @param priority
     * @param c
     * @return 
     * @param <A>
     * @param <B>
     * @param <R>
     */
    function methodToJavaAsync<A, B, R>(priority: number, c: (arg0?: A, arg1?: B) => R | void): _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<A, B, R, any>;
    
    /**
     * JS/JEP only, puts current task at end of queue.
     *  use with caution, don't accidentally cause circular waiting.
     * @throws InterruptedException
     * @since 1.4.0 [citation needed]
     */
    function deferCurrentTask(): void;
    
    /**
     * JS/JEP only, puts current task at end of queue.
     *  use with caution, don't accidentally cause circular waiting.
     * @since 1.8.0
     * @throws InterruptedException
     * @param priorityAdjust the amount to adjust the priority by
     */
    function deferCurrentTask(priorityAdjust: number): void;
    
    /**
     * JS/JEP only, get priority of current task.
     * @throws InterruptedException
     * @since 1.8.0
     */
    function getCurrentPriority(): number;
    
    /**
     * Close the current context
     * @since 1.2.2
     */
    function stop(): void;
    
}

declare namespace _javatypes {


    namespace xyz.wagyourtail {
    
        interface StringHashTrie extends any, _javatypes.java.util.Collection<string> {
            
            size(): number;
            isEmpty(): boolean;
            contains(o: any): boolean;
            iterator(): _javatypes.java.util.Iterator<string>;
            toArray(): string[];
            toArray<T>(a: T[]): T[];
            add(s: string): boolean;
            
            /**
             * this can make the StringHashTrie sparse, this can cause extra steps in lookup that are no longer needed,
             *  at some point it would be best to rebase the StringHashTrie with `new StringHashTrie().addAll(current.getAll())`
             * @param o
             * @return 
             */
            remove(o: any): boolean;
            containsAll(c: _javatypes.java.util.Collection<any>): boolean;
            containsAll(o: string[]): boolean;
            addAll(c: _javatypes.java.util.Collection<any>): boolean;
            addAll(o: string[]): boolean;
            removeAll(c: _javatypes.java.util.Collection<any>): boolean;
            removeAll(o: string[]): boolean;
            retainAll(c: _javatypes.java.util.Collection<any>): boolean;
            retainAll(o: string[]): boolean;
            clear(): void;
            
            /**
             * 
             * @param prefix prefix to search with
             * @return all elements that start with the given prefix
             */
            getAllWithPrefix(prefix: string): _javatypes.java.util.Set<string>;
            
            /**
             * 
             * @param prefix prefix to search with
             * @return all elements that start with the given prefix (case insensitive)
             */
            getAllWithPrefixCaseInsensitive(prefix: string): _javatypes.java.util.Set<string>;
            
            /**
             * all contained elements as a {@link _javatypes.Set}
             * @return 
             */
            getAll(): _javatypes.java.util.Set<string>;
            
            /**
             * 
             * @return json representation, mainly for debugging.
             */
            toString(): string;
            
        }
        namespace StringHashTrie {
            interface static {
                new (): _javatypes.xyz.wagyourtail.StringHashTrie;
                
                
                
            }
        }
        interface Pair<T, U> extends any {
            
            setU(u: U): void;
            setT(t: T): void;
            getU(): U;
            getT(): T;
            
        }
        namespace Pair {
            interface static {
                new <T, U>(t: T, u: U): _javatypes.xyz.wagyourtail.Pair<T, U>;
                
                
                
            }
        }
    
        namespace jsmacros {
        
        
            namespace core {
            
                interface MethodWrapper<T, U, R, C> extends any, _javatypes.java.util._function.Consumer<T>, _javatypes.java.util._function.BiConsumer<T, U>, _javatypes.java.util._function.Function<T, R>, _javatypes.java.util._function.BiFunction<T, U, R>, _javatypes.java.util._function.Predicate<T>, _javatypes.java.util._function.BiPredicate<T, U>, _javatypes.java.lang.Runnable, _javatypes.java.util._function.Supplier<R>, _javatypes.java.util.Comparator<T> {
                    
                    getCtx(): C;
                    accept(t: T): void;
                    accept(t: T, u: U): void;
                    apply(t: T): R;
                    apply(t: T, u: U): R;
                    test(t: T): boolean;
                    test(t: T, u: U): boolean;
                    
                    /**
                     * override to return true if the method can't join to the thread it was wrapped/created in, ie for languages that don't allow multithreading.
                     */
                    preventSameThreadJoin(): boolean;
                    
                    /**
                     * make return something to override the thread set in {@link _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.FJsMacros#on}
                     *  (hi jep)
                     */
                    overrideThread(): _javatypes.java.lang.Thread;
                    
                    /**
                     * Makes {@link _javatypes.Function} and {@link _javatypes.BiFunction} work together.
                     *  Extended so it's called on every type not just those 2.
                     * @param after put a {@link MethodWrapper} here when using in scripts.
                     */
                    andThen<V>(after: _javatypes.java.util._function.Function<any, any>): _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<T, U, V, C>;
                    
                    /**
                     * Makes {@link _javatypes.Predicate} and {@link _javatypes.BiPredicate} work together
                     */
                    negate(): _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<T, U, R, C>;
                    
                }
                namespace MethodWrapper {
                    interface static {
                        new <T, U, R, C>(containingContext: C): _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<T, U, R, C>;
                        
                        
                        
                    }
                }
                interface Core<T, U> extends any {
                    readonly libraryRegistry: _javatypes.xyz.wagyourtail.jsmacros.core.library.LibraryRegistry;
                    readonly eventRegistry: _javatypes.xyz.wagyourtail.jsmacros.core.event.BaseEventRegistry;
                    readonly extensions: _javatypes.xyz.wagyourtail.jsmacros.core.extensions.ExtensionLoader;
                    readonly profile: T;
                    readonly config: _javatypes.xyz.wagyourtail.jsmacros.core.config.ConfigManager;
                    readonly services: _javatypes.xyz.wagyourtail.jsmacros.core.service.ServiceManager;
                    
                    deferredInit(): void;
                    
                    /**
                     * 
                     * @param container
                     */
                    addContext(container: _javatypes.xyz.wagyourtail.jsmacros.core.language.EventContainer<any>): void;
                    
                    /**
                     * 
                     * @return 
                     */
                    getContexts(): _javatypes.java.util.Set<_javatypes.xyz.wagyourtail.jsmacros.core.language.BaseScriptContext<any>>;
                    
                    /**
                     * executes an {@link _javatypes.BaseEvent} on a ${@link _javatypes.ScriptTrigger}
                     * @param macro
                     * @param event
                     * @return 
                     */
                    exec(macro: _javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger, event: Events.BaseEvent): _javatypes.xyz.wagyourtail.jsmacros.core.language.EventContainer<any>;
                    
                    /**
                     * Executes an {@link _javatypes.BaseEvent} on a ${@link _javatypes.ScriptTrigger} with callback.
                     * @param macro
                     * @param event
                     * @param then
                     * @param catcher
                     * @return 
                     */
                    exec(macro: _javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger, event: Events.BaseEvent, then: _javatypes.java.lang.Runnable, catcher: _javatypes.java.util._function.Consumer<_javatypes.java.lang.Throwable>): _javatypes.xyz.wagyourtail.jsmacros.core.language.EventContainer<any>;
                    
                    /**
                     * 
                     * @since 1.7.0
                     * @param lang
                     * @param script
                     * @param fakeFile
                     * @param event
                     * @param then
                     * @param catcher
                     * @return 
                     */
                    exec(lang: string, script: string, fakeFile: _javatypes.java.io.File, event: Events.BaseEvent, then: _javatypes.java.lang.Runnable, catcher: _javatypes.java.util._function.Consumer<_javatypes.java.lang.Throwable>): _javatypes.xyz.wagyourtail.jsmacros.core.language.EventContainer<any>;
                    
                    /**
                     * wraps an exception for more uniform parsing between languages, also extracts useful info.
                     * @param ex exception to wrap.
                     * @return 
                     */
                    wrapException(ex: _javatypes.java.lang.Throwable): _javatypes.xyz.wagyourtail.jsmacros.core.language.BaseWrappedException<any>;
                    
                }
                namespace Core {
                    interface static {
                        
                        
                        
                        /**
                         * static reference to instance created by {@link #createInstance}
                         */
                        getInstance(): _javatypes.xyz.wagyourtail.jsmacros.core.Core<any, any>;
                        
                        /**
                         * start by running this function, supplying implementations of {@link _javatypes.BaseEventRegistry} and {@link _javatypes.BaseProfile} and a {@link _javatypes.Supplier} for
                         *  creating the config manager with the folder paths it needs.
                         * @param eventRegistryFunction
                         * @param profileFunction
                         * @param configFolder
                         * @param macroFolder
                         * @param logger
                         * @return 
                         */
                        createInstance<V, R>(eventRegistryFunction: _javatypes.java.util._function.Function<_javatypes.xyz.wagyourtail.jsmacros.core.Core<V, R>, R>, profileFunction: _javatypes.java.util._function.BiFunction<_javatypes.xyz.wagyourtail.jsmacros.core.Core<V, R>, _javatypes.org.slf4j.Logger, V>, configFolder: _javatypes.java.io.File, macroFolder: _javatypes.java.io.File, logger: _javatypes.org.slf4j.Logger): _javatypes.xyz.wagyourtail.jsmacros.core.Core<V, R>;
                        
                    }
                }
            
                namespace language {
                
                    interface BaseScriptContext<T> extends any {
                        readonly startTime: number;
                        readonly syncObject: _javatypes.java.lang.ref.WeakReference<any>;
                        readonly triggeringEvent: Events.BaseEvent;
                        hasMethodWrapperBeenInvoked: boolean;
                        
                        
                        /**
                         * this object should only be weak referenced unless we want to prevent the context from closing when syncObject is cleared.
                         */
                        getSyncObject(): any;
                        clearSyncObject(): void;
                        
                        /**
                         * 
                         * @since 1.6.0
                         * @return 
                         */
                        getBoundEvents(): _javatypes.java.util.Map<_javatypes.java.lang.Thread, _javatypes.xyz.wagyourtail.jsmacros.core.language.EventContainer<any>>;
                        
                        /**
                         * 
                         * @since 1.6.0
                         * @param th
                         * @param event
                         */
                        bindEvent(th: _javatypes.java.lang.Thread, event: _javatypes.xyz.wagyourtail.jsmacros.core.language.EventContainer<_javatypes.xyz.wagyourtail.jsmacros.core.language.BaseScriptContext<T>>): void;
                        
                        /**
                         * 
                         * @since 1.6.0
                         * @param thread
                         * @return 
                         */
                        releaseBoundEventIfPresent(thread: _javatypes.java.lang.Thread): boolean;
                        getContext(): T;
                        
                        /**
                         * 
                         * @since 1.5.0
                         * @return 
                         */
                        getMainThread(): _javatypes.java.lang.Thread;
                        
                        /**
                         * 
                         * @since 1.6.0
                         * @param t
                         * @return is a newly bound thread
                         */
                        bindThread(t: _javatypes.java.lang.Thread): boolean;
                        
                        /**
                         * 
                         * @since 1.6.0
                         * @param t
                         */
                        unbindThread(t: _javatypes.java.lang.Thread): void;
                        
                        /**
                         * 
                         * @since 1.6.0
                         * @return 
                         */
                        getBoundThreads(): _javatypes.java.util.Set<_javatypes.java.lang.Thread>;
                        
                        /**
                         * 
                         * @since 1.5.0
                         * @param t
                         */
                        setMainThread(t: _javatypes.java.lang.Thread): void;
                        
                        /**
                         * 
                         * @since 1.5.0
                         */
                        getTriggeringEvent(): Events.BaseEvent;
                        setContext(context: T): void;
                        isContextClosed(): boolean;
                        closeContext(): void;
                        
                        /**
                         * 
                         * @since 1.6.0
                         * @return 
                         */
                        getFile(): _javatypes.java.io.File;
                        
                        /**
                         * 
                         * @since 1.6.0
                         * @return 
                         */
                        getContainedFolder(): _javatypes.java.io.File;
                        isMultiThreaded(): boolean;
                        wrapSleep(sleep: _javatypes.xyz.wagyourtail.jsmacros.core.language.BaseScriptContext$SleepRunnable): void;
                        
                    }
                    namespace BaseScriptContext {
                        interface static {
                            new <T>(event: Events.BaseEvent, file: _javatypes.java.io.File): _javatypes.xyz.wagyourtail.jsmacros.core.language.BaseScriptContext<T>;
                            
                            
                            
                        }
                    }
                    interface EventContainer<T> extends any {
                        
                        isLocked(): boolean;
                        setLockThread(lockThread: _javatypes.java.lang.Thread): void;
                        getCtx(): T;
                        getLockThread(): _javatypes.java.lang.Thread;
                        
                        /**
                         * careful with this one it can cause deadlocks if used in scripts incorrectly.
                         * @param then must be a {@link MethodWrapper} when called from a script.
                         * @throws InterruptedException
                         * @since 1.4.0
                         */
                        awaitLock(then: _javatypes.java.lang.Runnable): void;
                        
                        /**
                         * can be released earlier in a script or language impl.
                         * @since 1.4.0
                         */
                        releaseLock(): void;
                        toString(): string;
                        
                    }
                    namespace EventContainer {
                        interface static {
                            new <T>(ctx: T): _javatypes.xyz.wagyourtail.jsmacros.core.language.EventContainer<T>;
                            
                            
                            
                        }
                    }
                    interface BaseScriptContext$SleepRunnable extends _javatypes.java.lang.Interface {
                        
                        run(): void;
                        
                    }
                    namespace BaseScriptContext$SleepRunnable {
                        interface static {
                            
                            
                            
                        }
                    }
                    interface BaseLanguage<U, T> extends any {
                        readonly extension: _javatypes.xyz.wagyourtail.jsmacros.core.extensions.Extension;
                        preThread: _javatypes.java.lang.Runnable;
                        
                        trigger(macro: _javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger, event: Events.BaseEvent, then: _javatypes.java.lang.Runnable, catcher: _javatypes.java.util._function.Consumer<_javatypes.java.lang.Throwable>): _javatypes.xyz.wagyourtail.jsmacros.core.language.EventContainer<T>;
                        trigger(lang: string, script: string, fakeFile: _javatypes.java.io.File, event: Events.BaseEvent, then: _javatypes.java.lang.Runnable, catcher: _javatypes.java.util._function.Consumer<_javatypes.java.lang.Throwable>): _javatypes.xyz.wagyourtail.jsmacros.core.language.EventContainer<T>;
                        retrieveLibs(context: T): _javatypes.java.util.Map<string, _javatypes.xyz.wagyourtail.jsmacros.core.library.BaseLibrary>;
                        retrieveOnceLibs(): _javatypes.java.util.Map<string, _javatypes.xyz.wagyourtail.jsmacros.core.library.BaseLibrary>;
                        retrievePerExecLibs(context: T): _javatypes.java.util.Map<string, _javatypes.xyz.wagyourtail.jsmacros.core.library.BaseLibrary>;
                        createContext(event: Events.BaseEvent, file: _javatypes.java.io.File): T;
                        
                    }
                    namespace BaseLanguage {
                        interface static {
                            new <U, T>(extension: _javatypes.xyz.wagyourtail.jsmacros.core.extensions.Extension, runner: _javatypes.xyz.wagyourtail.jsmacros.core.Core<any, any>): _javatypes.xyz.wagyourtail.jsmacros.core.language.BaseLanguage<U, T>;
                            
                            
                            
                        }
                    }
                    interface BaseWrappedException<T> extends any {
                        readonly stackFrame: T;
                        readonly location: _javatypes.xyz.wagyourtail.jsmacros.core.language.BaseWrappedException$SourceLocation;
                        readonly message: string;
                        readonly next: _javatypes.xyz.wagyourtail.jsmacros.core.language.BaseWrappedException<any>;
                        
                        
                    }
                    namespace BaseWrappedException {
                        interface static {
                            new <T>(exception: T, message: string, location: _javatypes.xyz.wagyourtail.jsmacros.core.language.BaseWrappedException$SourceLocation, next: _javatypes.xyz.wagyourtail.jsmacros.core.language.BaseWrappedException<any>): _javatypes.xyz.wagyourtail.jsmacros.core.language.BaseWrappedException<T>;
                            
                            
                            wrapHostElement(t: _javatypes.java.lang.StackTraceElement, next: _javatypes.xyz.wagyourtail.jsmacros.core.language.BaseWrappedException<any>): _javatypes.xyz.wagyourtail.jsmacros.core.language.BaseWrappedException<_javatypes.java.lang.StackTraceElement>;
                            
                        }
                    }
                    interface BaseWrappedException$SourceLocation extends any {
                        
                        
                    }
                    namespace BaseWrappedException$SourceLocation {
                        interface static {
                            new (): _javatypes.xyz.wagyourtail.jsmacros.core.language.BaseWrappedException$SourceLocation;
                            
                            
                            
                        }
                    }
                }
            
                namespace helpers {
                
                    interface BaseHelper<T> extends any {
                        
                        getRaw(): T;
                        hashCode(): number;
                        equals(obj: any): boolean;
                        
                    }
                    namespace BaseHelper {
                        interface static {
                            new <T>(base: T): _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper<T>;
                            
                            
                            
                        }
                    }
                }
            
                namespace library {
                
                    interface BaseLibrary extends any {
                        
                        
                    }
                    namespace BaseLibrary {
                        interface static {
                            new (): _javatypes.xyz.wagyourtail.jsmacros.core.library.BaseLibrary;
                            
                            
                            
                        }
                    }
                    interface LibraryRegistry extends any {
                        readonly libraries: _javatypes.java.util.Map<_javatypes.xyz.wagyourtail.jsmacros.core.library.Library, _javatypes.xyz.wagyourtail.jsmacros.core.library.BaseLibrary>;
                        readonly perExec: _javatypes.java.util.Map<_javatypes.xyz.wagyourtail.jsmacros.core.library.Library, _javatypes.java.lang.Class<any>>;
                        readonly perLanguage: _javatypes.java.util.Map<_javatypes.java.lang.Class<any>, _javatypes.java.util.Map<_javatypes.xyz.wagyourtail.jsmacros.core.library.Library, _javatypes.xyz.wagyourtail.jsmacros.core.library.PerLanguageLibrary>>;
                        readonly perExecLanguage: _javatypes.java.util.Map<_javatypes.java.lang.Class<any>, _javatypes.java.util.Map<_javatypes.xyz.wagyourtail.jsmacros.core.library.Library, _javatypes.java.lang.Class<any>>>;
                        
                        getLibraries(language: _javatypes.xyz.wagyourtail.jsmacros.core.language.BaseLanguage<any, any>, context: _javatypes.xyz.wagyourtail.jsmacros.core.language.BaseScriptContext<any>): _javatypes.java.util.Map<string, _javatypes.xyz.wagyourtail.jsmacros.core.library.BaseLibrary>;
                        getOnceLibraries(language: _javatypes.xyz.wagyourtail.jsmacros.core.language.BaseLanguage<any, any>): _javatypes.java.util.Map<string, _javatypes.xyz.wagyourtail.jsmacros.core.library.BaseLibrary>;
                        getPerExecLibraries(language: _javatypes.xyz.wagyourtail.jsmacros.core.language.BaseLanguage<any, any>, context: _javatypes.xyz.wagyourtail.jsmacros.core.language.BaseScriptContext<any>): _javatypes.java.util.Map<string, _javatypes.xyz.wagyourtail.jsmacros.core.library.BaseLibrary>;
                        addLibrary(clazz: _javatypes.java.lang.Class<any>): void;
                        
                    }
                    namespace LibraryRegistry {
                        interface static {
                            new (): _javatypes.xyz.wagyourtail.jsmacros.core.library.LibraryRegistry;
                            
                            
                            
                        }
                    }
                    interface Library extends _javatypes.java.lang.Interface, _javatypes.java.lang.annotation.Annotation {
                        
                        value(): string;
                        languages(): _javatypes.java.lang.Class<any>[];
                        
                    }
                    namespace Library {
                        interface static {
                            
                            
                            
                        }
                    }
                    interface PerLanguageLibrary extends _javatypes.xyz.wagyourtail.jsmacros.core.library.BaseLibrary {
                        
                        
                    }
                    namespace PerLanguageLibrary {
                        interface static {
                            new (language: _javatypes.java.lang.Class<any>): _javatypes.xyz.wagyourtail.jsmacros.core.library.PerLanguageLibrary;
                            
                            
                            
                        }
                    }
                
                    namespace impl {
                    
                        interface FJsMacros$EventAndContext extends any {
                            readonly event: Events.BaseEvent;
                            readonly context: _javatypes.xyz.wagyourtail.jsmacros.core.language.EventContainer<any>;
                            
                            toString(): string;
                            
                        }
                        namespace FJsMacros$EventAndContext {
                            interface static {
                                new (event: Events.BaseEvent, context: _javatypes.xyz.wagyourtail.jsmacros.core.language.EventContainer<any>): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.FJsMacros$EventAndContext;
                                
                                
                                
                            }
                        }
                    
                        namespace classes {
                        
                            interface Websocket extends any {
                                
                                /**
                                 * calls your method as a {@link _javatypes.java.util._function.Consumer}&lt;{@link _javatypes.WebSocket}, {@link _javatypes.List}&lt;{@link _javatypes.String}&gt;&gt;
                                 */
                                onConnect: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.com.neovisionaries.ws.client.WebSocket, _javatypes.java.util.Map<string, _javatypes.java.util.List<string>>, any, any>;
                                
                                /**
                                 * calls your method as a {@link _javatypes.java.util._function.BiConsumer}&lt;{@link _javatypes.WebSocket}, {@link _javatypes.String}&gt;
                                 */
                                onTextMessage: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.com.neovisionaries.ws.client.WebSocket, string, any, any>;
                                
                                /**
                                 * calls your method as a {@link _javatypes.java.util._function.BiConsumer}&lt;{@link _javatypes.WebSocket}, {@link _javatypes.Disconnected}&gt;
                                 */
                                onDisconnect: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.com.neovisionaries.ws.client.WebSocket, _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.Websocket$Disconnected, any, any>;
                                
                                /**
                                 * calls your method as a {@link _javatypes.java.util._function.BiConsumer}&lt;{@link _javatypes.WebSocket}, {@link _javatypes.WebSocketException}&gt;
                                 */
                                onError: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.com.neovisionaries.ws.client.WebSocket, _javatypes.com.neovisionaries.ws.client.WebSocketException, any, any>;
                                
                                /**
                                 * calls your method as a {@link _javatypes.java.util._function.BiConsumer}&lt;{@link _javatypes.WebSocket}, {@link _javatypes.WebSocketFrame}&gt;
                                 */
                                onFrame: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.com.neovisionaries.ws.client.WebSocket, _javatypes.com.neovisionaries.ws.client.WebSocketFrame, any, any>;
                                
                                
                                /**
                                 * 
                                 * @since 1.1.9
                                 * @return 
                                 * @throws WebSocketException
                                 */
                                connect(): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.Websocket;
                                
                                /**
                                 * 
                                 * @since 1.1.9
                                 * @return 
                                 */
                                getWs(): _javatypes.com.neovisionaries.ws.client.WebSocket;
                                
                                /**
                                 * 
                                 * @since 1.1.9
                                 * @param text
                                 * @return 
                                 */
                                sendText(text: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.Websocket;
                                
                                /**
                                 * 
                                 * @since 1.1.9
                                 * @return 
                                 */
                                close(): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.Websocket;
                                
                                /**
                                 * 
                                 * @since 1.1.9
                                 * @param closeCode
                                 * @return 
                                 */
                                close(closeCode: number): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.Websocket;
                                
                            }
                            namespace Websocket {
                                interface static {
                                    new (address: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.Websocket;
                                    new (address: _javatypes.java.net.URL): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.Websocket;
                                    
                                    
                                    
                                }
                            }
                            interface ClassBuilder<T> extends any {
                                readonly ctClass: _javatypes.javassist.CtClass;
                                
                                addField(fieldType: _javatypes.java.lang.Class<any>, name: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$FieldBuilder;
                                
                                /**
                                 * The code must define the full field, including visibility, type, name and an optional value.
                                 *  Generic types are not supported and must be explicitly cast in the source code when used.
                                 *  Annotations are also not supported.
                                 *  Just like in java, classes from the `java.lang` package don't need a fully qualified name.
                                 *  Examples are:
                                 *  <pre>
                                 *  `private String name;`
                                 *  `private java.lang.String name;`
                                 *  `public java.util.List list = new java.util.ArrayList();`
                                 *  `static int value = 10;`
                                 *  </pre>
                                 * @param code the code for the field
                                 * @return self for chaining.
                                 * @throws CannotCompileException
                                 * @since 1.8.4
                                 */
                                addField(code: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder<T>;
                                addMethod(returnType: _javatypes.java.lang.Class<any>, name: string, params: _javatypes.java.lang.Class<any>[]): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$MethodBuilder;
                                
                                /**
                                 * The code must define the full method, including visibility, return type, name and parameters.
                                 *  Generic types are not supported as return values or arguments, neither can varargs be used.
                                 *  Annotations are also not supported.
                                 *  Just like in java, classes from the `java.lang` package don't need a fully qualified name.
                                 *  Examples are:
                                 *  <pre>
                                 *  `public Object id(Object obj) { return obj; }`
                                 *  `private void print(String text) { System.out.println(text); }`
                                 *  `private static java.util.Map toMap(Object[] keys, Object[] values) {
                                 *       java.util.Map map = new java.util.HashMap();
                                 *       for (int i = 0; i < keys.length; i++) {
                                 *           map.put(keys[i], values[i]);
                                 *       }
                                 *       return map;
                                 *  }`
                                 *  `public String toString() {
                                 *       System.out.println(super.toString());
                                 *       return "Hello World!";
                                 *   }`
                                 *  </pre>
                                 * @param code the code for the method
                                 * @return self for chaining.
                                 * @throws CannotCompileException
                                 * @since 1.8.4
                                 */
                                addMethod(code: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder<T>;
                                addConstructor(params: _javatypes.java.lang.Class<any>[]): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$ConstructorBuilder;
                                
                                /**
                                 * The code must define the full constructor, including visibility and parameters.
                                 *  Generic types are not supported as arguments, neither can varargs be used.
                                 *  Annotations are also not supported.
                                 *  Just like in java, classes from the `java.lang` package don't need a fully qualified name.
                                 *  To make sure the class can be easily instantiated, the visibility of the constructor should be public.
                                 *  Examples are:
                                 *  <pre>
                                 *  `public MyClass() { }`
                                 *  `public MyClass(String text) { System.out.println(text); }`
                                 *  `protected MyClass(String text, int number) { super(text, number, ""); }`
                                 *  `public MyClass(String text, int number, String other) {
                                 *       this(text, number);
                                 *       this.other = other;
                                 *  }`
                                 *  </pre>
                                 * @param code the code for the constructor
                                 * @return self for chaining.
                                 * @throws CannotCompileException
                                 * @since 1.8.4
                                 */
                                addConstructor(code: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder<T>;
                                addClinit(): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$ConstructorBuilder;
                                addAnnotation(type: _javatypes.java.lang.Class<any>): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder<T>>;
                                finishBuildAndFreeze(): _javatypes.java.lang.Class<any>;
                                
                            }
                            namespace ClassBuilder {
                                interface static {
                                    new <T>(name: string, parent: _javatypes.java.lang.Class<T>, interfaces: _javatypes.java.lang.Class<any>[]): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder<T>;
                                    
                                    readonly methodWrappers: _javatypes.java.util.Map<string, _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<any, any, any, any>>;
                                    
                                    
                                }
                            }
                            interface ProxyBuilder<T> extends any {
                                readonly factory: _javatypes.javassist.util.proxy.ProxyFactory;
                                readonly proxiedMethods: _javatypes.java.util.Map<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ProxyBuilder$MethodSigParts, _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ProxyBuilder$ProxyReference<T>, any[], any, any>>;
                                readonly proxiedMethodDefaults: _javatypes.java.util.Map<string, _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ProxyBuilder$ProxyReference<T>, any[], any, any>>;
                                
                                
                                /**
                                 * 
                                 * @param methodNameOrSig name of method or sig (the usual format)
                                 * @param proxyMethod
                                 * @since 1.6.0
                                 * @return self for chaining
                                 */
                                addMethod(methodNameOrSig: string, proxyMethod: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ProxyBuilder$ProxyReference<T>, any[], any, any>): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ProxyBuilder<T>;
                                
                                /**
                                 * 
                                 * @param constructorArgs args for the super constructor
                                 * @since 1.6.0
                                 * @return new instance of the constructor
                                 * @throws InvocationTargetException
                                 * @throws NoSuchMethodException
                                 * @throws InstantiationException
                                 * @throws IllegalAccessException
                                 */
                                buildInstance(constructorArgs: any[]): T;
                                
                                /**
                                 * 
                                 * @param constructorSig string signature (you can skip the &lt;init&gt; part)
                                 * @param constructorArgs args for the super constructor
                                 * @since 1.6.0
                                 * @return new instance of the constructor
                                 * @throws InvocationTargetException
                                 * @throws NoSuchMethodException
                                 * @throws InstantiationException
                                 * @throws IllegalAccessException
                                 * @throws ClassNotFoundException
                                 */
                                buildInstance(constructorSig: string, constructorArgs: any[]): T;
                                
                                /**
                                 * 
                                 * @param constructorSig string signature (you can skip the &lt;init&gt; part)
                                 * @param constructorArgs args for the super constructor
                                 * @since 1.6.0
                                 * @return new instance of the constructor
                                 * @throws InvocationTargetException
                                 * @throws NoSuchMethodException
                                 * @throws InstantiationException
                                 * @throws IllegalAccessException
                                 * @throws ClassNotFoundException
                                 */
                                buildInstance(constructorSig: _javatypes.java.lang.Class<any>[], constructorArgs: any[]): T;
                                
                            }
                            namespace ProxyBuilder {
                                interface static {
                                    new <T>(clazz: _javatypes.java.lang.Class<T>, interfaces: _javatypes.java.lang.Class<any>[]): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ProxyBuilder<T>;
                                    
                                    
                                    
                                }
                            }
                            interface LibraryBuilder extends _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder<_javatypes.xyz.wagyourtail.jsmacros.core.library.BaseLibrary> {
                                
                                
                                /**
                                 * constructor, if perExec run every context, if per language run once for each lang;
                                 *  params are context and language class
                                 *  if not per exec, param will be skipped
                                 *  ie:
                                 *  BaseLibrary: no params
                                 *  PerExecLibrary: context
                                 *  PerExecLanguageLibrary: context, language
                                 *  PerLanguageLibrary: language
                                 * 
                                 *  Don't do other constructors...
                                 * @return 
                                 * @throws NotFoundException
                                 */
                                addConstructor(): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$ConstructorBuilder;
                                finishBuildAndFreeze(): _javatypes.java.lang.Class<any>;
                                
                            }
                            namespace LibraryBuilder {
                                interface static {
                                    new (name: string, perExec: boolean, allowedLangs: string[]): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.LibraryBuilder;
                                    
                                    
                                    
                                }
                            }
                            interface HTTPRequest extends any {
                                headers: _javatypes.java.util.Map<string, string>;
                                conn: _javatypes.java.net.URL;
                                
                                
                                /**
                                 * 
                                 * @since 1.1.8
                                 * @param key
                                 * @param value
                                 * @return 
                                 */
                                addHeader(key: string, value: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.HTTPRequest;
                                
                                /**
                                 * 
                                 * @since 1.1.8
                                 * @return 
                                 * @throws IOException
                                 */
                                get(): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.HTTPRequest$Response;
                                
                                /**
                                 * 
                                 * @since 1.1.8
                                 * @param data
                                 * @return 
                                 * @throws IOException
                                 */
                                post(data: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.HTTPRequest$Response;
                                
                                /**
                                 * 
                                 * @since 1.8.4
                                 * @param data
                                 * @return 
                                 * @throws IOException
                                 */
                                post(data: number[]): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.HTTPRequest$Response;
                                
                                /**
                                 * 
                                 * @since 1.8.4
                                 * @param data
                                 * @return 
                                 * @throws IOException
                                 */
                                put(data: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.HTTPRequest$Response;
                                
                                /**
                                 * 
                                 * @since 1.8.4
                                 * @param data
                                 * @return 
                                 * @throws IOException
                                 */
                                put(data: number[]): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.HTTPRequest$Response;
                                
                                /**
                                 * 
                                 * @since 1.8.4
                                 * @param method
                                 * @param data
                                 * @return 
                                 * @throws IOException
                                 */
                                send(method: string, data: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.HTTPRequest$Response;
                                
                                /**
                                 * 
                                 * @since 1.8.4
                                 * @param method
                                 * @param data
                                 * @return 
                                 * @throws IOException
                                 */
                                send(method: string, data: number[]): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.HTTPRequest$Response;
                                
                            }
                            namespace HTTPRequest {
                                interface static {
                                    new (url: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.HTTPRequest;
                                    
                                    
                                    
                                }
                            }
                            interface FileHandler extends any {
                                
                                
                                /**
                                 * writes a string to the file. this is a destructive operation that replaces the file contents.
                                 * @since 1.1.8
                                 * @param s
                                 * @return 
                                 * @throws IOException
                                 */
                                write(s: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.FileHandler;
                                
                                /**
                                 * writes a byte array to the file. this is a destructive operation that replaces the file contents.
                                 * @since 1.1.8
                                 * @param b
                                 * @return 
                                 * @throws IOException
                                 */
                                write(b: number[]): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.FileHandler;
                                
                                /**
                                 * 
                                 * @since 1.1.8
                                 * @return 
                                 * @throws IOException
                                 */
                                read(): string;
                                
                                /**
                                 * 
                                 * @since 1.2.6
                                 * @return 
                                 * @throws IOException
                                 */
                                readBytes(): number[];
                                
                                /**
                                 * 
                                 * @since 1.1.8
                                 * @param s
                                 * @return 
                                 * @throws IOException
                                 */
                                append(s: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.FileHandler;
                                
                                /**
                                 * 
                                 * @since 1.2.6
                                 * @param b
                                 * @return 
                                 * @throws IOException
                                 */
                                append(b: number[]): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.FileHandler;
                                getFile(): _javatypes.java.io.File;
                                toString(): string;
                                
                            }
                            namespace FileHandler {
                                interface static {
                                    new (path: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.FileHandler;
                                    new (path: _javatypes.java.io.File): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.FileHandler;
                                    
                                    
                                    
                                }
                            }
                            interface HTTPRequest$Response extends any {
                                headers: _javatypes.java.util.Map<string, _javatypes.java.util.List<string>>;
                                responseCode: number;
                                
                                
                                /**
                                 * 
                                 * @since 1.1.8
                                 * @return 
                                 */
                                text(): string;
                                
                                /**
                                 * Don't use this. Parse {@link _javatypes.HTTPRequest.Response#text} in the guest language
                                 * @since 1.1.8
                                 * @deprecated
                                 * @return 
                                 */
                                json(): any;
                                
                                /**
                                 * 
                                 * @since 1.2.2
                                 * @return 
                                 * @throws IOException
                                 */
                                byteArray(): number[];
                                
                            }
                            namespace HTTPRequest$Response {
                                interface static {
                                    new (inputStream: _javatypes.java.io.InputStream, responseCode: number, headers: _javatypes.java.util.Map<string, _javatypes.java.util.List<string>>): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.HTTPRequest$Response;
                                    
                                    
                                    
                                }
                            }
                            interface ClassBuilder$AnnotationBuilder<T> extends any {
                                
                                putString(key: string, value: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder<T>;
                                putBoolean(key: string, value: boolean): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder<T>;
                                putByte(key: string, value: number): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder<T>;
                                putChar(key: string, value: number): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder<T>;
                                putShort(key: string, value: number): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder<T>;
                                putInt(key: string, value: number): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder<T>;
                                putLong(key: string, value: number): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder<T>;
                                putFloat(key: string, value: number): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder<T>;
                                putDouble(key: string, value: number): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder<T>;
                                putClass(key: string, value: _javatypes.java.lang.Class<any>): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder<T>;
                                putEnum(key: string, value: _javatypes.java.lang.Enum<any>): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder<T>;
                                putAnnotation(key: string, annotationClass: _javatypes.java.lang.Class<any>): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder<T>>;
                                putArray(key: string, annotationClass: _javatypes.java.lang.Class<any>): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder$AnnotationArrayBuilder<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder<T>>;
                                finish(): T;
                                
                            }
                            namespace ClassBuilder$AnnotationBuilder {
                                interface static {
                                    
                                    
                                    
                                }
                            }
                            interface ClassBuilder$ConstructorBuilder extends _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$MethodBuilder {
                                
                                body(code_src: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder<T>;
                                guestBody(methodBody: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<any, any, any, any>): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder<T>;
                                buildBody(): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$BodyBuilder;
                                body(buildBody: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.javassist.CtClass, _javatypes.javassist.CtBehavior, any, any>): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder<T>;
                                endAbstract(): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder<T>;
                                
                            }
                            namespace ClassBuilder$ConstructorBuilder {
                                interface static {
                                    new (params: _javatypes.javassist.CtClass[], clInit: boolean): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$ConstructorBuilder;
                                    
                                    
                                    
                                }
                            }
                            interface ProxyBuilder$MethodSigParts extends any {
                                readonly name: string;
                                readonly params: _javatypes.java.lang.Class<any>[];
                                readonly returnType: _javatypes.java.lang.Class<any>;
                                
                                equals(o: any): boolean;
                                hashCode(): number;
                                
                            }
                            namespace ProxyBuilder$MethodSigParts {
                                interface static {
                                    
                                    
                                    
                                }
                            }
                            interface Websocket$Disconnected extends any {
                                serverFrame: _javatypes.com.neovisionaries.ws.client.WebSocketFrame;
                                clientFrame: _javatypes.com.neovisionaries.ws.client.WebSocketFrame;
                                isServer: boolean;
                                
                                
                            }
                            namespace Websocket$Disconnected {
                                interface static {
                                    
                                    /**
                                     * 
                                     * @param serverFrame
                                     * @param clientFrame
                                     * @param isServer
                                     */
                                    new (serverFrame: _javatypes.com.neovisionaries.ws.client.WebSocketFrame, clientFrame: _javatypes.com.neovisionaries.ws.client.WebSocketFrame, isServer: boolean): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.Websocket$Disconnected;
                                    
                                    
                                    
                                }
                            }
                            interface ClassBuilder$FieldBuilder extends any {
                                fieldInitializer: _javatypes.javassist.CtField$Initializer;
                                
                                compile(code: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder<T>;
                                rename(name: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$FieldBuilder;
                                makePrivate(): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$FieldBuilder;
                                makePublic(): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$FieldBuilder;
                                makeProtected(): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$FieldBuilder;
                                makePackagePrivate(): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$FieldBuilder;
                                toggleStatic(): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$FieldBuilder;
                                toggleFinal(): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$FieldBuilder;
                                getMods(): number;
                                getModString(): string;
                                addAnnotation(type: _javatypes.java.lang.Class<any>): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$FieldBuilder>;
                                initializer(): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$FieldBuilder$FieldInitializerBuilder;
                                end(): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder<T>;
                                
                            }
                            namespace ClassBuilder$FieldBuilder {
                                interface static {
                                    new (fieldType: _javatypes.javassist.CtClass, name: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$FieldBuilder;
                                    
                                    
                                    
                                }
                            }
                            interface ClassBuilder$MethodBuilder extends any {
                                
                                compile(code: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder<T>;
                                makePrivate(): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$MethodBuilder;
                                makePublic(): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$MethodBuilder;
                                makeProtected(): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$MethodBuilder;
                                makePackagePrivate(): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$MethodBuilder;
                                toggleStatic(): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$MethodBuilder;
                                rename(newName: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$MethodBuilder;
                                exceptions(exceptions: _javatypes.java.lang.Class<any>[]): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$MethodBuilder;
                                body(code_src: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder<T>;
                                guestBody(methodBody: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<any, any, any, any>): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder<T>;
                                buildBody(): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$BodyBuilder;
                                body(buildBody: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.javassist.CtClass, _javatypes.javassist.CtBehavior, any, any>): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder<T>;
                                endAbstract(): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder<T>;
                                addAnnotation(type: _javatypes.java.lang.Class<any>): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$MethodBuilder>;
                                
                            }
                            namespace ClassBuilder$MethodBuilder {
                                interface static {
                                    new (methodReturnType: _javatypes.javassist.CtClass, methodName: string, params: _javatypes.javassist.CtClass[]): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$MethodBuilder;
                                    
                                    
                                    
                                }
                            }
                            interface ProxyBuilder$ProxyReference<T> extends any {
                                
                                /**
                                 * "this" value, but like python because "this" is a keyword in java...
                                 */
                                readonly self: T;
                                
                                /**
                                 * "super" value, but that's also a keyword so...
                                 */
                                readonly parent: _javatypes.java.util._function.Function<any[], any>;
                                
                                
                            }
                            namespace ProxyBuilder$ProxyReference {
                                interface static {
                                    new <T>(self: T, parent: _javatypes.java.util._function.Function<any[], any>): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ProxyBuilder$ProxyReference<T>;
                                    
                                    
                                    
                                }
                            }
                            interface ClassBuilder$BodyBuilder extends any {
                                
                                appendJavaCode(code: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$BodyBuilder;
                                
                                /**
                                 * 
                                 * @param code
                                 * @param argsAsObjects
                                 * @param tokenBefore ie, "return", "Object wasd = " etc
                                 * @return 
                                 */
                                appendGuestCode(code: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<any, any, any, any>, argsAsObjects: string, tokenBefore: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$BodyBuilder;
                                finish(): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder<T>;
                                
                            }
                            namespace ClassBuilder$BodyBuilder {
                                interface static {
                                    
                                    
                                    
                                }
                            }
                            interface ClassBuilder$AnnotationBuilder$AnnotationArrayBuilder<U> extends any {
                                
                                putString(value: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder$AnnotationArrayBuilder<U>;
                                putBoolean(value: boolean): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder$AnnotationArrayBuilder<U>;
                                putByte(value: number): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder$AnnotationArrayBuilder<U>;
                                putChar(value: number): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder$AnnotationArrayBuilder<U>;
                                putShort(value: number): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder$AnnotationArrayBuilder<U>;
                                putInt(value: number): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder$AnnotationArrayBuilder<U>;
                                putLong(value: number): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder$AnnotationArrayBuilder<U>;
                                putFloat(value: number): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder$AnnotationArrayBuilder<U>;
                                putDouble(value: number): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder$AnnotationArrayBuilder<U>;
                                putClass(value: _javatypes.java.lang.Class<any>): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder$AnnotationArrayBuilder<U>;
                                putEnum(value: _javatypes.java.lang.Enum<any>): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder$AnnotationArrayBuilder<U>;
                                putAnnotation(annotationClass: _javatypes.java.lang.Class<any>): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder$AnnotationArrayBuilder<U>>;
                                putArray(annotationClass: _javatypes.java.lang.Class<any>): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder$AnnotationArrayBuilder<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder$AnnotationArrayBuilder<U>>;
                                finish(): U;
                                
                            }
                            namespace ClassBuilder$AnnotationBuilder$AnnotationArrayBuilder {
                                interface static {
                                    new <U>(parent: U, constPool: _javatypes.javassist.bytecode.ConstPool): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$AnnotationBuilder$AnnotationArrayBuilder<U>;
                                    
                                    
                                    
                                }
                            }
                            interface ClassBuilder$FieldBuilder$FieldInitializerBuilder extends any {
                                
                                setInt(value: number): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$FieldBuilder;
                                setLong(value: number): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$FieldBuilder;
                                setFloat(value: number): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$FieldBuilder;
                                setDouble(value: number): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$FieldBuilder;
                                setChar(value: number): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$FieldBuilder;
                                setString(value: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$FieldBuilder;
                                setBoolean(value: boolean): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$FieldBuilder;
                                setByte(value: number): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$FieldBuilder;
                                setShort(value: number): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$FieldBuilder;
                                compile(code: string): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$FieldBuilder;
                                initClass(clazz: _javatypes.java.lang.Class<any>, code_arg: string[]): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$FieldBuilder;
                                callStaticMethod(clazz: _javatypes.java.lang.Class<any>, methodName: string, code_arg: string[]): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$FieldBuilder;
                                callStaticMethodInThisClass(methodName: string, code_arg: string[]): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$FieldBuilder;
                                
                            }
                            namespace ClassBuilder$FieldBuilder$FieldInitializerBuilder {
                                interface static {
                                    new (): _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder$FieldBuilder$FieldInitializerBuilder;
                                    
                                    
                                    
                                }
                            }
                        }
                    }
                }
            
                namespace classes {
                
                    interface Mappings extends any {
                        readonly mappingsource: string;
                        
                        
                        /**
                         * 
                         * @return mappings from Intermediary to Named
                         * @since 1.3.1
                         * @throws IOException will throw if malformed url/path
                         */
                        getMappings(): _javatypes.java.util.Map<string, _javatypes.xyz.wagyourtail.jsmacros.core.classes.Mappings$ClassData>;
                        
                        /**
                         * 
                         * @return mappings from Named to Intermediary
                         * @since 1.3.1
                         * @throws IOException will throw if malformed url/path
                         */
                        getReversedMappings(): _javatypes.java.util.Map<string, _javatypes.xyz.wagyourtail.jsmacros.core.classes.Mappings$ClassData>;
                        
                        /**
                         * 
                         * @since 1.6.0
                         * @return 
                         */
                        remapClass<T>(instance: T): _javatypes.xyz.wagyourtail.jsmacros.core.classes.Mappings$MappedClass<T>;
                        
                        /**
                         * gets the class without instance, so can only access static methods/fields
                         * @param className
                         * @return 
                         * @throws IOException
                         * @throws ClassNotFoundException
                         */
                        getClass(className: string): _javatypes.xyz.wagyourtail.jsmacros.core.classes.Mappings$MappedClass<any>;
                        
                    }
                    namespace Mappings {
                        interface static {
                            new (mappingsource: string): _javatypes.xyz.wagyourtail.jsmacros.core.classes.Mappings;
                            
                            
                            
                        }
                    }
                    interface WrappedClassInstance<T> extends any {
                        
                        getFieldValue(fieldName: string): any;
                        getFieldValueAsClass(asClass: string, fieldName: string): any;
                        setFieldValue(fieldName: string, fieldValue: any): void;
                        setFieldValueAsClass(asClass: string, fieldName: string, fieldValue: any): void;
                        invokeMethod(methodNameOrSig: string, params: any[]): any;
                        invokeMethodAsClass(asClass: string, methodNameOrSig: string, params: any[]): any;
                        
                        /**
                         * 
                         * @since 1.6.5
                         * @return 
                         */
                        getRawInstance(): T;
                        
                        /**
                         * 
                         * @since 1.6.5
                         * @return 
                         */
                        getRawClass(): _javatypes.java.lang.Class<T>;
                        
                    }
                    namespace WrappedClassInstance {
                        interface static {
                            new <T>(instance: T): _javatypes.xyz.wagyourtail.jsmacros.core.classes.WrappedClassInstance<T>;
                            new <T>(instanceNullable: T, tClass: _javatypes.java.lang.Class<T>): _javatypes.xyz.wagyourtail.jsmacros.core.classes.WrappedClassInstance<T>;
                            
                            
                            
                        }
                    }
                    interface Mappings$ClassData extends any {
                        readonly methods: _javatypes.java.util.Map<string, _javatypes.xyz.wagyourtail.jsmacros.core.classes.Mappings$MethodData>;
                        readonly fields: _javatypes.java.util.Map<string, string>;
                        readonly name: string;
                        
                        toString(): string;
                        
                    }
                    namespace Mappings$ClassData {
                        interface static {
                            new (name: string): _javatypes.xyz.wagyourtail.jsmacros.core.classes.Mappings$ClassData;
                            
                            
                            
                        }
                    }
                    interface Mappings$MappedClass<T> extends _javatypes.xyz.wagyourtail.jsmacros.core.classes.WrappedClassInstance<T> {
                        
                        
                    }
                    namespace Mappings$MappedClass {
                        interface static {
                            new <T>(instance: T): _javatypes.xyz.wagyourtail.jsmacros.core.classes.Mappings$MappedClass<T>;
                            new <T>(instance: T, type: _javatypes.java.lang.Class<T>): _javatypes.xyz.wagyourtail.jsmacros.core.classes.Mappings$MappedClass<T>;
                            
                            
                            
                        }
                    }
                    interface Mappings$MethodData extends any {
                        readonly name: string;
                        readonly sig: _javatypes.java.util._function.Supplier<string>;
                        
                        toString(): string;
                        
                    }
                    namespace Mappings$MethodData {
                        interface static {
                            new (name: string, sig: _javatypes.java.util._function.Supplier<string>): _javatypes.xyz.wagyourtail.jsmacros.core.classes.Mappings$MethodData;
                            
                            
                            
                        }
                    }
                }
            
                namespace config {
                
                    interface ConfigManager extends any {
                        readonly optionClasses: _javatypes.java.util.Map<string, _javatypes.java.lang.Class<any>>;
                        readonly options: _javatypes.java.util.Map<_javatypes.java.lang.Class<any>, any>;
                        readonly configFolder: _javatypes.java.io.File;
                        readonly macroFolder: _javatypes.java.io.File;
                        readonly configFile: _javatypes.java.io.File;
                        readonly LOGGER: _javatypes.org.slf4j.Logger;
                        rawOptions: _javatypes.com.google.gson.JsonObject;
                        
                        reloadRawConfigFromFile(): void;
                        convertConfigFormat(): void;
                        convertConfigFormat(clazz: _javatypes.java.lang.Class<any>): void;
                        getOptions<T>(optionClass: _javatypes.java.lang.Class<T>): T;
                        addOptions(key: string, optionClass: _javatypes.java.lang.Class<any>): void;
                        loadConfig(): void;
                        loadDefaults(): void;
                        saveConfig(): void;
                        
                    }
                    namespace ConfigManager {
                        interface static {
                            new (configFolder: _javatypes.java.io.File, macroFolder: _javatypes.java.io.File, logger: _javatypes.org.slf4j.Logger): _javatypes.xyz.wagyourtail.jsmacros.core.config.ConfigManager;
                            
                            
                            
                        }
                    }
                    interface BaseProfile extends any {
                        readonly LOGGER: _javatypes.org.slf4j.Logger;
                        readonly joinedThreadStack: _javatypes.java.util.Set<_javatypes.java.lang.Thread>;
                        profileName: string;
                        
                        logError(ex: _javatypes.java.lang.Throwable): void;
                        
                        /**
                         * 
                         * @since 1.1.2 [citation needed]
                         * @return 
                         */
                        getRegistry(): _javatypes.xyz.wagyourtail.jsmacros.core.event.BaseEventRegistry;
                        
                        /**
                         * 
                         * @since 1.6.0
                         */
                        checkJoinedThreadStack(): boolean;
                        
                        /**
                         * 
                         * @since 1.1.2 [citation needed]
                         * @param profileName
                         */
                        loadOrCreateProfile(profileName: string): void;
                        
                        /**
                         * 
                         * @since 1.0.8 [citation needed]
                         */
                        saveProfile(): void;
                        
                        /**
                         * 
                         * @since 1.2.7
                         * @param event
                         */
                        triggerEvent(event: Events.BaseEvent): void;
                        
                        /**
                         * 
                         * @since 1.2.7
                         * @param event
                         */
                        triggerEventJoin(event: Events.BaseEvent): void;
                        
                        /**
                         * 
                         * @since 1.2.7
                         * @param event
                         */
                        triggerEventNoAnything(event: Events.BaseEvent): void;
                        
                        /**
                         * 
                         * @since 1.2.7
                         * @param event
                         */
                        triggerEventJoinNoAnything(event: Events.BaseEvent): void;
                        init(defaultProfile: string): void;
                        getCurrentProfileName(): string;
                        renameCurrentProfile(profile: string): void;
                        
                    }
                    namespace BaseProfile {
                        interface static {
                            new (runner: _javatypes.xyz.wagyourtail.jsmacros.core.Core, logger: _javatypes.org.slf4j.Logger): _javatypes.xyz.wagyourtail.jsmacros.core.config.BaseProfile;
                            
                            
                            
                        }
                    }
                    interface ScriptTrigger extends any {
                        triggerType: _javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger$TriggerType;
                        event: string;
                        scriptFile: string;
                        enabled: boolean;
                        
                        equals(macro: _javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger): boolean;
                        toString(): string;
                        copy(): _javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger;
                        
                        /**
                         * 
                         * @since 1.2.7
                         * @return 
                         */
                        getTriggerType(): _javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger$TriggerType;
                        
                        /**
                         * 
                         * @since 1.2.7
                         * @return 
                         */
                        getEvent(): string;
                        
                        /**
                         * 
                         * @since 1.2.7
                         * @return 
                         */
                        getScriptFile(): string;
                        
                        /**
                         * 
                         * @since 1.2.7
                         * @return 
                         */
                        getEnabled(): boolean;
                        
                    }
                    namespace ScriptTrigger {
                        interface static {
                            new (triggerType: _javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger$TriggerType, event: string, scriptFile: _javatypes.java.io.File, enabled: boolean): _javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger;
                            new (triggerType: _javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger$TriggerType, event: string, scriptFile: string, enabled: boolean): _javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger;
                            
                            
                            copy(m: _javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger): _javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger;
                            
                        }
                    }
                    interface ScriptTrigger$TriggerType extends _javatypes.java.lang.Enum<_javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger$TriggerType> {
                        
                        
                    }
                    namespace ScriptTrigger$TriggerType {
                        interface static {
                            
                            readonly KEY_FALLING: _javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger$TriggerType;
                            readonly KEY_RISING: _javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger$TriggerType;
                            readonly KEY_BOTH: _javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger$TriggerType;
                            readonly EVENT: _javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger$TriggerType;
                            
                            values(): _javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger$TriggerType[];
                            valueOf(name: string): _javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger$TriggerType;
                            
                        }
                    }
                }
            
                namespace service {
                
                    interface ServiceManager extends any {
                        
                        
                        /**
                         * 
                         * @param name
                         * @param pathToFile relative to macro folder
                         * @return false if service with that name is already registered
                         */
                        registerService(name: string, pathToFile: string): boolean;
                        
                        /**
                         * 
                         * @param name
                         * @param pathToFile relative to macro folder
                         * @param enabled
                         * @return false if service with that name is already registered
                         */
                        registerService(name: string, pathToFile: string, enabled: boolean): boolean;
                        
                        /**
                         * 
                         * @param name
                         * @param trigger
                         * @return false if service with that name already registered
                         */
                        registerService(name: string, trigger: _javatypes.xyz.wagyourtail.jsmacros.core.service.ServiceTrigger): boolean;
                        
                        /**
                         * 
                         * @param name
                         * @return 
                         */
                        unregisterService(name: string): boolean;
                        
                        /**
                         * 
                         * @param serviceName the name of the service to disable the reload feature for
                         * @since 1.8.4
                         */
                        disableReload(serviceName: string): void;
                        
                        /**
                         * 
                         * @param oldName
                         * @param newName
                         * @return false if service with new name already registered or old name doesn't exist
                         */
                        renameService(oldName: string, newName: string): boolean;
                        
                        /**
                         * 
                         * @return registered service names
                         */
                        getServices(): _javatypes.java.util.Set<string>;
                        
                        /**
                         * starts service once
                         * @param name service name
                         * @return previous state (or {@link ServiceStatus#UNKNOWN} if unknown service)
                         */
                        startService(name: string): _javatypes.xyz.wagyourtail.jsmacros.core.service.ServiceManager$ServiceStatus;
                        
                        /**
                         * 
                         * @param name service name
                         * @return previous state (or {@link ServiceStatus#UNKNOWN} if unknown service)
                         */
                        stopService(name: string): _javatypes.xyz.wagyourtail.jsmacros.core.service.ServiceManager$ServiceStatus;
                        
                        /**
                         * 
                         * @param name service name
                         * @return state before "restarting" (or {@link ServiceStatus#UNKNOWN} if unknown service)
                         */
                        restartService(name: string): _javatypes.xyz.wagyourtail.jsmacros.core.service.ServiceManager$ServiceStatus;
                        
                        /**
                         * 
                         * @param name service name
                         * @return previous state (or {@link ServiceStatus#UNKNOWN} if unknown service)
                         */
                        enableService(name: string): _javatypes.xyz.wagyourtail.jsmacros.core.service.ServiceManager$ServiceStatus;
                        
                        /**
                         * 
                         * @param name service name
                         * @return previous state (or {@link ServiceStatus#UNKNOWN} if unknown service)
                         */
                        disableService(name: string): _javatypes.xyz.wagyourtail.jsmacros.core.service.ServiceManager$ServiceStatus;
                        
                        /**
                         * 
                         * @param name the name of the service to check
                         * @return {@code true} if the service is running, {@code false} otherwise.
                         * @since 1.8.4
                         */
                        isRunning(name: string): boolean;
                        
                        /**
                         * 
                         * @param name the name of the service to check
                         * @return {@code true} if the service is enabled, {@code false} otherwise.
                         * @since 1.8.4
                         */
                        isEnabled(name: string): boolean;
                        
                        /**
                         * 
                         * @param name service name
                         * @return {@link ServiceStatus#UNKNOWN} if unknown service, {@link ServiceStatus#RUNNING} if disabled and running, {@link ServiceStatus#DISABLED} if disabled and stopped, {@link ServiceStatus#STOPPED} if enabled and stopped, {@link ServiceStatus#ENABLED} if enabled and running.
                         */
                        status(name: string): _javatypes.xyz.wagyourtail.jsmacros.core.service.ServiceManager$ServiceStatus;
                        
                        /**
                         * this might throw if the service is not running...
                         * @param name
                         * @since 1.6.5
                         * @return the event that is current for the service
                         */
                        getServiceData(name: string): _javatypes.xyz.wagyourtail.jsmacros.core.service.EventService;
                        
                        /**
                         * 
                         * @param name
                         * @since 1.6.5 [named getServiceData previously]
                         * @return 
                         */
                        getTrigger(name: string): _javatypes.xyz.wagyourtail.jsmacros.core.service.ServiceTrigger;
                        
                        /**
                         * load services from config
                         */
                        load(): void;
                        
                        /**
                         * save current registered services & enabled/disabled status to config
                         */
                        save(): void;
                        
                        /**
                         * Stops the service manager from reloading scrips on file changes.
                         * @since 1.8.4
                         */
                        stopReloadListener(): void;
                        
                        /**
                         * Will make the service manager reload scripts on file changes.
                         * @since 1.8.4
                         */
                        startReloadListener(): void;
                        
                        /**
                         * Mark a service as crashed so that it can be reloaded when its file changes. Crashed services
                         *  must be marked so that file change listener knows to restart them even if they are not
                         *  running because they crashed.
                         * @param serviceName the name of the service to mark as crashed
                         * @since 1.8.4
                         */
                        markCrashed(serviceName: string): void;
                        
                        /**
                         * 
                         * @param serviceName the name of the service to check
                         * @return {@code true} if the service previously crashed, {@code false} otherwise.
                         * @since 1.8.4
                         */
                        isCrashed(serviceName: string): boolean;
                        
                        /**
                         * Ticks the service manager. This will check if any services need to be reloaded and reloads
                         *  them if necessary.
                         * @since 1.8.4
                         */
                        tickReloadListener(): void;
                        
                    }
                    namespace ServiceManager {
                        interface static {
                            new (runner: _javatypes.xyz.wagyourtail.jsmacros.core.Core<any, any>): _javatypes.xyz.wagyourtail.jsmacros.core.service.ServiceManager;
                            
                            
                            
                        }
                    }
                    interface ServiceTrigger extends any {
                        file: string;
                        enabled: boolean;
                        
                        toScriptTrigger(): _javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger;
                        equals(o: any): boolean;
                        hashCode(): number;
                        
                    }
                    namespace ServiceTrigger {
                        interface static {
                            new (file: _javatypes.java.io.File, enabled: boolean): _javatypes.xyz.wagyourtail.jsmacros.core.service.ServiceTrigger;
                            
                            
                            
                        }
                    }
                    interface ServiceManager$ServiceStatus extends _javatypes.java.lang.Enum<_javatypes.xyz.wagyourtail.jsmacros.core.service.ServiceManager$ServiceStatus> {
                        
                        
                    }
                    namespace ServiceManager$ServiceStatus {
                        interface static {
                            
                            readonly ENABLED: _javatypes.xyz.wagyourtail.jsmacros.core.service.ServiceManager$ServiceStatus;
                            readonly DISABLED: _javatypes.xyz.wagyourtail.jsmacros.core.service.ServiceManager$ServiceStatus;
                            readonly RUNNING: _javatypes.xyz.wagyourtail.jsmacros.core.service.ServiceManager$ServiceStatus;
                            readonly STOPPED: _javatypes.xyz.wagyourtail.jsmacros.core.service.ServiceManager$ServiceStatus;
                            readonly UNKNOWN: _javatypes.xyz.wagyourtail.jsmacros.core.service.ServiceManager$ServiceStatus;
                            
                            values(): _javatypes.xyz.wagyourtail.jsmacros.core.service.ServiceManager$ServiceStatus[];
                            valueOf(name: string): _javatypes.xyz.wagyourtail.jsmacros.core.service.ServiceManager$ServiceStatus;
                            
                        }
                    }
                    interface EventService extends any, Events.BaseEvent {
                        readonly serviceName: string;
                        
                        /**
                         * when this service is stopped, this is run...
                         */
                        stopListener: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<any, any, any, any>;
                        
                        toString(): string;
                        
                        /**
                         * Put an Integer into the global variable space.
                         * @param name
                         * @param i
                         * @return 
                         * @since 1.6.5
                         */
                        putInt(name: string, i: number): number;
                        
                        /**
                         * put a String into the global variable space.
                         * @param name
                         * @param str
                         * @return 
                         * @since 1.6.5
                         */
                        putString(name: string, str: string): string;
                        
                        /**
                         * put a Double into the global variable space.
                         * @param name
                         * @param d
                         * @return 
                         * @since 1.6.5
                         */
                        putDouble(name: string, d: number): number;
                        
                        /**
                         * put a Boolean into the global variable space.
                         * @param name
                         * @param b
                         * @return 
                         * @since 1.6.5
                         */
                        putBoolean(name: string, b: boolean): boolean;
                        
                        /**
                         * put anything else into the global variable space.
                         * @param name
                         * @param o
                         * @return 
                         * @since 1.6.5
                         */
                        putObject(name: string, o: any): any;
                        
                        /**
                         * Returns the type of the defined item in the global variable space as a string.
                         * @param name
                         * @return 
                         * @since 1.6.5
                         */
                        getType(name: string): string;
                        
                        /**
                         * Gets an Integer from the global variable space.
                         * @param name
                         * @return 
                         * @since 1.6.5
                         */
                        getInt(name: string): number;
                        
                        /**
                         * Gets an Integer from the global variable space. and then increment it there.
                         * @param name
                         * @return 
                         * @since 1.6.5
                         */
                        getAndIncrementInt(name: string): number;
                        
                        /**
                         * Gets an integer from the global variable pace. and then decrement it there.
                         * @param name
                         * @return 
                         * @since 1.6.5
                         */
                        getAndDecrementInt(name: string): number;
                        
                        /**
                         * increment an Integer in the global variable space. then return it.
                         * @param name
                         * @return 
                         * @since 1.6.5
                         */
                        incrementAndGetInt(name: string): number;
                        
                        /**
                         * decrement an Integer in the global variable space. then return it.
                         * @param name
                         * @return 
                         * @since 1.6.5
                         */
                        decrementAndGetInt(name: string): number;
                        
                        /**
                         * Gets a String from the global variable space
                         * @param name
                         * @return 
                         * @since 1.6.5
                         */
                        getString(name: string): string;
                        
                        /**
                         * Gets a Double from the global variable space.
                         * @param name
                         * @return 
                         * @since 1.6.5
                         */
                        getDouble(name: string): number;
                        
                        /**
                         * Gets a Boolean from the global variable space.
                         * @param name
                         * @return 
                         * @since 1.6.5
                         */
                        getBoolean(name: string): boolean;
                        
                        /**
                         * toggles a global boolean and returns its new value
                         * @param name
                         * @return 
                         * @since 1.6.5
                         */
                        toggleBoolean(name: string): boolean;
                        
                        /**
                         * Gets an Object from the global variable space.
                         * @param name
                         * @return 
                         * @since 1.6.5
                         */
                        getObject(name: string): any;
                        
                        /**
                         * removes a key from the global variable space.
                         * @param key
                         * @since 1.6.5
                         */
                        remove(key: string): void;
                        getRaw(): _javatypes.java.util.Map<string, any>;
                        
                    }
                    namespace EventService {
                        interface static {
                            new (name: string): _javatypes.xyz.wagyourtail.jsmacros.core.service.EventService;
                            
                            
                            
                        }
                    }
                }
            
                namespace event {
                
                    interface IEventListener extends _javatypes.java.lang.Interface {
                        
                        trigger(event: Events.BaseEvent): _javatypes.xyz.wagyourtail.jsmacros.core.language.EventContainer<any>;
                        
                        /**
                         * Used for self unregistering events.
                         * @since 1.8.4
                         */
                        off(): void;
                        
                    }
                    namespace IEventListener {
                        interface static {
                            
                            
                            
                        }
                    }
                    interface BaseEventRegistry extends any {
                        readonly oldEvents: _javatypes.java.util.Map<string, string>;
                        readonly events: _javatypes.java.util.Set<string>;
                        
                        clearMacros(): void;
                        
                        /**
                         * 
                         * @since 1.1.2 [citation needed]
                         * @param rawmacro
                         */
                        addScriptTrigger(rawmacro: _javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger): void;
                        
                        /**
                         * 
                         * @since 1.2.3
                         * @param event
                         * @param listener
                         */
                        addListener(event: string, listener: _javatypes.xyz.wagyourtail.jsmacros.core.event.IEventListener): void;
                        
                        /**
                         * 
                         * @since 1.2.3
                         * @param event
                         * @param listener
                         * @return 
                         */
                        removeListener(event: string, listener: _javatypes.xyz.wagyourtail.jsmacros.core.event.IEventListener): boolean;
                        
                        /**
                         * 
                         * @since 1.2.3
                         * @param listener
                         * @return 
                         */
                        removeListener(listener: _javatypes.xyz.wagyourtail.jsmacros.core.event.IEventListener): boolean;
                        
                        /**
                         * 
                         * @since 1.1.2 [citation needed]
                         * @param rawmacro
                         * @return 
                         */
                        removeScriptTrigger(rawmacro: _javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger): boolean;
                        
                        /**
                         * 
                         * @since 1.2.3
                         * @return 
                         */
                        getListeners(): _javatypes.java.util.Map<string, _javatypes.java.util.Set<_javatypes.xyz.wagyourtail.jsmacros.core.event.IEventListener>>;
                        
                        /**
                         * 
                         * @since 1.2.3
                         * @param key
                         * @return 
                         */
                        getListeners(key: string): _javatypes.java.util.Set<_javatypes.xyz.wagyourtail.jsmacros.core.event.IEventListener>;
                        
                        /**
                         * 
                         * @see ScriptTrigger
                         * @since 1.1.2 [citation needed]
                         * @return 
                         */
                        getScriptTriggers(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger>;
                        
                        /**
                         * 
                         * @since 1.1.2 [citation needed]
                         * @param eventName
                         */
                        addEvent(eventName: string): void;
                        addEvent(clazz: _javatypes.java.lang.Class<any>): void;
                        
                    }
                    namespace BaseEventRegistry {
                        interface static {
                            new (runner: _javatypes.xyz.wagyourtail.jsmacros.core.Core): _javatypes.xyz.wagyourtail.jsmacros.core.event.BaseEventRegistry;
                            
                            
                            
                        }
                    }
                
                    namespace impl {
                    
                        interface EventCustom extends any, Events.BaseEvent {
                            eventName: string;
                            
                            
                            /**
                             * Triggers the event.
                             *  Try not to cause infinite looping by triggering the same {@link _javatypes.EventCustom} from its own listeners.
                             * @since 1.2.8
                             */
                            trigger(): void;
                            
                            /**
                             * trigger the event listeners, then run `callback` when they finish.
                             * @since 1.3.1
                             * @param callback used as a {@link Runnable}, so no args, no return value.
                             */
                            trigger(callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<any, any, any, any>): void;
                            
                            /**
                             * Triggers the event and waits for it to complete.
                             *  In languages with threading issues (js/jep) this may cause circular waiting when triggered from the same thread as
                             *  the `jsmacros.on` registration for the event
                             * @since 1.2.8
                             */
                            triggerJoin(): void;
                            
                            /**
                             * Put an Integer into the event.
                             * @param name
                             * @param i
                             * @return 
                             * @since 1.2.8
                             */
                            putInt(name: string, i: number): number;
                            
                            /**
                             * put a String into the event.
                             * @param name
                             * @param str
                             * @return 
                             * @since 1.2.8
                             */
                            putString(name: string, str: string): string;
                            
                            /**
                             * put a Double into the event.
                             * @param name
                             * @param d
                             * @return 
                             * @since 1.2.8
                             */
                            putDouble(name: string, d: number): number;
                            
                            /**
                             * put a Boolean into the event.
                             * @param name
                             * @param b
                             * @return 
                             * @since 1.2.8
                             */
                            putBoolean(name: string, b: boolean): boolean;
                            
                            /**
                             * put anything else into the event.
                             * @param name
                             * @param o
                             * @return 
                             * @since 1.2.8
                             */
                            putObject(name: string, o: any): any;
                            
                            /**
                             * Returns the type of the defined item in the event as a string.
                             * @param name
                             * @return 
                             * @since 1.2.8
                             */
                            getType(name: string): string;
                            
                            /**
                             * Gets an Integer from the event.
                             * @param name
                             * @return 
                             * @since 1.2.8
                             */
                            getInt(name: string): number;
                            
                            /**
                             * Gets a String from the event
                             * @param name
                             * @return 
                             * @since 1.2.8
                             */
                            getString(name: string): string;
                            
                            /**
                             * Gets a Double from the event.
                             * @param name
                             * @return 
                             * @since 1.2.8
                             */
                            getDouble(name: string): number;
                            
                            /**
                             * Gets a Boolean from the event.
                             * @param name
                             * @return 
                             * @since 1.2.8
                             */
                            getBoolean(name: string): boolean;
                            
                            /**
                             * Gets an Object from the event.
                             * @param name
                             * @return 
                             * @since 1.2.8
                             */
                            getObject(name: string): any;
                            
                            /**
                             * 
                             * @since 1.6.4
                             * @return map backing the event
                             */
                            getUnderlyingMap(): _javatypes.java.util.Map<string, any>;
                            
                            /**
                             * registers event so you can see it in the gui
                             * @since 1.3.0
                             */
                            registerEvent(): void;
                            
                        }
                        namespace EventCustom {
                            interface static {
                                
                                /**
                                 * 
                                 * @param eventName name of the event. please don't use an existing one... your scripts might not like that.
                                 */
                                new (eventName: string): _javatypes.xyz.wagyourtail.jsmacros.core.event.impl.EventCustom;
                                
                                
                                
                            }
                        }
                    }
                }
            
                namespace extensions {
                
                    interface ExtensionLoader extends any {
                        
                        isExtensionLoaded(name: string): boolean;
                        notLoaded(): boolean;
                        getHighestPriorityExtension(): _javatypes.xyz.wagyourtail.jsmacros.core.extensions.Extension;
                        getAllExtensions(): _javatypes.java.util.Set<_javatypes.xyz.wagyourtail.jsmacros.core.extensions.Extension>;
                        getExtensionForFile(file: _javatypes.java.io.File): _javatypes.xyz.wagyourtail.jsmacros.core.extensions.Extension;
                        getExtensionForName(lang: string): _javatypes.xyz.wagyourtail.jsmacros.core.extensions.Extension;
                        loadExtensions(): void;
                        isGuestObject(obj: any): boolean;
                        
                    }
                    namespace ExtensionLoader {
                        interface static {
                            new (core: _javatypes.xyz.wagyourtail.jsmacros.core.Core<any, any>): _javatypes.xyz.wagyourtail.jsmacros.core.extensions.ExtensionLoader;
                            
                            
                            
                        }
                    }
                    interface Extension extends _javatypes.java.lang.Interface {
                        
                        init(): void;
                        getPriority(): number;
                        getLanguageImplName(): string;
                        extensionMatch(file: _javatypes.java.io.File): _javatypes.xyz.wagyourtail.jsmacros.core.extensions.Extension$ExtMatch;
                        defaultFileExtension(): string;
                        
                        /**
                         * 
                         * @return a single static instance of the language definition
                         */
                        getLanguage(runner: _javatypes.xyz.wagyourtail.jsmacros.core.Core<any, any>): _javatypes.xyz.wagyourtail.jsmacros.core.language.BaseLanguage<any, any>;
                        getLibraries(): _javatypes.java.util.Set<_javatypes.java.lang.Class<any>>;
                        getDependencies(): _javatypes.java.util.Set<_javatypes.java.net.URL>;
                        wrapException(t: _javatypes.java.lang.Throwable): _javatypes.xyz.wagyourtail.jsmacros.core.language.BaseWrappedException<any>;
                        getTranslations(lang: string): _javatypes.java.util.Map<string, string>;
                        isGuestObject(o: any): boolean;
                        
                    }
                    namespace Extension {
                        interface static {
                            
                            
                            getDependenciesInternal(clazz: _javatypes.java.lang.Class<any>, fname: string): _javatypes.java.util.Set<_javatypes.java.net.URL>;
                            getTranslationsInternal(clazz: _javatypes.java.lang.Class<any>, fname: string): _javatypes.java.util.Map<string, string>;
                            
                        }
                    }
                    interface Extension$ExtMatch extends _javatypes.java.lang.Enum<_javatypes.xyz.wagyourtail.jsmacros.core.extensions.Extension$ExtMatch> {
                        
                        isMatch(): boolean;
                        
                    }
                    namespace Extension$ExtMatch {
                        interface static {
                            
                            readonly NOT_MATCH: _javatypes.xyz.wagyourtail.jsmacros.core.extensions.Extension$ExtMatch;
                            readonly MATCH: _javatypes.xyz.wagyourtail.jsmacros.core.extensions.Extension$ExtMatch;
                            readonly MATCH_WITH_NAME: _javatypes.xyz.wagyourtail.jsmacros.core.extensions.Extension$ExtMatch;
                            
                            values(): _javatypes.xyz.wagyourtail.jsmacros.core.extensions.Extension$ExtMatch[];
                            valueOf(name: string): _javatypes.xyz.wagyourtail.jsmacros.core.extensions.Extension$ExtMatch;
                            
                        }
                    }
                }
            }
        
            namespace client {
            
            
                namespace api {
                
                
                    namespace helpers {
                    
                        interface BlockDataHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @since 1.1.7
                             * @return the {@code x} value of the block.
                             */
                            getX(): number;
                            
                            /**
                             * 
                             * @since 1.1.7
                             * @return the {@code y} value of the block.
                             */
                            getY(): number;
                            
                            /**
                             * 
                             * @since 1.1.7
                             * @return the {@code z} value of the block.
                             */
                            getZ(): number;
                            
                            /**
                             * 
                             * @return the item ID of the block.
                             */
                            getId(): string;
                            
                            /**
                             * 
                             * @return the translated name of the block. (was string before 1.6.5)
                             */
                            getName(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.5.1, used to be a {@link Map}&lt;{@link String}, {@link String}&gt;
                             */
                            getNBT(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper<any>;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.6.5
                             */
                            getBlockStateHelper(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockStateHelper;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.6.5
                             * @deprecated use {@link #getBlock()} instead.
                             */
                            getBlockHelper(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockHelper;
                            
                            /**
                             * 
                             * @return the block
                             * @since 1.6.5
                             */
                            getBlock(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockHelper;
                            
                            /**
                             * 
                             * @since 1.1.7
                             * @return block state data as a {@link Map}.
                             */
                            getBlockState(): _javatypes.java.util.Map<string, string>;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @return the block pos.
                             */
                            getBlockPos(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
                            getRawBlock(): /* minecraft classes, as any, because obfuscation: */ any;
                            getRawBlockState(): /* minecraft classes, as any, because obfuscation: */ any;
                            getRawBlockEntity(): /* minecraft classes, as any, because obfuscation: */ any;
                            toString(): string;
                            
                        }
                        namespace BlockDataHelper {
                            interface static {
                                new (b: /* minecraft classes, as any, because obfuscation: */ any, e: /* minecraft classes, as any, because obfuscation: */ any, bp: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockDataHelper;
                                
                                
                                
                            }
                        }
                        interface BlockHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @return the default state of the block.
                             * @since 1.6.5
                             */
                            getDefaultState(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockStateHelper;
                            
                            /**
                             * 
                             * @return the default item stack of the block.
                             * @since 1.6.5
                             */
                            getDefaultItemStack(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            canMobSpawnInside(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the block has dynamic bounds.
                             * @since 1.6.5
                             */
                            hasDynamicBounds(): boolean;
                            
                            /**
                             * 
                             * @return the blast resistance.
                             * @since 1.6.5
                             */
                            getBlastResistance(): number;
                            
                            /**
                             * 
                             * @return the jump velocity multiplier.
                             * @since 1.6.5
                             */
                            getJumpVelocityMultiplier(): number;
                            
                            /**
                             * 
                             * @return the slipperiness.
                             * @since 1.6.5
                             */
                            getSlipperiness(): number;
                            
                            /**
                             * 
                             * @return the hardness.
                             * @since 1.6.5
                             */
                            getHardness(): number;
                            
                            /**
                             * 
                             * @return the velocity multiplier.
                             * @since 1.6.5
                             */
                            getVelocityMultiplier(): number;
                            
                            /**
                             * 
                             * @return all tags of the block as an {@link java.util.ArrayList ArrayList}.
                             * @since 1.6.5
                             */
                            getTags(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return all possible block states of the block.
                             * @since 1.6.5
                             */
                            getStates(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockStateHelper>;
                            
                            /**
                             * 
                             * @return the identifier of the block.
                             * @since 1.6.5
                             */
                            getId(): string;
                            
                            /**
                             * 
                             * @return the name of the block.
                             * @since 1.8.4
                             */
                            getName(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            toString(): string;
                            
                        }
                        namespace BlockHelper {
                            interface static {
                                new (base: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockHelper;
                                
                                
                                
                            }
                        }
                        interface BlockStateHelper extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.StateHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @return the block the state belongs to.
                             * @since 1.6.5
                             */
                            getBlock(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockHelper;
                            
                            /**
                             * 
                             * @return the block's id.
                             * @since 1.8.4
                             */
                            getId(): string;
                            
                            /**
                             * 
                             * @return the fluid state of this block state.
                             * @since 1.8.4
                             */
                            getFluidState(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.FluidStateHelper;
                            
                            /**
                             * 
                             * @return the hardness.
                             * @since 1.6.5
                             */
                            getHardness(): number;
                            
                            /**
                             * 
                             * @return the luminance.
                             * @since 1.6.5
                             */
                            getLuminance(): number;
                            
                            /**
                             * 
                             * @return {@code true} if the state emits redstone power.
                             * @since 1.6.5
                             */
                            emitsRedstonePower(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the shape of the state is a cube.
                             * @since 1.6.5
                             */
                            exceedsCube(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the state is air.
                             * @since 1.6.5
                             */
                            isAir(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the state is opaque.
                             * @since 1.6.5
                             */
                            isOpaque(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if a tool is required to mine the block.
                             * @since 1.6.5
                             */
                            isToolRequired(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the state has a block entity.
                             * @since 1.6.5
                             */
                            hasBlockEntity(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the state can be random ticked.
                             * @since 1.6.5
                             */
                            hasRandomTicks(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the state has a comparator output.
                             * @since 1.6.5
                             */
                            hasComparatorOutput(): boolean;
                            
                            /**
                             * 
                             * @return the piston behaviour of the state.
                             * @since 1.6.5
                             */
                            getPistonBehaviour(): string;
                            
                            /**
                             * 
                             * @return {@code true} if the state blocks light.
                             * @since 1.6.5
                             */
                            blocksLight(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the state blocks the movement of entities.
                             * @since 1.6.5
                             */
                            blocksMovement(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the state is burnable.
                             * @since 1.6.5
                             */
                            isBurnable(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the state is a liquid.
                             * @since 1.6.5
                             */
                            isLiquid(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the state is solid.
                             * @since 1.6.5
                             */
                            isSolid(): boolean;
                            
                            /**
                             * This will return true for blocks like air and grass, that can be replaced without breaking
                             *  them first.
                             * @return {@code true} if the state can be replaced.
                             * @since 1.6.5
                             */
                            isReplaceable(): boolean;
                            
                            /**
                             * 
                             * @param pos the position of the block to check
                             * @param entity the entity type to check
                             * @return {@code true} if the entity can spawn on this block state at the given position in the
                             *          current world.
                             * @since 1.6.5
                             */
                            allowsSpawning(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper, entity: string): boolean;
                            
                            /**
                             * 
                             * @param pos the position of the block to check
                             * @return {@code true} if an entity can suffocate in this block state at the given position in
                             *          the current world.
                             * @since 1.6.5
                             */
                            shouldSuffocate(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper): boolean;
                            
                            /**
                             * 
                             * @return an {@link UniversalBlockStateHelper} to access all properties of this block state.
                             * @since 1.8.4
                             */
                            getUniversal(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.UniversalBlockStateHelper;
                            toString(): string;
                            
                        }
                        namespace BlockStateHelper {
                            interface static {
                                new (base: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockStateHelper;
                                
                                
                                
                            }
                        }
                        interface CommandNodeHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper<_javatypes.com.mojang.brigadier.tree.CommandNode<any>> {
                            readonly fabric: _javatypes.com.mojang.brigadier.tree.CommandNode;
                            
                            
                        }
                        namespace CommandNodeHelper {
                            interface static {
                                new (base: _javatypes.com.mojang.brigadier.tree.CommandNode, fabric: _javatypes.com.mojang.brigadier.tree.CommandNode): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CommandNodeHelper;
                                
                                
                                
                            }
                        }
                        interface EnchantmentHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @return the level of this enchantment.
                             * @since 1.8.4
                             */
                            getLevel(): number;
                            
                            /**
                             * 
                             * @return the minimum possible level of this enchantment that one can get in vanilla.
                             * @since 1.8.4
                             */
                            getMinLevel(): number;
                            
                            /**
                             * 
                             * @return the maximum possible level of this enchantment that one can get in vanilla.
                             * @since 1.8.4
                             */
                            getMaxLevel(): number;
                            
                            /**
                             * 
                             * @param level the level for the name
                             * @return the translated name of this enchantment for the given level.
                             * @since 1.8.4
                             */
                            getLevelName(level: number): string;
                            
                            /**
                             * Because roman numerals only support positive integers in the range of 1 to 3999, this method
                             *  will return the arabic numeral for any given level outside that range.
                             * @return the translated name of this enchantment for the given level in roman numerals.
                             * @since 1.8.4
                             */
                            getRomanLevelName(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            
                            /**
                             * Because roman numerals only support positive integers in the range of 1 to 3999, this method
                             *  will return the arabic numeral for any given level outside that range.
                             * @param level the level for the name
                             * @return the translated name of this enchantment for the given level in roman numerals.
                             * @since 1.8.4
                             */
                            getRomanLevelName(level: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            
                            /**
                             * 
                             * @return the name of this enchantment.
                             * @since 1.8.4
                             */
                            getName(): string;
                            
                            /**
                             * 
                             * @return the id of this enchantment.
                             * @since 1.8.4
                             */
                            getId(): string;
                            
                            /**
                             * 
                             * @return the rarity of this enchantment.
                             * @since 1.8.4
                             */
                            getRarity(): string;
                            
                            /**
                             * Only accounts for enchantments of the same target type.
                             * @return a list of all enchantments that conflict with this one.
                             * @since 1.8.4
                             */
                            getConflictingEnchantments(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EnchantmentHelper>;
                            
                            /**
                             * 
                             * @param ignoreType whether to check only enchantments that can be applied to the same target
                             *                    type.
                             * @return a list of all enchantments that conflict with this one.
                             * @since 1.8.4
                             */
                            getConflictingEnchantments(ignoreType: boolean): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EnchantmentHelper>;
                            
                            /**
                             * Only accounts for enchantments of the same target type.
                             * @return a list of all enchantments that can be combined with this one.
                             * @since 1.8.4
                             */
                            getCompatibleEnchantments(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EnchantmentHelper>;
                            
                            /**
                             * 
                             * @param ignoreType whether to check only enchantments that can be applied to the same target
                             *                    type.
                             * @return a list of all enchantments that can be combined with this one.
                             * @since 1.8.4
                             */
                            getCompatibleEnchantments(ignoreType: boolean): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EnchantmentHelper>;
                            
                            /**
                             * 
                             * @return the type of item this enchantment is compatible with.
                             * @since 1.8.4
                             */
                            getTargetType(): string;
                            
                            /**
                             * The weight of an enchantment is bound to its rarity. The higher the weight, the more likely
                             *  it is to be chosen.
                             * @return the relative probability of this enchantment being applied to an enchanted item
                             *          through the enchanting table or a loot table.
                             * @since 1.8.4
                             */
                            getWeight(): number;
                            
                            /**
                             * Curses are enchantments that can't be removed from the item they were applied to. They
                             *  usually only have one possible level and can't be upgraded. When combining items with curses
                             *  on them, they are transferred like any other enchantment. They can't be obtained through
                             *  enchantment tables, but rather from loot chests, fishing or trading with villagers.
                             * @return {@code true} if this enchantment is a curse, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isCursed(): boolean;
                            
                            /**
                             * Treasures are enchantments that can't be obtained through enchantment tables, but rather from
                             *  loot chests, fishing or trading with villagers.
                             * @return {@code true} if this enchantment is a treasure, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isTreasure(): boolean;
                            
                            /**
                             * 
                             * @param item the item to check
                             * @return {@code true} if this enchantment can be applied to the given item type, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            canBeApplied(item: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemHelper): boolean;
                            
                            /**
                             * 
                             * @param item the item to check
                             * @return {@code true} if this enchantment can be applied to the given item, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            canBeApplied(item: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper): boolean;
                            
                            /**
                             * 
                             * @return a list of all acceptable item ids for this enchantment.
                             * @since 1.8.4
                             */
                            getAcceptableItems(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemHelper>;
                            
                            /**
                             * 
                             * @param enchantment the enchantment to check
                             * @return {@code true} if this enchantment is compatible with the given enchantment,
                             *          {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isCompatible(enchantment: string): boolean;
                            
                            /**
                             * 
                             * @param enchantment the enchantment to check
                             * @return {@code true} if this enchantment is compatible with the given enchantment,
                             *          {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isCompatible(enchantment: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EnchantmentHelper): boolean;
                            
                            /**
                             * 
                             * @param enchantment the enchantment to check
                             * @return {@code true} if this enchantment conflicts with the given enchantment, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            conflictsWith(enchantment: string): boolean;
                            
                            /**
                             * 
                             * @param enchantment the enchantment to check
                             * @return {@code true} if this enchantment conflicts with the given enchantment, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            conflictsWith(enchantment: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EnchantmentHelper): boolean;
                            toString(): string;
                            equals(o: any): boolean;
                            hashCode(): number;
                            
                        }
                        namespace EnchantmentHelper {
                            interface static {
                                new (base: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EnchantmentHelper;
                                new (base: /* minecraft classes, as any, because obfuscation: */ any, level: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EnchantmentHelper;
                                new (enchantment: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EnchantmentHelper;
                                
                                
                                
                            }
                        }
                        interface FormattingHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @return the color value of this formatting.
                             * @since 1.8.4
                             */
                            getColorValue(): number;
                            
                            /**
                             * 
                             * @return the index of this formatting or {@code -1} if this formatting is a modifier.
                             * @since 1.8.4
                             */
                            getColorIndex(): number;
                            
                            /**
                             * 
                             * @return the name of this formatting.
                             * @since 1.8.4
                             */
                            getName(): string;
                            
                            /**
                             * The color code can be used with the paragraph to color text.
                             * @return the color code of this formatting.
                             * @since 1.8.4
                             */
                            getCode(): number;
                            
                            /**
                             * 
                             * @return {@code true} if this formatting is a color, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isColor(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if this formatting is a modifier, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isModifier(): boolean;
                            toString(): string;
                            
                        }
                        namespace FormattingHelper {
                            interface static {
                                new (base: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.FormattingHelper;
                                
                                
                                
                            }
                        }
                        interface TextHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * replace the text in this class with JSON data.
                             * @since 1.0.8
                             * @param json
                             * @deprecated use {@link xyz.wagyourtail.jsmacros.client.api.library.impl.FChat#createTextHelperFromJSON(String)} instead.
                             * @return 
                             */
                            replaceFromJson(json: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            
                            /**
                             * replace the text in this class with {@link _javatypes.java.lang.String} data.
                             * @since 1.0.8
                             * @param content
                             * @deprecated use {@link xyz.wagyourtail.jsmacros.client.api.library.impl.FChat#createTextHelperFromString(String)} instead.
                             * @return 
                             */
                            replaceFromString(content: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @return JSON data representation.
                             */
                            getJson(): string;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @return the text content.
                             */
                            getString(): string;
                            
                            /**
                             * 
                             * @since 1.6.5
                             * @return the text content. stripped formatting when servers send it the (super) old way due to shitty coders.
                             */
                            getStringStripFormatting(): string;
                            
                            /**
                             * 
                             * @return the text helper without the formatting applied.
                             * @since 1.8.4
                             */
                            withoutFormatting(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            
                            /**
                             * 
                             * @param visitor function with 2 args, no return.
                             * @since 1.6.5
                             */
                            visit(visitor: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.StyleHelper, string, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            
                            /**
                             * 
                             * @return the width of this text.
                             * @since 1.8.4
                             */
                            getWidth(): number;
                            
                            /**
                             * 
                             * @since 1.0.8
                             * @deprecated confusing name, use {@link #getJson()} instead.
                             * @return 
                             */
                            toJson(): string;
                            
                            /**
                             * 
                             * @since 1.0.8, this used to do the same as {@link #getString}
                             * @return String representation of text helper.
                             */
                            toString(): string;
                            
                        }
                        namespace TextHelper {
                            interface static {
                                new (t: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                                
                                readonly STRIP_FORMATTING_PATTERN: _javatypes.java.util.regex.Pattern;
                                
                                
                            }
                        }
                        interface BossBarHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @since 1.2.1
                             * @return boss bar uuid.
                             */
                            getUUID(): string;
                            
                            /**
                             * 
                             * @since 1.2.1
                             * @return percent of boss bar remaining.
                             */
                            getPercent(): number;
                            
                            /**
                             * 
                             * @since 1.2.1
                             * @return boss bar color.
                             */
                            getColor(): string;
                            
                            /**
                             * 
                             * @since 1.2.1
                             * @return boss bar notch style.
                             */
                            getStyle(): string;
                            
                            /**
                             * 
                             * @return the color of this boss bar.
                             * @since 1.8.4
                             */
                            getColorValue(): number;
                            
                            /**
                             * 
                             * @return the format of the boss bar's color.
                             * @since 1.8.4
                             */
                            getColorFormat(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.FormattingHelper;
                            
                            /**
                             * 
                             * @since 1.2.1
                             * @return name of boss bar
                             */
                            getName(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            toString(): string;
                            
                        }
                        namespace BossBarHelper {
                            interface static {
                                new (b: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BossBarHelper;
                                
                                
                                
                            }
                        }
                        interface ScoreboardsHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @param index
                             * @since 1.2.9
                             * @return 
                             */
                            getObjectiveForTeamColorIndex(index: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ScoreboardObjectiveHelper;
                            
                            /**
                             * `0` is tab list, `1` or `3 + getPlayerTeamColorIndex()` is sidebar, `2` should be below name.
                             *  therefore max slot number is 18.
                             * @param slot
                             * @since 1.2.9
                             * @return 
                             */
                            getObjectiveSlot(slot: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ScoreboardObjectiveHelper;
                            
                            /**
                             * 
                             * @param entity
                             * @since 1.2.9
                             * @return 
                             */
                            getPlayerTeamColorIndex(entity: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PlayerEntityHelper</* minecraft classes, as any, because obfuscation: */ any>): number;
                            
                            /**
                             * 
                             * @since 1.6.5
                             * @return team index for client player
                             */
                            getPlayerTeamColorIndex(): number;
                            
                            /**
                             * 
                             * @return the formatting for the client player's team, {@code null} if the player is not in a
                             *          team.
                             * @since 1.8.4
                             */
                            getTeamColorFormatting(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.FormattingHelper;
                            
                            /**
                             * 
                             * @param player the player to get the team color's formatting for.
                             * @return the formatting for the client player's team, {@code null} if the player is not in a
                             *          team.
                             * @since 1.8.4
                             */
                            getTeamColorFormatting(player: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PlayerEntityHelper</* minecraft classes, as any, because obfuscation: */ any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.FormattingHelper;
                            
                            /**
                             * 
                             * @param player the player to get the team color for
                             * @return the color of the speicifed player's team or {@code -1} if the player is not in a team.
                             * @since 1.8.4
                             */
                            getTeamColor(player: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PlayerEntityHelper</* minecraft classes, as any, because obfuscation: */ any>): number;
                            
                            /**
                             * 
                             * @return the color of this player's team or {@code -1} if this player is not in a team.
                             * @since 1.8.4
                             */
                            getTeamColor(): number;
                            
                            /**
                             * 
                             * @param player the player to get the team color's name for
                             * @return the name of the speicifed player's team color or {@code null} if the player is not in
                             *          a team.
                             * @since 1.8.4
                             */
                            getTeamColorName(player: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PlayerEntityHelper</* minecraft classes, as any, because obfuscation: */ any>): string;
                            
                            /**
                             * 
                             * @return the color of this player's team or {@code null} if this player is not in a team.
                             * @since 1.8.4
                             */
                            getTeamColorName(): string;
                            
                            /**
                             * 
                             * @since 1.3.0
                             * @return 
                             */
                            getTeams(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TeamHelper>;
                            
                            /**
                             * 
                             * @param p
                             * @since 1.3.0
                             * @return 
                             */
                            getPlayerTeam(p: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PlayerEntityHelper</* minecraft classes, as any, because obfuscation: */ any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TeamHelper;
                            
                            /**
                             * 
                             * @since 1.6.5
                             * @return team for client player
                             */
                            getPlayerTeam(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TeamHelper;
                            
                            /**
                             * 
                             * @since 1.2.9
                             * @return the {@link ScoreboardObjectiveHelper} for the currently displayed sidebar scoreboard.
                             */
                            getCurrentScoreboard(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ScoreboardObjectiveHelper;
                            toString(): string;
                            
                        }
                        namespace ScoreboardsHelper {
                            interface static {
                                new (board: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ScoreboardsHelper;
                                
                                
                                
                            }
                        }
                        interface ItemStackHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * Sets the item damage value.
                             *  You should use {@link _javatypes.CreativeItemStackHelper#setDamage} instead.
                             *  You may want to use {@link _javatypes.ItemStackHelper#copy} first.
                             * @since 1.2.0
                             * @param damage
                             * @return 
                             */
                            setDamage(damage: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            
                            /**
                             * 
                             * @since 1.2.0
                             * @return 
                             */
                            isDamageable(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if this item is unbreakable, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isUnbreakable(): boolean;
                            
                            /**
                             * 
                             * @since 1.2.0
                             * @return 
                             */
                            isEnchantable(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the item is enchanted, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isEnchanted(): boolean;
                            
                            /**
                             * 
                             * @return a list of all enchantments on this item.
                             * @since 1.8.4
                             */
                            getEnchantments(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EnchantmentHelper>;
                            
                            /**
                             * 
                             * @param id the id of the enchantment to check for
                             * @return the enchantment instance, containing the level, or {@code null} if the item is not
                             *          enchanted with the specified enchantment.
                             * @since 1.8.4
                             */
                            getEnchantment(id: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EnchantmentHelper;
                            
                            /**
                             * 
                             * @param enchantment the enchantment to check for
                             * @return {@code true} if the specified enchantment can be applied to this item, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            canBeApplied(enchantment: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EnchantmentHelper): boolean;
                            
                            /**
                             * 
                             * @param enchantment the enchantment to check for
                             * @return {@code true} if the item is enchanted with the specified enchantment of the same
                             *          level, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            hasEnchantment(enchantment: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EnchantmentHelper): boolean;
                            
                            /**
                             * 
                             * @param enchantment the id of the enchantment to check for
                             * @return {@code true} if the item is enchanted with the specified enchantment, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            hasEnchantment(enchantment: string): boolean;
                            
                            /**
                             * 
                             * @return a list of all enchantments that can be applied to this item.
                             * @since 1.8.4
                             */
                            getPossibleEnchantments(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EnchantmentHelper>;
                            
                            /**
                             * 
                             * @return a list of all enchantments that can be applied to this item through an enchanting table.
                             * @since 1.8.4
                             */
                            getPossibleEnchantmentsFromTable(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EnchantmentHelper>;
                            
                            /**
                             * The returned list is a copy of the original list and can be modified without affecting the
                             *  original item. For editing the actual lore see
                             *  {@link _javatypes.CreativeItemStackHelper#addLore}.
                             * @return a list of all lines of lore on this item.
                             * @since 1.8.4
                             */
                            getLore(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper>;
                            
                            /**
                             * 
                             * @return the maximum durability of this item.
                             * @since 1.8.4
                             */
                            getMaxDurability(): number;
                            
                            /**
                             * 
                             * @return the current durability of this item.
                             * @since 1.8.4
                             */
                            getDurability(): number;
                            
                            /**
                             * 
                             * @return the current repair cost of this item.
                             * @since 1.8.4
                             */
                            getRepairCost(): number;
                            
                            /**
                             * 
                             * @return the damage taken by this item.
                             * @see #getDurability()
                             */
                            getDamage(): number;
                            
                            /**
                             * 
                             * @return the maximum damage this item can take.
                             * @see #getMaxDurability()
                             */
                            getMaxDamage(): number;
                            
                            /**
                             * 
                             * @return the default attack damage of this item.
                             * @since 1.8.4
                             */
                            getAttackDamage(): number;
                            
                            /**
                             * 
                             * @since 1.2.0
                             * @return was string before 1.6.5
                             */
                            getDefaultName(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            
                            /**
                             * 
                             * @return was string before 1.6.5
                             */
                            getName(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            
                            /**
                             * 
                             * @return the item count this stack is holding.
                             */
                            getCount(): number;
                            
                            /**
                             * 
                             * @return the maximum amount of items this stack can hold.
                             */
                            getMaxCount(): number;
                            
                            /**
                             * 
                             * @since 1.1.6, was a {@link String} until 1.5.1
                             * @return 
                             */
                            getNBT(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper<any>;
                            
                            /**
                             * 
                             * @since 1.1.3
                             * @return 
                             */
                            getCreativeTab(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper>;
                            
                            /**
                             * 
                             * @return 
                             */
                            getItemID(): string;
                            
                            /**
                             * 
                             * @since 1.6.4
                             * @return 
                             */
                            getItemId(): string;
                            
                            /**
                             * 
                             * @since 1.8.2
                             * @return 
                             */
                            getTags(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @since 1.8.2
                             * @return 
                             */
                            isFood(): boolean;
                            
                            /**
                             * 
                             * @since 1.8.2
                             * @return 
                             */
                            isTool(): boolean;
                            
                            /**
                             * 
                             * @since 1.8.2
                             * @return 
                             */
                            isWearable(): boolean;
                            
                            /**
                             * 
                             * @since 1.8.2
                             * @return 
                             */
                            getMiningLevel(): number;
                            
                            /**
                             * 
                             * @return 
                             */
                            isEmpty(): boolean;
                            toString(): string;
                            
                            /**
                             * 
                             * @since 1.1.3 [citation needed]
                             * @param ish
                             * @return 
                             */
                            equals(ish: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper): boolean;
                            
                            /**
                             * 
                             * @since 1.1.3 [citation needed]
                             * @param is
                             * @return 
                             */
                            equals(is: /* minecraft classes, as any, because obfuscation: */ any): boolean;
                            
                            /**
                             * 
                             * @since 1.1.3 [citation needed]
                             * @param ish
                             * @return 
                             */
                            isItemEqual(ish: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper): boolean;
                            
                            /**
                             * 
                             * @since 1.1.3 [citation needed]
                             * @param is
                             * @return 
                             */
                            isItemEqual(is: /* minecraft classes, as any, because obfuscation: */ any): boolean;
                            
                            /**
                             * 
                             * @since 1.1.3 [citation needed]
                             * @param ish
                             * @return 
                             */
                            isItemEqualIgnoreDamage(ish: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper): boolean;
                            
                            /**
                             * 
                             * @since 1.1.3 [citation needed]
                             * @param is
                             * @return 
                             */
                            isItemEqualIgnoreDamage(is: /* minecraft classes, as any, because obfuscation: */ any): boolean;
                            
                            /**
                             * 
                             * @since 1.1.3 [citation needed]
                             * @param ish
                             * @return 
                             */
                            isNBTEqual(ish: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper): boolean;
                            
                            /**
                             * 
                             * @since 1.1.3 [citation needed]
                             * @param is
                             * @return 
                             */
                            isNBTEqual(is: /* minecraft classes, as any, because obfuscation: */ any): boolean;
                            
                            /**
                             * 
                             * @since 1.6.5
                             * @return 
                             */
                            isOnCooldown(): boolean;
                            
                            /**
                             * 
                             * @since 1.6.5
                             * @return 
                             */
                            getCooldownProgress(): number;
                            
                            /**
                             * 
                             * @param block the block to check
                             * @return {@code true} if the given block can be mined and drops when broken with this item,
                             *          {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isSuitableFor(block: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockHelper): boolean;
                            
                            /**
                             * 
                             * @param block the block to check
                             * @return {@code true} if the given block can be mined and drops when broken with this item,
                             *          {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isSuitableFor(block: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockStateHelper): boolean;
                            
                            /**
                             * {@link _javatypes.CreativeItemStackHelper} adds methods for manipulating the item's nbt data.
                             * @return a {@link CreativeItemStackHelper} instance for this item.
                             * @since 1.8.4
                             */
                            getCreative(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CreativeItemStackHelper;
                            
                            /**
                             * 
                             * @return the item this stack is made of.
                             * @since 1.8.4
                             */
                            getItem(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemHelper;
                            
                            /**
                             * 
                             * @since 1.2.0
                             * @return 
                             */
                            copy(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            
                            /**
                             * This flag only affects players in adventure mode and makes sure only specified blocks can be
                             *  destroyed by this item.
                             * @return {@code true} if the can destroy flag is set, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            hasDestroyRestrictions(): boolean;
                            
                            /**
                             * This flag only affects players in adventure mode and makes sure this item can only be placed
                             *  on specified blocks.
                             * @return {@code true} if the can place on flag is set, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            hasPlaceRestrictions(): boolean;
                            
                            /**
                             * 
                             * @return a list of all filters set for the can destroy flag.
                             * @since 1.8.4
                             */
                            getDestroyRestrictions(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return a list of all filters set for the can place on flag.
                             * @since 1.8.4
                             */
                            getPlaceRestrictions(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return {@code true} if enchantments are hidden, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            areEnchantmentsHidden(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if modifiers are hidden, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            areModifiersHidden(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the unbreakable flag is hidden, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isUnbreakableHidden(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the can destroy flag is hidden, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isCanDestroyHidden(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the can place flag is hidden, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isCanPlaceHidden(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if additional attributes are hidden, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            areAdditionalsHidden(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if dye of colored leather armor is hidden, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isDyeHidden(): boolean;
                            
                        }
                        namespace ItemStackHelper {
                            interface static {
                                new (id: string, count: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                                new (i: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                                
                                
                                
                            }
                        }
                        interface OptionsHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            readonly skin: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$SkinOptionsHelper;
                            readonly video: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$VideoOptionsHelper;
                            readonly music: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$MusicOptionsHelper;
                            readonly control: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ControlOptionsHelper;
                            readonly chat: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ChatOptionsHelper;
                            readonly accessibility: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$AccessibilityOptionsHelper;
                            
                            
                            /**
                             * 
                             * @return a helper for the skin options.
                             * @since 1.8.4
                             */
                            getSkinOptions(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$SkinOptionsHelper;
                            
                            /**
                             * 
                             * @return a helper for the video options.
                             * @since 1.8.4
                             */
                            getVideoOptions(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$VideoOptionsHelper;
                            
                            /**
                             * 
                             * @return a helper for the music options.
                             * @since 1.8.4
                             */
                            getMusicOptions(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$MusicOptionsHelper;
                            
                            /**
                             * 
                             * @return a helper for the control options.
                             * @since 1.8.4
                             */
                            getControlOptions(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ControlOptionsHelper;
                            
                            /**
                             * 
                             * @return a helper for the chat options.
                             * @since 1.8.4
                             */
                            getChatOptions(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ChatOptionsHelper;
                            
                            /**
                             * 
                             * @return a helper for the accessibility options.
                             * @since 1.8.4
                             */
                            getAccessibilityOptions(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$AccessibilityOptionsHelper;
                            
                            /**
                             * 
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            saveOptions(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * 
                             * @return list of names of resource packs.
                             * @since 1.1.7
                             */
                            getResourcePacks(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return list of names of enabled resource packs.
                             * @since 1.2.0
                             */
                            getEnabledResourcePacks(): _javatypes.java.util.List<string>;
                            
                            /**
                             * Set the enabled resource packs to the provided list.
                             * @param enabled
                             * @return self for chaining.
                             * @since 1.2.0
                             */
                            setEnabledResourcePacks(enabled: string[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * 
                             * @param state false to put it back
                             * @since 1.8.3
                             */
                            removeServerResourcePack(state: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * 
                             * @return the active language.
                             * @since 1.8.4
                             */
                            getLanguage(): string;
                            
                            /**
                             * 
                             * @param languageCode the language to change to
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setLanguage(languageCode: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * 
                             * @return the active difficulty.
                             * @since 1.8.4
                             */
                            getDifficulty(): string;
                            
                            /**
                             * The name be either "peaceful", "easy", "normal", or "hard".
                             * @param name the name of the difficulty to change to
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setDifficulty(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * 
                             * @return {@code true} if the difficulty is locked, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isDifficultyLocked(): boolean;
                            
                            /**
                             * 
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            lockDifficulty(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * Unlocks the difficulty of the world. This can't be done in an unmodified client.
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            unlockDifficulty(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * 
                             * @return the current fov value.
                             * @since 1.1.7
                             */
                            getFov(): number;
                            
                            /**
                             * 
                             * @param fov the new fov value
                             * @return self for chaining.
                             * @since 1.1.7
                             */
                            setFov(fov: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * 
                             * @return 0 for 1st person, 2 for in front.
                             * @since 1.5.0
                             */
                            getCameraMode(): number;
                            
                            /**
                             * 
                             * @param mode 0: first, 2: front
                             * @since 1.5.0
                             */
                            setCameraMode(mode: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.5.0
                             */
                            getSmoothCamera(): boolean;
                            
                            /**
                             * 
                             * @param val
                             * @since 1.5.0
                             */
                            setSmoothCamera(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.2.6
                             */
                            getWidth(): number;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.2.6
                             */
                            getHeight(): number;
                            
                            /**
                             * 
                             * @param w
                             * @since 1.2.6
                             */
                            setWidth(w: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * 
                             * @param h
                             * @since 1.2.6
                             */
                            setHeight(h: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * 
                             * @param w
                             * @param h
                             * @since 1.2.6
                             */
                            setSize(w: number, h: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * 
                             * @return 0: off, 2: fancy
                             * @since 1.1.7
                             * @deprecated use {@link VideoOptionsHelper#getCloudsMode()} instead.
                             */
                            getCloudMode(): number;
                            
                            /**
                             * 
                             * @param mode 0: off, 2: fancy
                             * @return 
                             * @since 1.1.7
                             * @deprecated use {@link VideoOptionsHelper#setCloudsMode(String)} instead.
                             */
                            setCloudMode(mode: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.1.7
                             * @deprecated use {@link VideoOptionsHelper#getGraphicsMode()} instead.
                             */
                            getGraphicsMode(): number;
                            
                            /**
                             * 
                             * @param mode 0: fast, 2: fabulous
                             * @return 
                             * @since 1.1.7
                             * @deprecated use {@link VideoOptionsHelper#setGraphicsMode(String)} instead.
                             */
                            setGraphicsMode(mode: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.1.7
                             * @deprecated use {@link SkinOptionsHelper#isRightHanded()} instead.
                             */
                            isRightHanded(): boolean;
                            
                            /**
                             * 
                             * @param val
                             * @since 1.1.7
                             * @deprecated use {@link SkinOptionsHelper#toggleMainHand(String)} instead.
                             */
                            setRightHanded(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.1.7
                             * @deprecated use {@link VideoOptionsHelper#getRenderDistance()} instead.
                             */
                            getRenderDistance(): number;
                            
                            /**
                             * 
                             * @param d
                             * @since 1.1.7
                             * @deprecated use {@link VideoOptionsHelper#setRenderDistance(int)} instead.
                             */
                            setRenderDistance(d: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * 
                             * @since 1.3.0 normal values for gamma are between {@code 0} and {@code 1}
                             * @deprecated use {@link VideoOptionsHelper#getGamma()} instead.
                             */
                            getGamma(): number;
                            
                            /**
                             * 
                             * @since 1.3.0 normal values for gamma are between {@code 0} and {@code 1}
                             * @deprecated use {@link VideoOptionsHelper#setGamma(double)} instead.
                             */
                            setGamma(gamma: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * 
                             * @param vol
                             * @since 1.3.1
                             * @deprecated use {@link MusicOptionsHelper#setMasterVolume(double)} instead.
                             */
                            setVolume(vol: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * set volume by category.
                             * @param category
                             * @param volume
                             * @since 1.3.1
                             * @deprecated use {@link MusicOptionsHelper#setVolume(String, double)} instead.
                             */
                            setVolume(category: string, volume: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.3.1
                             * @deprecated use {@link MusicOptionsHelper#getVolumes()} instead.
                             */
                            getVolumes(): _javatypes.java.util.Map<string, number>;
                            
                            /**
                             * sets gui scale, `0` for auto.
                             * @param scale
                             * @since 1.3.1
                             * @deprecated use {@link VideoOptionsHelper#setGuiScale(int)} instead.
                             */
                            setGuiScale(scale: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * 
                             * @return gui scale, {@code 0} for auto.
                             * @since 1.3.1
                             * @deprecated use {@link VideoOptionsHelper#getGuiScale()} instead.
                             */
                            getGuiScale(): number;
                            
                            /**
                             * 
                             * @param category
                             * @return 
                             * @since 1.3.1
                             * @deprecated use {@link MusicOptionsHelper#getVolume(String)} instead.
                             */
                            getVolume(category: string): number;
                            
                        }
                        namespace OptionsHelper {
                            interface static {
                                new (options: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                                
                                
                                
                            }
                        }
                        interface ModContainerHelper<T> extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper<T> {
                            
                            
                            /**
                             * 
                             * @return the mod's id.
                             * @since 1.8.4
                             */
                            getId(): string;
                            
                            /**
                             * 
                             * @return the mod's name.
                             * @since 1.8.4
                             */
                            getName(): string;
                            
                            /**
                             * 
                             * @return the mod's description.
                             * @since 1.8.4
                             */
                            getDescription(): string;
                            
                            /**
                             * 
                             * @return the mod's version.
                             * @since 1.8.4
                             */
                            getVersion(): string;
                            
                            /**
                             * 
                             * @return the environment this mod is intended for.
                             * @since 1.8.4
                             */
                            getEnv(): string;
                            
                            /**
                             * 
                             * @return a list of all authors.
                             * @since 1.8.4
                             */
                            getAuthors(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return a list of all dependencies.
                             * @since 1.8.4
                             */
                            getDependencies(): _javatypes.java.util.List<string>;
                            toString(): string;
                            
                        }
                        namespace ModContainerHelper {
                            interface static {
                                
                                
                                
                            }
                        }
                        interface ItemHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @return the name of this item's group or {@code "UNKNOWN"} if this item is not in a group.
                             * @since 1.8.4
                             */
                            getCreativeTab(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper>;
                            
                            /**
                             * 
                             * @return the item stack representing the group of this item or {@code null} if this item is
                             *          not in a group.
                             * @since 1.8.4
                             */
                            getGroupIcon(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper>;
                            
                            /**
                             * 
                             * @param stack the possible repair material
                             * @return {@code true} if the given item stack can be used to repair item stacks of this item,
                             *          {@code false} otherwise.
                             * @since 1.8.4
                             */
                            canBeRepairedWith(stack: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper): boolean;
                            
                            /**
                             * 
                             * @param block the block to check
                             * @return {@code true} if the given block can be mined and drops when broken with this item,
                             *          {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isSuitableFor(block: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockHelper): boolean;
                            
                            /**
                             * 
                             * @param block the block to check
                             * @return {@code true} if the given block can be mined and drops when broken with this item,
                             *          {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isSuitableFor(block: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockStateHelper): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the item has a block representation, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isBlockItem(): boolean;
                            
                            /**
                             * 
                             * @return the block representation of this item or {@code null} if this item has no
                             *          corresponding block.
                             * @since 1.8.4
                             */
                            getBlock(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockHelper;
                            
                            /**
                             * 
                             * @param state the block state to check
                             * @return the mining speed of this item against the given block state, returns {@code 1} by
                             *          default.
                             * @since 1.8.4
                             */
                            getMiningSpeedMultiplier(state: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockStateHelper): number;
                            
                            /**
                             * 
                             * @return {@code true} if the item has durability, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isDamageable(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if when crafter the item stack has a remainder, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            hasRecipeRemainder(): boolean;
                            
                            /**
                             * 
                             * @return the recipe remainder if it exists and {@code null} otherwise.
                             * @since 1.8.4
                             */
                            getRecipeRemainder(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemHelper;
                            
                            /**
                             * With increased enchantability the change to get more and better enchantments increases.
                             * @return the enchantability of this item, returns {@code 0} by default.
                             * @since 1.8.4
                             */
                            getEnchantability(): number;
                            
                            /**
                             * 
                             * @return the name of this item, translated to the current language.
                             * @since 1.8.4
                             */
                            getName(): string;
                            
                            /**
                             * 
                             * @return the identifier of this item.
                             * @since 1.8.4
                             */
                            getId(): string;
                            
                            /**
                             * 
                             * @return the maximum amount of items in a stack of this item.
                             * @since 1.8.4
                             */
                            getMaxCount(): number;
                            
                            /**
                             * The damage an item has taken is the opposite of the durability still left.
                             * @return the maximum amount of damage this item can take.
                             * @since 1.8.4
                             */
                            getMaxDurability(): number;
                            
                            /**
                             * 
                             * @return {@code true} if this item is fireproof, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isFireproof(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if this item is a tool, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isTool(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if this item can be worn in the armor slot, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isWearable(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if this item is food, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isFood(): boolean;
                            
                            /**
                             * 
                             * @return the food component of this item or {@code null} if this item is not food.
                             * @since 1.8.4
                             */
                            getFood(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.FoodComponentHelper;
                            
                            /**
                             * 
                             * @return {@code true} if this item can be nested, i.e. put into a bundle or shulker box,
                             *          {@code false} otherwise.
                             * @since 1.8.4
                             */
                            canBeNested(): boolean;
                            
                            /**
                             * 
                             * @return the default item stack of this item with a stack size of {@code 1}.
                             * @since 1.8.4
                             */
                            getDefaultStack(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            
                            /**
                             * 
                             * @param nbt the nbt data of the item stack
                             * @return the item stack of this item with a stack size of {@code 1} and the given nbt.
                             * @throws CommandSyntaxException if the nbt data is invalid.
                             * @since 1.8.4
                             */
                            getStackWithNbt(nbt: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            toString(): string;
                            
                        }
                        namespace ItemHelper {
                            interface static {
                                new (base: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemHelper;
                                
                                
                                
                            }
                        }
                        interface BlockPosHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @since 1.2.6
                             * @return the {@code x} value of the block.
                             */
                            getX(): number;
                            
                            /**
                             * 
                             * @since 1.2.6
                             * @return the {@code y} value of the block.
                             */
                            getY(): number;
                            
                            /**
                             * 
                             * @since 1.2.6
                             * @return the {@code z} value of the block.
                             */
                            getZ(): number;
                            
                            /**
                             * 
                             * @return the block above.
                             * @since 1.6.5
                             */
                            up(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
                            
                            /**
                             * 
                             * @param distance the distance to move up
                             * @return the block n-th block above.
                             * @since 1.6.5
                             */
                            up(distance: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
                            
                            /**
                             * 
                             * @return the block below.
                             * @since 1.6.5
                             */
                            down(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
                            
                            /**
                             * 
                             * @param distance the distance to move down
                             * @return the block n-th block below.
                             * @since 1.6.5
                             */
                            down(distance: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
                            
                            /**
                             * 
                             * @return the block to the north.
                             * @since 1.6.5
                             */
                            north(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
                            
                            /**
                             * 
                             * @param distance the distance to move north
                             * @return the n-th block to the north.
                             * @since 1.6.5
                             */
                            north(distance: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
                            
                            /**
                             * 
                             * @return the block to the south.
                             * @since 1.6.5
                             */
                            south(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
                            
                            /**
                             * 
                             * @param distance the distance to move south
                             * @return the n-th block to the south.
                             * @since 1.6.5
                             */
                            south(distance: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
                            
                            /**
                             * 
                             * @return the block to the east.
                             * @since 1.6.5
                             */
                            east(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
                            
                            /**
                             * 
                             * @param distance the distance to move east
                             * @return the n-th block to the east.
                             * @since 1.6.5
                             */
                            east(distance: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
                            
                            /**
                             * 
                             * @return the block to the west.
                             * @since 1.6.5
                             */
                            west(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
                            
                            /**
                             * 
                             * @param distance the distance to move west
                             * @return the n-th block to the west.
                             * @since 1.6.5
                             */
                            west(distance: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
                            
                            /**
                             * 
                             * @param direction 0-5 in order: [DOWN, UP, NORTH, SOUTH, WEST, EAST];
                             * @return the block offset by the given direction.
                             * @since 1.6.5
                             */
                            offset(direction: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
                            
                            /**
                             * 
                             * @param direction 0-5 in order: [DOWN, UP, NORTH, SOUTH, WEST, EAST];
                             * @param distance the distance to move in the given direction
                             * @return the n-th block offset by the given direction.
                             * @since 1.6.5
                             */
                            offset(direction: string, distance: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
                            
                            /**
                             * 
                             * @param x the x offset
                             * @param y the y offset
                             * @param z the y offset
                             * @return the block offset by the given values.
                             * @since 1.8.4
                             */
                            offset(x: number, y: number, z: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
                            
                            /**
                             * 
                             * @return the block position converted to the respective nether coordinates.
                             * @since 1.8.4
                             */
                            toNetherCoords(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
                            
                            /**
                             * 
                             * @return the block position converted to the respective overworld coordinates.
                             * @since 1.8.4
                             */
                            toOverworldCoords(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
                            
                            /**
                             * 
                             * @param entity the entity to get the distance to
                             * @return the distance of this position to the given entity.
                             * @since 1.8.4
                             */
                            distanceTo(entity: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>): number;
                            
                            /**
                             * 
                             * @param pos the position to get the distance to
                             * @return the distance of this position to the given position.
                             * @since 1.8.4
                             */
                            distanceTo(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper): number;
                            
                            /**
                             * 
                             * @param pos the position to get the distance to
                             * @return the distance of this position to the given position.
                             * @since 1.8.4
                             */
                            distanceTo(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D): number;
                            
                            /**
                             * 
                             * @param x the x coordinate to get the distance to
                             * @param y the y coordinate to get the distance to
                             * @param z the z coordinate to get the distance to
                             * @return the distance of this position to the given position.
                             * @since 1.8.4
                             */
                            distanceTo(x: number, y: number, z: number): number;
                            
                            /**
                             * 
                             * @return the {@link PositionCommon.Pos3D} representation of this position.
                             * @since 1.8.4
                             */
                            toPos3D(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            toString(): string;
                            
                        }
                        namespace BlockPosHelper {
                            interface static {
                                new (b: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
                                new (x: number, y: number, z: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
                                
                                
                                
                            }
                        }
                        interface StatsHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            getStatList(): _javatypes.java.util.List<string>;
                            getStatText(statKey: string): /* minecraft classes, as any, because obfuscation: */ any;
                            getRawStatValue(statKey: string): number;
                            getFormattedStatValue(statKey: string): string;
                            getFormattedStatMap(): _javatypes.java.util.Map<string, string>;
                            getRawStatMap(): _javatypes.java.util.Map<string, number>;
                            
                            /**
                             * 
                             * @param id the identifier of the entity
                             * @return how many times the player has killed the entity.
                             * @since 1.8.4
                             */
                            getEntityKilled(id: string): number;
                            
                            /**
                             * 
                             * @param id the identifier of the entity
                             * @return how many times the player has killed the specified entity.
                             * @since 1.8.4
                             */
                            getKilledByEntity(id: string): number;
                            
                            /**
                             * 
                             * @param id the identifier of the block
                             * @return how many times the player has mined the block.
                             * @since 1.8.4
                             */
                            getBlockMined(id: string): number;
                            
                            /**
                             * 
                             * @param id the identifier of the item
                             * @return how many times the player has broken the item.
                             * @since 1.8.4
                             */
                            getItemBroken(id: string): number;
                            
                            /**
                             * 
                             * @param id the identifier of the item
                             * @return how many times the player has crafted the item.
                             * @since 1.8.4
                             */
                            getItemCrafted(id: string): number;
                            
                            /**
                             * 
                             * @param id the identifier of the item
                             * @return how many times the player has used the item.
                             * @since 1.8.4
                             */
                            getItemUsed(id: string): number;
                            
                            /**
                             * 
                             * @param id the identifier of the item
                             * @return how many times the player has picked up the item.
                             * @since 1.8.4
                             */
                            getItemPickedUp(id: string): number;
                            
                            /**
                             * 
                             * @param id the identifier of the item
                             * @return how many times the player has dropped the item.
                             * @since 1.8.4
                             */
                            getItemDropped(id: string): number;
                            
                            /**
                             * 
                             * @param id the identifier of the custom stat
                             * @return the value of the custom stat.
                             * @since 1.8.4
                             */
                            getCustomStat(id: string): number;
                            
                            /**
                             * 
                             * @param id the identifier of the custom stat
                             * @return the formatted value of the custom stat.
                             * @since 1.8.4
                             */
                            getCustomFormattedStat(id: string): string;
                            
                            /**
                             * Used to request an update of the statistics from the server.
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            updateStatistics(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.StatsHelper;
                            toString(): string;
                            
                        }
                        namespace StatsHelper {
                            interface static {
                                new (base: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.StatsHelper;
                                
                                
                                
                            }
                        }
                        interface ChunkHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @return the first block (0 0 0 coordinate) of this chunk.
                             * @since 1.8.4
                             */
                            getStartingBlock(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
                            
                            /**
                             * The coordinates are relative to the starting chunk position, see
                             *  {@link #getStartingBlock}.
                             * @param xOffset the xOffset offset
                             * @param y the actual y coordinate
                             * @param zOffset the zOffset offset
                             * @return the block offset from the starting block of this chunk by xOffset y zOffset.
                             * @since 1.8.4
                             */
                            getOffsetBlock(xOffset: number, y: number, zOffset: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
                            
                            /**
                             * 
                             * @return the maximum height of this chunk.
                             * @since 1.8.4
                             */
                            getMaxBuildHeight(): number;
                            
                            /**
                             * 
                             * @return the minimum height of this chunk.
                             * @since 1.8.4
                             */
                            getMinBuildHeight(): number;
                            
                            /**
                             * 
                             * @return the height of this chunk.
                             * @since 1.8.4
                             */
                            getHeight(): number;
                            
                            /**
                             * 
                             * @param xOffset the xOffset coordinate
                             * @param zOffset the zOffset coordinate
                             * @param heightmap the heightmap to use
                             * @return the maximum {@code y} position of all blocks inside this chunk.
                             * @since 1.8.4
                             */
                            getTopYAt(xOffset: number, zOffset: number, heightmap: /* minecraft classes, as any, because obfuscation: */ any): number;
                            
                            /**
                             * 
                             * @return the {@code x} coordinate (not the world coordinate) of this chunk.
                             * @since 1.8.4
                             */
                            getChunkX(): number;
                            
                            /**
                             * 
                             * @return the {@code z} coordinate (not the world coordinate) of this chunk.
                             * @since 1.8.4
                             */
                            getChunkZ(): number;
                            
                            /**
                             * 
                             * @param xOffset the x offset
                             * @param y the y coordinate
                             * @param zOffset the z offset
                             * @return the biome at the given position.
                             * @since 1.8.4
                             */
                            getBiome(xOffset: number, y: number, zOffset: number): string;
                            
                            /**
                             * With an increasing inhabited time, the local difficulty increases and stronger mobs will
                             *  spawn. Because the time is cumulative, the more players are in the chunk, the faster the time
                             *  will increase.
                             * @return the cumulative time players have spent inside this chunk.
                             * @since 1.8.4
                             */
                            getInhabitedTime(): number;
                            
                            /**
                             * 
                             * @return all entities inside this chunk.
                             * @since 1.8.4
                             */
                            getEntities(): _javatypes.java.util.List<any>;
                            
                            /**
                             * 
                             * @return all tile entity positions inside this chunk.
                             * @since 1.8.4
                             */
                            getTileEntities(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper>;
                            
                            /**
                             * 
                             * @param includeAir whether to include air blocks or not
                             * @param callback the callback function
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            forEach(includeAir: boolean, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockDataHelper, any, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ChunkHelper;
                            
                            /**
                             * 
                             * @param blocks the blocks to search for
                             * @return {@code true} if this chunk contains at least one of the specified blocks,
                             *          {@code false} otherwise.
                             * @since 1.8.4
                             */
                            containsAny(blocks: string[]): boolean;
                            
                            /**
                             * 
                             * @param blocks the blocks to search for
                             * @return {@code true} if the chunk contains all the specified blocks, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            containsAll(blocks: string[]): boolean;
                            
                            /**
                             * 
                             * @return a map of the raw heightmap data.
                             * @since 1.8.4
                             */
                            getHeightmaps(): _javatypes.java.util.Collection<_javatypes.java.util.Map$Entry</* minecraft classes, as any, because obfuscation: */ any, /* minecraft classes, as any, because obfuscation: */ any>>;
                            
                            /**
                             * 
                             * @return the raw surface heightmap.
                             * @since 1.8.4
                             */
                            getSurfaceHeightmap(): /* minecraft classes, as any, because obfuscation: */ any;
                            
                            /**
                             * 
                             * @return the raw ocean floor heightmap.
                             * @since 1.8.4
                             */
                            getOceanFloorHeightmap(): /* minecraft classes, as any, because obfuscation: */ any;
                            
                            /**
                             * 
                             * @return the raw motion blocking heightmap.
                             * @since 1.8.4
                             */
                            getMotionBlockingHeightmap(): /* minecraft classes, as any, because obfuscation: */ any;
                            
                            /**
                             * 
                             * @return the raw motion blocking heightmap without leaves.
                             * @since 1.8.4
                             */
                            getMotionBlockingNoLeavesHeightmap(): /* minecraft classes, as any, because obfuscation: */ any;
                            toString(): string;
                            
                        }
                        namespace ChunkHelper {
                            interface static {
                                new (base: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ChunkHelper;
                                
                                
                                
                            }
                        }
                        interface PlayerEntityHelper<T> extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LivingEntityHelper<T> {
                            
                            
                            /**
                             * 
                             * @since 1.0.3
                             * @see xyz.wagyourtail.jsmacros.client.api.helpers.PlayerAbilitiesHelper
                             * @return 
                             */
                            getAbilities(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PlayerAbilitiesHelper;
                            
                            /**
                             * 
                             * @since 1.2.0
                             */
                            getMainHand(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            
                            /**
                             * 
                             * @since 1.2.0
                             */
                            getOffHand(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            
                            /**
                             * 
                             * @since 1.2.0
                             */
                            getHeadArmor(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            
                            /**
                             * 
                             * @since 1.2.0
                             */
                            getChestArmor(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            
                            /**
                             * 
                             * @since 1.2.0
                             */
                            getLegArmor(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            
                            /**
                             * 
                             * @since 1.2.0
                             */
                            getFootArmor(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            
                            /**
                             * 
                             * @since 1.2.5 [citation needed]
                             * @return 
                             */
                            getXP(): number;
                            
                            /**
                             * 
                             * @since 1.6.5
                             * @return 
                             */
                            getXPLevel(): number;
                            
                            /**
                             * 
                             * @since 1.6.5
                             * @return 
                             */
                            getXPProgress(): number;
                            
                            /**
                             * 
                             * @since 1.6.5
                             * @return 
                             */
                            getXPToLevelUp(): number;
                            
                            /**
                             * 
                             * @since 1.2.5 [citation needed]
                             * @return 
                             */
                            isSleeping(): boolean;
                            
                            /**
                             * 
                             * @since 1.2.5 [citation needed]
                             * @return if the player has slept the minimum ammount of time to pass the night.
                             */
                            isSleepingLongEnough(): boolean;
                            
                            /**
                             * 
                             * @return the fishing bobber of the player, or {@code null} if the player is not fishing.
                             * @since 1.8.4
                             */
                            getFishingBobber(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.entity.specialized.projectile.FishingBobberEntityHelper;
                            
                            /**
                             * 
                             * @return the player's score.
                             * @since 1.8.4
                             */
                            getScore(): number;
                            
                        }
                        namespace PlayerEntityHelper {
                            interface static {
                                new <T>(e: T): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PlayerEntityHelper<T>;
                                
                                
                                
                            }
                        }
                        interface PacketByteBufferHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @return the packet for this buffer or {@code null} if no packet was used to create this
                             *          helper.
                             * @since 1.8.4
                             */
                            toPacket(): /* minecraft classes, as any, because obfuscation: */ any;
                            
                            /**
                             * 
                             * @param packetName the name of the packet's class that should be returned
                             * @return the packet for this buffer.
                             * @see #getPacketNames()
                             * @since 1.8.4
                             */
                            toPacket(packetName: string): /* minecraft classes, as any, because obfuscation: */ any;
                            
                            /**
                             * 
                             * @param clazz the class of the packet to return
                             * @return the packet for this buffer.
                             * @since 1.8.4
                             */
                            toPacket(clazz: _javatypes.java.lang.Class<any>): /* minecraft classes, as any, because obfuscation: */ any;
                            
                            /**
                             * 
                             * @param clientbound whether the packet is clientbound or serverbound
                             * @param packetId the id of the packet
                             * @return the packet for this buffer.
                             * @see #getPacketId(Class)
                             * @see #getNetworkStateId(Class)
                             * @see #isClientbound(Class)
                             * @see #isServerbound(Class)
                             * @since 1.8.4
                             */
                            toPacket(clientbound: boolean, packetId: number): /* minecraft classes, as any, because obfuscation: */ any;
                            
                            /**
                             * 
                             * @param packetClass the class of the packet to get the id for
                             * @return the id of the packet.
                             * @since 1.8.4
                             */
                            getPacketId(packetClass: _javatypes.java.lang.Class<any>): number;
                            
                            /**
                             * 
                             * @param packetClass the class of the packet to get the id for
                             * @return the id of the network state the packet belongs to.
                             * @since 1.8.4
                             */
                            getNetworkStateId(packetClass: _javatypes.java.lang.Class<any>): number;
                            
                            /**
                             * 
                             * @param packetClass the class to get the side for
                             * @return {@code true} if the packet is clientbound, {@code false} if it is serverbound.
                             * @since 1.8.4
                             */
                            isClientbound(packetClass: _javatypes.java.lang.Class<any>): boolean;
                            
                            /**
                             * 
                             * @param packetClass the class to get the id for
                             * @return {@code true} if the packet is serverbound, {@code false} if it is clientbound.
                             * @since 1.8.4
                             */
                            isServerbound(packetClass: _javatypes.java.lang.Class<any>): boolean;
                            
                            /**
                             * Send a packet of the given type, created from this buffer, to the server.
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            sendPacket(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param packetName the name of the packet's class that should be sent
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            sendPacket(packetName: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * Send a packet of the given type, created from this buffer, to the server.
                             * @param clazz the class of the packet to send
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            sendPacket(clazz: _javatypes.java.lang.Class<any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param channel the channel to send the packet on
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            sendCustomPacket(channel: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            receivePacket(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param packetName the name of the packet's class that should be received
                             * @return self for chaining.
                             * @see #getPacketNames()
                             * @since 1.8.4
                             */
                            receivePacket(packetName: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param clazz the class of the packet to receive
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            receivePacket(clazz: _javatypes.java.lang.Class<any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param channel the channel to receive the packet on
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            receiveCustomPacket(channel: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * These names are subject to change and are only for an easier access. They will probably not
                             *  change in the future, but it is not guaranteed.
                             * @return a list of all packet names.
                             * @since 1.8.4
                             */
                            getPacketNames(): _javatypes.java.util.List<string>;
                            
                            /**
                             * Resets the buffer to the state it was in when this helper was created.
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            reset(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param registry the registry the value is from
                             * @param value the value to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeRegistryValue<T>(registry: /* minecraft classes, as any, because obfuscation: */ any, value: T): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param registry the registry the read value is from
                             * @return the registry value.
                             * @since 1.8.4
                             */
                            readRegistryValue<T>(registry: /* minecraft classes, as any, because obfuscation: */ any): T;
                            
                            /**
                             * 
                             * @param key the registry key to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeRegistryKey(key: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param registry the registry the read key is from
                             * @return the registry key.
                             * @since 1.8.4
                             */
                            readRegistryKey<T>(registry: /* minecraft classes, as any, because obfuscation: */ any): /* minecraft classes, as any, because obfuscation: */ any;
                            
                            /**
                             * 
                             * @param collection the collection to store
                             * @param writer the function that writes the collection's elements to the buffer
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeCollection<T>(collection: _javatypes.java.util.Collection<T>, writer: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper</* minecraft classes, as any, because obfuscation: */ any, T, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param reader the function that reads the collection's elements from the buffer
                             * @return the read list.
                             * @since 1.8.4
                             */
                            readList<T>(reader: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper</* minecraft classes, as any, because obfuscation: */ any, any, T, any>): _javatypes.java.util.List<T>;
                            
                            /**
                             * 
                             * @param list the integer list to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeIntList(list: _javatypes.java.util.Collection<number>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read integer list.
                             * @since 1.8.4
                             */
                            readIntList(): _javatypes.it.unimi.dsi.fastutil.ints.IntList;
                            
                            /**
                             * 
                             * @param map the map to store
                             * @param keyWriter the function to write the map's keys to the buffer
                             * @param valueWriter the function to write the map's values to the buffer
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeMap<K, V>(map: _javatypes.java.util.Map<K, V>, keyWriter: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper</* minecraft classes, as any, because obfuscation: */ any, K, any, any>, valueWriter: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper</* minecraft classes, as any, because obfuscation: */ any, V, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param keyReader the function to read the map's keys from the buffer
                             * @param valueReader the function to read the map's values from the buffer
                             * @return the read map.
                             * @since 1.8.4
                             */
                            readMap<K, V>(keyReader: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper</* minecraft classes, as any, because obfuscation: */ any, any, K, any>, valueReader: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper</* minecraft classes, as any, because obfuscation: */ any, any, V, any>): _javatypes.java.util.Map<K, V>;
                            
                            /**
                             * 
                             * @param reader the function to read the collection's elements from the buffer
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            forEachInCollection(reader: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper</* minecraft classes, as any, because obfuscation: */ any, any, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param value the optional value to store
                             * @param writer the function to write the optional value if present to the buffer
                             * @return self for chaining.
                             * @see #writeNullable(Object, MethodWrapper)
                             * @since 1.8.4
                             */
                            writeOptional<T>(value: T, writer: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper</* minecraft classes, as any, because obfuscation: */ any, T, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param reader the function to read the optional value from the buffer if present
                             * @return the optional value.
                             * @see #readNullable(MethodWrapper)
                             * @since 1.8.4
                             */
                            readOptional<T>(reader: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper</* minecraft classes, as any, because obfuscation: */ any, any, T, any>): _javatypes.java.util.Optional<T>;
                            
                            /**
                             * 
                             * @param value the optional value to store
                             * @param writer the function to write the optional value if it's not null to the buffer
                             * @return self for chaining.
                             * @see #writeOptional(Object, MethodWrapper)
                             * @since 1.8.4
                             */
                            writeNullable(value: any, writer: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper</* minecraft classes, as any, because obfuscation: */ any, any, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param reader the function to read the value from the buffer if it's not null
                             * @return the read value or {@code null} if it was null.
                             * @see #readOptional(MethodWrapper)
                             * @since 1.8.4
                             */
                            readNullable<T>(reader: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper</* minecraft classes, as any, because obfuscation: */ any, any, T, any>): T;
                            
                            /**
                             * This method chooses the left value if it's not null, otherwise it chooses the right value.
                             * @param left the left value to store
                             * @param right the right value to store
                             * @param leftWriter the function to write the left value to the buffer
                             * @param rightWriter the function to write the right value to the buffer
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeEither<L, R>(left: L, right: R, leftWriter: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper</* minecraft classes, as any, because obfuscation: */ any, L, any, any>, rightWriter: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper</* minecraft classes, as any, because obfuscation: */ any, R, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param leftReader the function to read the left value from the buffer
                             * @param rightReader the function to read the right value from the buffer
                             * @return the read object.
                             * @since 1.8.4
                             */
                            readEither(leftReader: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper</* minecraft classes, as any, because obfuscation: */ any, any, any, any>, rightReader: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper</* minecraft classes, as any, because obfuscation: */ any, any, any, any>): any;
                            
                            /**
                             * 
                             * @param bytes the bytes to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeByteArray(bytes: number[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read byte array.
                             * @since 1.8.4
                             */
                            readByteArray(): number[];
                            
                            /**
                             * Will throw an exception if the byte array is bigger than the given maximum size.
                             * @param maxSize the maximum size of the byte array to read
                             * @return the read byte array.
                             * @since 1.8.4
                             */
                            readByteArray(maxSize: number): number[];
                            
                            /**
                             * 
                             * @param ints the int array to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeIntArray(ints: number[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read int array.
                             * @since 1.8.4
                             */
                            readIntArray(): number[];
                            
                            /**
                             * Will throw an exception if the int array is bigger than the given maximum size.
                             * @param maxSize the maximum size of the int array to read
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            readIntArray(maxSize: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param longs the long array to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeLongArray(longs: number[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read long array.
                             * @since 1.8.4
                             */
                            readLongArray(): number[];
                            
                            /**
                             * Will throw an exception if the long array is bigger than the given maximum size.
                             * @param maxSize the maximum size of the long array to read
                             * @return the read long array.
                             * @since 1.8.4
                             */
                            readLongArray(maxSize: number): number[];
                            
                            /**
                             * 
                             * @param pos the block position to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeBlockPos(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param x the x coordinate of the block position to store
                             * @param y the y coordinate of the block position to store
                             * @param z the z coordinate of the block position to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeBlockPos(x: number, y: number, z: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read block position.
                             * @since 1.8.4
                             */
                            readBlockPos(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
                            
                            /**
                             * 
                             * @param x the x coordinate of the chunk to store
                             * @param z the z coordinate of the chunk to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeChunkPos(x: number, z: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param chunk the chunk to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeChunkPos(chunk: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ChunkHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the position of the read chunk, x at index 0, z at index 1.
                             * @since 1.8.4
                             */
                            readChunkPos(): number[];
                            
                            /**
                             * 
                             * @return a {@link ChunkHelper} for the read chunk position.
                             * @since 1.8.4
                             */
                            readChunkHelper(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ChunkHelper;
                            
                            /**
                             * 
                             * @param chunkX the x coordinate of the chunk to store
                             * @param y the y coordinate to store
                             * @param chunkZ the z coordinate of the chunk to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeChunkSectionPos(chunkX: number, y: number, chunkZ: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param chunk the chunk whose position should be stored
                             * @param y the y to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeChunkSectionPos(chunk: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ChunkHelper, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read chunk section pos, as a {@link BlockPosHelper}.
                             * @since 1.8.4
                             */
                            readChunkSectionPos(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
                            
                            /**
                             * 
                             * @param dimension the dimension, vanilla default are {@code overworld}, {@code the_nether},
                             *                   {@code the_end}
                             * @param pos the position to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeGlobalPos(dimension: string, pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param dimension the dimension, vanilla default are {@code overworld}, {@code the_nether},
                             *                   {@code the_end}
                             * @param x the x coordinate of the position to store
                             * @param y the y coordinate of the position to store
                             * @param z the z coordinate of the position to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeGlobalPos(dimension: string, x: number, y: number, z: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read global pos, the first element is the dimension, the second is the position.
                             * @since 1.8.4
                             */
                            readGlobalPos(): _javatypes.xyz.wagyourtail.Pair<string, _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper>;
                            
                            /**
                             * 
                             * @param text the string to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeText(text: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param builder the text builder whose text should be stored
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeText(builder: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.TextBuilder): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param text the text to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeText(text: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read text.
                             * @since 1.8.4
                             */
                            readText(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            
                            /**
                             * 
                             * @param constant the enum constant to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeEnumConstant(constant: _javatypes.java.lang.Enum<any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param enumClass the class of the enum to read from
                             * @return the read enum constant.
                             * @since 1.8.4
                             */
                            readEnumConstant<T>(enumClass: _javatypes.java.lang.Class<T>): T;
                            
                            /**
                             * 
                             * @param i the int to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeVarInt(i: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read int.
                             * @since 1.8.4
                             */
                            readVarInt(): number;
                            
                            /**
                             * 
                             * @param l the long to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeVarLong(l: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read long.
                             * @since 1.8.4
                             */
                            readVarLong(): number;
                            
                            /**
                             * 
                             * @param uuid the UUID to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeUuid(uuid: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read UUID.
                             * @since 1.8.4
                             */
                            readUuid(): _javatypes.java.util.UUID;
                            
                            /**
                             * 
                             * @param nbt the nbt
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeNbt(nbt: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper$NBTCompoundHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read nbt data.
                             * @since 1.8.4
                             */
                            readNbt(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper<any>;
                            
                            /**
                             * 
                             * @param stack the item stack to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeItemStack(stack: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read item stack.
                             * @since 1.8.4
                             */
                            readItemStack(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            
                            /**
                             * 
                             * @param string the string to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeString(string: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * Throws an exception if the string is longer than the given length.
                             * @param string the string to store
                             * @param maxLength the maximum length of the string
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeString(string: string, maxLength: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read string.
                             * @since 1.8.4
                             */
                            readString(): string;
                            
                            /**
                             * Throws an exception if the read string is longer than the given length.
                             * @param maxLength the maximum length of the string to read
                             * @return the read string.
                             * @since 1.8.4
                             */
                            readString(maxLength: number): string;
                            
                            /**
                             * 
                             * @param id the identifier to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeIdentifier(id: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read identifier.
                             * @since 1.8.4
                             */
                            readIdentifier(): string;
                            
                            /**
                             * 
                             * @param date the date to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeDate(date: _javatypes.java.util.Date): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read date.
                             * @since 1.8.4
                             */
                            readDate(): _javatypes.java.util.Date;
                            
                            /**
                             * 
                             * @param instant the instant to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeInstant(instant: _javatypes.java.time.Instant): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read instant.
                             * @since 1.8.4
                             */
                            readInstant(): _javatypes.java.time.Instant;
                            
                            /**
                             * 
                             * @param key the public key to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writePublicKey(key: _javatypes.java.security.PublicKey): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read public key.
                             * @since 1.8.4
                             */
                            readPublicKey(): _javatypes.java.security.PublicKey;
                            
                            /**
                             * 
                             * @param hitResult the hit result to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeBlockHitResult(hitResult: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param pos the position of the BlockHitResult
                             * @param direction the direction of the BlockHitResult
                             * @param blockPos the block pos of the BlockHitResult
                             * @param missed whether the BlockHitResult missed
                             * @param insideBlock whether the BlockHitResult is inside a block
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeBlockHitResult(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D, direction: string, blockPos: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper, missed: boolean, insideBlock: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read block hit result.
                             * @since 1.8.4
                             */
                            readBlockHitResult(): /* minecraft classes, as any, because obfuscation: */ any;
                            
                            /**
                             * 
                             * @return a map of the block hit result's data and their values.
                             * @since 1.8.4
                             */
                            readBlockHitResultMap(): _javatypes.java.util.Map<string, any>;
                            
                            /**
                             * 
                             * @param bitSet the bit set to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeBitSet(bitSet: _javatypes.java.util.BitSet): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read bit set.
                             * @since 1.8.4
                             */
                            readBitSet(): _javatypes.java.util.BitSet;
                            
                            /**
                             * 
                             * @param profile the profile to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeGameProfile(profile: _javatypes.com.mojang.authlib.GameProfile): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read game profile.
                             * @since 1.8.4
                             */
                            readGameProfile(): _javatypes.com.mojang.authlib.GameProfile;
                            
                            /**
                             * 
                             * @return the read profile's name.
                             * @since 1.8.4
                             */
                            readGameProfileName(): string;
                            
                            /**
                             * 
                             * @return the read profile's UUID.
                             * @since 1.8.4
                             */
                            readGameProfileUuid(): _javatypes.java.util.UUID;
                            
                            /**
                             * 
                             * @return the readers current position.
                             * @since 1.8.4
                             */
                            readerIndex(): number;
                            
                            /**
                             * 
                             * @param index the readers new index
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setReaderIndex(index: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the writers current position.
                             * @since 1.8.4
                             */
                            writerIndex(): number;
                            
                            /**
                             * 
                             * @param index the writers new index
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setWriterIndex(index: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param readerIndex the readers new index
                             * @param writerIndex the writers new index
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setIndices(readerIndex: number, writerIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * Resets the readers and writers index to their respective last marked indices.
                             * @return self for chaining.
                             * @see #markReaderIndex()
                             * @see #markWriterIndex()
                             * @since 1.8.4
                             */
                            resetIndices(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * Marks the readers current index for later use.
                             * @return self for chaining.
                             * @see #resetReaderIndex()
                             * @since 1.8.4
                             */
                            markReaderIndex(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * Resets the readers index to the last marked index.
                             * @return self for chaining.
                             * @see #markReaderIndex()
                             * @since 1.8.4
                             */
                            resetReaderIndex(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * Marks the writers current index for later use.
                             * @return self for chaining.
                             * @see #resetWriterIndex()
                             * @see ()
                             * @since 1.8.4
                             */
                            markWriterIndex(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * Resets the writers index to the last marked index.
                             * @return self for chaining.
                             * @see #markWriterIndex()
                             * @since 1.8.4
                             */
                            resetWriterIndex(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * Resets the writers and readers index to 0. This technically doesn't clear the buffer, but
                             *  rather makes it so that new operations will overwrite the old data.
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            clear(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param value the value to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeBoolean(value: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param index the index to write to
                             * @param value the value to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setBoolean(index: number, value: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read boolean value.
                             * @since 1.8.4
                             */
                            readBoolean(): boolean;
                            
                            /**
                             * 
                             * @param index the index to read from
                             * @return the boolean value at the given index.
                             * @since 1.8.4
                             */
                            getBoolean(index: number): boolean;
                            
                            /**
                             * 
                             * @param value the value to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeChar(value: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param index the index to write to
                             * @param value the value to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setChar(index: number, value: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read char value.
                             * @since 1.8.4
                             */
                            readChar(): number;
                            
                            /**
                             * 
                             * @param index the index to read from
                             * @return the char at the given index.
                             * @since 1.8.4
                             */
                            getChar(index: number): number;
                            
                            /**
                             * 
                             * @param value the value to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeByte(value: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param index the index to write to
                             * @param value the value to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setByte(index: number, value: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read byte value.
                             * @since 1.8.4
                             */
                            readByte(): number;
                            
                            /**
                             * 
                             * @return the read unsigned byte value, represented as a short.
                             * @since 1.8.4
                             */
                            readUnsignedByte(): number;
                            
                            /**
                             * 
                             * @param index the index to read from
                             * @return the byte at the given index.
                             * @since 1.8.4
                             */
                            getByte(index: number): number;
                            
                            /**
                             * 
                             * @param index the index to read from
                             * @return the unsigned byte at the given index, represented as a short.
                             * @since 1.8.4
                             */
                            getUnsignedByte(index: number): number;
                            
                            /**
                             * 
                             * @param value the value to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeShort(value: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param index the index to write to
                             * @param value the value to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setShort(index: number, value: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read short value.
                             * @since 1.8.4
                             */
                            readShort(): number;
                            
                            /**
                             * 
                             * @return the read unsigned short value, represented as an int.
                             * @since 1.8.4
                             */
                            readUnsignedShort(): number;
                            
                            /**
                             * 
                             * @param index the index to read from
                             * @return the short at the given index.
                             * @since 1.8.4
                             */
                            getShort(index: number): number;
                            
                            /**
                             * 
                             * @param index the index to read from
                             * @return the unsigned short at the given index, represented as an int.
                             * @since 1.8.4
                             */
                            getUnsignedShort(index: number): number;
                            
                            /**
                             * 
                             * @param value the value to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeMedium(value: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param index the index to write to
                             * @param value the value to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setMedium(index: number, value: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read medium value.
                             * @since 1.8.4
                             */
                            readMedium(): number;
                            
                            /**
                             * 
                             * @return the read unsigned medium value.
                             * @since 1.8.4
                             */
                            readUnsignedMedium(): number;
                            
                            /**
                             * 
                             * @param index the index to read from
                             * @return the medium at the given index.
                             * @since 1.8.4
                             */
                            getMedium(index: number): number;
                            
                            /**
                             * 
                             * @param index the index to read from
                             * @return the unsigned medium at the given index.
                             * @since 1.8.4
                             */
                            getUnsignedMedium(index: number): number;
                            
                            /**
                             * 
                             * @param value the value to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeInt(value: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param index the index to write to
                             * @param value the value to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setInt(index: number, value: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read int value.
                             * @since 1.8.4
                             */
                            readInt(): number;
                            
                            /**
                             * 
                             * @return the read unsigned int value, represented as a long.
                             * @since 1.8.4
                             */
                            readUnsignedInt(): number;
                            
                            /**
                             * 
                             * @param index the index to read from
                             * @return the int at the given index.
                             * @since 1.8.4
                             */
                            getInt(index: number): number;
                            
                            /**
                             * 
                             * @param index the index to read from
                             * @return the unsigned int at the given index, represented as a long.
                             * @since 1.8.4
                             */
                            getUnsignedInt(index: number): number;
                            
                            /**
                             * 
                             * @param value the value to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeLong(value: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param index the index to write to
                             * @param value the value to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setLong(index: number, value: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read long value.
                             * @since 1.8.4
                             */
                            readLong(): number;
                            
                            /**
                             * 
                             * @param index the index to read from
                             * @return the long at the given index.
                             * @since 1.8.4
                             */
                            getLong(index: number): number;
                            
                            /**
                             * 
                             * @param value the value to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeFloat(value: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param index the index to write to
                             * @param value the value to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setFloat(index: number, value: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read float value.
                             * @since 1.8.4
                             */
                            readFloat(): number;
                            
                            /**
                             * 
                             * @param index the index to read from
                             * @return the float at the given index.
                             * @since 1.8.4
                             */
                            getFloat(index: number): number;
                            
                            /**
                             * 
                             * @param value the value to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeDouble(value: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param index the index to write to
                             * @param value the value to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setDouble(index: number, value: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @return the read double value.
                             * @since 1.8.4
                             */
                            readDouble(): number;
                            
                            /**
                             * 
                             * @param index the index to read from
                             * @return the double at the given index.
                             * @since 1.8.4
                             */
                            getDouble(index: number): number;
                            
                            /**
                             * 
                             * @param length the amount of zeros to write
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeZero(length: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param index the index to write to
                             * @param length the amount of zeros to write
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setZero(index: number, length: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param bytes the bytes to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            writeBytes(bytes: number[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * 
                             * @param index the index to write to
                             * @param bytes the bytes to store
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setBytes(index: number, bytes: number[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            
                            /**
                             * Starts reading from this buffer's readerIndex.
                             * @param length the length of the array to read
                             * @return the read byte array.
                             * @since 1.8.4
                             */
                            readBytes(length: number): number[];
                            
                            /**
                             * 
                             * @param index the index to start reading from
                             * @param length the length of the array to read
                             * @return the read byte array .
                             * @since 1.8.4
                             */
                            getBytes(index: number, length: number): number[];
                            
                            /**
                             * Moves the readerIndex of this buffer by the specified amount.
                             * @param length the amount of bytes to skip
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            skipBytes(length: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                            toString(): string;
                            
                        }
                        namespace PacketByteBufferHelper {
                            interface static {
                                new (): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                                new (base: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                                new (packet: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper;
                                
                                
                                /**
                                 * Don't touch this here!
                                 */
                                readonly BUFFER_TO_PACKET: _javatypes.java.util.Map<_javatypes.java.lang.Class<any>, _javatypes.java.util._function.Function</* minecraft classes, as any, because obfuscation: */ any, any>>;
                                
                                getPacketName(packet: /* minecraft classes, as any, because obfuscation: */ any): string;
                                init(): void;
                                main(args: string[]): void;
                                
                            }
                        }
                        interface EntityHelper<T> extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper<T> {
                            
                            
                            /**
                             * 
                             * @return entity position.
                             */
                            getPos(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            
                            /**
                             * 
                             * @return entity block position.
                             * @since 1.6.5
                             */
                            getBlockPos(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
                            
                            /**
                             * 
                             * @return the entity's eye position.
                             * @since 1.8.4
                             */
                            getEyePos(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            
                            /**
                             * 
                             * @return entity chunk coordinates. Since Pos2D only has x and y fields, z coord is y.
                             * @since 1.6.5
                             */
                            getChunkPos(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D;
                            
                            /**
                             * 
                             * @since 1.0.8
                             * @return the {@code x} value of the entity.
                             */
                            getX(): number;
                            
                            /**
                             * 
                             * @since 1.0.8
                             * @return the {@code y} value of the entity.
                             */
                            getY(): number;
                            
                            /**
                             * 
                             * @since 1.0.8
                             * @return the {@code z} value of the entity.
                             */
                            getZ(): number;
                            
                            /**
                             * 
                             * @since 1.2.8
                             * @return the current eye height offset for the entitye.
                             */
                            getEyeHeight(): number;
                            
                            /**
                             * 
                             * @since 1.0.8
                             * @return the {@code pitch} value of the entity.
                             */
                            getPitch(): number;
                            
                            /**
                             * 
                             * @since 1.0.8
                             * @return the {@code yaw} value of the entity.
                             */
                            getYaw(): number;
                            
                            /**
                             * 
                             * @return the name of the entity.
                             * @since 1.0.8 [citation needed], returned string until 1.6.4
                             */
                            getName(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            
                            /**
                             * 
                             * @return the type of the entity.
                             */
                            getType(): string;
                            
                            /**
                             * 
                             * @since 1.1.9
                             * @return if the entity has the glowing effect.
                             */
                            isGlowing(): boolean;
                            
                            /**
                             * 
                             * @since 1.1.9
                             * @return if the entity is in lava.
                             */
                            isInLava(): boolean;
                            
                            /**
                             * 
                             * @since 1.1.9
                             * @return if the entity is on fire.
                             */
                            isOnFire(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the entity is sneaking, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isSneaking(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the entity is sprinting, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isSprinting(): boolean;
                            
                            /**
                             * 
                             * @since 1.1.8 [citation needed]
                             * @return the vehicle of the entity.
                             */
                            getVehicle(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>;
                            
                            /**
                             * 
                             * @since 1.1.8 [citation needed]
                             * @return the entity passengers.
                             */
                            getPassengers(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>>;
                            
                            /**
                             * 
                             * @since 1.2.8, was a {@link String} until 1.5.0
                             * @return 
                             */
                            getNBT(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper<any>;
                            
                            /**
                             * 
                             * @since 1.6.4
                             * @param name
                             */
                            setCustomName(name: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<T>;
                            
                            /**
                             * sets the name to always display
                             * @since 1.8.0
                             * @param b
                             */
                            setCustomNameVisible(b: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<T>;
                            
                            /**
                             * 
                             * @param color
                             */
                            setGlowingColor(color: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<T>;
                            
                            /**
                             * 
                             */
                            resetGlowingColor(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<T>;
                            
                            /**
                             * warning: affected by setGlowingColor
                             * @since 1.8.2
                             * @return glow color
                             */
                            getGlowingColor(): number;
                            
                            /**
                             * Sets whether the entity is glowing.
                             * @since 1.1.9
                             * @param val
                             * @return 
                             */
                            setGlowing(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<T>;
                            
                            /**
                             * reset the glowing effect to proper value.
                             * @since 1.6.3
                             * @return 
                             */
                            resetGlowing(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<T>;
                            
                            /**
                             * Checks if the entity is still alive.
                             * @since 1.2.8
                             * @return 
                             */
                            isAlive(): boolean;
                            
                            /**
                             * 
                             * @since 1.6.5
                             * @return UUID of the entity, random* if not a player, otherwise the player's uuid.
                             */
                            getUUID(): string;
                            
                            /**
                             * 
                             * @return the maximum amount of air this entity can have.
                             * @since 1.8.4
                             */
                            getMaxAir(): number;
                            
                            /**
                             * 
                             * @return the amount of air this entity has.
                             * @since 1.8.4
                             */
                            getAir(): number;
                            
                            /**
                             * 
                             * @return this entity's current speed in blocks per second.
                             * @since 1.8.4
                             */
                            getSpeed(): number;
                            
                            /**
                             * 
                             * @return the direction the entity is facing, rounded to the nearest 45 degrees.
                             * @since 1.8.4
                             */
                            getFacingDirection(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.DirectionHelper;
                            
                            /**
                             * 
                             * @return the distance between this entity and the specified one.
                             * @since 1.8.4
                             */
                            distanceTo(entity: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>): number;
                            
                            /**
                             * 
                             * @return the distance between this entity and the specified position.
                             * @since 1.8.4
                             */
                            distanceTo(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper): number;
                            
                            /**
                             * 
                             * @return the distance between this entity and the specified position.
                             * @since 1.8.4
                             */
                            distanceTo(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D): number;
                            
                            /**
                             * 
                             * @return the distance between this entity and the specified position.
                             * @since 1.8.4
                             */
                            distanceTo(x: number, y: number, z: number): number;
                            
                            /**
                             * 
                             * @return the velocity vector.
                             * @since 1.8.4
                             */
                            getVelocity(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            
                            /**
                             * 
                             * @return the chunk helper for the chunk this entity is in.
                             * @since 1.8.4
                             */
                            getChunk(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ChunkHelper;
                            
                            /**
                             * 
                             * @return the name of the biome this entity is in.
                             * @since 1.8.4
                             */
                            getBiome(): string;
                            toString(): string;
                            
                            /**
                             * 
                             * @since 1.6.3
                             * @return cast of this entity helper (mainly for typescript)
                             */
                            asClientPlayer(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<any>;
                            
                            /**
                             * 
                             * @since 1.6.3
                             * @return cast of this entity helper (mainly for typescript)
                             */
                            asPlayer(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PlayerEntityHelper<any>;
                            
                            /**
                             * 
                             * @since 1.6.3
                             * @return cast of this entity helper (mainly for typescript)
                             */
                            asVillager(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.VillagerEntityHelper;
                            
                            /**
                             * 
                             * @since 1.6.3
                             * @return cast of this entity helper (mainly for typescript)
                             */
                            asMerchant(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.MerchantEntityHelper<any>;
                            
                            /**
                             * 
                             * @since 1.6.3
                             * @return cast of this entity helper (mainly for typescript)
                             */
                            asLiving(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LivingEntityHelper<any>;
                            
                            /**
                             * 
                             * @return this helper as an animal entity helper (mainly for typescript).
                             * @since 1.8.4
                             */
                            asAnimal(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LivingEntityHelper<any>;
                            
                            /**
                             * 
                             * @since 1.6.3
                             * @return cast of this entity helper (mainly for typescript)
                             */
                            asItem(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemEntityHelper;
                            
                            /**
                             * 
                             * @return the entity as a server entity if an integrated server is running and {@code null} otherwise.
                             * @since 1.8.4
                             */
                            asServerEntity(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>;
                            
                        }
                        namespace EntityHelper {
                            interface static {
                                
                                
                                
                                /**
                                 * mostly for internal use.
                                 * @param e mc entity.
                                 * @return correct subclass of this.
                                 */
                                create(e: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>;
                                
                            }
                        }
                        interface SuggestionsBuilderHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper<_javatypes.com.mojang.brigadier.suggestion.SuggestionsBuilder> {
                            
                            getInput(): string;
                            getStart(): number;
                            getRemaining(): string;
                            getRemainingLowerCase(): string;
                            suggest(suggestion: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SuggestionsBuilderHelper;
                            suggest(value: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SuggestionsBuilderHelper;
                            suggestWithTooltip(suggestion: string, tooltip: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SuggestionsBuilderHelper;
                            suggestWithTooltip(value: number, tooltip: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SuggestionsBuilderHelper;
                            
                            /**
                             * 
                             * @param suggestions the strings to match
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            suggestMatching(suggestions: string[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SuggestionsBuilderHelper;
                            
                            /**
                             * 
                             * @param suggestions the strings to match
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            suggestMatching(suggestions: _javatypes.java.util.Collection<string>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SuggestionsBuilderHelper;
                            
                            /**
                             * 
                             * @param identifiers the identifiers to match
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            suggestIdentifier(identifiers: string[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SuggestionsBuilderHelper;
                            
                            /**
                             * 
                             * @param identifiers the identifiers to match
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            suggestIdentifier(identifiers: _javatypes.java.util.Collection<string>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SuggestionsBuilderHelper;
                            
                            /**
                             * 
                             * @param positions the positions to suggest
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            suggestBlockPositions(positions: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SuggestionsBuilderHelper;
                            
                            /**
                             * 
                             * @param positions the positions to suggest
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            suggestBlockPositions(positions: _javatypes.java.util.Collection<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SuggestionsBuilderHelper;
                            
                            /**
                             * Positions are strings of the form "x y z" where x, y, and z are numbers or the default
                             *  minecraft selectors "~" and "^" followed by a number.
                             * @param positions the positions to suggest
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            suggestPositions(positions: string[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SuggestionsBuilderHelper;
                            
                            /**
                             * Positions are strings of the form "x y z" where x, y, and z are numbers or the default
                             *  minecraft selectors "~" and "^" followed by a number.
                             * @param positions the relative positions to suggest
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            suggestPositions(positions: _javatypes.java.util.Collection<string>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SuggestionsBuilderHelper;
                            
                        }
                        namespace SuggestionsBuilderHelper {
                            interface static {
                                new (base: _javatypes.com.mojang.brigadier.suggestion.SuggestionsBuilder): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SuggestionsBuilderHelper;
                                
                                
                                
                            }
                        }
                        interface StatusEffectHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @since 1.2.4
                             * @return 
                             */
                            getId(): string;
                            
                            /**
                             * 
                             * @since 1.2.4
                             * @return 
                             */
                            getStrength(): number;
                            
                            /**
                             * 
                             * @since 1.2.4
                             * @return 
                             */
                            getTime(): number;
                            
                            /**
                             * 
                             * @return {@code true} if this effect is applied permanently, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isPermanent(): boolean;
                            
                            /**
                             * Ambient effects are usually applied through beacons and they make the particles more
                             *  translucent.
                             * @return {@code true} if this effect is an ambient one, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isAmbient(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if this effect has an icon it should render, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            hasIcon(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if this effect affects the particle color and gets rendered in game,
                             *          {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isVisible(): boolean;
                            
                            /**
                             * An effect which is instant can still have a duration, but only if it's set through a
                             *  command.
                             * @return {@code true} if this effect should be applied instantly, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isInstant(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if this effect is considered beneficial, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isBeneficial(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if this effect is considered neutral, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isNeutral(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if this effect is considered harmful, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isHarmful(): boolean;
                            toString(): string;
                            
                        }
                        namespace StatusEffectHelper {
                            interface static {
                                new (s: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.StatusEffectHelper;
                                
                                
                                
                            }
                        }
                        interface StyleHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            hasColor(): boolean;
                            
                            /**
                             * 
                             * @return the color index of this style or {@code -1} if no color is set.
                             * @deprecated use {@link #getColorIndex()} instead.
                             */
                            getColor(): number;
                            
                            /**
                             * 
                             * @return the formatting of this style, or {@code null} if no formatting was found.
                             * @since 1.8.4
                             */
                            getFormatting(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.FormattingHelper;
                            
                            /**
                             * 
                             * @return the color index of this style or {@code -1} if no color is set.
                             * @since 1.8.4
                             */
                            getColorIndex(): number;
                            
                            /**
                             * 
                             * @return the color value of this style or {@code -1} if it doesn't have one.
                             * @since 1.8.4
                             */
                            getColorValue(): number;
                            
                            /**
                             * 
                             * @return the color name of this style or {@code null} if it has no color.
                             * @since 1.8.4
                             */
                            getColorName(): string;
                            hasCustomColor(): boolean;
                            getCustomColor(): number;
                            bold(): boolean;
                            italic(): boolean;
                            underlined(): boolean;
                            strikethrough(): boolean;
                            obfuscated(): boolean;
                            getClickAction(): string;
                            getClickValue(): string;
                            getCustomClickValue(): _javatypes.java.lang.Runnable;
                            getHoverAction(): string;
                            getHoverValue(): any;
                            getInsertion(): string;
                            toString(): string;
                            
                        }
                        namespace StyleHelper {
                            interface static {
                                new (base: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.StyleHelper;
                                
                                
                                
                            }
                        }
                        interface ClientPlayerEntityHelper<T> extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PlayerEntityHelper<T> {
                            
                            
                            /**
                             * Sets the player rotation along the given axis and keeps the other axis the same.
                             * @param direction possible values are "up", "down", "north", "south", "east", "west"
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            lookAt(direction: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                            
                            /**
                             * 
                             * @param yaw (was pitch prior to 1.2.6)
                             * @param pitch (was yaw prior to 1.2.6)
                             * @return 
                             * @since 1.0.3
                             */
                            lookAt(yaw: number, pitch: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                            
                            /**
                             * look at the specified coordinates.
                             * @param x
                             * @param y
                             * @param z
                             * @return 
                             * @since 1.2.8
                             */
                            lookAt(x: number, y: number, z: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                            
                            /**
                             * 
                             * @param x the x coordinate of the block to look at
                             * @param y the y coordinate of the block to look at
                             * @param z the z coordinate of the block to look at
                             * @return {@code true} if the player is targeting the specified block, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            tryLookAt(x: number, y: number, z: number): boolean;
                            
                            /**
                             * Will try many rotations to find one that will make the player target the specified block. If
                             *  successful, the player will be turned towards the block and `true` will be returned. If
                             *  `false` is returned, the player will keep its current rotation.
                             * @param pos the position of the block to look at
                             * @return {@code true} if the player is targeting the specified block, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            tryLookAt(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper): boolean;
                            
                            /**
                             * 
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            turnLeft(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                            
                            /**
                             * 
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            turnRight(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                            
                            /**
                             * 
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            turnBack(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                            
                            /**
                             * 
                             * @param entity
                             * @since 1.5.0
                             */
                            attack(entity: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                            
                            /**
                             * 
                             * @since 1.6.0
                             * @param await
                             * @param entity
                             */
                            attack(entity: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>, await: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                            
                            /**
                             * 
                             * @param x the x coordinate to attack
                             * @param y the y coordinate to attack
                             * @param z the z coordinate to attack
                             * @param direction possible values are "up", "down", "north", "south", "east", "west"
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            attack(x: number, y: number, z: number, direction: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                            
                            /**
                             * 
                             * @param x
                             * @param y
                             * @param z
                             * @param direction 0-5 in order: [DOWN, UP, NORTH, SOUTH, WEST, EAST];
                             * @since 1.5.0
                             */
                            attack(x: number, y: number, z: number, direction: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                            
                            /**
                             * 
                             * @param x the x coordinate to attack
                             * @param y the y coordinate to attack
                             * @param z the z coordinate to attack
                             * @param direction possible values are "up", "down", "north", "south", "east", "west"
                             * @param await whether to wait for the attack to finish
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            attack(x: number, y: number, z: number, direction: string, await: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                            
                            /**
                             * 
                             * @since 1.6.0
                             * @param x
                             * @param y
                             * @param z
                             * @param direction 0-5 in order: [DOWN, UP, NORTH, SOUTH, WEST, EAST];
                             * @param await
                             * @throws InterruptedException
                             */
                            attack(x: number, y: number, z: number, direction: number, await: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                            
                            /**
                             * 
                             * @param entity
                             * @param offHand
                             * @since 1.5.0, renamed from {@code interact} in 1.6.0
                             */
                            interactEntity(entity: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>, offHand: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                            
                            /**
                             * 
                             * @param entity
                             * @param offHand
                             * @param await
                             * @since 1.6.0
                             * @throws InterruptedException
                             */
                            interactEntity(entity: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>, offHand: boolean, await: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                            
                            /**
                             * 
                             * @param offHand
                             * @since 1.5.0, renamed from {@code interact} in 1.6.0
                             */
                            interactItem(offHand: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                            
                            /**
                             * 
                             * @since 1.6.0
                             * @param offHand
                             * @param await
                             */
                            interactItem(offHand: boolean, await: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                            
                            /**
                             * 
                             * @param x the x coordinate to interact
                             * @param y the y coordinate to interact
                             * @param z the z coordinate to interact
                             * @param direction possible values are "up", "down", "north", "south", "east", "west"
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            interactBlock(x: number, y: number, z: number, direction: string, offHand: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                            
                            /**
                             * 
                             * @param x
                             * @param y
                             * @param z
                             * @param direction 0-5 in order: [DOWN, UP, NORTH, SOUTH, WEST, EAST];
                             * @param offHand
                             * @since 1.5.0, renamed from {@code interact} in 1.6.0
                             */
                            interactBlock(x: number, y: number, z: number, direction: number, offHand: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                            
                            /**
                             * 
                             * @param x the x coordinate to interact
                             * @param y the y coordinate to interact
                             * @param z the z coordinate to interact
                             * @param direction possible values are "up", "down", "north", "south", "east", "west"
                             * @param await whether to wait for the interaction to complete
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            interactBlock(x: number, y: number, z: number, direction: string, offHand: boolean, await: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                            interactBlock(x: number, y: number, z: number, direction: number, offHand: boolean, await: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                            
                            /**
                             * 
                             * @since 1.5.0
                             */
                            interact(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                            
                            /**
                             * 
                             * @since 1.6.0
                             * @param await
                             */
                            interact(await: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                            
                            /**
                             * 
                             * @since 1.5.0
                             */
                            attack(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                            
                            /**
                             * 
                             * @since 1.6.0
                             * @param await
                             */
                            attack(await: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                            
                            /**
                             * 
                             * @param stop
                             * @since 1.6.3
                             * @return 
                             */
                            setLongAttack(stop: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                            
                            /**
                             * 
                             * @param stop
                             * @since 1.6.3
                             * @return 
                             */
                            setLongInteract(stop: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                            
                            /**
                             * 
                             * @since 1.6.5
                             * @return 
                             */
                            getItemCooldownsRemainingTicks(): _javatypes.java.util.Map<string, number>;
                            
                            /**
                             * 
                             * @param item
                             * @since 1.6.5
                             * @return 
                             */
                            getItemCooldownRemainingTicks(item: string): number;
                            
                            /**
                             * 
                             * @since 1.6.5
                             * @return 
                             */
                            getTicksSinceCooldownsStart(): _javatypes.java.util.Map<string, number>;
                            
                            /**
                             * 
                             * @param item
                             * @since 1.6.5
                             * @return 
                             */
                            getTicksSinceCooldownStart(item: string): number;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.1.2
                             */
                            getFoodLevel(): number;
                            
                            /**
                             * This will return the invisible hunger decade that you may have seen in mods as a yellow overlay.
                             * @return the saturation level.
                             * @since 1.8.4
                             */
                            getSaturation(): number;
                            
                            /**
                             * 
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            dropHeldItem(dropStack: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<any>;
                            
                            /**
                             * 
                             * @return an advancement manager to work with advancements.
                             * @since 1.8.4
                             */
                            getAdvancementManager(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementManagerHelper;
                            
                            /**
                             * The returned time is an approximation and will likely be off by a few ticks, although it
                             *  should always be less than the actual time.
                             * @param block the block to mine
                             * @return the time in ticks that it will approximately take the player with the currently held
                             *          item to mine said block.
                             */
                            calculateMiningSpeed(block: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockStateHelper): number;
                            
                            /**
                             * Calculate mining speed for a given block mined with a specified item in ticks. Use air to
                             *  calculate the mining speed for the hand. The returned time is an approximation and will
                             *  likely be off by a few ticks, although it should always be less than the actual time.
                             * @param usedItem the item to mine with
                             * @param blockState the block to mine
                             * @return the time in ticks that it will approximately take the player with the specified item
                             *          to mine said block.
                             * @since 1.8.4
                             */
                            calculateMiningSpeed(usedItem: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper, blockState: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockStateHelper): number;
                            
                        }
                        namespace ClientPlayerEntityHelper {
                            interface static {
                                new <T>(e: T): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper<T>;
                                
                                
                                
                            }
                        }
                        interface ChatHudLineHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            getText(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            getCreationTick(): number;
                            deleteById(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ChatHudLineHelper;
                            toString(): string;
                            
                        }
                        namespace ChatHudLineHelper {
                            interface static {
                                new (base: /* minecraft classes, as any, because obfuscation: */ any, hud: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ChatHudLineHelper;
                                
                                
                                
                            }
                        }
                        interface ServerInfoHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            getName(): string;
                            getAddress(): string;
                            getPlayerCountLabel(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            getLabel(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            getPing(): number;
                            getProtocolVersion(): number;
                            getVersion(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            getPlayerListSummary(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper>;
                            resourcePackPolicy(): string;
                            getIcon(): string;
                            isOnline(): boolean;
                            isLocal(): boolean;
                            getNbt(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper<any>;
                            
                            /**
                             * 
                             * @return {@code true} if the server enforces secure chat, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isSecureChatEnforced(): boolean;
                            toString(): string;
                            
                        }
                        namespace ServerInfoHelper {
                            interface static {
                                new (base: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ServerInfoHelper;
                                
                                
                                
                            }
                        }
                        interface FluidStateHelper extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.StateHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @return the block's id.
                             * @since 1.8.4
                             */
                            getId(): string;
                            
                            /**
                             * 
                             * @return {@code true} if this fluid is still, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isStill(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if this fluid is empty (the default fluid state for non fluid blocks),
                             *          {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isEmpty(): boolean;
                            
                            /**
                             * 
                             * @return the height of this state.
                             * @since 1.8.4
                             */
                            getHeight(): number;
                            
                            /**
                             * 
                             * @return the level of this state.
                             * @since 1.8.4
                             */
                            getLevel(): number;
                            
                            /**
                             * 
                             * @return {@code true} if the fluid has some random tick logic (only used by lava to do the
                             *          fire spread), {@code false} otherwise.
                             * @since 1.8.4
                             */
                            hasRandomTicks(): boolean;
                            
                            /**
                             * 
                             * @param pos the position in the world
                             * @return the velocity that will be applied to entities at the given position.
                             * @since 1.8.4
                             */
                            getVelocity(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            
                            /**
                             * 
                             * @return the block state of this fluid.
                             * @since 1.8.4
                             */
                            getBlockState(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockStateHelper;
                            
                            /**
                             * 
                             * @return the blast resistance of this fluid.
                             * @since 1.8.4
                             */
                            getBlastResistance(): number;
                            toString(): string;
                            
                        }
                        namespace FluidStateHelper {
                            interface static {
                                new (base: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.FluidStateHelper;
                                
                                
                                
                            }
                        }
                        interface PlayerListEntryHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @since 1.1.9
                             * @return 
                             */
                            getUUID(): string;
                            
                            /**
                             * 
                             * @since 1.0.2
                             * @return 
                             */
                            getName(): string;
                            
                            /**
                             * 
                             * @since 1.6.5
                             * @return 
                             */
                            getPing(): number;
                            
                            /**
                             * 
                             * @since 1.6.5
                             * @return null if unknown
                             */
                            getGamemode(): string;
                            
                            /**
                             * 
                             * @since 1.1.9
                             * @return 
                             */
                            getDisplayText(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            
                            /**
                             * 
                             * @since 1.8.2
                             * @return 
                             */
                            getPublicKey(): number[];
                            
                            /**
                             * 
                             * @return {@code true} if the player has a cape enabled, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            hasCape(): boolean;
                            
                            /**
                             * A slim skin is an Alex skin, while the default one is Steve.
                             * @return {@code true} if the player has a slim skin, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            hasSlimModel(): boolean;
                            
                            /**
                             * 
                             * @return the identifier of the player's skin texture or {@code null} if it's unknown.
                             * @since 1.8.4
                             */
                            getSkinTexture(): string;
                            
                            /**
                             * 
                             * @return the identifier of the player's cape texture or {@code null} if it's unknown.
                             * @since 1.8.4
                             */
                            getCapeTexture(): string;
                            
                            /**
                             * 
                             * @return the identifier of the player's elytra texture or {@code null} if it's unknown.
                             * @since 1.8.4
                             */
                            getElytraTexture(): string;
                            
                            /**
                             * 
                             * @return the team of the player or {@code null} if the player is not in a team.
                             * @since 1.8.4
                             */
                            getTeam(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TeamHelper;
                            toString(): string;
                            
                        }
                        namespace PlayerListEntryHelper {
                            interface static {
                                new (p: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PlayerListEntryHelper;
                                
                                
                                
                            }
                        }
                        interface CommandContextHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper<_javatypes.com.mojang.brigadier.context.CommandContext<any>>, Events.BaseEvent {
                            
                            
                            /**
                             * 
                             * @param name
                             * @return 
                             * @since 1.4.2
                             * @throws CommandSyntaxException
                             */
                            getArg(name: string): any;
                            getChild(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CommandContextHelper;
                            getRange(): _javatypes.com.mojang.brigadier.context.StringRange;
                            getInput(): string;
                            
                        }
                        namespace CommandContextHelper {
                            interface static {
                                new (base: _javatypes.com.mojang.brigadier.context.CommandContext<any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CommandContextHelper;
                                
                                
                                
                            }
                        }
                        interface OptionsHelper$VideoOptionsHelper extends any {
                            readonly parent: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            
                            /**
                             * 
                             * @return the parent options helper.
                             * @since 1.8.4
                             */
                            getParent(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * 
                             * @return the full screen resolution as a string.
                             * @since 1.8.4
                             */
                            getFullscreenResolution(): string;
                            
                            /**
                             * 
                             * @return the current biome blend radius.
                             * @since 1.8.4
                             */
                            getBiomeBlendRadius(): number;
                            
                            /**
                             * 
                             * @param radius the new biome blend radius
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setBiomeBlendRadius(radius: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$VideoOptionsHelper;
                            
                            /**
                             * 
                             * @return the selected graphics mode.
                             * @since 1.8.4
                             */
                            getGraphicsMode(): string;
                            
                            /**
                             * 
                             * @param mode the graphics mode to select. Must be either "fast", "fancy" or "fabulous"
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setGraphicsMode(mode: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$VideoOptionsHelper;
                            
                            /**
                             * 
                             * @return the selected chunk builder mode.
                             * @since 1.8.4
                             */
                            getChunkBuilderMode(): string;
                            
                            /**
                             * 
                             * @param mode the chunk builder mode to select. Must be either "none", "nearby" or
                             *              "player_affected"
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setChunkBuilderMode(mode: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$VideoOptionsHelper;
                            
                            /**
                             * 
                             * @return the selected smooth lightning mode.
                             * @since 1.8.4
                             */
                            getSmoothLightningMode(): boolean;
                            
                            /**
                             * 
                             * @param mode the smooth lightning mode to select. boolean value
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setSmoothLightningMode(mode: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$VideoOptionsHelper;
                            
                            /**
                             * 
                             * @return the current render distance in chunks.
                             * @since 1.8.4
                             */
                            getRenderDistance(): number;
                            
                            /**
                             * 
                             * @param radius the new render distance in chunks
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setRenderDistance(radius: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$VideoOptionsHelper;
                            
                            /**
                             * 
                             * @return the current simulation distance in chunks.
                             * @since 1.8.4
                             */
                            getSimulationDistance(): number;
                            
                            /**
                             * 
                             * @param radius the new simulation distance in chunks
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setSimulationDistance(radius: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$VideoOptionsHelper;
                            
                            /**
                             * 
                             * @return the current upper fps limit.
                             * @since 1.8.4
                             */
                            getMaxFps(): number;
                            
                            /**
                             * 
                             * @param maxFps the new maximum fps limit
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setMaxFps(maxFps: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$VideoOptionsHelper;
                            
                            /**
                             * 
                             * @return {@code true} if vsync is enabled, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isVsyncEnabled(): boolean;
                            
                            /**
                             * 
                             * @param val whether to enable vsync or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            enableVsync(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$VideoOptionsHelper;
                            
                            /**
                             * 
                             * @return {@code true} if view bobbing is enabled, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isViewBobbingEnabled(): boolean;
                            
                            /**
                             * 
                             * @param val whether to enable view bobbing or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            enableViewBobbing(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$VideoOptionsHelper;
                            
                            /**
                             * 
                             * @return the current gui scale.
                             * @since 1.8.4
                             */
                            getGuiScale(): number;
                            
                            /**
                             * 
                             * @param scale the gui scale to set. Must be 1, 2, 3 or 4
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setGuiScale(scale: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$VideoOptionsHelper;
                            
                            /**
                             * 
                             * @return the current attack indicator type.
                             * @since 1.8.4
                             */
                            getAttackIndicatorType(): string;
                            
                            /**
                             * 
                             * @param type the attack indicator type. Must be either "off", "crosshair", or "hotbar"
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setAttackIndicatorType(type: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$VideoOptionsHelper;
                            
                            /**
                             * 
                             * @return the current gamma value.
                             * @since 1.8.4
                             */
                            getGamma(): number;
                            
                            /**
                             * 
                             * @param gamma the new gamma value
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setGamma(gamma: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$VideoOptionsHelper;
                            
                            /**
                             * 
                             * @return the current brightness value.
                             * @since 1.8.4
                             */
                            getBrightness(): number;
                            
                            /**
                             * 
                             * @param gamma the new brightness value
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setBrightness(gamma: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$VideoOptionsHelper;
                            
                            /**
                             * 
                             * @return the current cloud rendering mode.
                             * @since 1.8.4
                             */
                            getCloudsMode(): string;
                            
                            /**
                             * 
                             * @param mode the cloud rendering mode to select. Must be either "off", "fast" or "fancy"
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setCloudsMode(mode: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$VideoOptionsHelper;
                            
                            /**
                             * 
                             * @return {@code true} if the game is running in fullscreen mode, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isFullscreen(): boolean;
                            
                            /**
                             * 
                             * @param fullscreen whether to enable fullscreen mode or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setFullScreen(fullscreen: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$VideoOptionsHelper;
                            
                            /**
                             * 
                             * @return the current particle rendering mode.
                             * @since 1.8.4
                             */
                            getParticleMode(): string;
                            
                            /**
                             * 
                             * @param mode the particle rendering mode to select. Must be either "minimal", "decreased"
                             *              or "all"
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setParticleMode(mode: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$VideoOptionsHelper;
                            
                            /**
                             * 
                             * @return the current mip map level.
                             * @since 1.8.4
                             */
                            getMipMapLevels(): number;
                            
                            /**
                             * 
                             * @param val the new mip map level
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setMipMapLevels(val: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$VideoOptionsHelper;
                            
                            /**
                             * 
                             * @return {@code true} if entity shadows should be rendered, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            areEntityShadowsEnabled(): boolean;
                            
                            /**
                             * 
                             * @param val whether to enable entity shadows or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            enableEntityShadows(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$VideoOptionsHelper;
                            
                            /**
                             * 
                             * @return the current distortion effect scale.
                             * @since 1.8.4
                             */
                            getDistortionEffect(): number;
                            
                            /**
                             * 
                             * @param val the new distortion effect scale
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setDistortionEffects(val: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$VideoOptionsHelper;
                            
                            /**
                             * 
                             * @return the current entity render distance.
                             * @since 1.8.4
                             */
                            getEntityDistance(): number;
                            
                            /**
                             * 
                             * @param val the new entity render distance
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setEntityDistance(val: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$VideoOptionsHelper;
                            
                            /**
                             * 
                             * @return the current fov value.
                             * @since 1.8.4
                             */
                            getFovEffects(): number;
                            
                            /**
                             * 
                             * @param val the new fov value
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setFovEffects(val: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$VideoOptionsHelper;
                            
                            /**
                             * 
                             * @return {@code true} if the autosave indicator is enabled, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isAutosaveIndicatorEnabled(): boolean;
                            
                            /**
                             * 
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            enableAutosaveIndicator(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$VideoOptionsHelper;
                            
                        }
                        namespace OptionsHelper$VideoOptionsHelper {
                            interface static {
                                new (OptionsHelper: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$VideoOptionsHelper;
                                
                                
                                
                            }
                        }
                        interface FoodComponentHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @return the amount of hunger this food restores.
                             * @since 1.8.4
                             */
                            getHunger(): number;
                            
                            /**
                             * 
                             * @return the amount of saturation this food restores.
                             * @since 1.8.4
                             */
                            getSaturation(): number;
                            
                            /**
                             * 
                             * @return {@code true} if this food can be eaten by wolves, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isMeat(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if this food can be eaten even when the player is not hungry,
                             *          {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isAlwaysEdible(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the food can be eaten faster than usual, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isFastFood(): boolean;
                            
                            /**
                             * 
                             * @return a map of status effects and their respective probabilities.
                             * @since 1.8.4
                             */
                            getStatusEffects(): _javatypes.java.util.Map<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.StatusEffectHelper, number>;
                            toString(): string;
                            
                        }
                        namespace FoodComponentHelper {
                            interface static {
                                new (base: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.FoodComponentHelper;
                                
                                
                                
                            }
                        }
                        interface OptionsHelper$ControlOptionsHelper extends any {
                            readonly parent: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            
                            /**
                             * 
                             * @return the parent options helper.
                             * @since 1.8.4
                             */
                            getParent(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * 
                             * @return the current mouse sensitivity.
                             * @since 1.8.4
                             */
                            getMouseSensitivity(): number;
                            
                            /**
                             * 
                             * @param val the new mouse sensitivity
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setMouseSensitivity(val: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ControlOptionsHelper;
                            
                            /**
                             * 
                             * @return {@code true} if the mouse direction should be inverted.
                             * @since 1.8.4
                             */
                            isMouseInverted(): boolean;
                            
                            /**
                             * 
                             * @param val whether to invert the mouse direction or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            invertMouse(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ControlOptionsHelper;
                            
                            /**
                             * 
                             * @return the current mouse wheel sensitivity.
                             * @since 1.8.4
                             */
                            getMouseWheelSensitivity(): number;
                            
                            /**
                             * 
                             * @param val the new mouse wheel sensitivity
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setMouseWheelSensitivity(val: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ControlOptionsHelper;
                            
                            /**
                             * This option was introduced due to a bug on some systems where the mouse wheel would
                             *  scroll too fast.
                             * @return {@code true} if discrete scrolling is enabled, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isDiscreteScrollingEnabled(): boolean;
                            
                            /**
                             * 
                             * @param val whether to enable discrete scrolling or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            enableDiscreteScrolling(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ControlOptionsHelper;
                            
                            /**
                             * 
                             * @return {@code true} if touchscreen mode is enabled, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isTouchscreenEnabled(): boolean;
                            
                            /**
                             * 
                             * @param val whether to enable touchscreen mode or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            enableTouchscreen(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ControlOptionsHelper;
                            
                            /**
                             * Raw input is directly reading the mouse data, without any adjustments due to other
                             *  programs or the operating system.
                             * @return {@code true} if raw mouse input is enabled, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isRawMouseInputEnabled(): boolean;
                            
                            /**
                             * 
                             * @param val whether to enable raw mouse input or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            enableRawMouseInput(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ControlOptionsHelper;
                            
                            /**
                             * 
                             * @return {@code true} if auto jump is enabled, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isAutoJumpEnabled(): boolean;
                            
                            /**
                             * 
                             * @param val whether to enable auto jump or not or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            enableAutoJump(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ControlOptionsHelper;
                            
                            /**
                             * 
                             * @return {@code true} if the toggle functionality for sneaking is enabled, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            isSneakTogglingEnabled(): boolean;
                            
                            /**
                             * 
                             * @param val whether to enable or disable the toggle functionality for sneaking
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            toggleSneak(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ControlOptionsHelper;
                            
                            /**
                             * 
                             * @return {@code true} if the toggle functionality for sprinting is enabled, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            isSprintTogglingEnabled(): boolean;
                            
                            /**
                             * 
                             * @param val whether to enable or disable the toggle functionality for sprinting
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            toggleSprint(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ControlOptionsHelper;
                            
                            /**
                             * 
                             * @return an array of all raw minecraft keybindings.
                             * @since 1.8.4
                             */
                            getRawKeys(): /* minecraft classes, as any, because obfuscation: */ any[];
                            
                            /**
                             * 
                             * @return a list of all keybinding catehories.
                             * @since 1.8.4
                             */
                            getCategories(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return a list of all key names.
                             * @since 1.8.4
                             */
                            getKeys(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return a map of all keybindings and their bound key.
                             * @since 1.8.4
                             */
                            getKeyBinds(): _javatypes.java.util.Map<string, string>;
                            
                            /**
                             * 
                             * @param category the category to get keybindings from
                             * @return a map of all keybindings and their bound key in the specified category.
                             * @since 1.8.4
                             */
                            getKeyBindsByCategory(category: string): _javatypes.java.util.Map<string, string>;
                            
                            /**
                             * 
                             * @return a map of all keybinding categories, containing a map of all keybindings in that
                             *          category and their bound key.
                             * @since 1.8.4
                             */
                            getKeyBindsByCategory(): _javatypes.java.util.Map<string, _javatypes.java.util.Map<string, string>>;
                            
                        }
                        namespace OptionsHelper$ControlOptionsHelper {
                            interface static {
                                new (OptionsHelper: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ControlOptionsHelper;
                                
                                
                                
                            }
                        }
                        interface OptionsHelper$AccessibilityOptionsHelper extends any {
                            readonly parent: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            
                            /**
                             * 
                             * @return the parent options helper.
                             * @since 1.8.4
                             */
                            getParent(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * 
                             * @return the current narrator mode.
                             * @since 1.8.4
                             */
                            getNarratorMode(): string;
                            
                            /**
                             * 
                             * @param mode the mode to set the narrator to. Must be either "OFF", "ALL", "CHAT", or
                             *              "SYSTEM"
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setNarratorMode(mode: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$AccessibilityOptionsHelper;
                            
                            /**
                             * 
                             * @return {@code true} if subtitles are enabled.
                             * @since 1.8.4
                             */
                            areSubtitlesShown(): boolean;
                            
                            /**
                             * 
                             * @param val whether to show subtitles or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            showSubtitles(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$AccessibilityOptionsHelper;
                            
                            /**
                             * 
                             * @param val the new opacity for the text background
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setTextBackgroundOpacity(val: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$AccessibilityOptionsHelper;
                            
                            /**
                             * 
                             * @return the opacity of the text background.
                             * @since 1.8.4
                             */
                            getTextBackgroundOpacity(): number;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            isBackgroundForChatOnly(): boolean;
                            
                            /**
                             * 
                             * @param val
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            enableBackgroundForChatOnly(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$AccessibilityOptionsHelper;
                            
                            /**
                             * 
                             * @return the current chat opacity.
                             * @since 1.8.4
                             */
                            getChatOpacity(): number;
                            
                            /**
                             * 
                             * @param val the new chat opacity
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setChatOpacity(val: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$AccessibilityOptionsHelper;
                            
                            /**
                             * 
                             * @return the current chat line spacing.
                             * @since 1.8.4
                             */
                            getChatLineSpacing(): number;
                            
                            /**
                             * 
                             * @param val the new chat line spacing
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setChatLineSpacing(val: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$AccessibilityOptionsHelper;
                            
                            /**
                             * 
                             * @return the current chat delay in seconds.
                             * @since 1.8.4
                             */
                            getChatDelay(): number;
                            
                            /**
                             * 
                             * @param val the new chat delay in seconds
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setChatDelay(val: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$AccessibilityOptionsHelper;
                            
                            /**
                             * 
                             * @return {@code true} if auto jump is enabled, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isAutoJumpEnabled(): boolean;
                            
                            /**
                             * 
                             * @param val whether to enable auto jump or not or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            enableAutoJump(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$AccessibilityOptionsHelper;
                            
                            /**
                             * 
                             * @return {@code true} if the toggle functionality for sneaking is enabled, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            isSneakTogglingEnabled(): boolean;
                            
                            /**
                             * 
                             * @param val whether to enable or disable the toggle functionality for sneaking
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            toggleSneak(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$AccessibilityOptionsHelper;
                            
                            /**
                             * 
                             * @return {@code true} if the toggle functionality for sprinting is enabled, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            isSprintTogglingEnabled(): boolean;
                            
                            /**
                             * 
                             * @param val whether to enable or disable the toggle functionality for sprinting
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            toggleSprint(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$AccessibilityOptionsHelper;
                            
                            /**
                             * 
                             * @return the current distortion effect scale.
                             * @since 1.8.4
                             */
                            getDistortionEffect(): number;
                            
                            /**
                             * 
                             * @param val the new distortion effect scale
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setDistortionEffect(val: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$AccessibilityOptionsHelper;
                            
                            /**
                             * 
                             * @return the current fov effect scale.
                             * @since 1.8.4
                             */
                            getFovEffect(): number;
                            
                            /**
                             * 
                             * @param val the new fov effect scale
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setFovEffect(val: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$AccessibilityOptionsHelper;
                            
                            /**
                             * 
                             * @return {@code true} if the monochrome logo is enabled, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isMonochromeLogoEnabled(): boolean;
                            
                            /**
                             * 
                             * @param val whether to enable the monochrome logo or not
                             * @return the current helper instance for chaining.
                             * @since 1.8.4
                             */
                            enableMonochromeLogo(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$AccessibilityOptionsHelper;
                            
                            /**
                             * 
                             * @return {@code true} if lighting flashes are hidden, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            areLightningFlashesHidden(): boolean;
                            
                            /**
                             * 
                             * @param val the new fov value
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setFovEffect(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$AccessibilityOptionsHelper;
                            
                        }
                        namespace OptionsHelper$AccessibilityOptionsHelper {
                            interface static {
                                new (OptionsHelper: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$AccessibilityOptionsHelper;
                                
                                
                                
                            }
                        }
                        interface OptionsHelper$SkinOptionsHelper extends any {
                            readonly parent: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            
                            /**
                             * 
                             * @return the parent options helper.
                             * @since 1.8.4
                             */
                            getParent(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * 
                             * @return {@code true} if the player's cape should be shown, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isCapeActivated(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the player's jacket should be shown, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isJacketActivated(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the player's left sleeve should be shown, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            isLeftSleeveActivated(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the player's right sleeve should be shown, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            isRightSleeveActivated(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the player's left pants should be shown, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            isLeftPantsActivated(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the player's right pants should be shown, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            isRightPantsActivated(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the player's hat should be shown, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isHatActivated(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the player's main hand is the right one, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            isRightHanded(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the player's main hand is the left one, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isLeftHanded(): boolean;
                            
                            /**
                             * 
                             * @param val whether the cape should be shown or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            toggleCape(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$SkinOptionsHelper;
                            
                            /**
                             * 
                             * @param val whether the jacket should be shown or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            toggleJacket(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$SkinOptionsHelper;
                            
                            /**
                             * 
                             * @param val whether the left sleeve should be shown or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            toggleLeftSleeve(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$SkinOptionsHelper;
                            
                            /**
                             * 
                             * @param val whether the right sleeve should be shown or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            toggleRightSleeve(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$SkinOptionsHelper;
                            
                            /**
                             * 
                             * @param val whether the left pants should be shown or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            toggleLeftPants(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$SkinOptionsHelper;
                            
                            /**
                             * 
                             * @param val whether the right pants should be shown or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            toggleRightPants(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$SkinOptionsHelper;
                            
                            /**
                             * 
                             * @param val whether the hat should be shown or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            toggleHat(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$SkinOptionsHelper;
                            
                            /**
                             * The hand must be either `"left"` or `"right"`.
                             * @param hand the hand to set as main hand
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            toggleMainHand(hand: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$SkinOptionsHelper;
                            
                        }
                        namespace OptionsHelper$SkinOptionsHelper {
                            interface static {
                                new (OptionsHelper: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$SkinOptionsHelper;
                                
                                
                                
                            }
                        }
                        interface LivingEntityHelper<T> extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<T> {
                            
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @return entity status effects.
                             */
                            getStatusEffects(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.StatusEffectHelper>;
                            
                            /**
                             * For client side entities, excluding the player, this will most likely return `false`
                             *  even if the entity has the effect, as effects are not synced to the client.
                             * @return {@code true} if the entity has the specified status effect, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            hasStatusEffect(id: string): boolean;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @see ItemStackHelper
                             * @return the item in the entity's main hand.
                             */
                            getMainHand(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @return the item in the entity's off hand.
                             */
                            getOffHand(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @return the item in the entity's head armor slot.
                             */
                            getHeadArmor(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @return the item in the entity's chest armor slot.
                             */
                            getChestArmor(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @return the item in the entity's leg armor slot.
                             */
                            getLegArmor(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @return the item in the entity's foot armor slot.
                             */
                            getFootArmor(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            
                            /**
                             * 
                             * @since 1.3.1
                             * @return entity's health
                             */
                            getHealth(): number;
                            
                            /**
                             * 
                             * @since 1.6.5
                             * @return entity's max health
                             */
                            getMaxHealth(): number;
                            
                            /**
                             * 
                             * @return the entity's absorption amount.
                             * @since 1.8.4
                             */
                            getAbsorptionHealth(): number;
                            
                            /**
                             * 
                             * @return the entity's armor value.
                             * @since 1.8.4
                             */
                            getArmor(): number;
                            
                            /**
                             * 
                             * @return the entity's default health.
                             * @since 1.8.4
                             */
                            getDefaultHealth(): number;
                            
                            /**
                             * 
                             * @return the entity's mob category, {@code UNDEAD}, {@code DEFAULT}, {@code ARTHROPOD}, or
                             *          {@code ILLAGER}, {@code AQUATIC} or {@code UNKNOWN}.
                             * @since 1.8.4
                             */
                            getMobCategory(): string;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @return if the entity is in a bed.
                             */
                            isSleeping(): boolean;
                            
                            /**
                             * 
                             * @since 1.5.0
                             * @return if the entity has elytra deployed
                             */
                            isFallFlying(): boolean;
                            
                            /**
                             * 
                             * @return the bow pull progress of the entity, {@code 0} by default.
                             * @since 1.8.4
                             */
                            getBowPullProgress(): number;
                            
                            /**
                             * 
                             * @return {@code true} if the entity is a baby, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isBaby(): boolean;
                            
                            /**
                             * 
                             * @param entity the entity to check line of sight to
                             * @return {@code true} if the player has line of sight to the specified entity, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            canSeeEntity(entity: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>): boolean;
                            
                            /**
                             * 
                             * @param entity the entity to check line of sight to
                             * @param simpleCast whether to use a simple raycast or a more complex one
                             * @return {@code true} if the entity has line of sight to the specified entity, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            canSeeEntity(entity: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>, simpleCast: boolean): boolean;
                            
                        }
                        namespace LivingEntityHelper {
                            interface static {
                                new <T>(e: T): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LivingEntityHelper<T>;
                                
                                
                                
                            }
                        }
                        interface PlayerAbilitiesHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @since 1.0.3
                             * @return whether the player can be damaged.
                             */
                            getInvulnerable(): boolean;
                            
                            /**
                             * 
                             * @since 1.0.3
                             * @return if the player is currently flying.
                             */
                            getFlying(): boolean;
                            
                            /**
                             * 
                             * @since 1.0.3
                             * @return if the player is allowed to fly.
                             */
                            getAllowFlying(): boolean;
                            
                            /**
                             * 
                             * @since 1.0.3
                             * @return if the player is in creative.
                             */
                            getCreativeMode(): boolean;
                            
                            /**
                             * Even if this method returns true, the player may not be able to modify the world due to other
                             *  restrictions such as plugins and mods. Modifying the world includes, placing, breaking or
                             *  interacting with blocks.
                             * @return {@code true} if the player is allowed to modify the world, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            canModifyWorld(): boolean;
                            
                            /**
                             * set the player flying state.
                             * @since 1.0.3
                             * @param b
                             * @return 
                             */
                            setFlying(b: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PlayerAbilitiesHelper;
                            
                            /**
                             * set the player allow flying state.
                             * @since 1.0.3
                             * @param b
                             * @return 
                             */
                            setAllowFlying(b: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PlayerAbilitiesHelper;
                            
                            /**
                             * 
                             * @since 1.0.3
                             * @return the player fly speed multiplier.
                             */
                            getFlySpeed(): number;
                            
                            /**
                             * set the player fly speed multiplier.
                             * @since 1.0.3
                             * @param flySpeed
                             * @return 
                             */
                            setFlySpeed(flySpeed: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PlayerAbilitiesHelper;
                            
                            /**
                             * 
                             * @return the player's walk speed.
                             * @since 1.8.4
                             */
                            getWalkSpeed(): number;
                            
                            /**
                             * 
                             * @param speed the new walk speed
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setWalkSpeed(speed: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PlayerAbilitiesHelper;
                            toString(): string;
                            
                        }
                        namespace PlayerAbilitiesHelper {
                            interface static {
                                new (a: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PlayerAbilitiesHelper;
                                
                                
                                
                            }
                        }
                        interface MerchantEntityHelper<T> extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LivingEntityHelper<T> {
                            
                            
                            /**
                             * these might not work... depends on the data the server sends, maybe just singleplayer.
                             * @return 
                             */
                            getTrades(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TradeOfferHelper>;
                            refreshTrades(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TradeOfferHelper>;
                            
                            /**
                             * 
                             * @return 
                             */
                            getExperience(): number;
                            
                            /**
                             * 
                             * @return 
                             */
                            hasCustomer(): boolean;
                            
                        }
                        namespace MerchantEntityHelper {
                            interface static {
                                new <T>(e: T): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.MerchantEntityHelper<T>;
                                
                                
                                
                            }
                        }
                        interface UniversalBlockStateHelper extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockStateHelper {
                            
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getAttachment(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getEastWallShape(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getNorthWallShape(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getSouthWallShape(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getWestWallShape(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getEastWireConnection(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getNorthWireConnection(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getSouthWireConnection(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getWestWireConnection(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getBlockHalf(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getDoubleBlockHalf(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getRailShape(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getStraightRailShape(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getOrientation(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getWallMountLocation(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getHorizontalAxis(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getAxis(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getHorizontalFacing(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.DirectionHelper;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getFacingHopper(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.DirectionHelper;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getFacing(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.DirectionHelper;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            isFacingUp(): boolean;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            isFacingDown(): boolean;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            isFacingNorth(): boolean;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            isFacingSouth(): boolean;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            isFacingEast(): boolean;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            isFacingWest(): boolean;
                            
                            /**
                             * Used on beehives.
                             * @return 
                             * @since 1.8.4
                             */
                            getHoneyLevel(): number;
                            
                            /**
                             * Used on scaffolding.
                             * @return 
                             * @since 1.8.4
                             */
                            isScaffoldingAtBottom(): boolean;
                            
                            /**
                             * Used on bubble columns.
                             * @return 
                             * @since 1.8.4
                             */
                            doesBubbleColumnDragDown(): boolean;
                            
                            /**
                             * Used on bubble columns.
                             * @return 
                             * @since 1.8.4
                             */
                            doesBubbleColumnLiftUp(): boolean;
                            
                            /**
                             * Used on trip wire hooks.
                             * @return 
                             * @since 1.8.4
                             */
                            isTripWireHookAttached(): boolean;
                            
                            /**
                             * Used on trip wires.
                             * @return 
                             * @since 1.8.4
                             */
                            isTripWireDisarmed(): boolean;
                            
                            /**
                             * Used on trip wires.
                             * @return 
                             * @since 1.8.4
                             */
                            isTripWireAttached(): boolean;
                            
                            /**
                             * Used on command blocks.
                             * @return 
                             * @since 1.8.4
                             */
                            isCommandBlockConditional(): boolean;
                            
                            /**
                             * Used on hoppers.
                             * @return 
                             * @since 1.8.4
                             */
                            isHopperEnabled(): boolean;
                            
                            /**
                             * Used on pistons.
                             * @return 
                             * @since 1.8.4
                             */
                            isPistonExtended(): boolean;
                            
                            /**
                             * Used on piston heads.
                             * @return 
                             * @since 1.8.4
                             */
                            isPistonHeadShort(): boolean;
                            
                            /**
                             * Used on end portal frames.
                             * @return 
                             * @since 1.8.4
                             */
                            hasEndPortalEye(): boolean;
                            
                            /**
                             * Used on fluids.
                             * @return 
                             * @since 1.8.4
                             */
                            isFluidFalling(): boolean;
                            
                            /**
                             * Used on fluids.
                             * @return 
                             * @since 1.8.4
                             */
                            getFluidLevel(): number;
                            
                            /**
                             * Used on lanterns.
                             * @return 
                             * @since 1.8.4
                             */
                            isLanternHanging(): boolean;
                            
                            /**
                             * Used on brewing stands.
                             * @return 
                             * @since 1.8.4
                             */
                            hasBrewingStandFirstBottle(): boolean;
                            
                            /**
                             * Used on brewing stands.
                             * @return 
                             * @since 1.8.4
                             */
                            hasBrewingStandSecondBottle(): boolean;
                            
                            /**
                             * Used on brewing stands.
                             * @return 
                             * @since 1.8.4
                             */
                            hasBrewingStandThirdBottle(): boolean;
                            
                            /**
                             * Used on jukeboxes.
                             * @return 
                             * @since 1.8.4
                             */
                            hasJukeboxRecord(): boolean;
                            
                            /**
                             * Used on lecterns.
                             * @return 
                             * @since 1.8.4
                             */
                            hasLecternBook(): boolean;
                            
                            /**
                             * Used on daylight sensors.
                             * @return 
                             * @since 1.8.4
                             */
                            isDayLightSenser(): boolean;
                            
                            /**
                             * Used on daylight sensors.
                             * @return 
                             * @since 1.8.4
                             */
                            isNightLightSenser(): boolean;
                            
                            /**
                             * Used on fence gates.
                             * @return 
                             * @since 1.8.4
                             */
                            isFenceGateInWall(): boolean;
                            
                            /**
                             * Used on fence gates, barrels, trap doors and doors.
                             * @return 
                             * @since 1.8.4
                             */
                            isOpen(): boolean;
                            
                            /**
                             * Used on candles, all types of furnaces, campfires and redstone torches.
                             * @return 
                             * @since 1.8.4
                             */
                            isBlockLit(): boolean;
                            
                            /**
                             * Used on repeaters.
                             * @return 
                             * @since 1.8.4
                             */
                            isRepeaterLocked(): boolean;
                            
                            /**
                             * Used on repeaters.
                             * @return 
                             * @since 1.8.4
                             */
                            getRepeaterDelay(): number;
                            
                            /**
                             * Used on beds.
                             * @return 
                             * @since 1.8.4
                             */
                            isBedOccupied(): boolean;
                            
                            /**
                             * Used on leaves.
                             * @return 
                             * @since 1.8.4
                             */
                            isLeavePersistent(): boolean;
                            
                            /**
                             * Used on leaves.
                             * @return 
                             * @since 1.8.4
                             */
                            getLeaveDistance(): number;
                            
                            /**
                             * Used on bells, buttons, detector rails, diodes, doors, fence gates, lecterns, levers,
                             *  lightning rods, note blocks, observers, powered rails, pressure plates, trap doors, trip wire
                             *  hooks and trip wires.
                             * @return 
                             * @since 1.8.4
                             */
                            isBlockPowered(): boolean;
                            
                            /**
                             * Used on campfires.
                             * @return 
                             * @since 1.8.4
                             */
                            doesCampfireSignalFire(): boolean;
                            
                            /**
                             * Used on snowy dirt blocks.
                             * @return 
                             * @since 1.8.4
                             */
                            isSnowyDirtSnowy(): boolean;
                            
                            /**
                             * Used on dispensers.
                             * @return 
                             * @since 1.8.4
                             */
                            isDispenserTriggered(): boolean;
                            
                            /**
                             * Used on tnt.
                             * @return 
                             * @since 1.8.4
                             */
                            isTntUnstable(): boolean;
                            
                            /**
                             * Used on amethysts, corals, rails, dripleaves, dripleaf stems, campfires, candles, chains,
                             *  chests, conduits, fences, double plants, ender chests, iron bars, glass panes, glow lichen,
                             *  hanging roots, ladders, lanterns, light blocks, lightning rods, pointed dripstone,
                             *  scaffolding , sculk sensors, sea pickles, signs, stairs, slabs, trap doors and walls
                             * @return 
                             * @since 1.8.4
                             */
                            isBlockWaterlogged(): boolean;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getBedPart(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getDoorHinge(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getInstrument(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getPistonType(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getSlabType(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getStairShape(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getStructureBlockMode(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getBambooLeabes(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getTitle(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getVerticalDirection(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getThickness(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getChestType(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getComparatorMode(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            isVineEnd(): boolean;
                            
                            /**
                             * Used on cave vine roots.
                             * @return 
                             * @since 1.8.4
                             */
                            hasCaveVineBerries(): boolean;
                            
                            /**
                             * Used on bamboo.
                             * @return 
                             * @since 1.8.4
                             */
                            getGrowthStageFromAge1(): number;
                            
                            /**
                             * Used on cocoa plants.
                             * @return 
                             * @since 1.8.4
                             */
                            getGrowthStageFromAge2(): number;
                            
                            /**
                             * Used on beetroot, frosted ice, nether warts, sweet berries.
                             * @return 
                             * @since 1.8.4
                             */
                            getGrowthStageFromAge3(): number;
                            
                            /**
                             * Used on chorus flowers.
                             * @return 
                             * @since 1.8.4
                             */
                            getGrowthStageFromAge5(): number;
                            
                            /**
                             * Used on crop and stem blocks, i.e. wheat, pumpkin and melon stems
                             * @return 
                             * @since 1.8.4
                             */
                            getGrowthStageFromAge7(): number;
                            
                            /**
                             * Used on cactus, fire, sugar cane.
                             * @return 
                             * @since 1.8.4
                             */
                            getGrowthStageFromAge15(): number;
                            
                            /**
                             * Used on growing plant heads.
                             * @return 
                             * @since 1.8.4
                             */
                            getGrowthStageFromAge25(): number;
                            
                            /**
                             * Used on cakes.
                             * @return 
                             * @since 1.8.4
                             */
                            getBitesFromCake(): number;
                            
                            /**
                             * Used on candles.
                             * @return 
                             * @since 1.8.4
                             */
                            getCandleCount(): number;
                            
                            /**
                             * Used on turtle eggs.
                             * @return 
                             * @since 1.8.4
                             */
                            getTurtleEggCount(): number;
                            
                            /**
                             * Used on turtle eggs.
                             * @return 
                             * @since 1.8.4
                             */
                            getHatchedTurtleEggCount(): number;
                            
                            /**
                             * Used on snow layers.
                             * @return 
                             * @since 1.8.4
                             */
                            getSnowLayers(): number;
                            
                            /**
                             * Used on snow cauldrons.
                             * @return 
                             * @since 1.8.4
                             */
                            getCauldronSnowLayers(): number;
                            
                            /**
                             * Used on composters.
                             * @return 
                             * @since 1.8.4
                             */
                            getComposterLevel(): number;
                            
                            /**
                             * Used on farmland.
                             * @return 
                             * @since 1.8.4
                             */
                            getFarmlandMoistureLevel(): number;
                            
                            /**
                             * Used on note blocks.
                             * @return 
                             * @since 1.8.4
                             */
                            getNoteFromNoteblock(): number;
                            
                            /**
                             * Used on sea pickles.
                             * @return 
                             * @since 1.8.4
                             */
                            getSeaPickleCount(): number;
                            
                            /**
                             * Used on daylight sensors, redstone wires, sculk sensors, target blocks, weighted pressure
                             *  plates.
                             * @return 
                             * @since 1.8.4
                             */
                            getBlockPower(): number;
                            
                            /**
                             * Used on bamboo, saplings.
                             * @return 
                             * @since 1.8.4
                             */
                            getGrowthStage(): number;
                            
                            /**
                             * Used on scaffolding.
                             * @return 
                             * @since 1.8.4
                             */
                            getScaffoldingDistance(): number;
                            
                            /**
                             * Used on respawn anchors.
                             * @return 
                             * @since 1.8.4
                             */
                            getRespawnAnchorCharges(): number;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            isShrieking(): boolean;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            canSummon(): boolean;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            getSculkSensorPhase(): string;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.8.4
                             */
                            isBlooming(): boolean;
                            
                        }
                        namespace UniversalBlockStateHelper {
                            interface static {
                                new (base: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.UniversalBlockStateHelper;
                                
                                
                                
                            }
                        }
                        interface AdvancementManagerHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @return a map of all advancement ids and their advancement.
                             * @since 1.8.4
                             */
                            getAdvancementsForIdentifiers(): _javatypes.java.util.Map<string, _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementHelper>;
                            
                            /**
                             * 
                             * @return a list of all advancements.
                             * @since 1.8.4
                             */
                            getAdvancements(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementHelper>;
                            
                            /**
                             * Started advancements are advancements that have been started, so at least one task has been
                             *  completed so far, but not fully completed.
                             * @return a list of all started advancements.
                             * @since 1.8.4
                             */
                            getStartedAdvancements(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementHelper>;
                            
                            /**
                             * 
                             * @return a list of all missing advancements.
                             * @since 1.8.4
                             */
                            getMissingAdvancements(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementHelper>;
                            
                            /**
                             * 
                             * @return a list of all completed advancements.
                             * @since 1.8.4
                             */
                            getCompletedAdvancements(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementHelper>;
                            
                            /**
                             * 
                             * @return a list of all the root advancements.
                             * @since 1.8.4
                             */
                            getRootAdvancements(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementHelper>;
                            
                            /**
                             * 
                             * @return a list of all advancements that are not a root.
                             * @since 1.8.4
                             */
                            getSubAdvancements(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementHelper>;
                            
                            /**
                             * 
                             * @param identifier the identifier of the advancement
                             * @return the advancement for the given identifier.
                             * @since 1.8.4
                             */
                            getAdvancement(identifier: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementHelper;
                            
                            /**
                             * 
                             * @return a map of all advancements and their progress.
                             * @since 1.8.4
                             */
                            getAdvancementsProgress(): _javatypes.java.util.Map<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementHelper, _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementProgressHelper>;
                            
                            /**
                             * 
                             * @return the progress of the given advancement.
                             * @since 1.8.4
                             */
                            getAdvancementProgress(identifier: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementProgressHelper;
                            toString(): string;
                            
                        }
                        namespace AdvancementManagerHelper {
                            interface static {
                                new (advancementManager: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementManagerHelper;
                                
                                
                                
                            }
                        }
                        interface DirectionHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @return the name of this direction.
                             * @since 1.8.4
                             */
                            getName(): string;
                            
                            /**
                             * 
                             * @return the name of the axis this direction is aligned to.
                             * @since 1.8.4
                             */
                            getAxis(): string;
                            
                            /**
                             * 
                             * @return {@code true} if this direction is vertical, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isVertical(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if this direction is horizontal, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isHorizontal(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if this direction is pointing in a positive direction, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            isTowardsPositive(): boolean;
                            
                            /**
                             * 
                             * @return the yaw of this direction.
                             * @since 1.8.4
                             */
                            getYaw(): number;
                            
                            /**
                             * 
                             * @return the pitch of this direction.
                             * @since 1.8.4
                             */
                            getPitch(): number;
                            
                            /**
                             * 
                             * @return the opposite direction.
                             * @since 1.8.4
                             */
                            getOpposite(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.DirectionHelper;
                            
                            /**
                             * 
                             * @return the direction to the left.
                             * @since 1.8.4
                             */
                            getLeft(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.DirectionHelper;
                            
                            /**
                             * 
                             * @return the direction to the right.
                             * @since 1.8.4
                             */
                            getRight(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.DirectionHelper;
                            
                            /**
                             * 
                             * @return the direction as a directional vector.
                             * @since 1.8.4
                             */
                            getVector(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            
                            /**
                             * 
                             * @param yaw the yaw to check
                             * @return {@code true} if the yaw is facing this direction more than any other one,
                             *          {@code false} otherwise.
                             * @since 1.8.4
                             */
                            pointsTo(yaw: number): boolean;
                            toString(): string;
                            
                        }
                        namespace DirectionHelper {
                            interface static {
                                new (base: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.DirectionHelper;
                                
                                
                                
                            }
                        }
                        interface ItemEntityHelper extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            getContainedItemStack(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            toString(): string;
                            
                        }
                        namespace ItemEntityHelper {
                            interface static {
                                new (e: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemEntityHelper;
                                
                                
                                
                            }
                        }
                        interface ScoreboardObjectiveHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @return player name to score map
                             */
                            getPlayerScores(): _javatypes.java.util.Map<string, number>;
                            
                            /**
                             * 
                             * @since 1.8.0
                             * @return 
                             */
                            scoreToDisplayName(): _javatypes.java.util.Map<number, _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper>;
                            
                            /**
                             * 
                             * @since 1.7.0
                             * @return 
                             */
                            getKnownPlayers(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @since 1.8.0
                             * @return 
                             */
                            getKnownPlayersDisplayNames(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper>;
                            
                            /**
                             * 
                             * @return name of scoreboard
                             * @since 1.2.9
                             */
                            getName(): string;
                            
                            /**
                             * 
                             * @return name of scoreboard
                             * @since 1.2.9
                             */
                            getDisplayName(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            toString(): string;
                            
                        }
                        namespace ScoreboardObjectiveHelper {
                            interface static {
                                new (o: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ScoreboardObjectiveHelper;
                                
                                
                                
                            }
                        }
                        interface NBTElementHelper$NBTCompoundHelper extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @since 1.6.0
                             * @return 
                             */
                            getKeys(): _javatypes.java.util.Set<string>;
                            
                            /**
                             * 
                             * @since 1.5.1
                             */
                            getType(key: string): number;
                            
                            /**
                             * 
                             * @since 1.5.1
                             */
                            has(key: string): boolean;
                            
                            /**
                             * 
                             * @since 1.5.1
                             */
                            get(key: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper<any>;
                            
                            /**
                             * 
                             * @since 1.5.1
                             */
                            asString(key: string): string;
                            
                        }
                        namespace NBTElementHelper$NBTCompoundHelper {
                            interface static {
                                
                                
                                
                            }
                        }
                        interface VillagerEntityHelper extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.MerchantEntityHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @since 1.6.3
                             * @return 
                             */
                            getProfession(): string;
                            
                            /**
                             * 
                             * @since 1.6.3
                             * @return 
                             */
                            getStyle(): string;
                            
                            /**
                             * 
                             * @since 1.6.3
                             * @return 
                             */
                            getLevel(): number;
                            
                        }
                        namespace VillagerEntityHelper {
                            interface static {
                                new (e: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.VillagerEntityHelper;
                                
                                
                                
                            }
                        }
                        interface OptionsHelper$MusicOptionsHelper extends any {
                            readonly parent: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            
                            /**
                             * 
                             * @return the parent options helper.
                             * @since 1.8.4
                             */
                            getParent(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * 
                             * @return the current master volume.
                             * @since 1.8.4
                             */
                            getMasterVolume(): number;
                            
                            /**
                             * 
                             * @param volume the new master volume
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setMasterVolume(volume: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$MusicOptionsHelper;
                            
                            /**
                             * 
                             * @return the current music volume.
                             * @since 1.8.4
                             */
                            getMusicVolume(): number;
                            
                            /**
                             * 
                             * @param volume the new music volume
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setMusicVolume(volume: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$MusicOptionsHelper;
                            
                            /**
                             * 
                             * @return the current value of played recods.
                             * @since 1.8.4
                             */
                            getRecordsVolume(): number;
                            
                            /**
                             * 
                             * @param volume the new volume for playing records
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setRecordsVolume(volume: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$MusicOptionsHelper;
                            
                            /**
                             * 
                             * @return the current volume of the weather.
                             * @since 1.8.4
                             */
                            getWeatherVolume(): number;
                            
                            /**
                             * 
                             * @param volume the new volume for the weather
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setWeatherVolume(volume: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$MusicOptionsHelper;
                            
                            /**
                             * 
                             * @return the current volume of block related sounds.
                             * @since 1.8.4
                             */
                            getBlocksVolume(): number;
                            
                            /**
                             * 
                             * @param volume the new volume for block sounds
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setBlocksVolume(volume: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$MusicOptionsHelper;
                            
                            /**
                             * 
                             * @return the current volume of hostile mobs.
                             * @since 1.8.4
                             */
                            getHostileVolume(): number;
                            
                            /**
                             * 
                             * @param volume the new volume for hostile mobs
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setHostileVolume(volume: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$MusicOptionsHelper;
                            
                            /**
                             * 
                             * @return the current volume of neutral mobs.
                             * @since 1.8.4
                             */
                            getNeutralVolume(): number;
                            
                            /**
                             * 
                             * @param volume the new volume for neutral mobs
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setNeutralVolume(volume: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$MusicOptionsHelper;
                            
                            /**
                             * 
                             * @return the current player volume.
                             * @since 1.8.4
                             */
                            getPlayerVolume(): number;
                            
                            /**
                             * 
                             * @param volume the new player volume
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setPlayerVolume(volume: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$MusicOptionsHelper;
                            
                            /**
                             * 
                             * @return the current ambient volume.
                             * @since 1.8.4
                             */
                            getAmbientVolume(): number;
                            
                            /**
                             * 
                             * @param volume the new ambient volume
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setAmbientVolume(volume: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$MusicOptionsHelper;
                            
                            /**
                             * 
                             * @return the current voice volume.
                             * @since 1.8.4
                             */
                            getVoiceVolume(): number;
                            
                            /**
                             * 
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setVoiceVolume(volume: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$MusicOptionsHelper;
                            
                            /**
                             * 
                             * @param category the category to get the volume of
                             * @return the volume of the given sound category.
                             * @since 1.8.4
                             */
                            getVolume(category: string): number;
                            
                            /**
                             * 
                             * @return a map of all sound categories and their volumes.
                             * @since 1.8.4
                             */
                            getVolumes(): _javatypes.java.util.Map<string, number>;
                            
                            /**
                             * 
                             * @param category the category to set the volume for
                             * @param volume the new volume
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setVolume(category: string, volume: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$MusicOptionsHelper;
                            
                            /**
                             * 
                             * @return the currently selected sound device.
                             * @since 1.8.4
                             */
                            getSoundDevice(): string;
                            
                            /**
                             * 
                             * @param audioDevice the audio device to use
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setSoundDevice(audioDevice: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$MusicOptionsHelper;
                            
                            /**
                             * 
                             * @return a list of all connected audio devices.
                             * @since 1.8.4
                             */
                            getAudioDevices(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return {@code true} if subtitles should be shown, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            areSubtitlesShown(): boolean;
                            
                            /**
                             * 
                             * @param val whether subtitles should be shown or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            showSubtitles(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$MusicOptionsHelper;
                            
                        }
                        namespace OptionsHelper$MusicOptionsHelper {
                            interface static {
                                new (OptionsHelper: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$MusicOptionsHelper;
                                
                                
                                
                            }
                        }
                        interface TeamHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @since 1.3.0
                             * @return 
                             */
                            getName(): string;
                            
                            /**
                             * 
                             * @since 1.3.0
                             * @return 
                             */
                            getDisplayName(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            
                            /**
                             * 
                             * @since 1.3.0
                             * @return 
                             */
                            getPlayerList(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return the formatting of this team's color.
                             * @since 1.8.4
                             */
                            getColorFormat(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.FormattingHelper;
                            
                            /**
                             * 
                             * @since 1.3.0
                             * @return 
                             * @deprecated use {@link #getColorIndex()} instead.
                             */
                            getColor(): number;
                            
                            /**
                             * 
                             * @return the color index of this team.
                             * @since 1.8.4
                             */
                            getColorIndex(): number;
                            
                            /**
                             * 
                             * @return the color value for this team or {@code -1} if it has no color.
                             * @since 1.8.4
                             */
                            getColorValue(): number;
                            
                            /**
                             * 
                             * @return the name of this team's color.
                             * @since 1.8.4
                             */
                            getColorName(): string;
                            
                            /**
                             * 
                             * @return the scoreboard including this team.
                             * @since 1.8.4
                             */
                            getScoreboard(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ScoreboardsHelper;
                            
                            /**
                             * 
                             * @since 1.3.0
                             * @return 
                             */
                            getPrefix(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            
                            /**
                             * 
                             * @since 1.3.0
                             * @return 
                             */
                            getSuffix(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            
                            /**
                             * 
                             * @since 1.3.0
                             * @return 
                             */
                            getCollisionRule(): string;
                            
                            /**
                             * 
                             * @since 1.3.0
                             * @return 
                             */
                            isFriendlyFire(): boolean;
                            
                            /**
                             * 
                             * @since 1.3.0
                             * @return 
                             */
                            showFriendlyInvisibles(): boolean;
                            
                            /**
                             * 
                             * @since 1.3.0
                             * @return 
                             */
                            nametagVisibility(): string;
                            
                            /**
                             * 
                             * @since 1.3.0
                             * @return 
                             */
                            deathMessageVisibility(): string;
                            toString(): string;
                            
                        }
                        namespace TeamHelper {
                            interface static {
                                new (t: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TeamHelper;
                                
                                
                                
                            }
                        }
                        interface StateHelper<U> extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper<U> {
                            
                            
                            /**
                             * 
                             * @return a map of the state properties with its identifier and value.
                             * @since 1.8.4
                             */
                            toMap(): _javatypes.java.util.Map<string, string>;
                            with<T>(property: string, value: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.StateHelper<U>;
                            
                        }
                        namespace StateHelper {
                            interface static {
                                new <U>(base: U): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.StateHelper<U>;
                                
                                
                                
                            }
                        }
                        interface OptionsHelper$ChatOptionsHelper extends any {
                            readonly parent: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            
                            /**
                             * 
                             * @return the parent options helper.
                             * @since 1.8.4
                             */
                            getParent(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper;
                            
                            /**
                             * 
                             * @return the current chat visibility mode.
                             * @since 1.8.4
                             */
                            getChatVisibility(): string;
                            
                            /**
                             * 
                             * @param mode the new chat visibility mode. Must be "FULL", "SYSTEM" or "HIDDEN
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setChatVisibility(mode: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ChatOptionsHelper;
                            
                            /**
                             * 
                             * @return {@code true} if messages can use color codes, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            areColorsShown(): boolean;
                            
                            /**
                             * 
                             * @param val whether to allow color codes in messages or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setShowColors(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ChatOptionsHelper;
                            
                            /**
                             * 
                             * @return {@code true} if it's allowed to open web links from chat, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            areWebLinksEnabled(): boolean;
                            
                            /**
                             * 
                             * @param val whether to allow opening web links from chat or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            enableWebLinks(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ChatOptionsHelper;
                            
                            /**
                             * 
                             * @return {@code true} if a warning prompt before opening links should be shown,
                             *          {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isWebLinkPromptEnabled(): boolean;
                            
                            /**
                             * 
                             * @param val whether to show warning prompts before opening links or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            enableWebLinkPrompt(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ChatOptionsHelper;
                            
                            /**
                             * 
                             * @return the current chat opacity.
                             * @since 1.8.4
                             */
                            getChatOpacity(): number;
                            
                            /**
                             * 
                             * @param val the new chat opacity
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setChatOpacity(val: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ChatOptionsHelper;
                            
                            /**
                             * 
                             * @param val the new background opacity for text
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setTextBackgroundOpacity(val: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ChatOptionsHelper;
                            
                            /**
                             * 
                             * @return the current background opacity of text.
                             * @since 1.8.4
                             */
                            getTextBackgroundOpacity(): number;
                            
                            /**
                             * 
                             * @return the current text size.
                             * @since 1.8.4
                             */
                            getTextSize(): number;
                            
                            /**
                             * 
                             * @param val the new text size
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setTextSize(val: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ChatOptionsHelper;
                            
                            /**
                             * 
                             * @return the current chat line spacing.
                             * @since 1.8.4
                             */
                            getChatLineSpacing(): number;
                            
                            /**
                             * 
                             * @param val the new chat line spacing
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setChatLineSpacing(val: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ChatOptionsHelper;
                            
                            /**
                             * 
                             * @return the current chat delay in seconds.
                             * @since 1.8.4
                             */
                            getChatDelay(): number;
                            
                            /**
                             * 
                             * @param val the new chat delay in seconds
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setChatDelay(val: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ChatOptionsHelper;
                            
                            /**
                             * 
                             * @return the current chat width.
                             * @since 1.8.4
                             */
                            getChatWidth(): number;
                            
                            /**
                             * 
                             * @param val the new chat width
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setChatWidth(val: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ChatOptionsHelper;
                            
                            /**
                             * 
                             * @return the focused chat height.
                             * @since 1.8.4
                             */
                            getChatFocusedHeight(): number;
                            
                            /**
                             * 
                             * @param val the new focused chat height
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setChatFocusedHeight(val: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ChatOptionsHelper;
                            
                            /**
                             * 
                             * @return the unfocused chat height.
                             * @since 1.8.4
                             */
                            getChatUnfocusedHeight(): number;
                            
                            /**
                             * 
                             * @param val the new unfocused chat height
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setChatUnfocusedHeight(val: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ChatOptionsHelper;
                            
                            /**
                             * 
                             * @return the current narrator mode.
                             * @since 1.8.4
                             */
                            getNarratorMode(): string;
                            
                            /**
                             * 
                             * @param mode the mode to set the narrator to. Must be either "OFF", "ALL", "CHAT", or
                             *              "SYSTEM"
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setNarratorMode(mode: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ChatOptionsHelper;
                            
                            /**
                             * 
                             * @return {@code true} if command suggestions are enabled
                             * @since 1.8.4
                             */
                            areCommandSuggestionsEnabled(): boolean;
                            
                            /**
                             * 
                             * @param val whether to enable command suggestions or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            enableCommandSuggestions(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ChatOptionsHelper;
                            
                            /**
                             * 
                             * @return {@code true} if messages from blocked users are hidden.
                             * @since 1.8.4
                             */
                            areMatchedNamesHidden(): boolean;
                            
                            /**
                             * 
                             * @param val whether to hide messages of blocked users or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            enableHideMatchedNames(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ChatOptionsHelper;
                            
                            /**
                             * 
                             * @return {@code true} if reduced debug info is enabled, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isDebugInfoReduced(): boolean;
                            
                            /**
                             * 
                             * @param val whether to enable reduced debug info or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            reduceDebugInfo(val: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ChatOptionsHelper;
                            
                        }
                        namespace OptionsHelper$ChatOptionsHelper {
                            interface static {
                                new (OptionsHelper: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper$ChatOptionsHelper;
                                
                                
                                
                            }
                        }
                        interface CreativeItemStackHelper extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper {
                            
                            
                            /**
                             * 
                             * @param damage the damage the item should take
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setDamage(damage: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CreativeItemStackHelper;
                            
                            /**
                             * 
                             * @param durability the new durability of this item
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setDurability(durability: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CreativeItemStackHelper;
                            
                            /**
                             * 
                             * @param count the new count of the item
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setCount(count: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CreativeItemStackHelper;
                            
                            /**
                             * 
                             * @param name the new name of the item
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setName(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CreativeItemStackHelper;
                            
                            /**
                             * 
                             * @param name the new name of the item
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setName(name: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CreativeItemStackHelper;
                            
                            /**
                             * 
                             * @param id the id of the enchantment
                             * @param level the level of the enchantment
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            addEnchantment(id: string, level: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CreativeItemStackHelper;
                            
                            /**
                             * 
                             * @param enchantment the enchantment to add
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            addEnchantment(enchantment: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EnchantmentHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CreativeItemStackHelper;
                            
                            /**
                             * 
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            clearEnchantments(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CreativeItemStackHelper;
                            
                            /**
                             * 
                             * @param enchantment the enchantment to remove
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            removeEnchantment(enchantment: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EnchantmentHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CreativeItemStackHelper;
                            
                            /**
                             * 
                             * @param id the id of the enchantment to remove
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            removeEnchantment(id: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CreativeItemStackHelper;
                            
                            /**
                             * 
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            clearLore(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CreativeItemStackHelper;
                            
                            /**
                             * 
                             * @param lore the new lore
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setLore(lore: any[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CreativeItemStackHelper;
                            
                            /**
                             * 
                             * @param lore the lore to add
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            addLore(lore: any[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CreativeItemStackHelper;
                            
                            /**
                             * 
                             * @param unbreakable whether the item should be unbreakable or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setUnbreakable(unbreakable: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CreativeItemStackHelper;
                            
                            /**
                             * 
                             * @param hide whether to hide the enchantments or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            hideEnchantments(hide: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CreativeItemStackHelper;
                            
                            /**
                             * 
                             * @param hide whether to hide attributes and modifiers or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            hideModifiers(hide: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CreativeItemStackHelper;
                            
                            /**
                             * 
                             * @param hide whether to hide the unbreakable flag or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            hideUnbreakable(hide: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CreativeItemStackHelper;
                            
                            /**
                             * 
                             * @param hide whether to hide the blocks this item can destroy or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            hideCanDestroy(hide: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CreativeItemStackHelper;
                            
                            /**
                             * 
                             * @param hide whether to hide the blocks this item can be placed on or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            hideCanPlace(hide: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CreativeItemStackHelper;
                            
                            /**
                             * These flags are for banner patterns, potion effects, book information and other special
                             *  flags.
                             * @param hide whether to hide additional flags or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            hideAdditional(hide: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CreativeItemStackHelper;
                            
                            /**
                             * 
                             * @param hide whether to hide the color of colored leather armor or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            hideDye(hide: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CreativeItemStackHelper;
                            
                        }
                        namespace CreativeItemStackHelper {
                            interface static {
                                new (itemStack: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CreativeItemStackHelper;
                                
                                
                                
                            }
                        }
                        interface NBTElementHelper<T> extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper<T> {
                            
                            
                            /**
                             * 
                             * @since 1.5.1
                             */
                            getType(): number;
                            
                            /**
                             * 
                             * @since 1.5.1
                             */
                            isNull(): boolean;
                            
                            /**
                             * 
                             * @since 1.5.1
                             */
                            isNumber(): boolean;
                            
                            /**
                             * 
                             * @since 1.5.1
                             */
                            isString(): boolean;
                            
                            /**
                             * 
                             * @since 1.5.1
                             */
                            isList(): boolean;
                            
                            /**
                             * 
                             * @since 1.5.1
                             */
                            isCompound(): boolean;
                            
                            /**
                             * if element is a string, returns value.
                             *  otherwise returns toString representation.
                             * @since 1.5.1
                             */
                            asString(): string;
                            
                            /**
                             * check with {@link #isNumber} first
                             * @since 1.5.1
                             */
                            asNumberHelper(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper$NBTNumberHelper;
                            
                            /**
                             * check with {@link #isList} first
                             * @since 1.5.1
                             */
                            asListHelper(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper$NBTListHelper;
                            
                            /**
                             * check with {@link #isCompound} first
                             * @since 1.5.1
                             */
                            asCompoundHelper(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper$NBTCompoundHelper;
                            toString(): string;
                            
                        }
                        namespace NBTElementHelper {
                            interface static {
                                
                                
                                
                                /**
                                 * 
                                 * @since 1.5.1
                                 */
                                resolve(element: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper<any>;
                                
                            }
                        }
                        interface TradeOfferHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @return list of input items required
                             */
                            getInput(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper>;
                            
                            /**
                             * The returned item uses the adjusted price, in form of its stack size and will be empty
                             *  {@link _javatypes.ItemStackHelper#isEmpty} if the first input doesn't exist.
                             * @return the first input item.
                             * @since 1.8.4
                             */
                            getLeftInput(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            
                            /**
                             * The returned item uses the adjusted price, in form of its stack size and will be empty
                             *  {@link _javatypes.ItemStackHelper#isEmpty} if the first input doesn't exist.
                             * @return the second input item.
                             * @since 1.8.4
                             */
                            getRightInput(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            
                            /**
                             * 
                             * @return output item that will be received
                             */
                            getOutput(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            
                            /**
                             * 
                             * @return the index if this trade in the given villager inventory.
                             * @since 1.8.4
                             */
                            getIndex(): number;
                            
                            /**
                             * select trade offer on screen
                             */
                            select(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TradeOfferHelper;
                            
                            /**
                             * 
                             * @return 
                             */
                            isAvailable(): boolean;
                            
                            /**
                             * 
                             * @return trade offer as nbt tag
                             */
                            getNBT(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper<any>;
                            
                            /**
                             * 
                             * @return current number of uses
                             */
                            getUses(): number;
                            
                            /**
                             * 
                             * @return max uses before it locks
                             */
                            getMaxUses(): number;
                            
                            /**
                             * 
                             * @return {@code true} if after a successful trade xp will be summoned, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            shouldRewardPlayerExperience(): boolean;
                            
                            /**
                             * 
                             * @return experience gained for trade
                             */
                            getExperience(): number;
                            
                            /**
                             * 
                             * @return current price adjustment, negative is discount.
                             */
                            getCurrentPriceAdjustment(): number;
                            
                            /**
                             * 
                             * @return the original priced item without any adjustments due to rewards or demand.
                             * @since 1.8.4
                             */
                            getOriginalFirstInput(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            
                            /**
                             * 
                             * @return the original price of the item without any adjustments due to rewards or demand.
                             * @since 1.8.4
                             */
                            getOriginalPrice(): number;
                            
                            /**
                             * 
                             * @return the adjusted price of the item.
                             * @since 1.8.4
                             */
                            getAdjustedPrice(): number;
                            
                            /**
                             * A negative value is a discount and means that the player has a good reputation with the
                             *  villager, while a positive value is a premium. Hero of the village will always affect and
                             *  reduce this value.
                             * @return the special price multiplier, which affects the price of the item depending on the
                             *          player's reputation with the villager.
                             * @since 1.8.4
                             */
                            getSpecialPrice(): number;
                            
                            /**
                             * A higher price multiplier means that the price of these trades can vary much more than normal
                             *  ones. The default value is 0.05 and 0.2 for armor and tools.
                             * @return the price multiplier, which is only depended on the type of trade.
                             * @since 1.8.4
                             */
                            getPriceMultiplier(): number;
                            
                            /**
                             * The demand bonus is globally applied to all trades of this type for all villagers and
                             *  players. It is used to increase the price of trades that are in high demand. The demand is
                             *  only calculated and updated on restock. Note that a villager can always restock, even if no
                             *  items were traded with him. Updating the demand is done with the following formula:
                             *  <pre> `demand = demand + 2 * uses - maxUses` </pre>
                             *  <p> Thus trading only half of the max uses will not increase the demand.
                             *  The demand is also capped at 0, so it can not decrease the price.
                             * @return the demand bonus for this trade.
                             * @since 1.8.4
                             */
                            getDemandBonus(): number;
                            toString(): string;
                            
                        }
                        namespace TradeOfferHelper {
                            interface static {
                                new (base: /* minecraft classes, as any, because obfuscation: */ any, index: number, inv: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.VillagerInventory): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TradeOfferHelper;
                                
                                
                                
                            }
                        }
                        interface NBTElementHelper$NBTNumberHelper extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @since 1.5.1
                             */
                            asLong(): number;
                            
                            /**
                             * 
                             * @since 1.5.1
                             */
                            asInt(): number;
                            
                            /**
                             * 
                             * @since 1.5.1
                             */
                            asShort(): number;
                            
                            /**
                             * 
                             * @since 1.5.1
                             */
                            asByte(): number;
                            
                            /**
                             * 
                             * @since 1.5.1
                             */
                            asFloat(): number;
                            
                            /**
                             * 
                             * @since 1.5.1
                             */
                            asDouble(): number;
                            
                            /**
                             * 
                             * @since 1.5.1
                             */
                            asNumber(): _javatypes.java.lang.Number;
                            
                        }
                        namespace NBTElementHelper$NBTNumberHelper {
                            interface static {
                                
                                
                                
                            }
                        }
                        interface NBTElementHelper$NBTListHelper extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @since 1.8.3
                             * @return 
                             */
                            isPossiblyUUID(): boolean;
                            
                            /**
                             * 
                             * @since 1.8.3
                             * @return 
                             */
                            asUUID(): _javatypes.java.util.UUID;
                            
                            /**
                             * 
                             * @since 1.5.1
                             * @return 
                             */
                            length(): number;
                            
                            /**
                             * 
                             * @since 1.5.1
                             */
                            get(index: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper<any>;
                            
                            /**
                             * 
                             * @since 1.5.1
                             */
                            getHeldType(): number;
                            
                        }
                        namespace NBTElementHelper$NBTListHelper {
                            interface static {
                                
                                
                                
                            }
                        }
                        interface AdvancementProgressHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @return {@code true} if the advancement is finished, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isDone(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if any criteria has already been met, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isAnyObtained(): boolean;
                            
                            /**
                             * 
                             * @return a map of all criteria and their completion date.
                             * @since 1.8.4
                             */
                            getCriteria(): _javatypes.java.util.Map<string, _javatypes.java.util.Date>;
                            
                            /**
                             * 
                             * @return all requirements of this advancement.
                             * @since 1.8.4
                             */
                            getRequirements(): string[][];
                            
                            /**
                             * 
                             * @return the percentage of finished requirements.
                             * @since 1.8.4
                             */
                            getPercentage(): number;
                            
                            /**
                             * 
                             * @return the fraction of finished requirements to total requirements.
                             * @since 1.8.4
                             */
                            getFraction(): string;
                            
                            /**
                             * 
                             * @return the amount of requirements criteria.
                             * @since 1.8.4
                             */
                            countObtainedRequirements(): number;
                            
                            /**
                             * 
                             * @return the amount of missing criteria.
                             * @since 1.8.4
                             */
                            getUnobtainedCriteria(): string[];
                            
                            /**
                             * 
                             * @return the ids of the finished requirements.
                             * @since 1.8.4
                             */
                            getObtainedCriteria(): string[];
                            
                            /**
                             * 
                             * @return the earliest completion date of all criteria.
                             * @since 1.8.4
                             */
                            getEarliestProgressObtainDate(): _javatypes.java.util.Date;
                            
                            /**
                             * 
                             * @param criteria the criteria
                             * @return the completion date of the given criteria or {@code null} if the criteria is not met
                             *          yet.
                             * @since 1.8.4
                             */
                            getCriterionProgress(criteria: string): _javatypes.java.util.Date;
                            
                            /**
                             * 
                             * @param criteria the criteria
                             * @return {@code true} if the given criteria is met, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isCriteriaObtained(criteria: string): boolean;
                            toString(): string;
                            
                        }
                        namespace AdvancementProgressHelper {
                            interface static {
                                new (base: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementProgressHelper;
                                
                                
                                
                            }
                        }
                        interface AdvancementHelper extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @return the parent advancement or {@code null} if there is none.
                             * @since 1.8.4
                             */
                            getParent(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementHelper;
                            
                            /**
                             * 
                             * @return a list of all child advancements.
                             * @since 1.8.4
                             */
                            getChildren(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementHelper>;
                            
                            /**
                             * 
                             * @return the requirements of this advancement.
                             * @since 1.8.4
                             */
                            getRequirements(): string[][];
                            
                            /**
                             * 
                             * @return the amount of requirements.
                             * @since 1.8.4
                             */
                            getRequirementCount(): number;
                            
                            /**
                             * 
                             * @return the identifier of this advancement.
                             * @since 1.8.4
                             */
                            getId(): string;
                            
                            /**
                             * 
                             * @return a map of all criteria and their criterion of this advancement.
                             * @since 1.8.4
                             */
                            getCriteria(): _javatypes.java.util.Map<string, string>;
                            
                            /**
                             * 
                             * @return the experience awarded by this advancement.
                             * @since 1.8.4
                             */
                            getExperience(): number;
                            
                            /**
                             * 
                             * @return the loot table ids for this advancement's rewards.
                             * @since 1.8.4
                             */
                            getLoot(): string[];
                            
                            /**
                             * 
                             * @return the recipes unlocked through this advancement.
                             * @since 1.8.4
                             */
                            getRecipes(): string[];
                            
                            /**
                             * 
                             * @return the progress.
                             * @since 1.8.4
                             */
                            getProgress(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementProgressHelper;
                            toString(): string;
                            
                        }
                        namespace AdvancementHelper {
                            interface static {
                                new (base: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementHelper;
                                
                                
                                
                            }
                        }
                        interface SliderWidgetHelper extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClickableWidgetHelper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper, _javatypes.xyz.wagyourtail.wagyourgui.elements.Slider> {
                            
                            
                            /**
                             * 
                             * @return the current value of this slider.
                             * @since 1.8.4
                             */
                            getValue(): number;
                            
                            /**
                             * 
                             * @param value the new value
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setValue(value: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper;
                            
                            /**
                             * 
                             * @return the set amount of steps of this slider.
                             * @since 1.8.4
                             */
                            getSteps(): number;
                            
                            /**
                             * 
                             * @param steps the amount of steps
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setSteps(steps: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper;
                            toString(): string;
                            
                        }
                        namespace SliderWidgetHelper {
                            interface static {
                                new (btn: _javatypes.xyz.wagyourtail.wagyourgui.elements.Slider): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper;
                                new (btn: _javatypes.xyz.wagyourtail.wagyourgui.elements.Slider, zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper;
                                
                                
                                
                            }
                        }
                        interface CheckBoxWidgetHelper extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClickableWidgetHelper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper, _javatypes.xyz.wagyourtail.wagyourgui.elements.CheckBox> {
                            
                            
                            /**
                             * 
                             * @return {@code true} if this button is checked, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isChecked(): boolean;
                            
                            /**
                             * 
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            toggle(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper;
                            
                            /**
                             * 
                             * @param checked whether to check or uncheck this button
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setChecked(checked: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper;
                            toString(): string;
                            
                        }
                        namespace CheckBoxWidgetHelper {
                            interface static {
                                new (btn: _javatypes.xyz.wagyourtail.wagyourgui.elements.CheckBox): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper;
                                new (btn: _javatypes.xyz.wagyourtail.wagyourgui.elements.CheckBox, zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper;
                                
                                
                                
                            }
                        }
                        interface ButtonWidgetHelper$ButtonBuilder extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AbstractWidgetBuilder<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper$ButtonBuilder, /* minecraft classes, as any, because obfuscation: */ any, _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper</* minecraft classes, as any, because obfuscation: */ any>> {
                            
                            
                            /**
                             * 
                             * @param height this argument is ignored and will always be set to 20
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            height(height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper$ButtonBuilder;
                            
                            /**
                             * 
                             * @param width the width of the button
                             * @param height this argument is ignored and will always be set to 20
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            size(width: number, height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper$ButtonBuilder;
                            
                            /**
                             * 
                             * @return the action to run when the button is pressed.
                             * @since 1.8.4
                             */
                            getAction(): _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper</* minecraft classes, as any, because obfuscation: */ any>, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>;
                            
                            /**
                             * 
                             * @param action the action to run when the button is pressed
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            action(action: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper</* minecraft classes, as any, because obfuscation: */ any>, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper$ButtonBuilder;
                            createWidget(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper</* minecraft classes, as any, because obfuscation: */ any>;
                            
                        }
                        namespace ButtonWidgetHelper$ButtonBuilder {
                            interface static {
                                new (screen: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper$ButtonBuilder;
                                
                                
                                
                            }
                        }
                        interface LockButtonWidgetHelper extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClickableWidgetHelper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LockButtonWidgetHelper, /* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @return {@code true} if the button is locked, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isLocked(): boolean;
                            
                            /**
                             * 
                             * @param locked whether to lock the button or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setLocked(locked: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LockButtonWidgetHelper;
                            toString(): string;
                            
                        }
                        namespace LockButtonWidgetHelper {
                            interface static {
                                new (btn: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LockButtonWidgetHelper;
                                new (btn: /* minecraft classes, as any, because obfuscation: */ any, zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LockButtonWidgetHelper;
                                
                                
                                
                            }
                        }
                        interface ClickableWidgetHelper<B, T> extends _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper<T>, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$RenderElement, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Alignable<B> {
                            zIndex: number;
                            tooltips: _javatypes.java.util.List</* minecraft classes, as any, because obfuscation: */ any>;
                            
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @return the {@code x} coordinate of the button.
                             */
                            getX(): number;
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @return the {@code y} coordinate of the button.
                             */
                            getY(): number;
                            
                            /**
                             * Set the button position.
                             * @since 1.0.5
                             * @param x
                             * @param y
                             * @return 
                             */
                            setPos(x: number, y: number): B;
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @return 
                             */
                            getWidth(): number;
                            
                            /**
                             * 
                             * @return the height of the button.
                             * @since 1.8.4
                             */
                            getHeight(): number;
                            
                            /**
                             * change the text.
                             * @since 1.0.5, renamed from {@code setText} in 1.3.1
                             * @deprecated only deprecated in buttonWidgetHelper for confusing name.
                             * @param label
                             * @return 
                             */
                            setLabel(label: string): B;
                            
                            /**
                             * change the text.
                             * @since 1.3.1
                             * @param helper
                             * @return 
                             */
                            setLabel(helper: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper): B;
                            
                            /**
                             * 
                             * @since 1.2.3, renamed fro {@code getText} in 1.3.1
                             * @return current button text.
                             */
                            getLabel(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @return button clickable state.
                             */
                            getActive(): boolean;
                            
                            /**
                             * set the button clickable state.
                             * @since 1.0.5
                             * @param t
                             * @return 
                             */
                            setActive(t: boolean): B;
                            
                            /**
                             * set the button width.
                             * @since 1.0.5
                             * @param width
                             * @return 
                             */
                            setWidth(width: number): B;
                            
                            /**
                             * clicks button
                             * @since 1.3.1
                             */
                            click(): B;
                            
                            /**
                             * clicks button
                             * @param await should wait for button to finish clicking.
                             * @since 1.3.1
                             */
                            click(await: boolean): B;
                            
                            /**
                             * 
                             * @param tooltips the tooltips to set
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setTooltip(tooltips: any[]): B;
                            
                            /**
                             * 
                             * @param tooltip the tooltips to add
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            addTooltip(tooltip: any): B;
                            
                            /**
                             * 
                             * @param index the index of the tooltip to remove
                             * @return {@code true} if the tooltip was removed successfully, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            removeTooltip(index: number): boolean;
                            
                            /**
                             * 
                             * @param tooltip the tooltip to remove
                             * @return {@code true} if the tooltip was removed successfully, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            removeTooltip(tooltip: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper): boolean;
                            
                            /**
                             * 
                             * @return a copy of the tooltips.
                             * @since 1.8.4
                             */
                            getTooltips(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper>;
                            render(matrices: /* minecraft classes, as any, because obfuscation: */ any, mouseX: number, mouseY: number, delta: number): void;
                            getZIndex(): number;
                            toString(): string;
                            getScaledWidth(): number;
                            getParentWidth(): number;
                            getScaledHeight(): number;
                            getParentHeight(): number;
                            getScaledLeft(): number;
                            getScaledTop(): number;
                            moveTo(x: number, y: number): B;
                            
                        }
                        namespace ClickableWidgetHelper {
                            interface static {
                                new <B, T>(btn: T): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClickableWidgetHelper<B, T>;
                                new <B, T>(btn: T, zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClickableWidgetHelper<B, T>;
                                
                                
                                
                            }
                        }
                        interface ButtonWidgetHelper$TexturedButtonBuilder extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AbstractWidgetBuilder<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper$TexturedButtonBuilder, /* minecraft classes, as any, because obfuscation: */ any, _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper</* minecraft classes, as any, because obfuscation: */ any>> {
                            
                            
                            /**
                             * 
                             * @param height this argument is ignored and will always be set to 20
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            height(height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper$TexturedButtonBuilder;
                            
                            /**
                             * 
                             * @param width the width of the button
                             * @param height this argument is ignored and will always be set to 20
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            size(width: number, height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper$TexturedButtonBuilder;
                            
                            /**
                             * 
                             * @return the action to run when the button is pressed.
                             * @since 1.8.4
                             */
                            getAction(): _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper</* minecraft classes, as any, because obfuscation: */ any>, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>;
                            
                            /**
                             * 
                             * @param action the action to run when the button is pressed
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            action(action: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper</* minecraft classes, as any, because obfuscation: */ any>, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper$TexturedButtonBuilder;
                            
                            /**
                             * 
                             * @return the x position in the texture to start drawing from.
                             * @since 1.8.4
                             */
                            getU(): number;
                            
                            /**
                             * 
                             * @param u the x position in the texture to start drawing from
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            u(u: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper$TexturedButtonBuilder;
                            
                            /**
                             * 
                             * @return the y position in the texture to start drawing from.
                             * @since 1.8.4
                             */
                            getV(): number;
                            
                            /**
                             * 
                             * @param v the y position in the texture to start drawing from
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            v(v: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper$TexturedButtonBuilder;
                            
                            /**
                             * 
                             * @param u the x position in the texture to start drawing from
                             * @param v the y position in the texture to start drawing from
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            uv(u: number, v: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper$TexturedButtonBuilder;
                            
                            /**
                             * 
                             * @return the hover offset of the button.
                             * @since 1.8.4
                             */
                            getHoverOffset(): number;
                            
                            /**
                             * The hover offset is the vertical amount of pixels to offset the texture when the button
                             *  is hovered.
                             * @param hoverOffset the hover offset
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            hoverOffset(hoverOffset: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper$TexturedButtonBuilder;
                            
                            /**
                             * 
                             * @return the id of the texture to use or {@code null} if none is set.
                             * @since 1.8.4
                             */
                            getTexture(): string;
                            
                            /**
                             * 
                             * @param texture the texture id to use for the button
                             * @return self for chaining.
                             */
                            texture(texture: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper$TexturedButtonBuilder;
                            
                            /**
                             * 
                             * @return the width of the texture.
                             * @since 1.8.4
                             */
                            getTextureWidth(): number;
                            
                            /**
                             * 
                             * @param textureWidth the width of the texture
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            textureWidth(textureWidth: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper$TexturedButtonBuilder;
                            
                            /**
                             * 
                             * @return the height of the texture.
                             * @since 1.8.4
                             */
                            getTextureHeight(): number;
                            
                            /**
                             * 
                             * @param textureHeight the height of the texture
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            textureHeight(textureHeight: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper$TexturedButtonBuilder;
                            
                            /**
                             * 
                             * @param textureWidth the width of the texture
                             * @param textureHeight the height of the texture
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            textureSize(textureWidth: number, textureHeight: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper$TexturedButtonBuilder;
                            createWidget(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper</* minecraft classes, as any, because obfuscation: */ any>;
                            
                        }
                        namespace ButtonWidgetHelper$TexturedButtonBuilder {
                            interface static {
                                new (screen: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper$TexturedButtonBuilder;
                                
                                
                                
                            }
                        }
                        interface CyclingButtonWidgetHelper$CyclicButtonBuilder<T> extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AbstractWidgetBuilder<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper$CyclicButtonBuilder<T>, /* minecraft classes, as any, because obfuscation: */ any, _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper<T>> {
                            
                            
                            /**
                             * 
                             * @return the initial value of the slider.
                             * @since 1.8.4
                             */
                            getInitialValue(): T;
                            
                            /**
                             * 
                             * @param value the initial value of the slider
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            initially(value: T): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper$CyclicButtonBuilder<T>;
                            
                            /**
                             * The option text is a prefix of all values, seperated by a colon.
                             * @return the option text of the button or an empty text if it is omitted.
                             * @since 1.8.4
                             */
                            getOption(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            
                            /**
                             * 
                             * @param option the option text of the button
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            option(option: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper$CyclicButtonBuilder<T>;
                            
                            /**
                             * 
                             * @param option the option text of the button
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            option(option: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper$CyclicButtonBuilder<T>;
                            
                            /**
                             * 
                             * @return the action to run when the button is pressed.
                             * @since 1.8.4
                             */
                            getAction(): _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper<T>, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>;
                            
                            /**
                             * 
                             * @param action the action to run when the button is pressed
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            action(action: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper<T>, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper$CyclicButtonBuilder<T>;
                            
                            /**
                             * 
                             * @return the function to convert a value to a text.
                             * @since 1.8.4
                             */
                            getValueToText(): _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<T, any, _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper, any>;
                            
                            /**
                             * 
                             * @param valueToText the function to convert a value to a text
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            valueToText(valueToText: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<T, any, _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper$CyclicButtonBuilder<T>;
                            
                            /**
                             * The button will normally cycle through the default values, but if the alternate toggle is
                             *  true, it will cycle through the alternate values.
                             * @return the list of all default values.
                             * @since 1.8.4
                             */
                            getDefaultValues(): _javatypes.java.util.List<T>;
                            
                            /**
                             * The button will normally cycle through the default values, but if the alternate toggle is
                             *  true, it will cycle through the alternate values.
                             * @return the list of all alternate values.
                             * @since 1.8.4
                             */
                            getAlternateValues(): _javatypes.java.util.List<T>;
                            
                            /**
                             * 
                             * @param values the default values of the button
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            values(values: T[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper$CyclicButtonBuilder<T>;
                            
                            /**
                             * 
                             * @param values the alternate values of the button
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            alternatives(values: T[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper$CyclicButtonBuilder<T>;
                            
                            /**
                             * 
                             * @param defaults the default values of the button
                             * @param alternatives the alternate values of the button
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            values(defaults: T[], alternatives: T[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper$CyclicButtonBuilder<T>;
                            
                            /**
                             * 
                             * @param defaults the default values of the button
                             * @param alternatives the alternate values of the button
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            values(defaults: _javatypes.java.util.List<T>, alternatives: _javatypes.java.util.List<T>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper$CyclicButtonBuilder<T>;
                            
                            /**
                             * 
                             * @return the toggle function to determine if the button should cycle through the default
                             *          or the alternate values.
                             * @since 1.8.4
                             */
                            getAlternateToggle(): _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<any, any, boolean, any>;
                            
                            /**
                             * 
                             * @param alternateToggle the toggle function to determine if the button should cycle
                             *                         through the default or the alternate values
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            alternateToggle(alternateToggle: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<any, any, boolean, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper$CyclicButtonBuilder<T>;
                            
                            /**
                             * 
                             * @return {@code true} if the prefix option text should be omitted, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            isOptionTextOmitted(): boolean;
                            
                            /**
                             * 
                             * @param optionTextOmitted whether the prefix option text should be omitted or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            omitTextOption(optionTextOmitted: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper$CyclicButtonBuilder<T>;
                            createWidget(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper<T>;
                            
                        }
                        namespace CyclingButtonWidgetHelper$CyclicButtonBuilder {
                            interface static {
                                new <T>(screen: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, valueToText: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<T, any, _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper$CyclicButtonBuilder<T>;
                                
                                
                                
                            }
                        }
                        interface CheckBoxWidgetHelper$CheckBoxBuilder extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AbstractWidgetBuilder<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper$CheckBoxBuilder, _javatypes.xyz.wagyourtail.wagyourgui.elements.CheckBox, _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper> {
                            
                            
                            /**
                             * 
                             * @return {@code true} if the checkbox is initially checked, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isChecked(): boolean;
                            
                            /**
                             * 
                             * @param checked whether the checkbox is initially checked or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            checked(checked: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper$CheckBoxBuilder;
                            
                            /**
                             * 
                             * @return the action to run when the button is pressed.
                             * @since 1.8.4
                             */
                            getAction(): _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>;
                            
                            /**
                             * 
                             * @param action the action to run when the button is pressed
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            action(action: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper$CheckBoxBuilder;
                            createWidget(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper;
                            
                        }
                        namespace CheckBoxWidgetHelper$CheckBoxBuilder {
                            interface static {
                                new (screen: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper$CheckBoxBuilder;
                                
                                
                                
                            }
                        }
                        interface TextFieldWidgetHelper$TextFieldBuilder extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AbstractWidgetBuilder<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper$TextFieldBuilder, /* minecraft classes, as any, because obfuscation: */ any, _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper> {
                            
                            
                            /**
                             * 
                             * @return the callback for when the text is changed.
                             * @since 1.8.4
                             */
                            getAction(): _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<string, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>;
                            
                            /**
                             * 
                             * @param action the callback for when the text is changed
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            action(action: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<string, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper$TextFieldBuilder;
                            
                            /**
                             * 
                             * @return the current suggestion.
                             * @since 1.8.4
                             */
                            getSuggestion(): string;
                            
                            /**
                             * 
                             * @param suggestion the suggestion to use
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            suggestion(suggestion: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper$TextFieldBuilder;
                            createWidget(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper;
                            
                        }
                        namespace TextFieldWidgetHelper$TextFieldBuilder {
                            interface static {
                                new (screen: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, textRenderer: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper$TextFieldBuilder;
                                
                                
                                
                            }
                        }
                        interface CyclingButtonWidgetHelper<T> extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClickableWidgetHelper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper<T>, /* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @return the current value.
                             * @since 1.8.4
                             */
                            getValue(): T;
                            
                            /**
                             * 
                             * @return the current value in their string representation.
                             * @since 1.8.4
                             */
                            getStringValue(): string;
                            
                            /**
                             * 
                             * @param val the new value
                             * @return {@code true} if the value has changed, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            setValue(val: T): boolean;
                            
                            /**
                             * 
                             * @param amount the amount to cycle by
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            cycle(amount: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper<T>;
                            
                            /**
                             * 
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            forward(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper<T>;
                            
                            /**
                             * 
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            backward(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper<T>;
                            toString(): string;
                            
                        }
                        namespace CyclingButtonWidgetHelper {
                            interface static {
                                new <T>(btn: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper<T>;
                                new <T>(btn: /* minecraft classes, as any, because obfuscation: */ any, zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper<T>;
                                
                                
                                
                            }
                        }
                        interface SliderWidgetHelper$SliderBuilder extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AbstractWidgetBuilder<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper$SliderBuilder, _javatypes.xyz.wagyourtail.wagyourgui.elements.Slider, _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper> {
                            
                            
                            /**
                             * 
                             * @return the amount of steps of this slider.
                             * @since 1.8.4
                             */
                            getSteps(): number;
                            
                            /**
                             * 
                             * @param steps the amount of steps for the slider. Must be greater or equal to 2
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            steps(steps: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper$SliderBuilder;
                            
                            /**
                             * 
                             * @return the initial value of the slider.
                             * @since 1.8.4
                             */
                            getValue(): number;
                            
                            /**
                             * 
                             * @param value the initial value of the slider. Must be between 0 and steps - 1
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            initially(value: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper$SliderBuilder;
                            
                            /**
                             * 
                             * @return the change listener of the slider.
                             * @since 1.8.4
                             */
                            getAction(): _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>;
                            
                            /**
                             * 
                             * @param action the change listener for the slider
                             * @return self for chaining.
                             */
                            action(action: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper$SliderBuilder;
                            createWidget(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper;
                            
                        }
                        namespace SliderWidgetHelper$SliderBuilder {
                            interface static {
                                new (screen: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper$SliderBuilder;
                                
                                
                                
                            }
                        }
                        interface LockButtonWidgetHelper$LockButtonBuilder extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AbstractWidgetBuilder<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LockButtonWidgetHelper$LockButtonBuilder, /* minecraft classes, as any, because obfuscation: */ any, _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LockButtonWidgetHelper> {
                            
                            
                            /**
                             * 
                             * @return the initial state of the lock button.
                             * @since 1.8.4
                             */
                            isLocked(): boolean;
                            
                            /**
                             * 
                             * @param locked whether to initially lock the button or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            locked(locked: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LockButtonWidgetHelper$LockButtonBuilder;
                            
                            /**
                             * 
                             * @return the action to run when the button is pressed.
                             * @since 1.8.4
                             */
                            getAction(): _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LockButtonWidgetHelper, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>;
                            
                            /**
                             * 
                             * @param action the action to run when the button is pressed
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            action(action: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LockButtonWidgetHelper, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LockButtonWidgetHelper$LockButtonBuilder;
                            createWidget(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LockButtonWidgetHelper;
                            
                        }
                        namespace LockButtonWidgetHelper$LockButtonBuilder {
                            interface static {
                                new (screen: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LockButtonWidgetHelper$LockButtonBuilder;
                                
                                
                                
                            }
                        }
                        interface ButtonWidgetHelper<T> extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClickableWidgetHelper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper<T>, T> {
                            
                            
                        }
                        namespace ButtonWidgetHelper {
                            interface static {
                                new <T>(btn: T): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper<T>;
                                new <T>(btn: T, zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper<T>;
                                
                                
                                
                            }
                        }
                        interface TextFieldWidgetHelper extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClickableWidgetHelper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper, /* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @return the currently entered {@link java.lang.String String}.
                             */
                            getText(): string;
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @param text
                             * @return 
                             */
                            setText(text: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper;
                            
                            /**
                             * set the currently entered {@link _javatypes.java.lang.String}.
                             * @param text
                             * @param await
                             * @return 
                             * @since 1.3.1
                             * @throws InterruptedException
                             */
                            setText(text: string, await: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper;
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @param color
                             * @return 
                             */
                            setEditableColor(color: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper;
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @param edit
                             * @return 
                             */
                            setEditable(edit: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper;
                            
                            /**
                             * 
                             * @return {@code true} if the text field is editable, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isEditable(): boolean;
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @param color
                             * @return 
                             */
                            setUneditableColor(color: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper;
                            
                            /**
                             * 
                             * @return the selected text.
                             * @since 1.8.4
                             */
                            getSelectedText(): string;
                            
                            /**
                             * 
                             * @param suggestion the suggestion to set
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setSuggestion(suggestion: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper;
                            
                            /**
                             * 
                             * @return the maximum length of this text field.
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            getMaxLength(): number;
                            
                            /**
                             * 
                             * @param length the new maximum length
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setMaxLength(length: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper;
                            setSelection(start: number, end: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper;
                            
                            /**
                             * 
                             * @param predicate the text filter
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setTextPredicate(predicate: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<string, any, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper;
                            
                            /**
                             * 
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            resetTextPredicate(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper;
                            
                            /**
                             * 
                             * @param position the cursor position
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setCursorPosition(position: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper;
                            
                            /**
                             * 
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setCursorToStart(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper;
                            
                            /**
                             * 
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setCursorToEnd(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper;
                            toString(): string;
                            
                        }
                        namespace TextFieldWidgetHelper {
                            interface static {
                                new (t: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper;
                                new (t: /* minecraft classes, as any, because obfuscation: */ any, zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper;
                                
                                
                                
                            }
                        }
                        interface AbstractWidgetBuilder<B, T, U> extends any, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Alignable<B> {
                            
                            
                            /**
                             * 
                             * @return the width of the widget.
                             * @since 1.8.4
                             */
                            getWidth(): number;
                            
                            /**
                             * 
                             * @param width the width of the widget
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            width(width: number): B;
                            
                            /**
                             * 
                             * @return the height of the widget.
                             * @since 1.8.4
                             */
                            getHeight(): number;
                            
                            /**
                             * 
                             * @param height the height of the widget
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            height(height: number): B;
                            
                            /**
                             * 
                             * @param width the width of the widget
                             * @param height the height of the widget
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            size(width: number, height: number): B;
                            
                            /**
                             * 
                             * @return the z-index of the widget.
                             * @since 1.8.4
                             */
                            getZIndex(): number;
                            
                            /**
                             * 
                             * @param zIndex the z-index of the widget
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            zIndex(zIndex: number): B;
                            
                            /**
                             * 
                             * @return the x position of the widget.
                             * @since 1.8.4
                             */
                            getX(): number;
                            
                            /**
                             * 
                             * @param x the x position of the widget
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            x(x: number): B;
                            
                            /**
                             * 
                             * @return the y position of the widget.
                             * @since 1.8.4
                             */
                            getY(): number;
                            
                            /**
                             * 
                             * @param y the y position of the widget
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            y(y: number): B;
                            
                            /**
                             * 
                             * @param x the x position of the widget
                             * @param y the y position of the widget
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos(x: number, y: number): B;
                            
                            /**
                             * 
                             * @return the message of the widget or an empty text if none is set.
                             * @since 1.8.4
                             */
                            getMessage(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            
                            /**
                             * 
                             * @param message the message of the widget
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            message(message: string): B;
                            
                            /**
                             * 
                             * @param message the message of the widget
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            message(message: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper): B;
                            
                            /**
                             * An inactive widget can not be interacted with and may have a different appearance.
                             * @return {@code true} if the widget is active, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isActive(): boolean;
                            
                            /**
                             * An inactive widget can not be interacted with and may have a different appearance.
                             * @param active whether the widget should be active or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            active(active: boolean): B;
                            
                            /**
                             * 
                             * @return {@code true} if the widget is visible, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isVisible(): boolean;
                            
                            /**
                             * 
                             * @param visible whether the widget should be visible or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            visible(visible: boolean): B;
                            
                            /**
                             * 
                             * @return the alpha value of the widget.
                             * @since 1.8.4
                             */
                            getAlpha(): number;
                            
                            /**
                             * 
                             * @param alpha the alpha value of the widget
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            alpha(alpha: number): B;
                            
                            /**
                             * 
                             * @return the build widget for the set properties.
                             * @since 1.8.4
                             */
                            build(): U;
                            getScaledWidth(): number;
                            getParentWidth(): number;
                            getScaledHeight(): number;
                            getParentHeight(): number;
                            getScaledLeft(): number;
                            getScaledTop(): number;
                            moveTo(x: number, y: number): B;
                            
                        }
                        namespace AbstractWidgetBuilder {
                            interface static {
                                
                                
                                
                            }
                        }
                    
                        namespace entity.specialized.projectile {
                        
                            interface FishingBobberEntityHelper extends _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper</* minecraft classes, as any, because obfuscation: */ any> {
                                
                                
                                /**
                                 * 
                                 * @return {@code true} if a fish has been caught, {@code false} otherwise.
                                 * @since 1.8.4
                                 */
                                hasCaughtFish(): boolean;
                                
                                /**
                                 * When in open water the player can get treasures from fishing.
                                 * @return {@code true} if the bobber is in open water, {@code false} otherwise.
                                 * @since 1.8.4
                                 */
                                isInOpenWater(): boolean;
                                
                                /**
                                 * 
                                 * @return {@code true} if the bobber has an entity hooked, {@code false} otherwise.
                                 * @since 1.8.4
                                 */
                                hasEntityHooked(): boolean;
                                
                                /**
                                 * 
                                 * @return the hooked entity, or {@code null} if there is no entity hooked.
                                 * @since 1.8.4
                                 */
                                getHookedEntity(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>;
                                
                            }
                            namespace FishingBobberEntityHelper {
                                interface static {
                                    new (base: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.entity.specialized.projectile.FishingBobberEntityHelper;
                                    
                                    
                                    
                                }
                            }
                        }
                    }
                
                    namespace classes {
                    
                        interface ChatHistoryManager extends any {
                            
                            
                            /**
                             * 
                             * @param index
                             * @since 1.6.0
                             * @return 
                             */
                            getRecvLine(index: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ChatHudLineHelper;
                            
                            /**
                             * 
                             * @return the amount of messages in the chat history.
                             * @throws InterruptedException
                             * @since 1.8.4
                             */
                            gerRecvCount(): number;
                            
                            /**
                             * 
                             * @return all received messages in the chat history.
                             * @throws InterruptedException
                             * @since 1.8.4
                             */
                            getRecvLines(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ChatHudLineHelper>;
                            
                            /**
                             * 
                             * @since 1.6.0
                             * @param index
                             * @param line
                             */
                            insertRecvText(index: number, line: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper): void;
                            
                            /**
                             * you should probably run {@link #refreshVisible} after...
                             * @param index
                             * @param line
                             * @param timeTicks
                             * @since 1.6.0
                             */
                            insertRecvText(index: number, line: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper, timeTicks: number): void;
                            
                            /**
                             * 
                             * @param index
                             * @param line
                             * @param timeTicks
                             * @param await
                             * @since 1.6.0
                             * @throws InterruptedException
                             */
                            insertRecvText(index: number, line: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper, timeTicks: number, await: boolean): void;
                            
                            /**
                             * 
                             * @since 1.6.0
                             * @param index
                             */
                            removeRecvText(index: number): void;
                            
                            /**
                             * 
                             * @param index
                             * @param await
                             * @since 1.6.0
                             * @throws InterruptedException
                             */
                            removeRecvText(index: number, await: boolean): void;
                            
                            /**
                             * 
                             * @since 1.6.0
                             * @param text
                             */
                            removeRecvTextMatching(text: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper): void;
                            
                            /**
                             * 
                             * @param text
                             * @param await
                             * @since 1.6.0
                             * @throws InterruptedException
                             */
                            removeRecvTextMatching(text: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper, await: boolean): void;
                            
                            /**
                             * 
                             * @since 1.6.0
                             * @param filter
                             */
                            removeRecvTextMatchingFilter(filter: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ChatHudLineHelper, any, boolean, any>): void;
                            
                            /**
                             * 
                             * @param filter
                             * @param await
                             * @since 1.6.0
                             * @throws InterruptedException
                             */
                            removeRecvTextMatchingFilter(filter: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ChatHudLineHelper, any, boolean, any>, await: boolean): void;
                            
                            /**
                             * this will reset the view of visible messages
                             * @since 1.6.0
                             */
                            refreshVisible(): void;
                            
                            /**
                             * 
                             * @param await
                             * @since 1.6.0
                             * @throws InterruptedException
                             */
                            refreshVisible(await: boolean): void;
                            
                            /**
                             * 
                             * @since 1.6.0
                             */
                            clearRecv(): void;
                            
                            /**
                             * 
                             * @param await
                             * @since 1.6.0
                             * @throws InterruptedException
                             */
                            clearRecv(await: boolean): void;
                            
                            /**
                             * 
                             * @since 1.6.0
                             * @return direct reference to sent message history list. modifications will affect the list.
                             */
                            getSent(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @since 1.6.0
                             */
                            clearSent(): void;
                            
                            /**
                             * 
                             * @param await
                             * @since 1.6.0
                             * @throws InterruptedException
                             */
                            clearSent(await: boolean): void;
                            
                        }
                        namespace ChatHistoryManager {
                            interface static {
                                new (hud: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.ChatHistoryManager;
                                
                                
                                
                            }
                        }
                        interface CustomImage extends any {
                            
                            
                            /**
                             * 
                             * @return the name of this image.
                             * @since 1.8.4
                             */
                            getName(): string;
                            
                            /**
                             * The image can be used with the drawImage methods to draw it onto this image.
                             * @param path the path to the image, relative to the jsMacros config folder
                             * @return an image from the given path.
                             * @see #drawImage(Image, int, int, int, int)
                             * @see #drawImage(Image, int, int, int, int, int, int, int, int)
                             * @since 1.8.4
                             */
                            loadImage(path: string): _javatypes.java.awt.image.BufferedImage;
                            
                            /**
                             * Loads the image from the given path and returns a subimage of it from the given positions.
                             *  The image can be used with the drawImage methods to draw it onto this image.
                             * @param path the path to the image, relative to the jsMacros config folder
                             * @param x the x position to get the subimage from
                             * @param y the y position to get the subimage from
                             * @param width the width of the subimage
                             * @param height the height of the subimage
                             * @return the cropped image from the given path.
                             * @see #drawImage(Image, int, int, int, int)
                             * @see #drawImage(Image, int, int, int, int, int, int, int, int)
                             * @since 1.8.4
                             */
                            loadImage(path: string, x: number, y: number, width: number, height: number): _javatypes.java.awt.image.BufferedImage;
                            
                            /**
                             * Updates the texture to be drawn with the contents of this image. Any changes made to this
                             *  image will only be displayed after calling this method. The method must not be called after
                             *  each change, but rather when the image is finished being changed.
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            update(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * Saves this image to the given path. The file will be saved as a png.
                             * @param path the path to the image, relative to the jsMacros config folder
                             * @param fileName the file name of the image, without the extension
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            saveImage(path: string, fileName: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * The identifier should be used with any buttons and textures in the draw2D and other classes,
                             *  which require an identifier.
                             * @return the identifier of this image.
                             * @since 1.8.4
                             */
                            getIdentifier(): string;
                            
                            /**
                             * The width is a constant and will not change.
                             * @return the width of this image.
                             * @since 1.8.4
                             */
                            getWidth(): number;
                            
                            /**
                             * The height is a constant and will not change.
                             * @return the height of this image.
                             * @since 1.8.4
                             */
                            getHeight(): number;
                            
                            /**
                             * 
                             * @return the internal BufferedImage of this image, which all updates are made to.
                             * @since 1.8.4
                             */
                            getImage(): _javatypes.java.awt.image.BufferedImage;
                            
                            /**
                             * The color is in the ARGB format.
                             * @param x the x position to get the color from
                             * @param y the y position to get the color from
                             * @return the color at the given position.
                             * @since 1.8.4
                             */
                            getPixel(x: number, y: number): number;
                            
                            /**
                             * The color is in the ARGB format.
                             * @param x the x position to set the color at
                             * @param y the y position to set the color at
                             * @param argb the ARGB value to set the pixel to
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setPixel(x: number, y: number, argb: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * 
                             * @param img the image to draw onto this image
                             * @param x the x position to draw the image at
                             * @param y the y position to draw the image at
                             * @param width the width of the image to draw
                             * @param height the height of the image to draw
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            drawImage(img: _javatypes.java.awt.Image, x: number, y: number, width: number, height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * 
                             * @param img the image to draw onto this image
                             * @param x the x position to draw the image at
                             * @param y the y position to draw the image at
                             * @param width the width of the image to draw
                             * @param height the height of the image to draw
                             * @param sourceX the x position of the subimage to draw
                             * @param sourceY the y position of the subimage to draw
                             * @param sourceWidth the width of the subimage to draw
                             * @param sourceHeight the height of the subimage to draw
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            drawImage(img: _javatypes.java.awt.Image, x: number, y: number, width: number, height: number, sourceX: number, sourceY: number, sourceWidth: number, sourceHeight: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * The color is a rgb value which is used for draw and fill operations.
                             * @return the graphics current rgb color.
                             * @since 1.8.4
                             */
                            getGraphicsColor(): number;
                            
                            /**
                             * The color is a rgb value which is used for draw and fill operations.
                             * @param color the rgb color to use for graphics operations
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setGraphicsColor(color: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * 
                             * @param x the x position of the origin point
                             * @param y the y position of the origin point
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            translate(x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * 
                             * @param x the x coordinate of the rectangle to intersect the clip with
                             * @param y the y coordinate of the rectangle to intersect the clip with
                             * @param width the width of the rectangle to intersect the clip with
                             * @param height the height of the rectangle to intersect the clip with
                             * @return self for chaining.
                             */
                            clipRect(x: number, y: number, width: number, height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * 
                             * @param x the x coordinate of the new clip rectangle
                             * @param y the y coordinate of the new clip rectangle
                             * @param width the width of the new clip rectangle
                             * @param height the height of the new clip rectangle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setClip(x: number, y: number, width: number, height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * 
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setPaintMode(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * 
                             * @param color the color to use for the xor operation
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setXorMode(color: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * 
                             * @return an array with the bounds of the current clip.
                             * @since 1.8.4
                             */
                            getClipBounds(): _javatypes.java.awt.Rectangle;
                            
                            /**
                             * 
                             * @param x the x position to copy from
                             * @param y the y position to copy from
                             * @param width the width of the area to copy
                             * @param height the height of the area to copy
                             * @param dx the offset to the x position to copy to
                             * @param dy the offset to the y position to copy to
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            copyArea(x: number, y: number, width: number, height: number, dx: number, dy: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * 
                             * @param x1 the first x position of the line
                             * @param y1 the first y position of the line
                             * @param x2 the second x position of the line
                             * @param y2 the second y position of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            drawLine(x1: number, y1: number, x2: number, y2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * 
                             * @param x the x position of the rectangle
                             * @param y the y position of the rectangle
                             * @param width the width of the rectangle
                             * @param height the height of the rectangle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            drawRect(x: number, y: number, width: number, height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * 
                             * @param x the x position of the rectangle
                             * @param y the y position of the rectangle
                             * @param width the width of the rectangle
                             * @param height the height of the rectangle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            fillRect(x: number, y: number, width: number, height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * 
                             * @param x the x position of the rectangle
                             * @param y the y position of the rectangle
                             * @param width the width of the rectangle
                             * @param height the height of the rectangle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            clearRect(x: number, y: number, width: number, height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * 
                             * @param x the x position of the rectangle
                             * @param y the y position of the rectangle
                             * @param width the width of the rectangle
                             * @param height the height of the rectangle
                             * @param color the rgb color to fill the rectangle with
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            clearRect(x: number, y: number, width: number, height: number, color: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * 
                             * @param x the x position to draw the rectangle at
                             * @param y the y position to draw the rectangle at
                             * @param width the width of the rectangle
                             * @param height the height of the rectangle
                             * @param arcWidth the horizontal diameter of the arc at the four corners
                             * @param arcHeight the vertical diameter of the arc at the four corners
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            drawRoundRect(x: number, y: number, width: number, height: number, arcWidth: number, arcHeight: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * 
                             * @param x the x position to draw the rectangle at
                             * @param y the y position to draw the rectangle at
                             * @param width the width of the rectangle
                             * @param height the height of the rectangle
                             * @param arcWidth the horizontal diameter of the arc at the four corners
                             * @param arcHeight the vertical diameter of the arc at the four corners
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            fillRoundRect(x: number, y: number, width: number, height: number, arcWidth: number, arcHeight: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * 
                             * @param x the x position to draw the 3D rectangle at
                             * @param y the y position to draw the 3D rectangle at
                             * @param width the width of the 3D rectangle
                             * @param height the height of the 3D rectangle
                             * @param raised whether the rectangle should be raised above the surface or etched into the
                             *                surface
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            draw3DRect(x: number, y: number, width: number, height: number, raised: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * 
                             * @param x the x position to draw the 3D rectangle at
                             * @param y the y position to draw the 3D rectangle at
                             * @param width the width of the 3D rectangle
                             * @param height the height of the 3D rectangle
                             * @param raised whether the rectangle should be raised above the surface or etched into the
                             *                surface
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            fill3DRect(x: number, y: number, width: number, height: number, raised: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * 
                             * @param x the x position to draw the oval at
                             * @param y the y position to draw the oval at
                             * @param width the width of the oval
                             * @param height the height of the oval
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            drawOval(x: number, y: number, width: number, height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * 
                             * @param x the x position to draw the oval at
                             * @param y the y position to draw the oval at
                             * @param width the width of the oval
                             * @param height the height of the oval
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            fillOval(x: number, y: number, width: number, height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * 
                             * @param x the x position to draw the arc at
                             * @param y the y position to draw the arc at
                             * @param width the width of the arc
                             * @param height the height of the arc
                             * @param startAngle the beginning angle
                             * @param arcAngle the angular extent of the arc, relative to the start angle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            drawArc(x: number, y: number, width: number, height: number, startAngle: number, arcAngle: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * 
                             * @param x the x position to draw the arc at
                             * @param y the y position to draw the arc at
                             * @param width the width of the arc
                             * @param height the height of the arc
                             * @param startAngle the beginning angle
                             * @param arcAngle the angular extent of the arc, relative to the start angle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            fillArc(x: number, y: number, width: number, height: number, startAngle: number, arcAngle: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * The x and y array must have the same length and order for the points.
                             * @param pointsX an array of all x positions of the points in the polygon
                             * @param pointsY an array of all y positions of the points in the polygon
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            drawPolygonLine(pointsX: number[], pointsY: number[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * The x and y array must have the same length and order for the points.
                             * @param pointsX an array of all x positions of the points in the polygon
                             * @param pointsY an array of all y positions of the points in the polygon
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            drawPolygon(pointsX: number[], pointsY: number[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * The x and y array must have the same length and order for the points.
                             * @param pointsX an array of all x positions of the points in the polygon
                             * @param pointsY an array of all y positions of the points in the polygon
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            fillPolygon(pointsX: number[], pointsY: number[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * 
                             * @param x the x position to draw the string at
                             * @param y the y position to draw the string at
                             * @param text the text to draw
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            drawString(x: number, y: number, text: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                            
                            /**
                             * 
                             * @param toAnalyze the string to analyze
                             * @return the width of the string for the current font in pixels
                             * @since 1.8.4
                             */
                            getStringWidth(toAnalyze: string): number;
                            
                        }
                        namespace CustomImage {
                            interface static {
                                new (image: _javatypes.java.awt.image.BufferedImage): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                                new (image: _javatypes.java.awt.image.BufferedImage, name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                                
                                readonly IMAGES: _javatypes.java.util.Map<string, _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage>;
                                
                                createWidget(width: number, height: number, name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                                createWidget(path: string, name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage;
                                
                                /**
                                 * Minecraft textures use an ABGR format for some reason.
                                 * @param argb the argb color to transform
                                 * @return the abgr argb for the given argb color.
                                 * @since 1.8.4
                                 */
                                nativeARGBFlip(argb: number): number;
                                
                            }
                        }
                        interface ScriptScreen extends _javatypes.xyz.wagyourtail.wagyourgui.BaseScreen {
                            drawTitle: boolean;
                            
                            
                            /**
                             * 
                             * @param parent parent screen to go to when this one exits.
                             * @since 1.4.0
                             */
                            setParent(parent: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen): void;
                            
                            /**
                             * add custom stuff to the render function on the main thread.
                             * @param onRender pos3d elements are mousex, mousey, tickDelta
                             * @since 1.4.0
                             */
                            setOnRender(onRender: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D, /* minecraft classes, as any, because obfuscation: */ any, any, any>): void;
                            render(matrices: /* minecraft classes, as any, because obfuscation: */ any, mouseX: number, mouseY: number, delta: number): void;
                            close(): void;
                            
                        }
                        namespace ScriptScreen {
                            interface static {
                                new (title: string, dirt: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.ScriptScreen;
                                
                                
                                
                            }
                        }
                        interface TextBuilder extends any {
                            
                            
                            /**
                             * move on to next section and set it's text.
                             * @param text a {@link String}, {@link TextHelper} or {@link TextBuilder}
                             * @since 1.3.0
                             * @return 
                             */
                            append(text: any): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.TextBuilder;
                            
                            /**
                             * set current section's color by color code as hex, like `0x6` for gold
                             *  and `0xc` for red.
                             * @param color
                             * @since 1.3.0
                             * @return 
                             */
                            withColor(color: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.TextBuilder;
                            
                            /**
                             * Add text with custom colors.
                             * @since 1.3.1
                             * @param r red {@code 0-255}
                             * @param g green {@code 0-255}
                             * @param b blue {@code 0-255}
                             * @return 
                             */
                            withColor(r: number, g: number, b: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.TextBuilder;
                            
                            /**
                             * set other formatting options for the current section
                             * @param underline
                             * @param bold
                             * @param italic
                             * @param strikethrough
                             * @param magic
                             * @since 1.3.0
                             * @return 
                             */
                            withFormatting(underline: boolean, bold: boolean, italic: boolean, strikethrough: boolean, magic: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.TextBuilder;
                            
                            /**
                             * 
                             * @param formattings the formattings to apply
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            withFormatting(formattings: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.FormattingHelper[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.TextBuilder;
                            
                            /**
                             * set current section's hover event to show text
                             * @param text
                             * @since 1.3.0
                             * @return 
                             */
                            withShowTextHover(text: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.TextBuilder;
                            
                            /**
                             * set current section's hover event to show an item
                             * @param item
                             * @since 1.3.0
                             * @return 
                             */
                            withShowItemHover(item: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.TextBuilder;
                            
                            /**
                             * set current section's hover event to show an entity
                             * @param entity
                             * @since 1.3.0
                             * @return 
                             */
                            withShowEntityHover(entity: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper</* minecraft classes, as any, because obfuscation: */ any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.TextBuilder;
                            
                            /**
                             * custom click event.
                             * @param action
                             * @since 1.3.0
                             * @return 
                             */
                            withCustomClickEvent(action: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<any, any, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.TextBuilder;
                            
                            /**
                             * normal click events like: `open_url`, `open_file`, `run_command`, `suggest_command`, `change_page`, and `copy_to_clipboard`
                             * @param action
                             * @param value
                             * @since 1.3.0
                             * @return 
                             */
                            withClickEvent(action: string, value: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.TextBuilder;
                            withStyle(style: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.StyleHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.TextBuilder;
                            
                            /**
                             * 
                             * @return the width of this text.
                             * @since 1.8.4
                             */
                            getWidth(): number;
                            
                            /**
                             * Build to a {@link _javatypes.TextHelper}
                             * @since 1.3.0
                             * @return 
                             */
                            build(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            
                        }
                        namespace TextBuilder {
                            interface static {
                                new (): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.TextBuilder;
                                
                                
                                
                            }
                        }
                        interface Draw3D extends any {
                            
                            
                            /**
                             * 
                             * @return 
                             * @since 1.0.6
                             */
                            getBoxes(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box>;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.0.6
                             */
                            getLines(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line>;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.6.5
                             */
                            getDraw2Ds(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface>;
                            
                            /**
                             * 
                             * @param box
                             * @since 1.8.4
                             */
                            addBox(box: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box): void;
                            
                            /**
                             * 
                             * @param line
                             * @since 1.8.4
                             */
                            addLine(line: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line): void;
                            
                            /**
                             * 
                             * @param surface
                             * @since 1.8.4
                             */
                            addSurface(surface: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface): void;
                            
                            /**
                             * 
                             * @param x1
                             * @param y1
                             * @param z1
                             * @param x2
                             * @param y2
                             * @param z2
                             * @param color
                             * @param fillColor
                             * @param fill
                             * @return The {@link Box} you added.
                             * @since 1.0.6
                             */
                            addBox(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, color: number, fillColor: number, fill: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box;
                            
                            /**
                             * 
                             * @param x1
                             * @param y1
                             * @param z1
                             * @param x2
                             * @param y2
                             * @param z2
                             * @param color
                             * @param fillColor
                             * @param fill
                             * @param cull
                             * @return 
                             * @since 1.3.1
                             */
                            addBox(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, color: number, fillColor: number, fill: boolean, cull: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box;
                            
                            /**
                             * 
                             * @param x1
                             * @param y1
                             * @param z1
                             * @param x2
                             * @param y2
                             * @param z2
                             * @param color
                             * @param alpha
                             * @param fillColor
                             * @param fillAlpha
                             * @param fill
                             * @return the {@link Box} you added.
                             * @since 1.1.8
                             */
                            addBox(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, color: number, alpha: number, fillColor: number, fillAlpha: number, fill: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box;
                            addBox(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, color: number, alpha: number, fillColor: number, fillAlpha: number, fill: boolean, cull: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box;
                            
                            /**
                             * 
                             * @param b
                             * @return 
                             * @since 1.0.6
                             */
                            removeBox(b: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D;
                            
                            /**
                             * 
                             * @param x1
                             * @param y1
                             * @param z1
                             * @param x2
                             * @param y2
                             * @param z2
                             * @param color
                             * @return the {@link Line} you added.
                             * @since 1.0.6
                             */
                            addLine(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, color: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line;
                            
                            /**
                             * 
                             * @param x1
                             * @param y1
                             * @param z1
                             * @param x2
                             * @param y2
                             * @param z2
                             * @param color
                             * @param cull
                             * @return 
                             * @since 1.3.1
                             */
                            addLine(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, color: number, cull: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line;
                            
                            /**
                             * 
                             * @param x1
                             * @param y1
                             * @param z1
                             * @param x2
                             * @param y2
                             * @param z2
                             * @param color
                             * @param alpha
                             * @return the {@link Line} you added.
                             * @since 1.1.8
                             */
                            addLine(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, color: number, alpha: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line;
                            
                            /**
                             * 
                             * @param x1
                             * @param y1
                             * @param z1
                             * @param x2
                             * @param y2
                             * @param z2
                             * @param color
                             * @param alpha
                             * @param cull
                             * @return 
                             * @since 1.3.1
                             */
                            addLine(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, color: number, alpha: number, cull: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line;
                            
                            /**
                             * 
                             * @param l
                             * @return 
                             * @since 1.0.6
                             */
                            removeLine(l: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D;
                            
                            /**
                             * Draws a cube({@link _javatypes.Box}) with a specific radius(`side length = 2*radius`)
                             * @param point the center point
                             * @param radius 1/2 of the side length of the cube
                             * @param color point color
                             * @return the {@link Box} generated, and visualized
                             * @see Box
                             * @since 1.4.0
                             */
                            addPoint(point: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D, radius: number, color: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box;
                            
                            /**
                             * Draws a cube({@link _javatypes.Box}) with a specific radius(`side length = 2*radius`)
                             * @param x x value of the center point
                             * @param y y value of the center point
                             * @param z z value of the center point
                             * @param radius 1/2 of the side length of the cube
                             * @param color point color
                             * @return the {@link Box} generated, and visualized
                             * @see Box
                             * @since 1.4.0
                             */
                            addPoint(x: number, y: number, z: number, radius: number, color: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box;
                            
                            /**
                             * Draws a cube({@link _javatypes.Box}) with a specific radius(`side length = 2*radius`)
                             * @param x x value of the center point
                             * @param y y value of the center point
                             * @param z z value of the center point
                             * @param radius 1/2 of the side length of the cube
                             * @param color point color
                             * @param alpha alpha of the point
                             * @param cull whether to cull the point or not
                             * @return the {@link Box} generated, and visualized
                             * @see Box
                             * @since 1.4.0
                             */
                            addPoint(x: number, y: number, z: number, radius: number, color: number, alpha: number, cull: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box;
                            
                            /**
                             * 
                             * @param x top left
                             * @param y
                             * @param z
                             * @since 1.6.5
                             * @return 
                             */
                            addDraw2D(x: number, y: number, z: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface;
                            
                            /**
                             * 
                             * @param x
                             * @param y
                             * @param z
                             * @param width
                             * @param height
                             * @since 1.6.5
                             * @return 
                             */
                            addDraw2D(x: number, y: number, z: number, width: number, height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface;
                            
                            /**
                             * 
                             * @param x
                             * @param y
                             * @param z
                             * @param xRot
                             * @param yRot
                             * @param zRot
                             * @since 1.6.5
                             * @return 
                             */
                            addDraw2D(x: number, y: number, z: number, xRot: number, yRot: number, zRot: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface;
                            
                            /**
                             * 
                             * @param x
                             * @param y
                             * @param z
                             * @param xRot
                             * @param yRot
                             * @param zRot
                             * @param width
                             * @param height
                             * @since 1.6.5
                             * @return 
                             */
                            addDraw2D(x: number, y: number, z: number, xRot: number, yRot: number, zRot: number, width: number, height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface;
                            
                            /**
                             * 
                             * @param x
                             * @param y
                             * @param z
                             * @param xRot
                             * @param yRot
                             * @param zRot
                             * @param width
                             * @param height
                             * @param minSubdivisions
                             * @since 1.6.5
                             * @return 
                             */
                            addDraw2D(x: number, y: number, z: number, xRot: number, yRot: number, zRot: number, width: number, height: number, minSubdivisions: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface;
                            
                            /**
                             * 
                             * @param x
                             * @param y
                             * @param z
                             * @param xRot
                             * @param yRot
                             * @param zRot
                             * @param width
                             * @param height
                             * @param minSubdivisions
                             * @param renderBack
                             * @since 1.6.5
                             * @return 
                             */
                            addDraw2D(x: number, y: number, z: number, xRot: number, yRot: number, zRot: number, width: number, height: number, minSubdivisions: number, renderBack: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface;
                            
                            /**
                             * 
                             * @param x top left
                             * @param y
                             * @param z
                             * @param xRot
                             * @param yRot
                             * @param zRot
                             * @param width
                             * @param height
                             * @param minSubdivisions
                             * @param renderBack
                             * @since 1.6.5
                             * @return 
                             */
                            addDraw2D(x: number, y: number, z: number, xRot: number, yRot: number, zRot: number, width: number, height: number, minSubdivisions: number, renderBack: boolean, cull: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface;
                            
                            /**
                             * 
                             * @since 1.6.5
                             */
                            removeDraw2D(surface: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface): void;
                            
                            /**
                             * 
                             * @return a new {@link Box.Builder} instance.
                             * @since 1.8.4
                             */
                            boxBuilder(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                            
                            /**
                             * 
                             * @param pos the block position of the box
                             * @return a new {@link Box.Builder} instance.
                             * @since 1.8.4
                             */
                            boxBuilder(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                            
                            /**
                             * 
                             * @param x the x coordinate of the box
                             * @param y the y coordinate of the box
                             * @param z the z coordinate of the box
                             * @return a new {@link Box.Builder} instance.
                             * @since 1.8.4
                             */
                            boxBuilder(x: number, y: number, z: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                            
                            /**
                             * 
                             * @return a new {@link Line.Builder} instance.
                             * @since 1.8.4
                             */
                            lineBuilder(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line$Builder;
                            
                            /**
                             * 
                             * @return a new {@link Surface.Builder} instance.
                             * @since 1.8.4
                             */
                            surfaceBuilder(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface$Builder;
                            
                            /**
                             * register so it actually shows up
                             * @return self for chaining
                             * @since 1.6.5
                             */
                            register(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D;
                            
                            /**
                             * 
                             * @return self for chaining
                             * @since 1.6.5
                             */
                            unregister(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D;
                            render(matrixStack: /* minecraft classes, as any, because obfuscation: */ any, tickDelta: number): void;
                            
                        }
                        namespace Draw3D {
                            interface static {
                                new (): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D;
                                
                                
                                
                            }
                        }
                        interface PlayerInput extends any {
                            movementForward: number;
                            movementSideways: number;
                            yaw: number;
                            pitch: number;
                            jumping: boolean;
                            sneaking: boolean;
                            sprinting: boolean;
                            
                            
                            /**
                             * Converts the current object into a string.
                             *  This can be used to convert current inputs created using `Player.getCurrentPlayerInput()`
                             *  to either JSON or CSV.
                             *  <p>
                             *  The output can be converted into a PlayerInput object again by using either
                             *  `fromCsv(String, String)` or `fromJson(String)`.
                             * @param varNames whether to include variable Names(=JSON) or not(=CSV)
                             * @return The {@code PlayerInput} object as a string
                             * @since 1.4.0
                             */
                            toString(varNames: boolean): string;
                            toString(): string;
                            clone(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput;
                            
                        }
                        namespace PlayerInput {
                            interface static {
                                
                                /**
                                 * Creates a new `PlayerInput` Object with all values set either to 0 or false
                                 * @see #PlayerInput(float, float, float, float, boolean, boolean, boolean)
                                 * @since 1.4.0
                                 */
                                new (): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput;
                                
                                /**
                                 * Creates a new `PlayerInput` Object with all other values set either to 0 or false
                                 * @param movementForward 1 = forward input (W); 0 = no input; -1 = backward input (S)
                                 * @param movementSideways 1 = left input (A); 0 = no input; -1 = right input (D)
                                 * @param yaw yaw of the player
                                 * @see #PlayerInput(float, float, float, float, boolean, boolean, boolean)
                                 * @since 1.4.0
                                 */
                                new (movementForward: number, movementSideways: number, yaw: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput;
                                
                                /**
                                 * Creates a new `PlayerInput` Object with all other values set either to 0 or false
                                 * @param movementForward 1 = forward input (W); 0 = no input; -1 = backward input (S)
                                 * @param yaw yaw of the player
                                 * @param jumping jump input
                                 * @param sprinting sprint input
                                 * @see #PlayerInput(float, float, float, float, boolean, boolean, boolean)
                                 * @since 1.4.0
                                 */
                                new (movementForward: number, yaw: number, jumping: boolean, sprinting: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput;
                                
                                /**
                                 * Creates a new `PlayerInput` Object from a minecraft input with the missing values extra
                                 * @param input Minecraft Input to be converted.
                                 * @param yaw yaw of the player
                                 * @param pitch pitch of the player
                                 * @param sprinting sprint input
                                 * @see #PlayerInput(float, float, float, float, boolean, boolean, boolean)
                                 * @since 1.4.0
                                 */
                                new (input: /* minecraft classes, as any, because obfuscation: */ any, yaw: number, pitch: number, sprinting: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput;
                                
                                /**
                                 * Creates a new `PlayerInput` Object with all double values converted to floats
                                 * @param movementForward 1 = forward input (W); 0 = no input; -1 = backward input (S)
                                 * @param movementSideways 1 = left input (A); 0 = no input; -1 = right input (D)
                                 * @param yaw yaw of the player
                                 * @param pitch pitch of the player
                                 * @param jumping jump input
                                 * @param sneaking sneak input
                                 * @param sprinting sprint input
                                 * @see #PlayerInput(float, float, float, float, boolean, boolean, boolean)
                                 * @since 1.4.0
                                 */
                                new (movementForward: number, movementSideways: number, yaw: number, pitch: number, jumping: boolean, sneaking: boolean, sprinting: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput;
                                
                                /**
                                 * Creates a new `PlayerInput` Object
                                 * @param movementForward 1 = forward input (W); 0 = no input; -1 = backward input (S)
                                 * @param movementSideways 1 = left input (A); 0 = no input; -1 = right input (D)
                                 * @param yaw yaw of the player
                                 * @param pitch pitch of the player
                                 * @param jumping jump input
                                 * @param sneaking sneak input
                                 * @param sprinting sprint input
                                 * @since 1.4.0
                                 */
                                new (movementForward: number, movementSideways: number, yaw: number, pitch: number, jumping: boolean, sneaking: boolean, sprinting: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput;
                                
                                /**
                                 * Creates a clone `PlayerInput` Object
                                 * @param input the {@code PlayerInput} object to be cloned
                                 * @since 1.4.0
                                 */
                                new (input: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput;
                                
                                
                                
                                /**
                                 * Parses each row of CSV string into a `PlayerInput`.
                                 *  The capitalization of the header matters.<br>
                                 *  About the columns:
                                 *  <ul>
                                 *    <li> `movementForward` and `movementSideways` as a number</li>
                                 *    <li>`yaw` and `pitch` as an absolute number</li>
                                 *    <li>`jumping`, `sneaking` and `sprinting` have to be boolean</li>
                                 *  </ul>
                                 *  <p>
                                 *  The separation must be a "," it's a csv...(but spaces don't matter)<br>
                                 *  Quoted values don't work
                                 * @param csv CSV string to be parsed
                                 * @return {@code List<PlayerInput>} Each row parsed as a {@code PlayerInput}
                                 * @see #PlayerInput(float, float, float, float, boolean, boolean, boolean)
                                 * @since 1.4.0
                                 */
                                fromCsv(csv: string): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput>;
                                
                                /**
                                 * Parses a JSON string into a `PlayerInput` Object<br>
                                 *  Capitalization of the keys matters.
                                 * @param json JSON string to be parsed
                                 * @return The JSON parsed into a {@code PlayerInput}
                                 * @see #fromCsv(String)
                                 * @since 1.4.0
                                 */
                                fromJson(json: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput;
                                
                            }
                        }
                        interface CommandManager extends any {
                            
                            
                            /**
                             * 
                             * @since 1.7.0
                             * @return list of commands
                             */
                            getValidCommands(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @param name
                             * @since 1.7.0
                             * @return 
                             */
                            createCommandBuilder(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            
                            /**
                             * 
                             * @param command
                             * @return 
                             * @since 1.7.0
                             * @throws IllegalAccessException
                             */
                            unregisterCommand(command: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CommandNodeHelper;
                            
                            /**
                             * warning: this method is hacky
                             * @since 1.7.0
                             * @param node
                             */
                            reRegisterCommand(node: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CommandNodeHelper): void;
                            
                            /**
                             * 
                             * @since 1.8.2
                             * @param commandPart
                             */
                            getArgumentAutocompleteOptions(commandPart: string, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.java.util.List<string>, any, any, any>): void;
                            
                        }
                        namespace CommandManager {
                            interface static {
                                new (): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandManager;
                                
                                instance: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandManager;
                                
                                
                            }
                        }
                        interface Inventory<T> extends any {
                            
                            
                            /**
                             * 
                             * @param slot
                             * @since 1.5.0
                             * @return 
                             */
                            click(slot: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Inventory<T>;
                            
                            /**
                             * Clicks a slot with a mouse button.~~if the slot is a container, it will click the first slot in the container
                             * @since 1.0.8
                             * @param slot
                             * @param mousebutton
                             * @return 
                             */
                            click(slot: number, mousebutton: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Inventory<T>;
                            
                            /**
                             * Does a drag-click with a mouse button. (the slots don't have to be in order or even adjacent, but when vanilla minecraft calls the underlying function they're always sorted...)
                             * @param slots
                             * @param mousebutton
                             * @return 
                             */
                            dragClick(slots: number[], mousebutton: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Inventory<T>;
                            
                            /**
                             * 
                             * @since 1.5.0
                             * @param slot
                             */
                            dropSlot(slot: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Inventory<T>;
                            
                            /**
                             * 
                             * @param slot the slot to drop
                             * @param stack decide whether to drop the whole stack or just a single item
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            dropSlot(slot: number, stack: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Inventory<T>;
                            
                            /**
                             * 
                             * @param item the item to check for
                             * @return {@code true} if the item is contined anywhere in the inventory, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            contains(item: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper): boolean;
                            
                            /**
                             * 
                             * @param item the item to check for
                             * @return {@code true} if the item is contined anywhere in the inventory, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            contains(item: string): boolean;
                            
                            /**
                             * 
                             * @return the first empty slot in the main inventory or {@code -1} if there are no empty
                             *          slots.
                             * @since 1.8.4
                             */
                            findFreeInventorySlot(): number;
                            
                            /**
                             * 
                             * @return the first empty hotbar slot or {@code -1} if there are no empty slots.
                             * @since 1.8.4
                             */
                            findFreeHotbarSlot(): number;
                            
                            /**
                             * 
                             * @param mapIdentifiers the identifier of the inventory sections to check
                             * @return the first empty slot in the given inventory sections, or {@code -1} if there are no
                             *          empty slots.
                             * @since 1.8.4
                             */
                            findFreeSlot(mapIdentifiers: string[]): number;
                            
                            /**
                             * 
                             * @return a map of all item ids and their total count inside the inventory.
                             * @since 1.8.4
                             */
                            getItemCount(): _javatypes.java.util.Map<string, number>;
                            
                            /**
                             * 
                             * @return a list of all items in the inventory.
                             * @since 1.8.4
                             */
                            getItems(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper>;
                            
                            /**
                             * 
                             * @param mapIdentifiers the inventory sections
                             * @return a list of all items in the given inventory sections.
                             * @since 1.8.4
                             */
                            getItems(mapIdentifiers: string[]): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper>;
                            
                            /**
                             * 
                             * @param item the item to search for
                             * @return all slots containing the given item.
                             * @since 1.8.4
                             */
                            findItem(item: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper): number[];
                            
                            /**
                             * 
                             * @param item the item to search for
                             * @return all slots containing the given item.
                             * @since 1.8.4
                             */
                            findItem(item: string): number[];
                            
                            /**
                             * 
                             * @param mapIdentifiers the inventory sections
                             * @return all slots indexes in the given inventory sections.
                             * @since 1.8.4
                             */
                            getSlots(mapIdentifiers: string[]): number[];
                            
                            /**
                             * 
                             * @since 1.2.5
                             * @return the index of the selected hotbar slot.
                             */
                            getSelectedHotbarSlotIndex(): number;
                            
                            /**
                             * 
                             * @since 1.2.5
                             * @param index
                             */
                            setSelectedHotbarSlotIndex(index: number): void;
                            
                            /**
                             * closes the inventory, (if the inventory/container is visible it will close the gui). also drops any "held on mouse" items.
                             * @return 
                             */
                            closeAndDrop(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Inventory<T>;
                            
                            /**
                             * Closes the inventory, and open gui if applicable.
                             */
                            close(): void;
                            
                            /**
                             * simulates a shift-click on a slot.
                             *  It should be safe to chain these without {@link _javatypes.FClient#waitTick} at least for a bunch of the same item.
                             * @param slot
                             * @return 
                             */
                            quick(slot: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Inventory<T>;
                            
                            /**
                             * 
                             * @param slot
                             * @since 1.7.0
                             * @return 
                             */
                            quickAll(slot: number): number;
                            
                            /**
                             * quicks all that match the slot
                             * @param slot a slot from the section you want to move items from
                             * @param button
                             * @since 1.7.0
                             * @return number of items that matched
                             */
                            quickAll(slot: number, button: number): number;
                            
                            /**
                             * 
                             * @return the held (by the mouse) item.
                             */
                            getHeld(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            
                            /**
                             * 
                             * @param slot
                             * @return the item in the slot.
                             */
                            getSlot(slot: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            
                            /**
                             * 
                             * @return the size of the container/inventory.
                             */
                            getTotalSlots(): number;
                            
                            /**
                             * Splits the held stack into two slots. can be alternatively done with {@link _javatypes.Inventory#dragClick} if this one has issues on some servers.
                             * @param slot1
                             * @param slot2
                             * @return 
                             * @throws Exception
                             */
                            split(slot1: number, slot2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Inventory<T>;
                            
                            /**
                             * Does that double click thingy to turn a incomplete stack pickup into a complete stack pickup if you have more in your inventory.
                             * @param slot
                             * @return 
                             */
                            grabAll(slot: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Inventory<T>;
                            
                            /**
                             * swaps the items in two slots.
                             * @param slot1
                             * @param slot2
                             * @return 
                             */
                            swap(slot1: number, slot2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Inventory<T>;
                            
                            /**
                             * equivalent to hitting the numbers or f for swapping slots to hotbar
                             * @param slot
                             * @param hotbarSlot 0-8 or 40 for offhand
                             * @since 1.6.5 [citation needed]
                             * @return 
                             */
                            swapHotbar(slot: number, hotbarSlot: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Inventory<T>;
                            
                            /**
                             * 
                             * @since 1.2.8
                             */
                            openGui(): void;
                            
                            /**
                             * 
                             * @since 1.1.3
                             * @return the id of the slot under the mouse.
                             */
                            getSlotUnderMouse(): number;
                            
                            /**
                             * 
                             * @since 1.1.3
                             * @return the part of the mapping the slot is in.
                             */
                            getType(): string;
                            
                            /**
                             * 
                             * @since 1.1.3
                             * @return the inventory mappings different depending on the type of open container/inventory.
                             */
                            getMap(): _javatypes.java.util.Map<string, number[]>;
                            
                            /**
                             * 
                             * @since 1.1.3
                             * @param slotNum
                             * @return returns the part of the mapping the slot is in.
                             */
                            getLocation(slotNum: number): string;
                            
                            /**
                             * 
                             * @return {@code true} if the inventory is a container, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isContainer(): boolean;
                            
                            /**
                             * 
                             * @since 1.2.3
                             * @return 
                             */
                            getContainerTitle(): string;
                            getRawContainer(): T;
                            toString(): string;
                            
                            /**
                             * 
                             * @since 1.6.0
                             * @return 
                             */
                            getCurrentSyncId(): number;
                            
                        }
                        namespace Inventory {
                            interface static {
                                
                                
                                create(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Inventory<any>;
                                create(s: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Inventory<any>;
                                
                            }
                        }
                        interface CommandBuilder extends any {
                            
                            literalArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            booleanArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            intArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            intArg(name: string, min: number, max: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            intRangeArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            longArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            longArg(name: string, min: number, max: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            floatRangeArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            doubleArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            doubleArg(name: string, min: number, max: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            uuidArgType(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            greedyStringArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            quotedStringArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            wordArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            regexArgType(name: string, regex: string, flags: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            textArgType(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            timeArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            identifierArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            nbtArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            nbtElementArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            nbtCompoundArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            colorArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            angleArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            itemArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            itemStackArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            itemPredicateArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            blockArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            blockStateArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            blockPredicateArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            blockPosArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            columnPosArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            dimensionArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            itemSlotArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            particleArg(name: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            
                            /**
                             * it is recommended to use {@link _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.FJsMacros#runScript}
                             *  in the callback if you expect to actually do anything complicated with waits.
                             * 
                             *  the {@link _javatypes.CommandContextHelper} arg is an {@link _javatypes.BaseEvent}
                             *  so you can pass it directly to {@link _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.FJsMacros#runScript}.
                             * 
                             *  make sure your callback returns a boolean success = true.
                             * @param callback
                             * @return 
                             */
                            executes(callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CommandContextHelper, any, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            
                            /**
                             * 
                             * @since 1.6.5
                             * @param suggestions
                             * @return 
                             */
                            suggestMatching(suggestions: string[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            
                            /**
                             * 
                             * @param suggestions the strings to match
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            suggestMatching(suggestions: _javatypes.java.util.Collection<string>): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            
                            /**
                             * 
                             * @since 1.6.5
                             * @param suggestions
                             * @return 
                             */
                            suggestIdentifier(suggestions: string[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            
                            /**
                             * 
                             * @param suggestions the identifiers to match
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            suggestIdentifier(suggestions: _javatypes.java.util.Collection<string>): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            
                            /**
                             * 
                             * @param positions the positions to suggest
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            suggestBlockPositions(positions: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            
                            /**
                             * 
                             * @param positions the positions to suggest
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            suggestBlockPositions(positions: _javatypes.java.util.Collection<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper>): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            
                            /**
                             * Positions are strings of the form "x y z" where x, y, and z are numbers or the default
                             *  minecraft selectors "~" and "^" followed by a number.
                             * @param positions the positions to suggest
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            suggestPositions(positions: string[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            
                            /**
                             * Positions are strings of the form "x y z" where x, y, and z are numbers or the default
                             *  minecraft selectors "~" and "^" followed by a number.
                             * @param positions the positions to match
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            suggestPositions(positions: _javatypes.java.util.Collection<string>): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            
                            /**
                             * 
                             * @since 1.6.5
                             * @param callback
                             * @return 
                             */
                            suggest(callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CommandContextHelper, _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SuggestionsBuilderHelper, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            or(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            
                            /**
                             * name overload for {@link #or} to work around language keyword restrictions
                             * @since 1.5.2
                             * @return 
                             */
                            otherwise(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            or(argumentLevel: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            
                            /**
                             * name overload for {@link #or} to work around language keyword restrictions
                             * @since 1.5.2
                             * @param argLevel
                             * @return 
                             */
                            otherwise(argLevel: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                            register(): void;
                            
                            /**
                             * 
                             * @since 1.6.5
                             *  removes this command
                             */
                            unregister(): void;
                            
                        }
                        namespace CommandBuilder {
                            interface static {
                                new (): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder;
                                
                                
                                
                            }
                        }
                        interface RegistryHelper extends any {
                            
                            
                            /**
                             * 
                             * @param id the item's id
                             * @return an {@link ItemHelper} for the given item.
                             * @since 1.8.4
                             */
                            getItem(id: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemHelper;
                            
                            /**
                             * 
                             * @param id the item's id
                             * @return an {@link ItemStackHelper} for the given item.
                             * @since 1.8.4
                             */
                            getItemStack(id: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            
                            /**
                             * 
                             * @param id the item's id
                             * @param nbt the item's nbt
                             * @return an {@link ItemStackHelper} for the given item and nbt data.
                             * @throws CommandSyntaxException if the nbt data is invalid.
                             * @since 1.8.4
                             */
                            getItemStack(id: string, nbt: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            
                            /**
                             * 
                             * @return a list of all registered item ids.
                             * @since 1.8.4
                             */
                            getItemIds(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return a list of all registered items.
                             * @since 1.8.4
                             */
                            getItems(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemHelper>;
                            
                            /**
                             * 
                             * @param id the block's id
                             * @return an {@link BlockHelper} for the given block.
                             * @since 1.8.4
                             */
                            getBlock(id: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockHelper;
                            
                            /**
                             * 
                             * @param id the block's id
                             * @return an {@link BlockStateHelper} for the given block.
                             * @since 1.8.4
                             */
                            getBlockState(id: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockStateHelper;
                            
                            /**
                             * 
                             * @param id the block's id
                             * @param nbt the block's nbt
                             * @return an {@link BlockStateHelper} for the given block with the specified nbt.
                             * @throws CommandSyntaxException if the nbt data is invalid.
                             * @since 1.8.4
                             */
                            getBlockState(id: string, nbt: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockStateHelper;
                            
                            /**
                             * 
                             * @return a list of all registered block ids.
                             * @since 1.8.4
                             */
                            getBlockIds(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return a list of all registered blocks.
                             * @since 1.8.4
                             */
                            getBlocks(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockHelper>;
                            
                            /**
                             * 
                             * @param id the enchantment's id
                             * @return an {@link EnchantmentHelper} for the given enchantment.
                             * @since 1.8.4
                             */
                            getEnchantment(id: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EnchantmentHelper;
                            
                            /**
                             * 
                             * @param id the enchantment's id
                             * @param level the level of the enchantment
                             * @return an {@link EnchantmentHelper} for the given enchantment with the specified level.
                             * @since 1.8.4
                             */
                            getEnchantment(id: string, level: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EnchantmentHelper;
                            
                            /**
                             * 
                             * @return a list of all registered enchantment ids.
                             * @since 1.8.4
                             */
                            getEnchantmentIds(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return a list of all registered enchantments.
                             * @since 1.8.4
                             */
                            getEnchantments(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EnchantmentHelper>;
                            
                            /**
                             * 
                             * @param type the id of the entity's type
                             * @return an {@link EntityHelper} for the given entity.
                             * @since 1.8.4
                             */
                            getEntity(type: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>;
                            
                            /**
                             * 
                             * @param type the id of the entity's type
                             * @return an {@link EntityType} for the given entity.
                             * @since 1.8.4
                             */
                            getRawEntityType(type: string): /* minecraft classes, as any, because obfuscation: */ any;
                            
                            /**
                             * 
                             * @return a list of all entity type ids.
                             * @since 1.8.4
                             */
                            getEntityTypeIds(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @param id the fluid's id
                             * @return an {@link FluidStateHelper} for the given fluid.
                             * @since 1.8.4
                             */
                            getFluidState(id: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.FluidStateHelper;
                            
                            /**
                             * 
                             * @return a list of all feature ids.
                             * @since 1.8.4
                             */
                            getFeatureIds(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return a list of all structure feature ids.
                             * @since 1.8.4
                             */
                            getStructureFeatureIds(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return a list of all painting motive ids.
                             * @since 1.8.4
                             */
                            getPaintingIds(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return a list of all particle type ids.
                             * @since 1.8.4
                             */
                            getParticleTypeIds(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return a list of all game event names.
                             * @since 1.8.4
                             */
                            getGameEventNames(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return a list of all status effect ids.
                             * @since 1.8.4
                             */
                            getStatusEffectIds(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return a list of all block entity type ids.
                             * @since 1.8.4
                             */
                            getBlockEntityTypeIds(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return a list of all screen handler ids.
                             * @since 1.8.4
                             */
                            getScreenHandlerIds(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return a list of all recipe type ids.
                             * @since 1.8.4
                             */
                            getRecipeTypeIds(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return a list of all villager type ids.
                             * @since 1.8.4
                             */
                            getVillagerTypeIds(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return a list of all villager profession ids.
                             * @since 1.8.4
                             */
                            getVillagerProfessionIds(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return a list of all point of interest type ids.
                             * @since 1.8.4
                             */
                            getPointOfInterestTypeIds(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return a list of all memory module type ids.
                             * @since 1.8.4
                             */
                            getMemoryModuleTypeIds(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return a list of all villager sensor type ids.
                             * @since 1.8.4
                             */
                            getSensorTypeIds(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return a list of all villager activity type ids.
                             * @since 1.8.4
                             */
                            getActivityTypeIds(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return a list of all stat type ids.
                             * @since 1.8.4
                             */
                            getStatTypeIds(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return a list of all entity attribute ids.
                             * @since 1.8.4
                             */
                            getEntityAttributeIds(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @return a list of all potion type ids.
                             * @since 1.8.4
                             */
                            getPotionTypeIds(): _javatypes.java.util.List<string>;
                            
                            /**
                             * 
                             * @param identifier the String representation of the identifier, with the namespace and path
                             * @return the raw minecraft Identifier.
                             * @since 1.8.4
                             */
                            getIdentifier(identifier: string): /* minecraft classes, as any, because obfuscation: */ any;
                            
                        }
                        namespace RegistryHelper {
                            interface static {
                                new (): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.RegistryHelper;
                                
                                
                                parseIdentifier(id: string): /* minecraft classes, as any, because obfuscation: */ any;
                                parseNameSpace(id: string): string;
                                
                            }
                        }
                        interface Draw2D extends /* supressed minecraft class */ _javatypes.java.lang.Object, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IDraw2D<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D> {
                            widthSupplier: _javatypes.java.util._function.IntSupplier;
                            heightSupplier: _javatypes.java.util._function.IntSupplier;
                            zIndex: number;
                            visible: boolean;
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @deprecated please use {@link Draw2D#setOnInit(MethodWrapper)}
                             */
                            onInit: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D, any, any, any>;
                            
                            /**
                             * 
                             * @since 1.1.9 [citation needed]
                             * @deprecated please use {@link Draw2D#setOnFailInit(MethodWrapper)}
                             */
                            catchInit: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<string, any, any, any>;
                            
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @see IDraw2D#getWidth()
                             */
                            getWidth(): number;
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @see IDraw2D#getHeight()
                             */
                            getHeight(): number;
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @see IDraw2D#getTexts()
                             */
                            getTexts(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text>;
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @see IDraw2D#getRects()
                             */
                            getRects(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect>;
                            getLines(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line>;
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @see IDraw2D#getItems()
                             */
                            getItems(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item>;
                            
                            /**
                             * 
                             * @since 1.2.3
                             * @see IDraw2D#getImages()
                             */
                            getImages(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image>;
                            getDraw2Ds(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement>;
                            getElements(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$RenderElement>;
                            removeElement(e: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$RenderElement): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D;
                            reAddElement<T>(e: T): T;
                            
                            /**
                             * 
                             * @param visible whether to render this element.
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setVisible(visible: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D;
                            
                            /**
                             * 
                             * @return {@code true} if this draw2d is visible, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isVisible(): boolean;
                            addDraw2D(draw2D: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D, x: number, y: number, width: number, height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement;
                            addDraw2D(draw2D: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D, x: number, y: number, width: number, height: number, zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement;
                            removeDraw2D(draw2D: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D;
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @see IDraw2D#addText(String, int, int, int, boolean)
                             */
                            addText(text: string, x: number, y: number, color: number, shadow: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            addText(text: string, x: number, y: number, color: number, zIndex: number, shadow: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            
                            /**
                             * 
                             * @since 1.2.6
                             * @see IDraw2D#addText(String, int, int, int, boolean, double, double)
                             */
                            addText(text: string, x: number, y: number, color: number, shadow: boolean, scale: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            addText(text: string, x: number, y: number, color: number, zIndex: number, shadow: boolean, scale: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            addText(text: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper, x: number, y: number, color: number, shadow: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            addText(text: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper, x: number, y: number, color: number, zIndex: number, shadow: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            addText(text: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper, x: number, y: number, color: number, shadow: boolean, scale: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            addText(text: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper, x: number, y: number, color: number, zIndex: number, shadow: boolean, scale: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @see IDraw2D#removeText(Text)
                             */
                            removeText(t: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D;
                            
                            /**
                             * 
                             * @since 1.2.3
                             * @see IDraw2D#addImage(int, int, int, int, String, int, int, int, int, int, int)
                             */
                            addImage(x: number, y: number, width: number, height: number, id: string, imageX: number, imageY: number, regionWidth: number, regionHeight: number, textureWidth: number, textureHeight: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            addImage(x: number, y: number, width: number, height: number, zIndex: number, id: string, imageX: number, imageY: number, regionWidth: number, regionHeight: number, textureWidth: number, textureHeight: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            
                            /**
                             * 
                             * @since 1.2.6
                             * @see IDraw2D#addImage(int, int, int, int, String, int, int, int, int, int, int, double)
                             */
                            addImage(x: number, y: number, width: number, height: number, id: string, imageX: number, imageY: number, regionWidth: number, regionHeight: number, textureWidth: number, textureHeight: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            
                            /**
                             * 
                             * @since 1.4.0
                             * @see IDraw2D#addImage(int, int, int, int, int, String, int, int, int, int, int, int, double)
                             */
                            addImage(x: number, y: number, width: number, height: number, zIndex: number, id: string, imageX: number, imageY: number, regionWidth: number, regionHeight: number, textureWidth: number, textureHeight: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            
                            /**
                             * 
                             * @since 1.6.5
                             * @see IDraw2D#addImage(int, int, int, int, int, int, String, int, int, int, int, int, int, double)
                             */
                            addImage(x: number, y: number, width: number, height: number, zIndex: number, color: number, id: string, imageX: number, imageY: number, regionWidth: number, regionHeight: number, textureWidth: number, textureHeight: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            
                            /**
                             * 
                             * @since 1.6.5
                             * @see IDraw2D#addImage(int, int, int, int, int, int, int, String, int, int, int, int, int, int, double)
                             */
                            addImage(x: number, y: number, width: number, height: number, zIndex: number, alpha: number, color: number, id: string, imageX: number, imageY: number, regionWidth: number, regionHeight: number, textureWidth: number, textureHeight: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            
                            /**
                             * 
                             * @since 1.2.3
                             * @see IDraw2D#removeImage(Image)
                             */
                            removeImage(i: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D;
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @see IDraw2D#addRect(int, int, int, int, int)
                             */
                            addRect(x1: number, y1: number, x2: number, y2: number, color: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            
                            /**
                             * 
                             * @since 1.1.8
                             * @see IDraw2D#addRect(int, int, int, int, int, int)
                             */
                            addRect(x1: number, y1: number, x2: number, y2: number, color: number, alpha: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            
                            /**
                             * 
                             * @since 1.2.6
                             * @see IDraw2D#addRect(int, int, int, int, int, int, double)
                             */
                            addRect(x1: number, y1: number, x2: number, y2: number, color: number, alpha: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            addRect(x1: number, y1: number, x2: number, y2: number, color: number, alpha: number, rotation: number, zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @see IDraw2D#removeRect(Rect)
                             */
                            removeRect(r: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D;
                            addLine(x1: number, y1: number, x2: number, y2: number, color: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            addLine(x1: number, y1: number, x2: number, y2: number, color: number, zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            addLine(x1: number, y1: number, x2: number, y2: number, color: number, width: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            addLine(x1: number, y1: number, x2: number, y2: number, color: number, zIndex: number, width: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            addLine(x1: number, y1: number, x2: number, y2: number, color: number, width: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            addLine(x1: number, y1: number, x2: number, y2: number, color: number, zIndex: number, width: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            removeLine(l: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D;
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @see IDraw2D#addItem(int, int, String)
                             */
                            addItem(x: number, y: number, id: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            addItem(x: number, y: number, zIndex: number, id: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @since 1.2.0
                             * @see IDraw2D#addItem(int, int, String, boolean)
                             */
                            addItem(x: number, y: number, id: string, overlay: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            addItem(x: number, y: number, zIndex: number, id: string, overlay: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @since 1.2.0
                             * @see IDraw2D#addItem(int, int, String, boolean, double, double)
                             */
                            addItem(x: number, y: number, id: string, overlay: boolean, scale: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            addItem(x: number, y: number, zIndex: number, id: string, overlay: boolean, scale: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @see IDraw2D#addItem(int, int, ItemStackHelper)
                             */
                            addItem(x: number, y: number, Item: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            addItem(x: number, y: number, zIndex: number, item: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @since 1.2.0
                             * @see IDraw2D#addItem(int, int, ItemStackHelper, boolean)
                             */
                            addItem(x: number, y: number, Item: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper, overlay: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            addItem(x: number, y: number, zIndex: number, item: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper, overlay: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @since 1.2.6
                             * @see IDraw2D#addItem(int, int, ItemStackHelper, boolean, double, double)
                             */
                            addItem(x: number, y: number, item: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper, overlay: boolean, scale: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            addItem(x: number, y: number, zIndex: number, item: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper, overlay: boolean, scale: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @see IDraw2D#removeItem(Item)
                             */
                            removeItem(i: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D;
                            init(): void;
                            render(matrixStack: /* minecraft classes, as any, because obfuscation: */ any): void;
                            getElementsByZIndex(): _javatypes.java.util.Iterator<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$RenderElement>;
                            
                            /**
                             * init function, called when window is resized or screen/draw2d is registered.
                             *  clears all previous elements when called.
                             * @since 1.2.7
                             * @see IDraw2D#setOnInit(MethodWrapper)
                             * @param onInit calls your method as a {@link java.util.function.Consumer Consumer}&lt;{@link Draw2D}&gt;
                             */
                            setOnInit(onInit: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D, any, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @see IDraw2D#setOnFailInit(MethodWrapper)
                             * @param catchInit calls your method as a {@link java.util.function.Consumer Consumer}&lt;{@link java.lang.String String}&gt;
                             */
                            setOnFailInit(catchInit: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<string, any, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D;
                            
                            /**
                             * register so the overlay actually renders
                             * @since 1.6.5
                             * @return self for chaining
                             */
                            register(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D;
                            
                            /**
                             * unregister so the overlay stops rendering
                             * @since 1.6.5
                             * @return self for chaining
                             */
                            unregister(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D;
                            setZIndex(zIndex: number): void;
                            getZIndex(): number;
                            
                        }
                        namespace Draw2D {
                            interface static {
                                new (): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D;
                                
                                
                                
                            }
                        }
                        interface Draw3D$Surface extends _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$RenderElement {
                            rotateToPlayer: boolean;
                            rotateCenter: boolean;
                            boundEntity: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>;
                            boundOffset: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            readonly pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            readonly rotations: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            
                            /**
                             * scale that zIndex is multiplied by to get the actual offset (in blocks) for rendering
                             *  default: `1/1000` if there is still z-fighting, increase this value
                             * @since 1.6.5
                             */
                            zIndexScale: number;
                            renderBack: boolean;
                            cull: boolean;
                            
                            
                            /**
                             * 
                             * @param pos the position of the surface
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setPos(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface;
                            
                            /**
                             * 
                             * @param pos the position of the surface
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setPos(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface;
                            setPos(x: number, y: number, z: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface;
                            
                            /**
                             * The surface will move with the entity at the offset location.
                             * @param boundEntity the entity to bind the surface to
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            bindToEntity(boundEntity: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface;
                            
                            /**
                             * 
                             * @return the entity the surface is bound to, or {@code null} if it is not bound to an
                             *          entity.
                             * @since 1.8.4
                             */
                            getBoundEntity(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>;
                            
                            /**
                             * 
                             * @param boundOffset the offset from the entity's position to render the surface at
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setBoundOffset(boundOffset: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface;
                            
                            /**
                             * 
                             * @param x the x offset from the entity's position to render the surface at
                             * @param y the y offset from the entity's position to render the surface at
                             * @param z the z offset from the entity's position to render the surface at
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setBoundOffset(x: number, y: number, z: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface;
                            
                            /**
                             * 
                             * @return the offset from the entity's position to render the surface at.
                             * @since 1.8.4
                             */
                            getBoundOffset(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            
                            /**
                             * 
                             * @param rotateToPlayer whether to rotate the surface to face the player or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setRotateToPlayer(rotateToPlayer: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface;
                            
                            /**
                             * 
                             * @return {@code true} if the surface should be rotated to face the player, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            doesRotateToPlayer(): boolean;
                            setRotations(x: number, y: number, z: number): void;
                            setSizes(x: number, y: number): void;
                            getSizes(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D;
                            setMinSubdivisions(minSubdivisions: number): void;
                            getMinSubdivisions(): number;
                            getHeight(): number;
                            getWidth(): number;
                            
                            /**
                             * 
                             * @param rotateCenter whether to rotate the surface around its center or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setRotateCenter(rotateCenter: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface;
                            
                            /**
                             * 
                             * @return {@code true} if this surface is rotated around it's center, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            isRotatingCenter(): boolean;
                            init(): void;
                            getZIndex(): number;
                            render3D(matrixStack: /* minecraft classes, as any, because obfuscation: */ any, mouseX: number, mouseY: number, delta: number): void;
                            render(matrices: /* minecraft classes, as any, because obfuscation: */ any, mouseX: number, mouseY: number, delta: number): void;
                            
                        }
                        namespace Draw3D$Surface {
                            interface static {
                                new (pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D, rotations: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D, sizes: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D, minSubdivisions: number, renderBack: boolean, cull: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface;
                                
                                
                                
                            }
                        }
                        interface Draw3D$Line$Builder extends any {
                            
                            
                            /**
                             * 
                             * @param pos1 the first position of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos1(pos1: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line$Builder;
                            
                            /**
                             * 
                             * @param pos1 the first position of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos1(pos1: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line$Builder;
                            
                            /**
                             * 
                             * @param x1 the x coordinate of the first position of the line
                             * @param y1 the y coordinate of the first position of the line
                             * @param z1 the z coordinate of the first position of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos1(x1: number, y1: number, z1: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line$Builder;
                            
                            /**
                             * 
                             * @return the first position of the line.
                             * @since 1.8.4
                             */
                            getPos1(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            
                            /**
                             * 
                             * @param pos2 the second position of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos2(pos2: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line$Builder;
                            
                            /**
                             * 
                             * @param pos2 the second position of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos2(pos2: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line$Builder;
                            
                            /**
                             * 
                             * @param x2 the x coordinate of the second position of the line
                             * @param y2 the y coordinate of the second position of the line
                             * @param z2 the z coordinate of the second position of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos2(x2: number, y2: number, z2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line$Builder;
                            
                            /**
                             * 
                             * @return the second position of the line.
                             * @since 1.8.4
                             */
                            getPos2(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            
                            /**
                             * 
                             * @param x1 the x coordinate of the first position of the line
                             * @param y1 the y coordinate of the first position of the line
                             * @param z1 the z coordinate of the first position of the line
                             * @param x2 the x coordinate of the second position of the line
                             * @param y2 the x coordinate of the second position of the line
                             * @param z2 the z coordinate of the second position of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line$Builder;
                            
                            /**
                             * 
                             * @param pos1 the first position of the line
                             * @param pos2 the second position of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos(pos1: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper, pos2: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line$Builder;
                            
                            /**
                             * 
                             * @param pos1 the first position of the line
                             * @param pos2 the second position of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos(pos1: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D, pos2: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line$Builder;
                            
                            /**
                             * 
                             * @param color the color of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            color(color: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line$Builder;
                            
                            /**
                             * 
                             * @param color the color of the line
                             * @param alpha the alpha value of the line's color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            color(color: number, alpha: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line$Builder;
                            
                            /**
                             * 
                             * @param r the red component of the color
                             * @param g the green component of the color
                             * @param b the blue component of the color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            color(r: number, g: number, b: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line$Builder;
                            
                            /**
                             * 
                             * @param r the red component of the color
                             * @param g the green component of the color
                             * @param b the blue component of the color
                             * @param a the alpha value of the color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            color(r: number, g: number, b: number, a: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line$Builder;
                            
                            /**
                             * 
                             * @return the color of the line.
                             * @since 1.8.4
                             */
                            getColor(): number;
                            
                            /**
                             * 
                             * @param alpha the alpha value for the line's color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            alpha(alpha: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line$Builder;
                            
                            /**
                             * 
                             * @return the alpha value of the line's color.
                             * @since 1.8.4
                             */
                            getAlpha(): number;
                            
                            /**
                             * 
                             * @param cull whether to cull the line or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            cull(cull: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line$Builder;
                            
                            /**
                             * 
                             * @return {@code true} if the line should be culled, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isCulled(): boolean;
                            
                            /**
                             * Creates the line for the given values and adds it to the draw3D.
                             * @return the build line.
                             * @since 1.8.4
                             */
                            buildAndAdd(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line;
                            
                            /**
                             * Builds the line from the given values.
                             * @return the build line.
                             */
                            build(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line;
                            
                        }
                        namespace Draw3D$Line$Builder {
                            interface static {
                                new (parent: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line$Builder;
                                
                                
                                
                            }
                        }
                        interface Draw3D$Surface$Builder extends any {
                            
                            
                            /**
                             * 
                             * @param pos the position of the surface
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface$Builder;
                            
                            /**
                             * 
                             * @param pos the position of the surface
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface$Builder;
                            
                            /**
                             * 
                             * @param x the x position of the surface
                             * @param y the y position of the surface
                             * @param z the z position of the surface
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos(x: number, y: number, z: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface$Builder;
                            
                            /**
                             * 
                             * @return the position of the surface.
                             * @since 1.8.4
                             */
                            getPos(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            
                            /**
                             * The surface will move with the entity at the offset location.
                             * @param boundEntity the entity to bind the surface to
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            bindToEntity(boundEntity: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface$Builder;
                            
                            /**
                             * 
                             * @return the entity the surface is bound to, or {@code null} if it is not bound to an
                             *          entity.
                             * @since 1.8.4
                             */
                            getBoundEntity(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper<any>;
                            
                            /**
                             * 
                             * @param entityOffset the offset from the entity's position to render the surface at
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            boundOffset(entityOffset: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface$Builder;
                            
                            /**
                             * 
                             * @param x the x offset from the entity's position to render the surface at
                             * @param y the y offset from the entity's position to render the surface at
                             * @param z the z offset from the entity's position to render the surface at
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            boundOffset(x: number, y: number, z: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface$Builder;
                            
                            /**
                             * 
                             * @return the offset from the entity's position to render the surface at.
                             * @since 1.8.4
                             */
                            getBoundOffset(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            
                            /**
                             * 
                             * @param xRot the x rotation of the surface
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            xRotation(xRot: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface$Builder;
                            
                            /**
                             * 
                             * @return the x rotation of the surface.
                             * @since 1.8.4
                             */
                            getXRotation(): number;
                            
                            /**
                             * 
                             * @param yRot the y rotation of the surface
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            yRotation(yRot: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface$Builder;
                            
                            /**
                             * 
                             * @return the y rotation of the surface.
                             * @since 1.8.4
                             */
                            getYRotation(): number;
                            
                            /**
                             * 
                             * @param zRot the z rotation of the surface
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            zRotation(zRot: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface$Builder;
                            
                            /**
                             * 
                             * @return the z rotation of the surface.
                             * @since 1.8.4
                             */
                            getZRotation(): number;
                            
                            /**
                             * 
                             * @param xRot the x rotation of the surface
                             * @param yRot the y rotation of the surface
                             * @param zRot the z rotation of the surface
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            rotation(xRot: number, yRot: number, zRot: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface$Builder;
                            
                            /**
                             * 
                             * @param rotateCenter whether to rotate around the center of the surface
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            rotateCenter(rotateCenter: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface$Builder;
                            
                            /**
                             * 
                             * @return {@code true} if this surface should be rotated around its center,
                             *          {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isRotatingCenter(): boolean;
                            
                            /**
                             * 
                             * @param rotateToPlayer whether to rotate the surface to face the player or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            rotateToPlayer(rotateToPlayer: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface$Builder;
                            
                            /**
                             * 
                             * @return {@code true} if the surface should be rotated to face the player,
                             *          {@code false} otherwise.
                             * @since 1.8.4
                             */
                            doesRotateToPlayer(): boolean;
                            
                            /**
                             * 
                             * @param width the width of the surface
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            width(width: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface$Builder;
                            
                            /**
                             * 
                             * @return the width of the surface.
                             * @since 1.8.4
                             */
                            getWidth(): number;
                            
                            /**
                             * 
                             * @param height the height of the surface
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            height(height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface$Builder;
                            
                            /**
                             * 
                             * @return the height of the surface.
                             * @since 1.8.4
                             */
                            getHeight(): number;
                            
                            /**
                             * 
                             * @param width the width of the surface
                             * @param height the height of the surface
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            size(width: number, height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface$Builder;
                            
                            /**
                             * 
                             * @param minSubdivisions the minimum number of subdivisions
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            minSubdivisions(minSubdivisions: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface$Builder;
                            
                            /**
                             * 
                             * @return the minimum number of subdivisions.
                             * @since 1.8.4
                             */
                            getMinSubdivisions(): number;
                            
                            /**
                             * 
                             * @param renderBack whether the back of the surface should be rendered or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            renderBack(renderBack: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface$Builder;
                            
                            /**
                             * 
                             * @return {@code true} if the back of the surface should be rendered, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            shouldRenderBack(): boolean;
                            
                            /**
                             * 
                             * @param cull whether to enable culling or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            cull(cull: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface$Builder;
                            
                            /**
                             * 
                             * @return {@code true} if culling is enabled for this box, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isCulled(): boolean;
                            
                            /**
                             * 
                             * @param zIndexScale the scale of the z-index
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            zIndex(zIndexScale: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface$Builder;
                            
                            /**
                             * 
                             * @return the scale of the z-index.
                             * @since 1.8.4
                             */
                            getZIndexScale(): number;
                            
                            /**
                             * Creates the surface for the given values and adds it to the draw3D.
                             * @return the build surface.
                             * @since 1.8.4
                             */
                            buildAndAdd(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface;
                            
                            /**
                             * Builds the surface from the given values.
                             * @return the build surface.
                             */
                            build(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface;
                            
                        }
                        namespace Draw3D$Surface$Builder {
                            interface static {
                                new (parent: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Surface$Builder;
                                
                                
                                
                            }
                        }
                        interface Draw3D$Box extends any {
                            pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
                            color: number;
                            fillColor: number;
                            fill: boolean;
                            cull: boolean;
                            
                            
                            /**
                             * 
                             * @param x1
                             * @param y1
                             * @param z1
                             * @param x2
                             * @param y2
                             * @param z2
                             * @since 1.0.6
                             */
                            setPos(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;
                            
                            /**
                             * 
                             * @param color
                             * @since 1.0.6
                             */
                            setColor(color: number): void;
                            
                            /**
                             * 
                             * @param fillColor
                             * @since 1.0.6
                             */
                            setFillColor(fillColor: number): void;
                            
                            /**
                             * 
                             * @param color
                             * @param alpha
                             * @since 1.1.8
                             */
                            setColor(color: number, alpha: number): void;
                            
                            /**
                             * 
                             * @param alpha
                             * @since 1.1.8
                             */
                            setAlpha(alpha: number): void;
                            
                            /**
                             * 
                             * @param fillColor
                             * @param alpha
                             * @since 1.1.8
                             */
                            setFillColor(fillColor: number, alpha: number): void;
                            
                            /**
                             * 
                             * @param alpha
                             * @since 1.1.8
                             */
                            setFillAlpha(alpha: number): void;
                            
                            /**
                             * 
                             * @param fill
                             * @since 1.0.6
                             */
                            setFill(fill: boolean): void;
                            render(matrixStack: /* minecraft classes, as any, because obfuscation: */ any): void;
                            
                        }
                        namespace Draw3D$Box {
                            interface static {
                                new (x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, color: number, fillColor: number, fill: boolean, cull: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box;
                                new (x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, color: number, alpha: number, fillColor: number, fillAlpha: number, fill: boolean, cull: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box;
                                
                                
                                
                            }
                        }
                        interface Draw3D$Line extends any {
                            pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
                            color: number;
                            cull: boolean;
                            
                            
                            /**
                             * 
                             * @param x1
                             * @param y1
                             * @param z1
                             * @param x2
                             * @param y2
                             * @param z2
                             * @since 1.0.6
                             */
                            setPos(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;
                            
                            /**
                             * 
                             * @param color
                             * @since 1.0.6
                             */
                            setColor(color: number): void;
                            
                            /**
                             * 
                             * @param color
                             * @param alpha
                             * @since 1.1.8
                             */
                            setColor(color: number, alpha: number): void;
                            
                            /**
                             * 
                             * @param alpha
                             * @since 1.1.8
                             */
                            setAlpha(alpha: number): void;
                            render(matrixStack: /* minecraft classes, as any, because obfuscation: */ any): void;
                            
                        }
                        namespace Draw3D$Line {
                            interface static {
                                new (x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, color: number, cull: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line;
                                new (x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, color: number, alpha: number, cull: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Line;
                                
                                
                                
                            }
                        }
                        interface Draw3D$Box$Builder extends any {
                            
                            
                            /**
                             * 
                             * @param pos1 the first position of the box
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos1(pos1: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                            
                            /**
                             * 
                             * @param pos1 the first position of the box
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos1(pos1: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                            
                            /**
                             * 
                             * @param x1 the x coordinate of the first position of the box
                             * @param y1 the y coordinate of the first position of the box
                             * @param z1 the z coordinate of the first position of the box
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos1(x1: number, y1: number, z1: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                            
                            /**
                             * 
                             * @return the first position of the box.
                             * @since 1.8.4
                             */
                            getPos1(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            
                            /**
                             * 
                             * @param pos2 the second position of the box
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos2(pos2: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                            
                            /**
                             * 
                             * @param pos2 the second position of the box
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos2(pos2: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                            
                            /**
                             * 
                             * @param x2 the x coordinate of the second position of the box
                             * @param y2 the y coordinate of the second position of the box
                             * @param z2 the z coordinate of the second position of the box
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos2(x2: number, y2: number, z2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                            
                            /**
                             * 
                             * @return the second position of the box.
                             * @since 1.8.4
                             */
                            getPos2(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            
                            /**
                             * 
                             * @param x1 the x coordinate of the first position of the box
                             * @param y1 the y coordinate of the first position of the box
                             * @param z1 the z coordinate of the first position of the box
                             * @param x2 the x coordinate of the second position of the box
                             * @param y2 the y coordinate of the second position of the box
                             * @param z2 the z coordinate of the second position of the box
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                            
                            /**
                             * 
                             * @param pos1 the first position of the box
                             * @param pos2 the second position of the box
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos(pos1: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper, pos2: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                            
                            /**
                             * 
                             * @param pos1 the first position of the box
                             * @param pos2 the second position of the box
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos(pos1: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D, pos2: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                            
                            /**
                             * Highlights the given block position.
                             * @param x the x coordinate of the block
                             * @param y the y coordinate of the block
                             * @param z the z coordinate of the block
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            forBlock(x: number, y: number, z: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                            
                            /**
                             * Highlights the given block position.
                             * @param pos the block position
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            forBlock(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                            
                            /**
                             * 
                             * @param color the color of the box
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            color(color: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                            
                            /**
                             * 
                             * @param color the fill color of the box
                             * @param alpha the alpha value for the box's fill color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            color(color: number, alpha: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                            
                            /**
                             * 
                             * @param r the red component of the fill color
                             * @param g the green component of the fill color
                             * @param b the blue component of the fill color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            color(r: number, g: number, b: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                            
                            /**
                             * 
                             * @param r the red component of the fill color
                             * @param g the green component of the fill color
                             * @param b the blue component of the fill color
                             * @param a the alpha component of the fill color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            color(r: number, g: number, b: number, a: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                            
                            /**
                             * 
                             * @return the color of the box.
                             * @since 1.8.4
                             */
                            getColor(): number;
                            
                            /**
                             * 
                             * @param alpha the alpha value for the box's color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            alpha(alpha: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                            
                            /**
                             * 
                             * @return the alpha value of the box's color.
                             * @since 1.8.4
                             */
                            getAlpha(): number;
                            
                            /**
                             * 
                             * @param fillColor the fill color of the box
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            fillColor(fillColor: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                            
                            /**
                             * 
                             * @param fillColor the fill color of the box
                             * @param alpha the alpha value for the box's fill color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            fillColor(fillColor: number, alpha: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                            
                            /**
                             * 
                             * @param r the red component of the fill color
                             * @param g the green component of the fill color
                             * @param b the blue component of the fill color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            fillColor(r: number, g: number, b: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                            
                            /**
                             * 
                             * @param r the red component of the fill color
                             * @param g the green component of the fill color
                             * @param b the blue component of the fill color
                             * @param a the alpha component of the fill color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            fillColor(r: number, g: number, b: number, a: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                            
                            /**
                             * 
                             * @return the fill color of the box.
                             * @since 1.8.4
                             */
                            getFillColor(): number;
                            
                            /**
                             * 
                             * @param fillAlpha the alpha value for the box's fill color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            fillAlpha(fillAlpha: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                            
                            /**
                             * 
                             * @return the alpha value of the box's fill color.
                             * @since 1.8.4
                             */
                            getFillAlpha(): number;
                            
                            /**
                             * 
                             * @param fill {@code true} if the box should be filled, {@code false} otherwise
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            fill(fill: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                            
                            /**
                             * 
                             * @return {@code true} if the box should be filled, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isFilled(): boolean;
                            
                            /**
                             * 
                             * @param cull whether to enable culling or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            cull(cull: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                            
                            /**
                             * 
                             * @return {@code true} if culling is enabled for this box, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isCulled(): boolean;
                            
                            /**
                             * Creates the box for the given values and adds it to the draw3D.
                             * @return the build box.
                             * @since 1.8.4
                             */
                            buildAndAdd(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box;
                            
                            /**
                             * Builds the box from the given values.
                             * @return the build box.
                             */
                            build(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box;
                            
                        }
                        namespace Draw3D$Box$Builder {
                            interface static {
                                new (parent: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D$Box$Builder;
                                
                                
                                
                            }
                        }
                        interface VillagerInventory extends _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Inventory</* minecraft classes, as any, because obfuscation: */ any> {
                            
                            
                            /**
                             * select the trade by its index
                             * @param index
                             * @return self for chaining
                             * @since 1.3.1
                             */
                            selectTrade(index: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.VillagerInventory;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.3.1
                             */
                            getExperience(): number;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.3.1
                             */
                            getLevelProgress(): number;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.3.1
                             */
                            getMerchantRewardedExperience(): number;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.3.1
                             */
                            canRefreshTrades(): boolean;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.3.1
                             */
                            isLeveled(): boolean;
                            
                            /**
                             * 
                             * @return list of trade offers
                             * @since 1.3.1
                             */
                            getTrades(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TradeOfferHelper>;
                            toString(): string;
                            
                        }
                        namespace VillagerInventory {
                            interface static {
                                
                                
                                
                            }
                        }
                    
                        namespace worldscanner {
                        
                            interface WorldScannerBuilder extends any {
                                
                                withStateFilter(method: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder;
                                andStateFilter(method: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder;
                                orStateFilter(method: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder;
                                notStateFilter(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder;
                                withBlockFilter(method: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder;
                                andBlockFilter(method: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder;
                                orBlockFilter(method: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder;
                                notBlockFilter(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder;
                                withStringBlockFilter(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder;
                                andStringBlockFilter(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder;
                                orStringBlockFilter(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder;
                                withStringStateFilter(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder;
                                andStringStateFilter(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder;
                                orStringStateFilter(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder;
                                is(args: any[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder;
                                is(methodArgs: any[], filterArgs: any[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder;
                                test(args: any[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder;
                                test(methodArgs: any[], filterArgs: any[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder;
                                equals(args: string[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder;
                                contains(args: string[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder;
                                startsWith(args: string[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder;
                                endsWith(args: string[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder;
                                matches(args: string[]): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder;
                                build(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScanner;
                                
                            }
                            namespace WorldScannerBuilder {
                                interface static {
                                    new (): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder;
                                    
                                    
                                    
                                }
                            }
                            interface WorldScanner extends any {
                                
                                
                                /**
                                 * Gets a list of all chunks in the given range around the center chunk.
                                 * @param centerX the x coordinate of the center chunk to scan around
                                 * @param centerZ the z coordinate of the center chunk to scan around
                                 * @param chunkrange the range to scan around the center chunk
                                 * @return a list of all matching block positions.
                                 */
                                getChunkRange(centerX: number, centerZ: number, chunkrange: number): _javatypes.java.util.List</* minecraft classes, as any, because obfuscation: */ any>;
                                
                                /**
                                 * Scans all chunks in the given range around the player and returns a list of all block positions, for blocks matching the filter.
                                 *  This will scan in a square with length 2*range + 1. So range = 0 for example will only scan the chunk the player
                                 *  is standing in, while range = 1 will scan in a 3x3 area.
                                 * @param chunkRange the range to scan around the center chunk
                                 * @return a list of all matching block positions.
                                 */
                                scanAroundPlayer(chunkRange: number): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D>;
                                
                                /**
                                 * Scans all chunks in the given range around the center chunk and returns a list of all block positions, for blocks matching the filter.
                                 *  This will scan in a square with length 2*range + 1. So range = 0 for example will only scan the specified chunk,
                                 *  while range = 1 will scan in a 3x3 area.
                                 * @param centerX the x coordinate of the center chunk to scan around
                                 * @param centerZ the z coordinate of the center chunk to scan around
                                 * @param chunkrange the range to scan around the center chunk
                                 * @return a list of all matching block positions.
                                 */
                                scanChunkRange(centerX: number, centerZ: number, chunkrange: number): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D>;
                                
                                /**
                                 * Gets the amount of all blocks matching the criteria inside the chunk.
                                 * @param chunkX the x coordinate of the chunk to scan
                                 * @param chunkZ the z coordinate of the chunk to scan
                                 * @param ignoreState whether multiple states should be combined to a single block
                                 * @return a map of all blocks inside the specified chunk and their respective count.
                                 */
                                getBlocksInChunk(chunkX: number, chunkZ: number, ignoreState: boolean): _javatypes.java.util.Map<string, number>;
                                
                                /**
                                 * Gets the amount of all blocks matching the criteria inside a square around the player.
                                 * @param centerX the x coordinate of the center chunk to scan around
                                 * @param centerZ the z coordinate of the center chunk to scan around
                                 * @param chunkRange the range to scan around the center chunk
                                 * @param ignoreState whether multiple states should be combined to a single block
                                 * @return a map of all blocks inside the specified chunks and their respective count.
                                 */
                                getBlocksInChunks(centerX: number, centerZ: number, chunkRange: number, ignoreState: boolean): _javatypes.java.util.Map<string, number>;
                                
                                /**
                                 * Get the amount of cached block states. This will normally be around 200 - 400.
                                 * @return the amount of cached block states.
                                 */
                                getCachedAmount(): number;
                                
                            }
                            namespace WorldScanner {
                                interface static {
                                    
                                    /**
                                     * Creates a new World scanner with for the given world. It accepts two boolean functions, 
                                     *  one for {@link _javatypes.BlockHelper} and the other for {@link _javatypes.BlockStateHelper}.
                                     * @param world the world to scan
                                     * @param blockFilter a filter method for the blocks
                                     * @param stateFilter a filter method for the block states
                                     */
                                    new (world: /* minecraft classes, as any, because obfuscation: */ any, blockFilter: _javatypes.java.util._function.Function<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockHelper, boolean>, stateFilter: _javatypes.java.util._function.Function<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockStateHelper, boolean>): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScanner;
                                    
                                    
                                    
                                }
                            }
                        }
                    }
                
                    namespace sharedinterfaces {
                    
                        interface IScreen extends _javatypes.java.lang.Interface, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IDraw2D<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen> {
                            
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @return 
                             */
                            getScreenClassName(): string;
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @return 
                             */
                            getTitleText(): string;
                            
                            /**
                             * in `1.3.1` updated to work with all button widgets not just ones added by scripts.
                             * @since 1.0.5
                             * @return 
                             */
                            getButtonWidgets(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClickableWidgetHelper<any, any>>;
                            
                            /**
                             * in `1.3.1` updated to work with all text fields not just ones added by scripts.
                             * @since 1.0.5
                             * @return 
                             */
                            getTextFields(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper>;
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @param x
                             * @param y
                             * @param width
                             * @param height
                             * @param text
                             * @param callback calls your method as a {@link Consumer}&lt;{@link ClickableWidgetHelper}&gt;
                             * @return 
                             */
                            addButton(x: number, y: number, width: number, height: number, text: string, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClickableWidgetHelper<any, any>, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClickableWidgetHelper<any, any>;
                            
                            /**
                             * 
                             * @since 1.4.0
                             * @param x
                             * @param y
                             * @param width
                             * @param height
                             * @param zIndex
                             * @param text
                             * @param callback calls your method as a {@link Consumer}&lt;{@link ClickableWidgetHelper}&gt;
                             * @return 
                             */
                            addButton(x: number, y: number, width: number, height: number, zIndex: number, text: string, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClickableWidgetHelper<any, any>, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClickableWidgetHelper<any, any>;
                            
                            /**
                             * 
                             * @param x the x position of the checkbox
                             * @param y the y position of the checkbox
                             * @param width the width of the checkbox
                             * @param height the height of the checkbox
                             * @param text the text to display next to the checkbox
                             * @param checked whether the checkbox is checked or not
                             * @param showMessage whether to show the message or not
                             * @param callback calls your method as a
                             *                     {@link Consumer}&lt;{@link CheckBoxWidgetHelper}&gt;
                             * @return a {@link CheckBoxWidgetHelper} for the given input.
                             * @since 1.8.4
                             */
                            addCheckbox(x: number, y: number, width: number, height: number, text: string, checked: boolean, showMessage: boolean, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper;
                            
                            /**
                             * 
                             * @param x the x position of the checkbox
                             * @param y the y position of the checkbox
                             * @param width the width of the checkbox
                             * @param height the height of the checkbox
                             * @param text the text to display next to the checkbox
                             * @param checked whether the checkbox is checked or not
                             * @param callback calls your method as a {@link Consumer}&lt;{@link CheckBoxWidgetHelper}&gt;
                             * @return a {@link CheckBoxWidgetHelper} for the given input.
                             * @since 1.8.4
                             */
                            addCheckbox(x: number, y: number, width: number, height: number, text: string, checked: boolean, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper;
                            
                            /**
                             * 
                             * @param x the x position of the checkbox
                             * @param y the y position of the checkbox
                             * @param width the width of the checkbox
                             * @param height the height of the checkbox
                             * @param zIndex the z-index of the checkbox
                             * @param text the text to display next to the checkbox
                             * @param checked whether the checkbox is checked or not
                             * @param callback calls your method as a {@link Consumer}&lt;{@link CheckBoxWidgetHelper}&gt;
                             * @return a {@link CheckBoxWidgetHelper} for the given input.
                             * @since 1.8.4
                             */
                            addCheckbox(x: number, y: number, width: number, height: number, zIndex: number, text: string, checked: boolean, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper;
                            
                            /**
                             * 
                             * @param x the x position of the checkbox
                             * @param y the y position of the checkbox
                             * @param width the width of the checkbox
                             * @param height the height of the checkbox
                             * @param zIndex the z-index of the checkbox
                             * @param text the text to display next to the checkbox
                             * @param checked whether the checkbox is checked or not
                             * @param showMessage whether to show the message or not
                             * @param callback calls your method as a
                             *                     {@link Consumer}&lt;{@link CheckBoxWidgetHelper}&gt;
                             * @return a {@link CheckBoxWidgetHelper} for the given input.
                             * @since 1.8.4
                             */
                            addCheckbox(x: number, y: number, width: number, height: number, zIndex: number, text: string, checked: boolean, showMessage: boolean, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper;
                            
                            /**
                             * 
                             * @param x the x position of the slider
                             * @param y the y position of the slider
                             * @param width the width of the slider
                             * @param height the height of the slider
                             * @param text the text to be displayed inside the slider
                             * @param value the initial value of the slider
                             * @param callback calls your method as a {@link Consumer}&lt;{@link SliderWidgetHelper}&gt;
                             * @param steps the number of steps the slider should have
                             * @return a {@link SliderWidgetHelper} for the given input.
                             * @since 1.8.4
                             */
                            addSlider(x: number, y: number, width: number, height: number, text: string, value: number, steps: number, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper;
                            
                            /**
                             * 
                             * @param x the x position of the slider
                             * @param y the y position of the slider
                             * @param width the width of the slider
                             * @param height the height of the slider
                             * @param zIndex the z-index of the slider
                             * @param text the text to be displayed inside the slider
                             * @param value the initial value of the slider
                             * @param callback calls your method as a {@link Consumer}&lt;{@link SliderWidgetHelper}&gt;
                             * @param steps the number of steps the slider should have
                             * @return a {@link SliderWidgetHelper} for the given input.
                             * @since 1.8.4
                             */
                            addSlider(x: number, y: number, width: number, height: number, zIndex: number, text: string, value: number, steps: number, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper;
                            
                            /**
                             * 
                             * @param x the x position of the slider
                             * @param y the y position of the slider
                             * @param width the width of the slider
                             * @param height the height of the slider
                             * @param text the text to be displayed inside the slider
                             * @param value the initial value of the slider
                             * @param callback calls your method as a {@link Consumer}&lt;{@link SliderWidgetHelper}&gt;
                             * @return a {@link SliderWidgetHelper} for the given input.
                             * @since 1.8.4
                             */
                            addSlider(x: number, y: number, width: number, height: number, text: string, value: number, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper;
                            
                            /**
                             * 
                             * @param x the x position of the slider
                             * @param y the y position of the slider
                             * @param width the width of the slider
                             * @param height the height of the slider
                             * @param zIndex the z-index of the slider
                             * @param text the text to be displayed inside the slider
                             * @param value the initial value of the slider
                             * @param callback calls your method as a {@link Consumer}&lt;{@link SliderWidgetHelper}&gt;
                             * @return a {@link SliderWidgetHelper} for the given input.
                             * @since 1.8.4
                             */
                            addSlider(x: number, y: number, width: number, height: number, zIndex: number, text: string, value: number, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper;
                            
                            /**
                             * 
                             * @param x the x position of the textured button
                             * @param y the y position of the textured button
                             * @param width the width of the textured button
                             * @param height the height of the textured button
                             * @param textureStartX the x position in the texture to start drawing from
                             * @param textureStartY the y position in the texture to start drawing from
                             * @param hoverOffset the offset to add to the textureStartY when the button is hovered
                             * @param texture the identifier of the texture to use
                             * @param textureWidth the width of the texture
                             * @param textureHeight the height of the texture
                             * @param callback calls your method as a
                             *                       {@link Consumer}&lt;{@link ButtonWidgetHelper}&gt;
                             * @return a {@link ButtonWidgetHelper} for the given input.
                             * @since 1.8.4
                             */
                            addTexturedButton(x: number, y: number, width: number, height: number, textureStartX: number, textureStartY: number, hoverOffset: number, texture: string, textureWidth: number, textureHeight: number, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper</* minecraft classes, as any, because obfuscation: */ any>, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper</* minecraft classes, as any, because obfuscation: */ any>;
                            
                            /**
                             * 
                             * @param x the x position of the textured button
                             * @param y the y position of the textured button
                             * @param width the width of the textured button
                             * @param height the height of the textured button
                             * @param zIndex the z-index of the textured button
                             * @param textureStartX the x position in the texture to start drawing from
                             * @param textureStartY the y position in the texture to start drawing from
                             * @param hoverOffset the offset to add to the textureStartY when the button is hovered
                             * @param texture the identifier of the texture to use
                             * @param textureWidth the width of the texture
                             * @param textureHeight the height of the texture
                             * @param callback calls your method as a
                             *                       {@link Consumer}&lt;{@link ButtonWidgetHelper}&gt;
                             * @return a {@link ButtonWidgetHelper} for the given input.
                             * @since 1.8.4
                             */
                            addTexturedButton(x: number, y: number, width: number, height: number, zIndex: number, textureStartX: number, textureStartY: number, hoverOffset: number, texture: string, textureWidth: number, textureHeight: number, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper</* minecraft classes, as any, because obfuscation: */ any>, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper</* minecraft classes, as any, because obfuscation: */ any>;
                            
                            /**
                             * 
                             * @param x the x position of the textured button
                             * @param y the y position of the textured button
                             * @param width the width of the textured button
                             * @param height the height of the textured button
                             * @param textureStartX the x position in the texture to start drawing from
                             * @param textureStartY the y position in the texture to start drawing from
                             * @param texture the identifier of the texture to use
                             * @param callback calls your method as a
                             *                       {@link Consumer}&lt;{@link ButtonWidgetHelper}&gt;
                             * @return a {@link ButtonWidgetHelper} for the given input.
                             * @since 1.8.4
                             */
                            addTexturedButton(x: number, y: number, width: number, height: number, textureStartX: number, textureStartY: number, texture: string, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper</* minecraft classes, as any, because obfuscation: */ any>, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper</* minecraft classes, as any, because obfuscation: */ any>;
                            
                            /**
                             * 
                             * @param x the x position of the textured button
                             * @param y the y position of the textured button
                             * @param width the width of the textured button
                             * @param height the height of the textured button
                             * @param zIndex the z-index of the textured button
                             * @param textureStartX the x position in the texture to start drawing from
                             * @param textureStartY the y position in the texture to start drawing from
                             * @param texture the identifier of the texture to use
                             * @param callback calls your method as a
                             *                       {@link Consumer}&lt;{@link ButtonWidgetHelper}&gt;
                             * @return a {@link ButtonWidgetHelper} for the given input.
                             * @since 1.8.4
                             */
                            addTexturedButton(x: number, y: number, width: number, height: number, zIndex: number, textureStartX: number, textureStartY: number, texture: string, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper</* minecraft classes, as any, because obfuscation: */ any>, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper</* minecraft classes, as any, because obfuscation: */ any>;
                            
                            /**
                             * 
                             * @param x the x position of the lock button
                             * @param y the y position of the lock button
                             * @param callback calls your method as a
                             *                  {@link Consumer}&lt;{@link LockButtonWidgetHelper}&gt;
                             * @return {@link LockButtonWidgetHelper} for the given input.
                             * @since 1.8.4
                             */
                            addLockButton(x: number, y: number, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LockButtonWidgetHelper, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LockButtonWidgetHelper;
                            
                            /**
                             * 
                             * @param x the x position of the lock button
                             * @param y the y position of the lock button
                             * @param zIndex the z-index of the lock button
                             * @param callback calls your method as a
                             *                  {@link Consumer}&lt;{@link LockButtonWidgetHelper}&gt;
                             * @return {@link LockButtonWidgetHelper} for the given input.
                             * @since 1.8.4
                             */
                            addLockButton(x: number, y: number, zIndex: number, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LockButtonWidgetHelper, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LockButtonWidgetHelper;
                            
                            /**
                             * 
                             * @param x the x position of the cylcing button
                             * @param y the y position of the cylcing button
                             * @param width the width of the cylcing button
                             * @param height the height of the cycling button
                             * @param callback calls your method as a
                             *                  {@link Consumer}&lt;{@link CyclingButtonWidgetHelper}&gt;
                             * @param values the values to cycle through
                             * @param initial the initial value of the cycling button
                             * @return {@link CyclingButtonWidgetHelper} for the given input.
                             * @since 1.8.4
                             */
                            addCyclingButton(x: number, y: number, width: number, height: number, values: string[], initial: string, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper<any>, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper<any>;
                            
                            /**
                             * 
                             * @param x the x position of the cylcing button
                             * @param y the y position of the cylcing button
                             * @param width the width of the cylcing button
                             * @param height the height of the cycling button
                             * @param zIndex the z-index of the cycling button
                             * @param callback calls your method as a
                             *                  {@link Consumer}&lt;{@link CyclingButtonWidgetHelper}&gt;
                             * @param values the values to cycle through
                             * @param initial the initial value of the cycling button
                             * @return {@link CyclingButtonWidgetHelper} for the given input.
                             * @since 1.8.4
                             */
                            addCyclingButton(x: number, y: number, width: number, height: number, zIndex: number, values: string[], initial: string, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper<any>, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper<any>;
                            
                            /**
                             * 
                             * @param x the x position of the cylcing button
                             * @param y the y position of the cylcing button
                             * @param width the width of the cylcing button
                             * @param height the height of the cycling button
                             * @param zIndex the z-index of the cycling button
                             * @param callback calls your method as a
                             *                      {@link Consumer}&lt;{@link CyclingButtonWidgetHelper}&gt;
                             * @param values the values to cycle through
                             * @param alternatives the alternative values to cycle through
                             * @param prefix the prefix of the values
                             * @param initial the initial value of the cycling button
                             * @return {@link CyclingButtonWidgetHelper} for the given input.
                             * @since 1.8.4
                             */
                            addCyclingButton(x: number, y: number, width: number, height: number, zIndex: number, values: string[], alternatives: string[], initial: string, prefix: string, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper<any>, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper<any>;
                            
                            /**
                             * 
                             * @param x the x position of the cylcing button
                             * @param y the y position of the cylcing button
                             * @param width the width of the cylcing button
                             * @param height the height of the cycling button
                             * @param zIndex the z-index of the cycling button
                             * @param callback calls your method as a
                             *                         {@link Consumer}&lt;{@link CyclingButtonWidgetHelper}&gt;
                             * @param values the values to cycle through
                             * @param alternatives the alternative values to cycle through
                             * @param prefix the prefix of the values
                             * @param initial the initial value of the cycling button
                             * @param alternateToggle the method to determine if the cycling button should use the
                             *                         alternative values
                             * @return {@link CyclingButtonWidgetHelper} for the given input.
                             * @since 1.8.4
                             */
                            addCyclingButton(x: number, y: number, width: number, height: number, zIndex: number, values: string[], alternatives: string[], initial: string, prefix: string, alternateToggle: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<any, any, boolean, any>, callback: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper<any>, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper<any>;
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @param btn
                             * @return 
                             */
                            removeButton(btn: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClickableWidgetHelper<any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen;
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @param x
                             * @param y
                             * @param width
                             * @param height
                             * @param message
                             * @param onChange calls your method as a {@link Consumer}&lt;{@link String}&gt;
                             * @return 
                             */
                            addTextInput(x: number, y: number, width: number, height: number, message: string, onChange: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<string, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper;
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @param x
                             * @param y
                             * @param width
                             * @param height
                             * @param zIndex
                             * @param message
                             * @param onChange calls your method as a {@link Consumer}&lt;{@link String}&gt;
                             * @return 
                             */
                            addTextInput(x: number, y: number, width: number, height: number, zIndex: number, message: string, onChange: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<string, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper;
                            
                            /**
                             * 
                             * @since 1.0.5
                             * @param inp
                             * @return 
                             */
                            removeTextInput(inp: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param onMouseDown calls your method as a {@link BiConsumer}&lt;{@link PositionCommon.Pos2D}, {@link Integer}&gt;
                             * @return 
                             */
                            setOnMouseDown(onMouseDown: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D, number, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param onMouseDrag calls your method as a {@link BiConsumer}&lt;{@link PositionCommon.Vec2D}, {@link Integer}&gt;
                             * @return 
                             */
                            setOnMouseDrag(onMouseDrag: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec2D, number, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param onMouseUp calls your method as a {@link BiConsumer}&lt;{@link PositionCommon.Pos2D}, {@link Integer}&gt;
                             * @return 
                             */
                            setOnMouseUp(onMouseUp: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D, number, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param onScroll calls your method as a {@link BiConsumer}&lt;{@link PositionCommon.Pos2D}, {@link Double}&gt;
                             * @return 
                             */
                            setOnScroll(onScroll: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D, number, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param onKeyPressed calls your method as a {@link BiConsumer}&lt;{@link Integer}, {@link Integer}&gt;
                             * @return 
                             */
                            setOnKeyPressed(onKeyPressed: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<number, number, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen;
                            
                            /**
                             * 
                             * @since 1.8.4
                             * @param onCharTyped calls your method as a {@link BiConsumer}&lt;{@link Character}, {@link Integer}&gt;
                             * @return 
                             */
                            setOnCharTyped(onCharTyped: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<number, number, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param onClose calls your method as a {@link Consumer}&lt;{@link IScreen}&gt;
                             * @return 
                             */
                            setOnClose(onClose: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen;
                            
                            /**
                             * 
                             * @since 1.1.9
                             */
                            close(): void;
                            
                            /**
                             * calls the screen's init function re-loading it.
                             * @since 1.2.7
                             */
                            reloadScreen(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen;
                            
                            /**
                             * 
                             * @return a new builder for buttons.
                             * @since 1.8.4
                             */
                            buttonBuilder(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper$ButtonBuilder;
                            
                            /**
                             * 
                             * @return a new builder for checkboxes.
                             * @since 1.8.4
                             */
                            checkBoxBuilder(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper$CheckBoxBuilder;
                            
                            /**
                             * 
                             * @param checked whether the checkbox should be checked by default
                             * @return a new builder for checkboxes.
                             * @since 1.8.4
                             */
                            checkBoxBuilder(checked: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper$CheckBoxBuilder;
                            
                            /**
                             * 
                             * @return a new builder for cycling buttons.
                             * @since 1.8.4
                             */
                            cyclicButtonBuilder(valueToText: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<any, any, _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper, any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper$CyclicButtonBuilder<any>;
                            
                            /**
                             * 
                             * @return a new builder for lock buttons.
                             * @since 1.8.4
                             */
                            lockButtonBuilder(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LockButtonWidgetHelper$LockButtonBuilder;
                            
                            /**
                             * 
                             * @param locked whether the lock button should be locked by default
                             * @return a new builder for lock buttons.
                             * @since 1.8.4
                             */
                            lockButtonBuilder(locked: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LockButtonWidgetHelper$LockButtonBuilder;
                            
                            /**
                             * 
                             * @return a new builder for sliders.
                             * @since 1.8.4
                             */
                            sliderBuilder(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper$SliderBuilder;
                            
                            /**
                             * 
                             * @return a new builder for text fields.
                             * @since 1.8.4
                             */
                            textFieldBuilder(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper$TextFieldBuilder;
                            
                            /**
                             * 
                             * @return a new builder for textured buttons.
                             * @since 1.8.4
                             */
                            texturedButtonBuilder(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper$TexturedButtonBuilder;
                            
                            /**
                             * 
                             * @return {@code true} if the shift key is pressed, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isShiftDown(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the ctrl key is pressed, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isCtrlDown(): boolean;
                            
                            /**
                             * 
                             * @return {@code true} if the alt key is pressed, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isAltDown(): boolean;
                            getOnClose(): _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen, any, any, any>;
                            
                        }
                        namespace IScreen {
                            interface static {
                                
                                
                                
                            }
                        }
                        interface IDraw2D<T> extends _javatypes.java.lang.Interface {
                            
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @return screen width
                             */
                            getWidth(): number;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @return screen height
                             */
                            getHeight(): number;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @return text elements
                             */
                            getTexts(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text>;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @return rect elements
                             */
                            getRects(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect>;
                            
                            /**
                             * 
                             * @return all registered line elements.
                             * @since 1.8.4
                             */
                            getLines(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line>;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @return item elements
                             */
                            getItems(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item>;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @return image elements
                             */
                            getImages(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image>;
                            
                            /**
                             * 
                             * @return all registered draw2d elements.
                             * @since 1.8.4
                             */
                            getDraw2Ds(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement>;
                            
                            /**
                             * 
                             * @since 1.2.9
                             * @return a read only copy of the list of all elements added by scripts.
                             */
                            getElements(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$RenderElement>;
                            
                            /**
                             * removes any element regardless of type.
                             * @since 1.2.9
                             * @return self for chaining
                             */
                            removeElement(e: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$RenderElement): T;
                            
                            /**
                             * re-add an element you removed with {@link #removeElement}
                             * @since 1.2.9
                             * @return self for chaining
                             */
                            reAddElement<T>(e: T): T;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param text
                             * @param x screen x
                             * @param y screen y
                             * @param color text color
                             * @param shadow include shadow layer
                             * @return added text
                             */
                            addText(text: string, x: number, y: number, color: number, shadow: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            
                            /**
                             * 
                             * @since 1.4.0
                             * @param text
                             * @param x screen x
                             * @param y screen y
                             * @param color text color
                             * @param zIndex z-index
                             * @param shadow include shadow layer
                             * @return added text
                             */
                            addText(text: string, x: number, y: number, color: number, zIndex: number, shadow: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param text
                             * @param x screen x
                             * @param y screen y
                             * @param color text color
                             * @param shadow include shadow layer
                             * @param scale text scale (as double)
                             * @param rotation text rotation (as degrees)
                             * @return added text
                             */
                            addText(text: string, x: number, y: number, color: number, shadow: boolean, scale: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            
                            /**
                             * 
                             * @since 1.4.0
                             * @param text
                             * @param x screen x
                             * @param y screen y
                             * @param color text color
                             * @param zIndex z-index
                             * @param shadow include shadow layer
                             * @param scale text scale (as double)
                             * @param rotation text rotation (as degrees)
                             * @return added text
                             */
                            addText(text: string, x: number, y: number, color: number, zIndex: number, shadow: boolean, scale: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param text
                             * @param x screen x
                             * @param y screen y
                             * @param color text color
                             * @param shadow include shadow layer
                             * @return added text
                             */
                            addText(text: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper, x: number, y: number, color: number, shadow: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            
                            /**
                             * 
                             * @since 1.4.0
                             * @param text
                             * @param x screen x
                             * @param y screen y
                             * @param color text color
                             * @param zIndex z-index
                             * @param shadow include shadow layer
                             * @return added text
                             */
                            addText(text: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper, x: number, y: number, color: number, zIndex: number, shadow: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param text
                             * @param x screen x
                             * @param y screen y
                             * @param color text color
                             * @param shadow include shadow layer
                             * @param scale text scale (as double)
                             * @param rotation text rotation (as degrees)
                             * @return added text
                             */
                            addText(text: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper, x: number, y: number, color: number, shadow: boolean, scale: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            
                            /**
                             * 
                             * @since 1.4.0
                             * @param text
                             * @param x screen x
                             * @param y screen y
                             * @param color text color
                             * @param zIndex z-index
                             * @param shadow include shadow layer
                             * @param scale text scale (as double)
                             * @param rotation text rotation (as degrees)
                             * @return added text
                             */
                            addText(text: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper, x: number, y: number, color: number, zIndex: number, shadow: boolean, scale: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param t
                             * @return self for chaining
                             */
                            removeText(t: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text): T;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param x screen x, top left corner
                             * @param y screen y, top left corner
                             * @param width width on screen
                             * @param height height on screen
                             * @param id image id, in the form {@code minecraft:textures} path'd as found in texture packs, ie {@code assets/minecraft/textures/gui/recipe_book.png} becomes {@code minecraft:textures/gui/recipe_book.png}
                             * @param imageX the left-most coordinate of the texture region
                             * @param imageY the top-most coordinate of the texture region
                             * @param regionWidth the width the texture region
                             * @param regionHeight the height the texture region
                             * @param textureWidth the width of the entire texture
                             * @param textureHeight the height of the entire texture
                             * @return added image
                             */
                            addImage(x: number, y: number, width: number, height: number, id: string, imageX: number, imageY: number, regionWidth: number, regionHeight: number, textureWidth: number, textureHeight: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            
                            /**
                             * 
                             * @since 1.4.0
                             * @param x screen x, top left corner
                             * @param y screen y, top left corner
                             * @param width width on screen
                             * @param height height on screen
                             * @param zIndex z-index
                             * @param id image id, in the form {@code minecraft:textures} path'd as found in texture packs, ie {@code assets/minecraft/textures/gui/recipe_book.png} becomes {@code minecraft:textures/gui/recipe_book.png}
                             * @param imageX the left-most coordinate of the texture region
                             * @param imageY the top-most coordinate of the texture region
                             * @param regionWidth the width the texture region
                             * @param regionHeight the height the texture region
                             * @param textureWidth the width of the entire texture
                             * @param textureHeight the height of the entire texture
                             * @return added image
                             */
                            addImage(x: number, y: number, width: number, height: number, zIndex: number, id: string, imageX: number, imageY: number, regionWidth: number, regionHeight: number, textureWidth: number, textureHeight: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param x screen x, top left corner
                             * @param y screen y, top left corner
                             * @param width width on screen
                             * @param height height on screen
                             * @param id image id, in the form {@code minecraft:textures} path'd as found in texture packs, ie {@code assets/minecraft/textures/gui/recipe_book.png} becomes {@code minecraft:textures/gui/recipe_book.png}
                             * @param imageX the left-most coordinate of the texture region
                             * @param imageY the top-most coordinate of the texture region
                             * @param regionWidth the width the texture region
                             * @param regionHeight the height the texture region
                             * @param textureWidth the width of the entire texture
                             * @param textureHeight the height of the entire texture
                             * @param rotation the rotation (clockwise) of the texture (as degrees)
                             * @return added image
                             */
                            addImage(x: number, y: number, width: number, height: number, id: string, imageX: number, imageY: number, regionWidth: number, regionHeight: number, textureWidth: number, textureHeight: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            
                            /**
                             * 
                             * @since 1.4.0
                             * @param x screen x, top left corner
                             * @param y screen y, top left corner
                             * @param width width on screen
                             * @param height height on screen
                             * @param zIndex z-index
                             * @param id image id, in the form {@code minecraft:textures} path'd as found in texture packs, ie {@code assets/minecraft/textures/gui/recipe_book.png} becomes {@code minecraft:textures/gui/recipe_book.png}
                             * @param imageX the left-most coordinate of the texture region
                             * @param imageY the top-most coordinate of the texture region
                             * @param regionWidth the width the texture region
                             * @param regionHeight the height the texture region
                             * @param textureWidth the width of the entire texture
                             * @param textureHeight the height of the entire texture
                             * @param rotation the rotation (clockwise) of the texture (as degrees)
                             * @return added image
                             */
                            addImage(x: number, y: number, width: number, height: number, zIndex: number, id: string, imageX: number, imageY: number, regionWidth: number, regionHeight: number, textureWidth: number, textureHeight: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            
                            /**
                             * 
                             * @param x
                             * @param y
                             * @param width
                             * @param height
                             * @param zIndex
                             * @param color
                             * @param id
                             * @param imageX
                             * @param imageY
                             * @param regionWidth
                             * @param regionHeight
                             * @param textureWidth
                             * @param textureHeight
                             * @param rotation
                             * @since 1.6.5
                             * @return 
                             */
                            addImage(x: number, y: number, width: number, height: number, zIndex: number, color: number, id: string, imageX: number, imageY: number, regionWidth: number, regionHeight: number, textureWidth: number, textureHeight: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            
                            /**
                             * 
                             * @param x
                             * @param y
                             * @param width
                             * @param height
                             * @param zIndex
                             * @param alpha
                             * @param color
                             * @param id
                             * @param imageX
                             * @param imageY
                             * @param regionWidth
                             * @param regionHeight
                             * @param textureWidth
                             * @param textureHeight
                             * @param rotation
                             * @since 1.6.5
                             * @return 
                             */
                            addImage(x: number, y: number, width: number, height: number, zIndex: number, alpha: number, color: number, id: string, imageX: number, imageY: number, regionWidth: number, regionHeight: number, textureWidth: number, textureHeight: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param i
                             * @return self for chaining
                             */
                            removeImage(i: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image): T;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param x1
                             * @param y1
                             * @param x2
                             * @param y2
                             * @param color as hex, with alpha channel
                             * @return added rect
                             */
                            addRect(x1: number, y1: number, x2: number, y2: number, color: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param x1
                             * @param y1
                             * @param x2
                             * @param y2
                             * @param color as hex
                             * @param alpha alpha channel 0-255
                             * @return added rect
                             */
                            addRect(x1: number, y1: number, x2: number, y2: number, color: number, alpha: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param x1
                             * @param y1
                             * @param x2
                             * @param y2
                             * @param color as hex
                             * @param alpha alpha channel 0-255
                             * @param rotation as degrees
                             * @return added rect
                             */
                            addRect(x1: number, y1: number, x2: number, y2: number, color: number, alpha: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            
                            /**
                             * 
                             * @since 1.4.0
                             * @param x1
                             * @param y1
                             * @param x2
                             * @param y2
                             * @param color as hex
                             * @param alpha alpha channel 0-255
                             * @param rotation as degrees
                             * @param zIndex z-index
                             * @return added rect
                             */
                            addRect(x1: number, y1: number, x2: number, y2: number, color: number, alpha: number, rotation: number, zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param r
                             * @return self for chaining
                             */
                            removeRect(r: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect): T;
                            
                            /**
                             * 
                             * @param x1 the x position of the start
                             * @param y1 the y position of the start
                             * @param x2 the x position of the end
                             * @param y2 the y position of the end
                             * @param color the color of the line, can include alpha value
                             * @return the added line.
                             * @since 1.8.4
                             */
                            addLine(x1: number, y1: number, x2: number, y2: number, color: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            
                            /**
                             * 
                             * @param x1 the x position of the start
                             * @param y1 the y position of the start
                             * @param x2 the x position of the end
                             * @param y2 the y position of the end
                             * @param color the color of the line, can include alpha value
                             * @param zIndex the z-index of the line
                             * @return the added line.
                             * @since 1.8.4
                             */
                            addLine(x1: number, y1: number, x2: number, y2: number, color: number, zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            
                            /**
                             * 
                             * @param x1 the x position of the start
                             * @param y1 the y position of the start
                             * @param x2 the x position of the end
                             * @param y2 the y position of the end
                             * @param color the color of the line, can include alpha value
                             * @param width the width of the line
                             * @return the added line.
                             * @since 1.8.4
                             */
                            addLine(x1: number, y1: number, x2: number, y2: number, color: number, width: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            
                            /**
                             * 
                             * @param x1 the x position of the start
                             * @param y1 the y position of the start
                             * @param x2 the x position of the end
                             * @param y2 the y position of the end
                             * @param color the color of the line, can include alpha value
                             * @param zIndex the z-index of the line
                             * @param width the width of the line
                             * @return the added line.
                             * @since 1.8.4
                             */
                            addLine(x1: number, y1: number, x2: number, y2: number, color: number, zIndex: number, width: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            
                            /**
                             * 
                             * @param x1 the x position of the start
                             * @param y1 the y position of the start
                             * @param x2 the x position of the end
                             * @param y2 the y position of the end
                             * @param color the color of the line, can include alpha value
                             * @param width the width of the line
                             * @param rotation the rotation (clockwise) of the line (as degrees)
                             * @return the added line.
                             * @since 1.8.4
                             */
                            addLine(x1: number, y1: number, x2: number, y2: number, color: number, width: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            
                            /**
                             * 
                             * @param x1 the x position of the start
                             * @param y1 the y position of the start
                             * @param x2 the x position of the end
                             * @param y2 the y position of the end
                             * @param color the color of the line, can include alpha value
                             * @param zIndex the z-index of the line
                             * @param width the width of the line
                             * @param rotation the rotation (clockwise) of the line (as degrees)
                             * @return the added line.
                             * @since 1.8.4
                             */
                            addLine(x1: number, y1: number, x2: number, y2: number, color: number, zIndex: number, width: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            
                            /**
                             * 
                             * @param l the line to remove
                             * @return self chaining.
                             * @since 1.8.4
                             */
                            removeLine(l: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line): T;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param x left most corner
                             * @param y top most corner
                             * @param id item id
                             * @return added item
                             */
                            addItem(x: number, y: number, id: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @since 1.4.0
                             * @param x left most corner
                             * @param y top most corner
                             * @param zIndex z-index
                             * @param id item id
                             * @return added item
                             */
                            addItem(x: number, y: number, zIndex: number, id: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param x left most corner
                             * @param y top most corner
                             * @param id item id
                             * @param overlay should include overlay health and count
                             * @return added item
                             */
                            addItem(x: number, y: number, id: string, overlay: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @since 1.4.0
                             * @param x left most corner
                             * @param y top most corner
                             * @param zIndex z-index
                             * @param id item id
                             * @param overlay should include overlay health and count
                             * @return added item
                             */
                            addItem(x: number, y: number, zIndex: number, id: string, overlay: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param x left most corner
                             * @param y top most corner
                             * @param id item id
                             * @param overlay should include overlay health and count
                             * @param scale scale of item
                             * @param rotation rotation of item
                             * @return added item
                             */
                            addItem(x: number, y: number, id: string, overlay: boolean, scale: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @since 1.4.0
                             * @param x left most corner
                             * @param y top most corner
                             * @param zIndex z-index
                             * @param id item id
                             * @param overlay should include overlay health and count
                             * @param scale scale of item
                             * @param rotation rotation of item
                             * @return added item
                             */
                            addItem(x: number, y: number, zIndex: number, id: string, overlay: boolean, scale: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param x left most corner
                             * @param y top most corner
                             * @param item from inventory as helper
                             * @return added item
                             */
                            addItem(x: number, y: number, item: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @since 1.4.0
                             * @param x left most corner
                             * @param y top most corner
                             * @param zIndex z-index
                             * @param item from inventory as helper
                             * @return added item
                             */
                            addItem(x: number, y: number, zIndex: number, item: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param x left most corner
                             * @param y top most corner
                             * @param item from inventory as helper
                             * @param overlay should include overlay health and count
                             * @return added item
                             */
                            addItem(x: number, y: number, item: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper, overlay: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @since 1.4.0
                             * @param x left most corner
                             * @param y top most corner
                             * @param zIndex z-index
                             * @param item from inventory as helper
                             * @param overlay should include overlay health and count
                             * @return added item
                             */
                            addItem(x: number, y: number, zIndex: number, item: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper, overlay: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param x left most corner
                             * @param y top most corner
                             * @param item from inventory as helper
                             * @param overlay should include overlay health and count
                             * @param scale scale of item
                             * @param rotation rotation of item
                             * @return added item
                             */
                            addItem(x: number, y: number, item: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper, overlay: boolean, scale: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @since 1.4.0
                             * @param x left most corner
                             * @param y top most corner
                             * @param zIndex z-index
                             * @param item from inventory as helper
                             * @param overlay should include overlay health and count
                             * @param scale scale of item
                             * @param rotation rotation of item
                             * @return added item
                             */
                            addItem(x: number, y: number, zIndex: number, item: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper, overlay: boolean, scale: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param i
                             * @return self for chaining
                             */
                            removeItem(i: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item): T;
                            
                            /**
                             * Tries to add the given draw2d as a child. Fails if cyclic dependencies are detected.
                             * @param draw2D the draw2d to add
                             * @param x the x position on this draw2d
                             * @param y the y position on this draw2d
                             * @param width the width of the given draw2d
                             * @param height the height of the given draw2d
                             * @return a wrapper for the draw2d.
                             * @since 1.8.4
                             */
                            addDraw2D(draw2D: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D, x: number, y: number, width: number, height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement;
                            
                            /**
                             * Tries to add the given draw2d as a child. Fails if cyclic dependencies are detected.
                             * @param draw2D the draw2d to add
                             * @param x the x position on this draw2d
                             * @param y the y position on this draw2d
                             * @param width the width of the given draw2d
                             * @param height the height of the given draw2d
                             * @param zIndex the z-index for the draw2d
                             * @return a wrapper for the draw2d.
                             * @since 1.8.4
                             */
                            addDraw2D(draw2D: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D, x: number, y: number, width: number, height: number, zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement;
                            
                            /**
                             * 
                             * @param draw2D the draw2d to remove
                             * @return self chaining.
                             * @since 1.8.4
                             */
                            removeDraw2D(draw2D: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement): T;
                            
                            /**
                             * 
                             * @return a builder for an {@link Item}.
                             * @since 1.8.4
                             */
                            itemBuilder(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item$Builder;
                            
                            /**
                             * 
                             * @param item the item to use
                             * @return a builder for an {@link Item}.
                             * @since 1.8.4
                             */
                            itemBuilder(item: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item$Builder;
                            
                            /**
                             * 
                             * @return a builder for an {@link Image}.
                             * @since 1.8.4
                             */
                            imageBuilder(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @param id the id of the image
                             * @return a builder for an {@link Image}.
                             * @since 1.8.4
                             */
                            imageBuilder(id: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @return a builder for a {@link Rect}.
                             * @since 1.8.4
                             */
                            rectBuilder(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect$Builder;
                            
                            /**
                             * 
                             * @param x the x position of the rectangle
                             * @param y the y position of the rectangle
                             * @param width the width of the rectangle
                             * @param height the height of the rectangle
                             * @return a builder for a {@link Rect}.
                             * @since 1.8.4
                             */
                            rectBuilder(x: number, y: number, width: number, height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect$Builder;
                            
                            /**
                             * 
                             * @return a builder for a {@link Line}.
                             * @since 1.8.4
                             */
                            lineBuilder(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line$Builder;
                            
                            /**
                             * 
                             * @param x1 the x position of the first point
                             * @param y1 the y position of the first point
                             * @param x2 the x position of the second point
                             * @param y2 the y position of the second point
                             * @return a builder for a {@link Line}.
                             * @since 1.8.4
                             */
                            lineBuilder(x1: number, y1: number, x2: number, y2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line$Builder;
                            
                            /**
                             * 
                             * @return a builder for a {@link Text}.
                             * @since 1.8.4
                             */
                            textBuilder(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text$Builder;
                            
                            /**
                             * 
                             * @param text the text to display
                             * @return a builder for a {@link Text}.
                             * @since 1.8.4
                             */
                            textBuilder(text: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text$Builder;
                            
                            /**
                             * 
                             * @param text the text to display
                             * @return a builder for a {@link Text}.
                             * @since 1.8.4
                             */
                            textBuilder(text: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text$Builder;
                            
                            /**
                             * 
                             * @param draw2D the draw2d to add
                             * @return a builder for a {@link Draw2D}.
                             * @since 1.8.4
                             */
                            draw2DBuilder(draw2D: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement$Builder;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param onInit calls your method as a {@link Consumer}&lt;{@link T}&gt;
                             * @return self for chaining
                             */
                            setOnInit(onInit: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<T, any, any, any>): T;
                            
                            /**
                             * 
                             * @since 1.2.7
                             * @param catchInit calls your method as a {@link Consumer}&lt;{@link String}&gt;
                             * @return self for chaining
                             */
                            setOnFailInit(catchInit: _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper<string, any, any, any>): T;
                            
                            /**
                             * internal
                             * @param matrixStack
                             */
                            render(matrixStack: /* minecraft classes, as any, because obfuscation: */ any): void;
                            
                            /**
                             * 
                             * @since 1.8.4
                             * @param zIndex
                             */
                            setZIndex(zIndex: number): void;
                            
                            /**
                             * 
                             * @since 1.8.4
                             * @return 
                             */
                            getZIndex(): number;
                            
                        }
                        namespace IDraw2D {
                            interface static {
                                
                                
                                
                            }
                        }
                    }
                
                    namespace sharedclasses {
                    
                        interface RenderCommon$Draw2DElement extends any, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$RenderElement, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Alignable<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement> {
                            readonly draw2D: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D;
                            parent: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IDraw2D<any>;
                            x: number;
                            y: number;
                            width: _javatypes.java.util._function.IntSupplier;
                            height: _javatypes.java.util._function.IntSupplier;
                            scale: number;
                            rotation: number;
                            rotateCenter: boolean;
                            zIndex: number;
                            
                            
                            /**
                             * 
                             * @return the internal draw2D this draw2D element is wrapping.
                             * @since 1.8.4
                             */
                            getDraw2D(): _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D;
                            
                            /**
                             * 
                             * @param x the x position
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setX(x: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement;
                            
                            /**
                             * 
                             * @return the x position of this draw2D.
                             * @since 1.8.4
                             */
                            getX(): number;
                            
                            /**
                             * 
                             * @param y the y position
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setY(y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement;
                            
                            /**
                             * 
                             * @return the y position of this draw2D.
                             * @since 1.8.4
                             */
                            getY(): number;
                            
                            /**
                             * 
                             * @param x the x position
                             * @param y the y position
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setPos(x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement;
                            
                            /**
                             * 
                             * @param width the width
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setWidth(width: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement;
                            
                            /**
                             * 
                             * @return the width of this draw2D.
                             * @since 1.8.4
                             */
                            getWidth(): number;
                            
                            /**
                             * 
                             * @param height the height
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setHeight(height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement;
                            
                            /**
                             * 
                             * @return the height of this draw2D.
                             * @since 1.8.4
                             */
                            getHeight(): number;
                            
                            /**
                             * 
                             * @param width the width
                             * @param height the height
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setSize(width: number, height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement;
                            
                            /**
                             * 
                             * @param scale the scale
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setScale(scale: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement;
                            
                            /**
                             * 
                             * @return the scale of this draw2D.
                             * @since 1.8.4
                             */
                            getScale(): number;
                            
                            /**
                             * 
                             * @param rotation the rotation
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setRotation(rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement;
                            
                            /**
                             * 
                             * @return the rotation of this draw2D.
                             * @since 1.8.4
                             */
                            getRotation(): number;
                            
                            /**
                             * 
                             * @param rotateCenter whether this draw2D should be rotated around its center
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setRotateCenter(rotateCenter: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement;
                            
                            /**
                             * 
                             * @return {@code true} if this draw2D should be rotated around its center, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            isRotatingCenter(): boolean;
                            
                            /**
                             * 
                             * @param zIndex the z-index of this draw2D
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setZIndex(zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement;
                            getZIndex(): number;
                            render(matrices: /* minecraft classes, as any, because obfuscation: */ any, mouseX: number, mouseY: number, delta: number): void;
                            setParent(parent: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IDraw2D<any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement;
                            getScaledWidth(): number;
                            getParentWidth(): number;
                            getScaledHeight(): number;
                            getParentHeight(): number;
                            getScaledLeft(): number;
                            getScaledTop(): number;
                            moveTo(x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement;
                            
                        }
                        namespace RenderCommon$Draw2DElement {
                            interface static {
                                new (draw2D: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D, x: number, y: number, width: _javatypes.java.util._function.IntSupplier, height: _javatypes.java.util._function.IntSupplier, zIndex: number, scale: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement;
                                
                                
                                
                            }
                        }
                        interface RenderCommon$Item extends any, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$RenderElement, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Alignable<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item> {
                            parent: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IDraw2D<any>;
                            item: /* minecraft classes, as any, because obfuscation: */ any;
                            ovText: string;
                            overlay: boolean;
                            scale: number;
                            rotation: number;
                            rotateCenter: boolean;
                            x: number;
                            y: number;
                            zIndex: number;
                            
                            
                            /**
                             * 
                             * @param i
                             * @return 
                             * @since 1.0.5 [citation needed]
                             */
                            setItem(i: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @param id
                             * @param count
                             * @return 
                             * @since 1.0.5 [citation needed]
                             */
                            setItem(id: string, count: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.0.5 [citation needed]
                             */
                            getItem(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            
                            /**
                             * 
                             * @param x the new x position of this element
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setX(x: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @return the x position of this element.
                             * @since 1.8.4
                             */
                            getX(): number;
                            
                            /**
                             * 
                             * @param y the new y position of this element
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setY(y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @return the y position of this element.
                             * @since 1.8.4
                             */
                            getY(): number;
                            
                            /**
                             * 
                             * @param x
                             * @param y
                             * @return 
                             * @since 1.0.5
                             */
                            setPos(x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @param scale
                             * @return 
                             * @throws IllegalArgumentException
                             * @since 1.2.6
                             */
                            setScale(scale: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @return the scale of this item.
                             * @since 1.8.4
                             */
                            getScale(): number;
                            
                            /**
                             * 
                             * @param rotation
                             * @return 
                             * @since 1.2.6
                             */
                            setRotation(rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @return the rotation of this item.
                             * @since 1.8.4
                             */
                            getRotation(): number;
                            
                            /**
                             * 
                             * @param rotateCenter whether the item should be rotated around its center
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setRotateCenter(rotateCenter: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @return {@code true} if this item should be rotated around its center, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            isRotatingCenter(): boolean;
                            
                            /**
                             * 
                             * @param overlay
                             * @return 
                             * @since 1.2.0
                             */
                            setOverlay(overlay: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @return {@code true}, if the overlay, i.e. the durability bar, and the overlay text or
                             *          item count should be shown, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            shouldShowOverlay(): boolean;
                            
                            /**
                             * 
                             * @param ovText
                             * @return 
                             * @since 1.2.0
                             */
                            setOverlayText(ovText: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                            /**
                             * 
                             * @return the overlay text of this item.
                             * @since 1.8.4
                             */
                            getOverlayText(): string;
                            
                            /**
                             * 
                             * @param zIndex the new z-index of this item
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setZIndex(zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            getZIndex(): number;
                            render(matrices: /* minecraft classes, as any, because obfuscation: */ any, mouseX: number, mouseY: number, delta: number): void;
                            render3D(matrices: /* minecraft classes, as any, because obfuscation: */ any, mouseX: number, mouseY: number, delta: number): void;
                            setParent(parent: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IDraw2D<any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            getScaledWidth(): number;
                            getParentWidth(): number;
                            getScaledHeight(): number;
                            getParentHeight(): number;
                            getScaledLeft(): number;
                            getScaledTop(): number;
                            moveTo(x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                            
                        }
                        namespace RenderCommon$Item {
                            interface static {
                                new (x: number, y: number, zIndex: number, id: string, overlay: boolean, scale: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                                new (x: number, y: number, zIndex: number, i: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper, overlay: boolean, scale: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                                new (x: number, y: number, zIndex: number, itemStack: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper, overlay: boolean, scale: number, rotation: number, ovText: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item;
                                
                                
                                
                            }
                        }
                        interface RenderCommon$Line extends any, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$RenderElement, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Alignable<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line> {
                            parent: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IDraw2D<any>;
                            x1: number;
                            y1: number;
                            x2: number;
                            y2: number;
                            color: number;
                            rotation: number;
                            rotateCenter: boolean;
                            width: number;
                            zIndex: number;
                            
                            
                            /**
                             * 
                             * @param x1 the x position of the start of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setX1(x1: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            
                            /**
                             * 
                             * @return the x position of the start of the line.
                             * @since 1.8.4
                             */
                            getX1(): number;
                            
                            /**
                             * 
                             * @param y1 the y position of the start of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setY1(y1: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            
                            /**
                             * 
                             * @return the y position of the start of the line.
                             * @since 1.8.4
                             */
                            getY1(): number;
                            
                            /**
                             * 
                             * @param x1 the x position of the start of the line
                             * @param y1 the y position of the start of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setPos1(x1: number, y1: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            
                            /**
                             * 
                             * @param x2 the x position of the end of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setX2(x2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            
                            /**
                             * 
                             * @return the x position of the end of the line.
                             * @since 1.8.4
                             */
                            getX2(): number;
                            
                            /**
                             * 
                             * @param y2 the y position of the end of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setY2(y2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            
                            /**
                             * 
                             * @return the y position of the end of the line.
                             * @since 1.8.4
                             */
                            getY2(): number;
                            
                            /**
                             * 
                             * @param x2 the x position of the end of the line
                             * @param y2 the y position of the end of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setPos2(x2: number, y2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            
                            /**
                             * 
                             * @param x1 the x position of the start of the line
                             * @param y1 the y position of the start of the line
                             * @param x2 the x position of the end of the line
                             * @param y2 the y position of the end of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setPos(x1: number, y1: number, x2: number, y2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            
                            /**
                             * 
                             * @param color the color of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setColor(color: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            
                            /**
                             * 
                             * @param color the color of the line
                             * @param alpha the alpha of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setColor(color: number, alpha: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            
                            /**
                             * 
                             * @return the color of the line.
                             * @since 1.8.4
                             */
                            getColor(): number;
                            
                            /**
                             * 
                             * @param alpha the alpha value of the line's color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setAlpha(alpha: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            
                            /**
                             * 
                             * @return the alpha value of the line's color.
                             * @since 1.8.4
                             */
                            getAlpha(): number;
                            
                            /**
                             * 
                             * @param rotation the rotation (clockwise) of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setRotation(rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            
                            /**
                             * 
                             * @return the rotation (clockwise) of the line.
                             * @since 1.8.4
                             */
                            getRotation(): number;
                            
                            /**
                             * 
                             * @param rotateCenter whether this line should be rotated around its center
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setRotateCenter(rotateCenter: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            
                            /**
                             * 
                             * @return {@code true} if this line should be rotated around its center, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            isRotatingCenter(): boolean;
                            
                            /**
                             * 
                             * @param width the width of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setWidth(width: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            
                            /**
                             * 
                             * @return the width of the line.
                             * @since 1.8.4
                             */
                            getWidth(): number;
                            
                            /**
                             * 
                             * @param zIndex the z-index of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setZIndex(zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            getZIndex(): number;
                            render(matrices: /* minecraft classes, as any, because obfuscation: */ any, mouseX: number, mouseY: number, delta: number): void;
                            setParent(parent: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IDraw2D<any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            moveTo(x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                            getScaledWidth(): number;
                            getParentWidth(): number;
                            getScaledHeight(): number;
                            getParentHeight(): number;
                            getScaledLeft(): number;
                            getScaledTop(): number;
                            
                        }
                        namespace RenderCommon$Line {
                            interface static {
                                new (x1: number, y1: number, x2: number, y2: number, color: number, rotation: number, width: number, zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line;
                                
                                
                                
                            }
                        }
                        interface PositionCommon$Pos2D extends any {
                            x: number;
                            y: number;
                            
                            getX(): number;
                            getY(): number;
                            add(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D;
                            
                            /**
                             * 
                             * @since 1.6.3
                             * @param x
                             * @param y
                             * @return 
                             */
                            add(x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D;
                            
                            /**
                             * 
                             * @param pos the position to subtract
                             * @return the new position.
                             * @since 1.8.4
                             */
                            sub(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D;
                            
                            /**
                             * 
                             * @param x the x coordinate to subtract
                             * @param y the y coordinate to subtract
                             * @return the new position.
                             * @since 1.8.4
                             */
                            sub(x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D;
                            multiply(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D;
                            
                            /**
                             * 
                             * @since 1.6.3
                             * @param x
                             * @param y
                             * @return 
                             */
                            multiply(x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D;
                            
                            /**
                             * 
                             * @param pos the position to divide by
                             * @return the new position.
                             * @since 1.8.4
                             */
                            divide(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D;
                            
                            /**
                             * 
                             * @param x the x coordinate to divide by
                             * @param y the y coordinate to divide by
                             * @return the new position.
                             * @since 1.8.4
                             */
                            divide(x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D;
                            
                            /**
                             * 
                             * @since 1.6.3
                             * @param scale
                             * @return 
                             */
                            scale(scale: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D;
                            toString(): string;
                            to3D(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            toVector(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec2D;
                            
                            /**
                             * 
                             * @since 1.6.4
                             * @param start_pos
                             * @return 
                             */
                            toVector(start_pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec2D;
                            
                            /**
                             * 
                             * @since 1.6.4
                             * @param start_x
                             * @param start_y
                             * @return 
                             */
                            toVector(start_x: number, start_y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec2D;
                            
                            /**
                             * 
                             * @since 1.6.4
                             * @return 
                             */
                            toReverseVector(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec2D;
                            
                            /**
                             * 
                             * @since 1.6.4
                             * @param end_pos
                             * @return 
                             */
                            toReverseVector(end_pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec2D;
                            
                            /**
                             * 
                             * @since 1.6.4
                             * @param end_x
                             * @param end_y
                             * @return 
                             */
                            toReverseVector(end_x: number, end_y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec2D;
                            
                        }
                        namespace PositionCommon$Pos2D {
                            interface static {
                                new (x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D;
                                
                                readonly ZERO: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D;
                                
                                
                            }
                        }
                        interface PositionCommon$Pos3D extends _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D {
                            z: number;
                            
                            getZ(): number;
                            add(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            
                            /**
                             * 
                             * @since 1.6.3
                             * @param x
                             * @param y
                             * @param z
                             * @return 
                             */
                            add(x: number, y: number, z: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            
                            /**
                             * 
                             * @param pos the position to subtract
                             * @return the new position.
                             * @since 1.8.4
                             */
                            sub(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            
                            /**
                             * 
                             * @param x the x coordinate to subtract
                             * @param y the y coordinate to subtract
                             * @param z the z coordinate to subtract
                             * @return the new position.
                             * @since 1.8.4
                             */
                            sub(x: number, y: number, z: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            multiply(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            
                            /**
                             * 
                             * @since 1.6.3
                             * @param x
                             * @param y
                             * @param z
                             * @return 
                             */
                            multiply(x: number, y: number, z: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            
                            /**
                             * 
                             * @param pos the position to divide by
                             * @return the new position.
                             * @since 1.8.4
                             */
                            divide(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            
                            /**
                             * 
                             * @param x the x coordinate to divide by
                             * @param y the y coordinate to divide by
                             * @param z the z coordinate to divide by
                             * @return the new position.
                             * @since 1.8.4
                             */
                            divide(x: number, y: number, z: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            
                            /**
                             * 
                             * @since 1.6.3
                             * @param scale
                             * @return 
                             */
                            scale(scale: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            toString(): string;
                            toVector(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
                            
                            /**
                             * 
                             * @since 1.6.4
                             * @param start_pos
                             * @return 
                             */
                            toVector(start_pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
                            
                            /**
                             * 
                             * @since 1.6.4
                             * @param start_pos
                             * @return 
                             */
                            toVector(start_pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
                            
                            /**
                             * 
                             * @since 1.6.4
                             * @param start_x
                             * @param start_y
                             * @param start_z
                             * @return 
                             */
                            toVector(start_x: number, start_y: number, start_z: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
                            
                            /**
                             * 
                             * @since 1.6.4
                             * @return 
                             */
                            toReverseVector(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
                            toReverseVector(end_pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
                            
                            /**
                             * 
                             * @since 1.6.4
                             * @param end_pos
                             * @return 
                             */
                            toReverseVector(end_pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
                            
                            /**
                             * 
                             * @since 1.6.4
                             * @param end_x
                             * @param end_y
                             * @param end_z
                             * @return 
                             */
                            toReverseVector(end_x: number, end_y: number, end_z: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
                            
                            /**
                             * 
                             * @since 1.8.0
                             * @return 
                             */
                            toBlockPos(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper;
                            
                            /**
                             * 
                             * @since 1.8.0
                             * @return 
                             */
                            toRawBlockPos(): /* minecraft classes, as any, because obfuscation: */ any;
                            
                            /**
                             * 
                             * @return the raw minecraft double vector with the same coordinates as this position.
                             * @since 1.8.4
                             */
                            toMojangDoubleVector(): /* minecraft classes, as any, because obfuscation: */ any;
                            
                        }
                        namespace PositionCommon$Pos3D {
                            interface static {
                                new (vec: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                                new (x: number, y: number, z: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                                
                                readonly ZERO: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                                
                                
                            }
                        }
                        interface PositionCommon$Vec2D extends any {
                            x1: number;
                            y1: number;
                            x2: number;
                            y2: number;
                            
                            getX1(): number;
                            getY1(): number;
                            getX2(): number;
                            getY2(): number;
                            getDeltaX(): number;
                            getDeltaY(): number;
                            getStart(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D;
                            getEnd(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D;
                            getMagnitude(): number;
                            
                            /**
                             * 
                             * @since 1.6.5
                             * @return magnitude squared
                             */
                            getMagnitudeSq(): number;
                            add(vec: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec2D): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec2D;
                            
                            /**
                             * 
                             * @since 1.6.3
                             * @param x1
                             * @param y1
                             * @param x2
                             * @param y2
                             * @return 
                             */
                            add(x1: number, y1: number, x2: number, y2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec2D;
                            multiply(vec: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec2D): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec2D;
                            
                            /**
                             * 
                             * @since 1.6.3
                             * @param x1
                             * @param y1
                             * @param x2
                             * @param y2
                             * @return 
                             */
                            multiply(x1: number, y1: number, x2: number, y2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec2D;
                            
                            /**
                             * 
                             * @since 1.6.3
                             * @param scale
                             * @return 
                             */
                            scale(scale: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec2D;
                            dotProduct(vec: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec2D): number;
                            reverse(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec2D;
                            
                            /**
                             * 
                             * @return a new Vec2D with the same direction but a magnitude of 1
                             * @since 1.6.5
                             */
                            normalize(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec2D;
                            toString(): string;
                            to3D(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
                            
                        }
                        namespace PositionCommon$Vec2D {
                            interface static {
                                new (x1: number, y1: number, x2: number, y2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec2D;
                                new (start: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D, end: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos2D): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec2D;
                                
                                
                                
                            }
                        }
                        interface RenderCommon$Image extends any, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$RenderElement, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Alignable<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image> {
                            parent: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IDraw2D<any>;
                            rotation: number;
                            rotateCenter: boolean;
                            x: number;
                            y: number;
                            width: number;
                            height: number;
                            imageX: number;
                            imageY: number;
                            regionWidth: number;
                            regionHeight: number;
                            textureWidth: number;
                            textureHeight: number;
                            color: number;
                            zIndex: number;
                            
                            
                            /**
                             * 
                             * @param id
                             * @param imageX
                             * @param imageY
                             * @param regionWidth
                             * @param regionHeight
                             * @param textureWidth
                             * @param textureHeight
                             * @return self for chaining.
                             * @since 1.2.3
                             */
                            setImage(id: string, imageX: number, imageY: number, regionWidth: number, regionHeight: number, textureWidth: number, textureHeight: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.2.3
                             */
                            getImage(): string;
                            
                            /**
                             * 
                             * @param x the new x position of this image
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setX(x: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            
                            /**
                             * 
                             * @return the x position of this image.
                             * @since 1.8.4
                             */
                            getX(): number;
                            
                            /**
                             * 
                             * @param y the new y position of this image
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setY(y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            
                            /**
                             * 
                             * @return the y position of this image.
                             * @since 1.8.4
                             */
                            getY(): number;
                            
                            /**
                             * 
                             * @param x the new x position of this image
                             * @param y the new y position of this image
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setPos(x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            
                            /**
                             * 
                             * @param x
                             * @param y
                             * @param width
                             * @param height
                             * @since 1.2.3
                             */
                            setPos(x: number, y: number, width: number, height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            
                            /**
                             * 
                             * @param width the new width of this image
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setWidth(width: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            
                            /**
                             * 
                             * @return the width of this image.
                             * @since 1.8.4
                             */
                            getWidth(): number;
                            
                            /**
                             * 
                             * @param height the new height of this image
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setHeight(height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            
                            /**
                             * 
                             * @return the height of this image.
                             * @since 1.8.4
                             */
                            getHeight(): number;
                            
                            /**
                             * 
                             * @param width the new width of this image
                             * @param height the new height of this image
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setSize(width: number, height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            
                            /**
                             * 
                             * @param color
                             * @return 
                             * @since 1.6.5
                             */
                            setColor(color: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            
                            /**
                             * 
                             * @param color
                             * @param alpha
                             * @return 
                             * @since 1.6.5
                             */
                            setColor(color: number, alpha: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            
                            /**
                             * 
                             * @return the color of this image.
                             * @since 1.8.4
                             */
                            getColor(): number;
                            
                            /**
                             * 
                             * @return the alpha value of this image.
                             * @since 1.8.4
                             */
                            getAlpha(): number;
                            
                            /**
                             * 
                             * @param rotation
                             * @return 
                             * @since 1.2.6
                             */
                            setRotation(rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            
                            /**
                             * 
                             * @return the rotation of this image.
                             * @since 1.8.4
                             */
                            getRotation(): number;
                            
                            /**
                             * 
                             * @param rotateCenter whether the image should be rotated around its center
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setRotateCenter(rotateCenter: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            
                            /**
                             * 
                             * @return {@code true} if this image should be rotated around its center, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            isRotatingCenter(): boolean;
                            
                            /**
                             * 
                             * @param zIndex the new z-index of this image
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setZIndex(zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            getZIndex(): number;
                            render(matrices: /* minecraft classes, as any, because obfuscation: */ any, mouseX: number, mouseY: number, delta: number): void;
                            setParent(parent: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IDraw2D<any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            getScaledWidth(): number;
                            getParentWidth(): number;
                            getScaledHeight(): number;
                            getParentHeight(): number;
                            getScaledLeft(): number;
                            getScaledTop(): number;
                            moveTo(x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            
                        }
                        namespace RenderCommon$Image {
                            interface static {
                                new (x: number, y: number, width: number, height: number, zIndex: number, color: number, id: string, imageX: number, imageY: number, regionWidth: number, regionHeight: number, textureWidth: number, textureHeight: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                                new (x: number, y: number, width: number, height: number, zIndex: number, alpha: number, color: number, id: string, imageX: number, imageY: number, regionWidth: number, regionHeight: number, textureWidth: number, textureHeight: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                                
                                
                                
                            }
                        }
                        interface RenderCommon$RenderElement extends _javatypes.java.lang.Interface, /* supressed minecraft class */ _javatypes.java.lang.Interface {
                            
                            getZIndex(): number;
                            render3D(matrices: /* minecraft classes, as any, because obfuscation: */ any, mouseX: number, mouseY: number, delta: number): void;
                            setupMatrix(matrices: /* minecraft classes, as any, because obfuscation: */ any, x: number, y: number, scale: number, rotation: number): void;
                            setupMatrix(matrices: /* minecraft classes, as any, because obfuscation: */ any, x: number, y: number, scale: number, rotation: number, width: number, height: number, rotateAroundCenter: boolean): void;
                            
                        }
                        namespace RenderCommon$RenderElement {
                            interface static {
                                
                                readonly mc: /* minecraft classes, as any, because obfuscation: */ any;
                                
                                
                            }
                        }
                        interface RenderCommon$Text extends any, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$RenderElement, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Alignable<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text> {
                            parent: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IDraw2D<any>;
                            text: /* minecraft classes, as any, because obfuscation: */ any;
                            scale: number;
                            rotation: number;
                            rotateCenter: boolean;
                            x: number;
                            y: number;
                            color: number;
                            width: number;
                            shadow: boolean;
                            zIndex: number;
                            
                            
                            /**
                             * 
                             * @param x the new x position for this text element
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setX(x: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            
                            /**
                             * 
                             * @return the x position of this element.
                             * @since 1.8.4
                             */
                            getX(): number;
                            
                            /**
                             * 
                             * @param y the new y position for this text element
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setY(y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            
                            /**
                             * 
                             * @return the y position of this element.
                             * @since 1.8.4
                             */
                            getY(): number;
                            
                            /**
                             * 
                             * @param x
                             * @param y
                             * @return 
                             * @since 1.0.5
                             */
                            setPos(x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            
                            /**
                             * 
                             * @param text
                             * @return 
                             * @since 1.0.5
                             */
                            setText(text: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            
                            /**
                             * 
                             * @param text
                             * @return 
                             * @since 1.2.7
                             */
                            setText(text: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.2.7
                             */
                            getText(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            
                            /**
                             * 
                             * @return 
                             * @since 1.0.5
                             */
                            getWidth(): number;
                            
                            /**
                             * 
                             * @return the height of this text.
                             * @since 1.8.4
                             */
                            getHeight(): number;
                            
                            /**
                             * 
                             * @param shadow whether the text should be rendered with a shadow
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setShadow(shadow: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            
                            /**
                             * 
                             * @return {@code true} if this text element is rendered with a shadow, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            hasShadow(): boolean;
                            
                            /**
                             * 
                             * @param scale
                             * @return 
                             * @throws IllegalArgumentException
                             * @since 1.0.5
                             */
                            setScale(scale: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            
                            /**
                             * 
                             * @return the scale of this text.
                             * @since 1.8.4
                             */
                            getScale(): number;
                            
                            /**
                             * 
                             * @param rotation
                             * @return 
                             * @since 1.0.5
                             */
                            setRotation(rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            
                            /**
                             * 
                             * @return the rotation of this text.
                             * @since 1.8.4
                             */
                            getRotation(): number;
                            
                            /**
                             * 
                             * @param rotateCenter whether this text should be rotated around its center
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setRotateCenter(rotateCenter: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            
                            /**
                             * 
                             * @return {@code true} if this text should be rotated around its center, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            isRotatingCenter(): boolean;
                            
                            /**
                             * 
                             * @param color the new color for this text element
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setColor(color: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            
                            /**
                             * 
                             * @return the color of this text.
                             * @since 1.8.4
                             */
                            getColor(): number;
                            
                            /**
                             * 
                             * @param zIndex the new z-index for this text element
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setZIndex(zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            getZIndex(): number;
                            render(matrices: /* minecraft classes, as any, because obfuscation: */ any, mouseX: number, mouseY: number, delta: number): void;
                            render3D(matrices: /* minecraft classes, as any, because obfuscation: */ any, mouseX: number, mouseY: number, delta: number): void;
                            setParent(parent: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IDraw2D<any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            getScaledWidth(): number;
                            getParentWidth(): number;
                            getScaledHeight(): number;
                            getParentHeight(): number;
                            getScaledLeft(): number;
                            getScaledTop(): number;
                            moveTo(x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            
                        }
                        namespace RenderCommon$Text {
                            interface static {
                                new (text: string, x: number, y: number, color: number, zIndex: number, shadow: boolean, scale: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                                new (text: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper, x: number, y: number, color: number, zIndex: number, shadow: boolean, scale: number, rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                                
                                
                                
                            }
                        }
                        interface PositionCommon$Vec3D extends _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec2D {
                            z1: number;
                            z2: number;
                            
                            getZ1(): number;
                            getZ2(): number;
                            getDeltaZ(): number;
                            getStart(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            getEnd(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D;
                            getMagnitude(): number;
                            getMagnitudeSq(): number;
                            add(vec: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
                            
                            /**
                             * 
                             * @since 1.6.4
                             * @param pos
                             * @return 
                             */
                            addStart(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
                            
                            /**
                             * 
                             * @since 1.6.4
                             * @param pos
                             * @return 
                             */
                            addEnd(pos: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
                            
                            /**
                             * 
                             * @since 1.6.4
                             * @param x
                             * @param y
                             * @param z
                             * @return 
                             */
                            addStart(x: number, y: number, z: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
                            
                            /**
                             * 
                             * @since 1.6.4
                             * @param x
                             * @param y
                             * @param z
                             * @return 
                             */
                            addEnd(x: number, y: number, z: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
                            
                            /**
                             * 
                             * @since 1.6.3
                             * @param x1
                             * @param y1
                             * @param z1
                             * @param x2
                             * @param y2
                             * @param z2
                             * @return 
                             */
                            add(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
                            multiply(vec: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
                            
                            /**
                             * 
                             * @since 1.6.3
                             * @param x1
                             * @param y1
                             * @param z1
                             * @param x2
                             * @param y2
                             * @param z2
                             * @return 
                             */
                            multiply(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
                            
                            /**
                             * 
                             * @since 1.6.3
                             * @param scale
                             * @return 
                             */
                            scale(scale: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
                            
                            /**
                             * 
                             * @since 1.6.5
                             * @return 
                             */
                            normalize(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
                            getPitch(): number;
                            getYaw(): number;
                            dotProduct(vec: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D): number;
                            crossProduct(vec: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
                            reverse(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
                            toString(): string;
                            
                            /**
                             * 
                             * @since 1.6.5
                             * @return 
                             */
                            toMojangFloatVector(): _javatypes.org.joml.Vector3f;
                            
                        }
                        namespace PositionCommon$Vec3D {
                            interface static {
                                new (x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
                                new (start: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D, end: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Pos3D): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon$Vec3D;
                                
                                
                                
                            }
                        }
                        interface RenderCommon$Rect extends any, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$RenderElement, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Alignable<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect> {
                            parent: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IDraw2D<any>;
                            rotation: number;
                            rotateCenter: boolean;
                            x1: number;
                            y1: number;
                            x2: number;
                            y2: number;
                            color: number;
                            zIndex: number;
                            
                            
                            /**
                             * 
                             * @param x1 the first x position of this rectangle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setX1(x1: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            
                            /**
                             * 
                             * @return the first x position of this rectangle.
                             * @since 1.8.4
                             */
                            getX1(): number;
                            
                            /**
                             * 
                             * @param y1 the first y position of this rectangle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setY1(y1: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            
                            /**
                             * 
                             * @return the first y position of this rectangle.
                             * @since 1.8.4
                             */
                            getY1(): number;
                            
                            /**
                             * 
                             * @param x1 the first x position of this rectangle
                             * @param y1 the first y position of this rectangle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setPos1(x1: number, y1: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            
                            /**
                             * 
                             * @param x2 the second x position of this rectangle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setX2(x2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            
                            /**
                             * 
                             * @return the second x position of this rectangle.
                             * @since 1.8.4
                             */
                            getX2(): number;
                            
                            /**
                             * 
                             * @param y2 the second y position of this rectangle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setY2(y2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            
                            /**
                             * 
                             * @return the second y position of the rectangle.
                             * @since 1.8.4
                             */
                            getY2(): number;
                            
                            /**
                             * 
                             * @param x2 the second x position of this rectangle
                             * @param y2 the second y position of this rectangle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setPos2(x2: number, y2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            
                            /**
                             * 
                             * @param x1
                             * @param y1
                             * @param x2
                             * @param y2
                             * @return 
                             * @since 1.1.8
                             */
                            setPos(x1: number, y1: number, x2: number, y2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            
                            /**
                             * 
                             * @param width the new width of this rectangle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setWidth(width: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            
                            /**
                             * 
                             * @return the width of this rectangle.
                             * @since 1.8.4
                             */
                            getWidth(): number;
                            
                            /**
                             * 
                             * @param height the new height of this rectangle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setHeight(height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            
                            /**
                             * 
                             * @return the height of this rectangle.
                             * @since 1.8.4
                             */
                            getHeight(): number;
                            
                            /**
                             * 
                             * @param width the new width of this rectangle
                             * @param height the new height of this rectangle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setSize(width: number, height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            
                            /**
                             * 
                             * @param color
                             * @return 
                             * @since 1.0.5
                             */
                            setColor(color: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            
                            /**
                             * 
                             * @param color
                             * @param alpha
                             * @return 
                             * @since 1.1.8
                             */
                            setColor(color: number, alpha: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            
                            /**
                             * 
                             * @param alpha
                             * @return 
                             * @since 1.1.8
                             */
                            setAlpha(alpha: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            
                            /**
                             * 
                             * @return the color value of this rectangle.
                             * @since 1.8.4
                             */
                            getColor(): number;
                            
                            /**
                             * 
                             * @return the alpha value of this rectangle.
                             * @since 1.8.4
                             */
                            getAlpha(): number;
                            
                            /**
                             * 
                             * @param rotation
                             * @return 
                             * @since 1.2.6
                             */
                            setRotation(rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            
                            /**
                             * 
                             * @return the rotation of this rectangle.
                             * @since 1.8.4
                             */
                            getRotation(): number;
                            
                            /**
                             * 
                             * @param rotateCenter whether this rectangle should be rotated around its center
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setRotateCenter(rotateCenter: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            
                            /**
                             * 
                             * @return {@code true} if this rectangle should be rotated around its center, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            isRotatingCenter(): boolean;
                            
                            /**
                             * 
                             * @param zIndex the new z-index for this rectangle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            setZIndex(zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            getZIndex(): number;
                            render(matrices: /* minecraft classes, as any, because obfuscation: */ any, mouseX: number, mouseY: number, delta: number): void;
                            setParent(parent: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IDraw2D<any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            getScaledWidth(): number;
                            getParentWidth(): number;
                            getScaledHeight(): number;
                            getParentHeight(): number;
                            getScaledLeft(): number;
                            getScaledTop(): number;
                            moveTo(x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            
                        }
                        namespace RenderCommon$Rect {
                            interface static {
                                new (x1: number, y1: number, x2: number, y2: number, color: number, rotation: number, zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                                new (x1: number, y1: number, x2: number, y2: number, color: number, alpha: number, rotation: number, zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                                
                                
                                
                            }
                        }
                        interface RenderCommon$Alignable<B> extends _javatypes.java.lang.Interface {
                            
                            
                            /**
                             * 
                             * @param other the element to align to
                             * @param alignment the alignment to use
                             * @return self for chaining.
                             * @see #alignHorizontally(Alignable, String, int)
                             * @since 1.8.4
                             */
                            alignHorizontally(other: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Alignable<any>, alignment: string): B;
                            
                            /**
                             * The alignment must be of the format
                             *  `[left|center|right|x%]On[left|center|right|x%]`. The input is case-insensitive.
                             *  The first alignment is for the element this method is called on and the second is for the
                             *  other element. As an example, `LeftOnCenter` would align the left side of this
                             *  element to the center of the other element.
                             * @param other the element to align to
                             * @param alignment the alignment to use
                             * @param offset the offset to use
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            alignHorizontally(other: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Alignable<any>, alignment: string, offset: number): B;
                            
                            /**
                             * 
                             * @param alignment the alignment to use
                             * @return self for chaining.
                             * @see #alignHorizontally(String, int)
                             * @since 1.8.4
                             */
                            alignHorizontally(alignment: string): B;
                            
                            /**
                             * Possible alignments are `left`, `center`, `right` or `y%` where y
                             *  is a number between 0 and 100.
                             * @param alignment the alignment to use
                             * @param offset the offset to use
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            alignHorizontally(alignment: string, offset: number): B;
                            
                            /**
                             * 
                             * @param other the element to align to
                             * @param alignment the alignment to use
                             * @return self for chaining.
                             * @see #alignVertically(Alignable, String, int)
                             * @since 1.8.4
                             */
                            alignVertically(other: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Alignable<any>, alignment: string): B;
                            
                            /**
                             * The alignment must be of the format
                             *  `[top|center|bottom|y%]On[top|center|bottom|y%]`. The input is case-insensitive.
                             *  The first alignment is for the element this method is called on and the second is for the
                             *  other element. As an example, `BottomOnTop` would align the bottom side of this
                             *  element to the top of the other element. Thus, the element would be placed above the
                             *  other one.
                             * @param other the element to align to
                             * @param alignment the alignment to use
                             * @param offset the offset to use
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            alignVertically(other: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Alignable<any>, alignment: string, offset: number): B;
                            
                            /**
                             * 
                             * @param alignment the alignment to use
                             * @return self for chaining.
                             * @see #alignVertically(String, int)
                             * @since 1.8.4
                             */
                            alignVertically(alignment: string): B;
                            
                            /**
                             * Possible alignments are `top`, `center`, `bottom` or `x%` where x
                             *  is a number between 0 and 100.
                             * @param alignment the alignment to use
                             * @param offset the offset to use
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            alignVertically(alignment: string, offset: number): B;
                            
                            /**
                             * 
                             * @param horizontal the horizontal alignment to use
                             * @param vertical the vertical alignment to use
                             * @return self for chaining.
                             * @see #align(String, int, String, int)
                             * @since 1.8.4
                             */
                            align(horizontal: string, vertical: string): B;
                            
                            /**
                             * 
                             * @param horizontal the horizontal alignment to use
                             * @param horizontalOffset the horizontal offset to use
                             * @param vertical the vertical alignment to use
                             * @param verticalOffset the vertical offset to use
                             * @return self for chaining.
                             * @see #alignHorizontally(String, int)
                             * @see #alignVertically(String, int)
                             * @since 1.8.4
                             */
                            align(horizontal: string, horizontalOffset: number, vertical: string, verticalOffset: number): B;
                            
                            /**
                             * 
                             * @param other the element to align to
                             * @param horizontal the horizontal alignment to use
                             * @param vertical the vertical alignment to use
                             * @return self for chaining.
                             * @see #align(Alignable, String, int, String, int)
                             * @since 1.8.4
                             */
                            align(other: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Alignable<any>, horizontal: string, vertical: string): B;
                            
                            /**
                             * 
                             * @param other the element to align to
                             * @param horizontal the horizontal alignment to use
                             * @param horizontalOffset the horizontal offset to use
                             * @param vertical the vertical alignment to use
                             * @param verticalOffset the vertical offset to use
                             * @return self for chaining.
                             * @see #alignHorizontally(Alignable, String, int)
                             * @see #alignVertically(Alignable, String, int)
                             * @since 1.8.4
                             */
                            align(other: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Alignable<any>, horizontal: string, horizontalOffset: number, vertical: string, verticalOffset: number): B;
                            
                            /**
                             * 
                             * @param x the new x position
                             * @param y the new y position
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            moveTo(x: number, y: number): B;
                            
                            /**
                             * 
                             * @param x the new x position
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            moveToX(x: number): B;
                            
                            /**
                             * 
                             * @param y the new y position
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            moveToY(y: number): B;
                            
                            /**
                             * 
                             * @return the scaled width of the element.
                             * @since 1.8.4
                             */
                            getScaledWidth(): number;
                            
                            /**
                             * 
                             * @return the width of the parent element.
                             * @since 1.8.4
                             */
                            getParentWidth(): number;
                            
                            /**
                             * 
                             * @return the scaled height of the element.
                             * @since 1.8.4
                             */
                            getScaledHeight(): number;
                            
                            /**
                             * 
                             * @return the height of the parent element.
                             * @since 1.8.4
                             */
                            getParentHeight(): number;
                            
                            /**
                             * 
                             * @return the position of the scaled element's left side.
                             * @since 1.8.4
                             */
                            getScaledLeft(): number;
                            
                            /**
                             * 
                             * @return the position of the scaled element's top side.
                             * @since 1.8.4
                             */
                            getScaledTop(): number;
                            
                            /**
                             * 
                             * @return the position of the scaled element's right side.
                             * @since 1.8.4
                             */
                            getScaledRight(): number;
                            
                            /**
                             * 
                             * @return the position of the scaled element's bottom side.
                             * @since 1.8.4
                             */
                            getScaledBottom(): number;
                            
                        }
                        namespace RenderCommon$Alignable {
                            interface static {
                                
                                
                                
                                /**
                                 * Parse the string containing a percentage of the form `x%` and return its value.
                                 * @param string the string to parse
                                 * @return the percentage or {@code -1} if the string is not a valid percentage.
                                 * @since 1.8.4
                                 */
                                parsePercentage(string: string): number;
                                
                            }
                        }
                        interface RenderCommon$Rect$Builder extends _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$RenderElementBuilder<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect>, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Alignable<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect$Builder> {
                            
                            
                            /**
                             * 
                             * @param x1 the first x position of the rectangle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            x1(x1: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect$Builder;
                            
                            /**
                             * 
                             * @return the first x position of the rectangle.
                             * @since 1.8.4
                             */
                            getX1(): number;
                            
                            /**
                             * 
                             * @param y1 the first y position of the rectangle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            y1(y1: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect$Builder;
                            
                            /**
                             * 
                             * @return the first y position of the rectangle.
                             * @since 1.8.4
                             */
                            getY1(): number;
                            
                            /**
                             * 
                             * @param x1 the first x position of the rectangle
                             * @param y1 the first y position of the rectangle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos1(x1: number, y1: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect$Builder;
                            
                            /**
                             * 
                             * @param x2 the second x position of the rectangle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            x2(x2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect$Builder;
                            
                            /**
                             * 
                             * @return the second x position of the rectangle.
                             * @since 1.8.4
                             */
                            getX2(): number;
                            
                            /**
                             * 
                             * @param y2 the second y position of the rectangle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            y2(y2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect$Builder;
                            
                            /**
                             * 
                             * @return the second y position of the rectangle.
                             * @since 1.8.4
                             */
                            getY2(): number;
                            
                            /**
                             * 
                             * @param x2 the second x position of the rectangle
                             * @param y2 the second y position of the rectangle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos2(x2: number, y2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect$Builder;
                            
                            /**
                             * 
                             * @param x1 the first x position of the rectangle
                             * @param y1 the first y position of the rectangle
                             * @param x2 the second x position of the rectangle
                             * @param y2 the second y position of the rectangle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos(x1: number, y1: number, x2: number, y2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect$Builder;
                            
                            /**
                             * The width will just set the x2 position to `x1 + width`.
                             * @param width the width of the rectangle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            width(width: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect$Builder;
                            
                            /**
                             * 
                             * @return the width of the rectangle.
                             * @since 1.8.4
                             */
                            getWidth(): number;
                            
                            /**
                             * The width will just set the y2 position to `y1 + height`.
                             * @param height the height of the rectangle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            height(height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect$Builder;
                            
                            /**
                             * 
                             * @return the height of the rectangle.
                             * @since 1.8.4
                             */
                            getHeight(): number;
                            
                            /**
                             * 
                             * @param width the width of the rectangle
                             * @param height the height of the rectangle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            size(width: number, height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect$Builder;
                            
                            /**
                             * 
                             * @param color the color of the rectangle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            color(color: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect$Builder;
                            
                            /**
                             * 
                             * @param r the red component of the color
                             * @param g the green component of the color
                             * @param b the blue component of the color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            color(r: number, g: number, b: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect$Builder;
                            
                            /**
                             * 
                             * @param r the red component of the color
                             * @param g the green component of the color
                             * @param b the blue component of the color
                             * @param a the alpha value of the color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            color(r: number, g: number, b: number, a: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect$Builder;
                            
                            /**
                             * 
                             * @param color the color of the rectangle
                             * @param alpha the alpha value of the color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            color(color: number, alpha: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect$Builder;
                            
                            /**
                             * 
                             * @return the color of the rectangle.
                             * @since 1.8.4
                             */
                            getColor(): number;
                            
                            /**
                             * 
                             * @param alpha the alpha value of the color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            alpha(alpha: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect$Builder;
                            
                            /**
                             * 
                             * @return the alpha value of the color.
                             * @since 1.8.4
                             */
                            getAlpha(): number;
                            
                            /**
                             * 
                             * @param rotation the rotation (clockwise) of the rectangle in degrees
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            rotation(rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect$Builder;
                            
                            /**
                             * 
                             * @return the rotation (clockwise) of the rectangle in degrees.
                             * @since 1.8.4
                             */
                            getRotation(): number;
                            
                            /**
                             * 
                             * @param rotateCenter whether this rectangle should be rotated around its center
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            rotateCenter(rotateCenter: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect$Builder;
                            
                            /**
                             * 
                             * @return {@code true} if this rectangle should be rotated around its center,
                             *          {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isRotatingCenter(): boolean;
                            
                            /**
                             * 
                             * @param zIndex the z-index of the rectangle
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            zIndex(zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect$Builder;
                            
                            /**
                             * 
                             * @return the z-index of the rectangle.
                             * @since 1.8.4
                             */
                            getZIndex(): number;
                            createElement(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect;
                            getScaledWidth(): number;
                            getParentWidth(): number;
                            getScaledHeight(): number;
                            getParentHeight(): number;
                            getScaledLeft(): number;
                            getScaledTop(): number;
                            moveTo(x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect$Builder;
                            
                        }
                        namespace RenderCommon$Rect$Builder {
                            interface static {
                                new (draw2D: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IDraw2D<any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Rect$Builder;
                                
                                
                                
                            }
                        }
                        interface RenderCommon$Line$Builder extends _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$RenderElementBuilder<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line>, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Alignable<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line$Builder> {
                            
                            
                            /**
                             * 
                             * @param x1 the x position of the first point
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            x1(x1: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line$Builder;
                            
                            /**
                             * 
                             * @return the x position of the first point.
                             * @since 1.8.4
                             */
                            getX1(): number;
                            
                            /**
                             * 
                             * @param y1 the y position of the first point
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            y1(y1: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line$Builder;
                            
                            /**
                             * 
                             * @return the y position of the first point.
                             * @since 1.8.4
                             */
                            getY1(): number;
                            
                            /**
                             * 
                             * @param x1 the x position of the first point
                             * @param y1 the y position of the first point
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos1(x1: number, y1: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line$Builder;
                            
                            /**
                             * 
                             * @param x2 the x position of the second point
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            x2(x2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line$Builder;
                            
                            /**
                             * 
                             * @return the x position of the second point.
                             * @since 1.8.4
                             */
                            getX2(): number;
                            
                            /**
                             * 
                             * @param y2 the y position of the second point
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            y2(y2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line$Builder;
                            
                            /**
                             * 
                             * @return the y position of the second point.
                             * @since 1.8.4
                             */
                            getY2(): number;
                            
                            /**
                             * 
                             * @param x2 the x position of the second point
                             * @param y2 the y position of the second point
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos2(x2: number, y2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line$Builder;
                            
                            /**
                             * 
                             * @param x1 the x position of the first point
                             * @param y1 the y position of the first point
                             * @param x2 the x position of the second point
                             * @param y2 the y position of the second point
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos(x1: number, y1: number, x2: number, y2: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line$Builder;
                            
                            /**
                             * 
                             * @param rotation the rotation (clockwise) of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            rotation(rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line$Builder;
                            
                            /**
                             * 
                             * @return the rotation (clockwise) of the line.
                             * @since 1.8.4
                             */
                            getRotation(): number;
                            
                            /**
                             * 
                             * @param rotateCenter whether this line should be rotated around its center
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            rotateCenter(rotateCenter: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line$Builder;
                            
                            /**
                             * 
                             * @return {@code true} if this line should be rotated around its center, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            isRotatingCenter(): boolean;
                            
                            /**
                             * 
                             * @param width the width of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            width(width: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line$Builder;
                            
                            /**
                             * 
                             * @return the width of the line.
                             * @since 1.8.4
                             */
                            getWidth(): number;
                            
                            /**
                             * 
                             * @param color the color of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            color(color: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line$Builder;
                            
                            /**
                             * 
                             * @param color the color of the line
                             * @param alpha the alpha component of the color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            color(color: number, alpha: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line$Builder;
                            
                            /**
                             * 
                             * @param r the red component of the color
                             * @param g the green component of the color
                             * @param b the blue component of the color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            color(r: number, g: number, b: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line$Builder;
                            
                            /**
                             * 
                             * @param r the red component of the color
                             * @param g the green component of the color
                             * @param b the blue component of the color
                             * @param a the alpha value of the color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            color(r: number, g: number, b: number, a: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line$Builder;
                            
                            /**
                             * 
                             * @return the color of the line.
                             * @since 1.8.4
                             */
                            getColor(): number;
                            
                            /**
                             * 
                             * @param alpha the alpha value of the color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            alpha(alpha: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line$Builder;
                            
                            /**
                             * 
                             * @return the alpha value of the color.
                             * @since 1.8.4
                             */
                            getAlpha(): number;
                            
                            /**
                             * 
                             * @param zIndex the z-index of the line
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            zIndex(zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line$Builder;
                            
                            /**
                             * 
                             * @return the z-index of the line.
                             * @since 1.8.4
                             */
                            getZIndex(): number;
                            moveTo(x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line$Builder;
                            getScaledWidth(): number;
                            getParentWidth(): number;
                            getScaledHeight(): number;
                            getParentHeight(): number;
                            getScaledLeft(): number;
                            getScaledTop(): number;
                            
                        }
                        namespace RenderCommon$Line$Builder {
                            interface static {
                                new (draw2D: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IDraw2D<any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Line$Builder;
                                
                                
                                
                            }
                        }
                        interface RenderCommon$Text$Builder extends _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$RenderElementBuilder<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text>, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Alignable<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text$Builder> {
                            
                            
                            /**
                             * 
                             * @param text the content of the text element
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            text(text: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text$Builder;
                            
                            /**
                             * 
                             * @param text the content of the text element
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            text(text: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.TextBuilder): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text$Builder;
                            
                            /**
                             * 
                             * @param text the content of the text element
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            text(text: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text$Builder;
                            
                            /**
                             * 
                             * @return the content of the text element.
                             * @since 1.8.4
                             */
                            getText(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper;
                            
                            /**
                             * 
                             * @param x the x position of the text element
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            x(x: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text$Builder;
                            
                            /**
                             * 
                             * @return the x position of the text element.
                             * @since 1.8.4
                             */
                            getX(): number;
                            
                            /**
                             * 
                             * @param y the y position of the text element
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            y(y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text$Builder;
                            
                            /**
                             * 
                             * @return the y position of the text element.
                             * @since 1.8.4
                             */
                            getY(): number;
                            
                            /**
                             * 
                             * @param x the x position of the text element
                             * @param y the y position of the text element
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos(x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text$Builder;
                            
                            /**
                             * 
                             * @return the width of the string.
                             * @since 1.8.4
                             */
                            getWidth(): number;
                            
                            /**
                             * 
                             * @return the height of the string.
                             * @since 1.8.4
                             */
                            getHeight(): number;
                            
                            /**
                             * 
                             * @param color the color of the text element
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            color(color: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text$Builder;
                            
                            /**
                             * 
                             * @param r the red component of the color
                             * @param g the green component of the color
                             * @param b the blue component of the color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            color(r: number, g: number, b: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text$Builder;
                            
                            /**
                             * 
                             * @param r the red component of the color
                             * @param g the green component of the color
                             * @param b the blue component of the color
                             * @param a the alpha component of the color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            color(r: number, g: number, b: number, a: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text$Builder;
                            
                            /**
                             * 
                             * @return the color of the text element.
                             * @since 1.8.4
                             */
                            getColor(): number;
                            
                            /**
                             * 
                             * @param scale the scale of the text element
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            scale(scale: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text$Builder;
                            
                            /**
                             * 
                             * @return the scale of the text element.
                             * @since 1.8.4
                             */
                            getScale(): number;
                            
                            /**
                             * 
                             * @param rotation the rotation (clockwise) of the text element in degrees
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            rotation(rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text$Builder;
                            
                            /**
                             * 
                             * @return the rotation (clockwise) of the text element in degrees.
                             * @since 1.8.4
                             */
                            getRotation(): number;
                            
                            /**
                             * 
                             * @param rotateCenter whether this text should be rotated around its center
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            rotateCenter(rotateCenter: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text$Builder;
                            
                            /**
                             * 
                             * @return {@code true} if this text should be rotated around its center, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            isRotatingCenter(): boolean;
                            
                            /**
                             * 
                             * @param shadow whether the text should have a shadow or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            shadow(shadow: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text$Builder;
                            
                            /**
                             * 
                             * @return {@code true} if the text element has a shadow, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            hasShadow(): boolean;
                            
                            /**
                             * 
                             * @param zIndex the z-index of the text element
                             * @return self for chaining.
                             */
                            zIndex(zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text$Builder;
                            
                            /**
                             * 
                             * @return the z-index of the text element.
                             * @since 1.8.4
                             */
                            getZIndex(): number;
                            createElement(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text;
                            getScaledWidth(): number;
                            getParentWidth(): number;
                            getScaledHeight(): number;
                            getParentHeight(): number;
                            getScaledLeft(): number;
                            getScaledTop(): number;
                            moveTo(x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text$Builder;
                            
                        }
                        namespace RenderCommon$Text$Builder {
                            interface static {
                                new (draw2D: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IDraw2D<any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Text$Builder;
                                
                                
                                
                            }
                        }
                        interface RenderCommon$Draw2DElement$Builder extends _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$RenderElementBuilder<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement>, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Alignable<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement$Builder> {
                            
                            
                            /**
                             * 
                             * @param x the x position of the draw2D
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            x(x: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement$Builder;
                            
                            /**
                             * 
                             * @return the x position of the draw2D.
                             * @since 1.8.4
                             */
                            getX(): number;
                            
                            /**
                             * 
                             * @param y the y position of the draw2D
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            y(y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement$Builder;
                            
                            /**
                             * 
                             * @return the y position of the draw2D.
                             * @since 1.8.4
                             */
                            getY(): number;
                            
                            /**
                             * 
                             * @param x the x position of the draw2D
                             * @param y the y position of the draw2D
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos(x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement$Builder;
                            
                            /**
                             * 
                             * @param width the width of the draw2D
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            width(width: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement$Builder;
                            
                            /**
                             * 
                             * @return the width of the draw2D.
                             * @since 1.8.4
                             */
                            getWidth(): number;
                            
                            /**
                             * 
                             * @param height the height of the draw2D
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            height(height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement$Builder;
                            
                            /**
                             * 
                             * @return the height of the draw2D.
                             * @since 1.8.4
                             */
                            getHeight(): number;
                            
                            /**
                             * 
                             * @param width the width of the draw2D
                             * @param height the height of the draw2D
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            size(width: number, height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement$Builder;
                            
                            /**
                             * 
                             * @param scale the scale of the draw2D
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            scale(scale: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement$Builder;
                            
                            /**
                             * 
                             * @return the scale of the draw2D.
                             * @since 1.8.4
                             */
                            getScale(): number;
                            
                            /**
                             * 
                             * @param rotation the rotation (clockwise) of the draw2D in degrees
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            rotation(rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement$Builder;
                            
                            /**
                             * 
                             * @return the rotation (clockwise) of the draw2D in degrees.
                             * @since 1.8.4
                             */
                            getRotation(): number;
                            
                            /**
                             * 
                             * @param rotateCenter whether this draw2D should be rotated around its center
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            rotateCenter(rotateCenter: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement$Builder;
                            
                            /**
                             * 
                             * @return {@code true} if this draw2D should be rotated around its center,
                             *          {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isRotatingCenter(): boolean;
                            
                            /**
                             * 
                             * @return the z-index of the draw2D.
                             * @since 1.8.4
                             */
                            zIndex(zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement$Builder;
                            
                            /**
                             * 
                             * @return the z-index of the draw2D.
                             * @since 1.8.4
                             */
                            getZIndex(): number;
                            getScaledWidth(): number;
                            getParentWidth(): number;
                            getScaledHeight(): number;
                            getParentHeight(): number;
                            getScaledLeft(): number;
                            getScaledTop(): number;
                            moveTo(x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement$Builder;
                            
                        }
                        namespace RenderCommon$Draw2DElement$Builder {
                            interface static {
                                new (parent: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IDraw2D<any>, draw2D: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Draw2DElement$Builder;
                                
                                
                                
                            }
                        }
                        interface RenderCommon$Image$Builder extends _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$RenderElementBuilder<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image>, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Alignable<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder> {
                            
                            
                            /**
                             * Will automatically set all attributes to the default values of the custom image.
                             *  Values set before the call of this method will be overwritten.
                             * @param customImage the custom image to use
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            fromCustomImage(customImage: _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @param identifier the identifier of the image to use
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            identifier(identifier: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @return the identifier of the used image or {@code null} if no image is used.
                             * @since 1.8.4
                             */
                            getIdentifier(): string;
                            
                            /**
                             * 
                             * @param x the x position of the image
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            x(x: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @return the x position of the image.
                             * @since 1.8.4
                             */
                            getX(): number;
                            
                            /**
                             * 
                             * @param y the y position of the image
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            y(y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @return the y position of the image.
                             * @since 1.8.4
                             */
                            getY(): number;
                            
                            /**
                             * 
                             * @param x the x position of the image
                             * @param y the y position of the image
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos(x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @param width the width of the image
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            width(width: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @return the width of the image.
                             * @since 1.8.4
                             */
                            getWidth(): number;
                            
                            /**
                             * 
                             * @param height the height of the image
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            height(height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @return the height of the image.
                             * @since 1.8.4
                             */
                            getHeight(): number;
                            
                            /**
                             * 
                             * @param width the width of the image
                             * @param height the height of the image
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            size(width: number, height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @param imageX the x position in the image texture to start drawing from
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            imageX(imageX: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @return the x position in the image texture to start drawing from.
                             * @since 1.8.4
                             */
                            getImageX(): number;
                            
                            /**
                             * 
                             * @param imageY the y position in the image texture to start drawing from
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            imageY(imageY: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @return the y position in the image texture to start drawing from.
                             * @since 1.8.4
                             */
                            getImageY(): number;
                            
                            /**
                             * 
                             * @param imageX the x position in the image texture to start drawing from
                             * @param imageY the y position in the image texture to start drawing from
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            imagePos(imageX: number, imageY: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @param regionWidth the width of the region to draw
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            regionWidth(regionWidth: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @return the width of the region to draw.
                             * @since 1.8.4
                             */
                            getRegionWidth(): number;
                            
                            /**
                             * 
                             * @param regionHeight the height of the region to draw
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            regionHeight(regionHeight: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @return the height of the region to draw.
                             * @since 1.8.4
                             */
                            getRegionHeight(): number;
                            
                            /**
                             * 
                             * @param regionWidth the width of the region to draw
                             * @param regionHeight the height of the region to draw
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            regionSize(regionWidth: number, regionHeight: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @param x the x position in the image texture to start drawing from
                             * @param y the y position in the image texture to start drawing from
                             * @param width the width of the region to draw
                             * @param height the height of the region to draw
                             * @return 
                             * @since 1.8.4
                             */
                            regions(x: number, y: number, width: number, height: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @param x the x position in the image texture to start drawing from
                             * @param y the y position in the image texture to start drawing from
                             * @param width the width of the region to draw
                             * @param height the height of the region to draw
                             * @param textureWidth the width of the used texture
                             * @param textureHeight the height of the used texture
                             * @return 
                             * @since 1.8.4
                             */
                            regions(x: number, y: number, width: number, height: number, textureWidth: number, textureHeight: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @param textureWidth the width of the used texture
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            textureWidth(textureWidth: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @return the width of the used texture.
                             * @since 1.8.4
                             */
                            getTextureWidth(): number;
                            
                            /**
                             * 
                             * @param textureHeight the height of the used texture
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            textureHeight(textureHeight: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @return the height of the used texture.
                             * @since 1.8.4
                             */
                            getTextureHeight(): number;
                            
                            /**
                             * 
                             * @param textureWidth the width of the used texture
                             * @param textureHeight the height of the used texture
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            textureSize(textureWidth: number, textureHeight: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @param color the color of the image
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            color(color: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @param r the red component of the color
                             * @param g the green component of the color
                             * @param b the blue component of the color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            color(r: number, g: number, b: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @param r the red component of the color
                             * @param g the green component of the color
                             * @param b the blue component of the color
                             * @param a the alpha component of the color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            color(r: number, g: number, b: number, a: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @param color the color of the image
                             * @param alpha the alpha value of the color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            color(color: number, alpha: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @return the color of the image.
                             * @since 1.8.4
                             */
                            getColor(): number;
                            
                            /**
                             * 
                             * @param alpha the alpha value of the color
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            alpha(alpha: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @return the alpha value of the color.
                             * @since 1.8.4
                             */
                            getAlpha(): number;
                            
                            /**
                             * 
                             * @param rotation the rotation (clockwise) of the image in degrees
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            rotation(rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @return the rotation (clockwise) of the image in degrees.
                             * @since 1.8.4
                             */
                            getRotation(): number;
                            
                            /**
                             * 
                             * @param rotateCenter whether the image should be rotated around its center
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            rotateCenter(rotateCenter: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @return {@code true} if this image should be rotated around its center, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            isRotatingCenter(): boolean;
                            
                            /**
                             * 
                             * @param zIndex the z-index of the image
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            zIndex(zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                            /**
                             * 
                             * @return the z-index of the image.
                             * @since 1.8.4
                             */
                            getZIndex(): number;
                            createElement(): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image;
                            getScaledWidth(): number;
                            getParentWidth(): number;
                            getScaledHeight(): number;
                            getParentHeight(): number;
                            getScaledLeft(): number;
                            getScaledTop(): number;
                            moveTo(x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                            
                        }
                        namespace RenderCommon$Image$Builder {
                            interface static {
                                new (draw2D: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IDraw2D<any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Image$Builder;
                                
                                
                                
                            }
                        }
                        interface RenderCommon$Item$Builder extends _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$RenderElementBuilder<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item>, _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Alignable<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item$Builder> {
                            
                            
                            /**
                             * 
                             * @param x the x position of the item
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            x(x: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item$Builder;
                            
                            /**
                             * 
                             * @return the x position of the item.
                             * @since 1.8.4
                             */
                            getX(): number;
                            
                            /**
                             * 
                             * @param y the y position of the item
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            y(y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item$Builder;
                            
                            /**
                             * 
                             * @return the y position of the item.
                             * @since 1.8.4
                             */
                            getY(): number;
                            
                            /**
                             * 
                             * @param x the x position of the item
                             * @param y the y position of the item
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            pos(x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item$Builder;
                            
                            /**
                             * 
                             * @param item the item to draw
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            item(item: _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item$Builder;
                            
                            /**
                             * 
                             * @param id the id of the item to draw
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            item(id: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item$Builder;
                            
                            /**
                             * 
                             * @param id the id of the item to draw
                             * @param count the stack size
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            item(id: string, count: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item$Builder;
                            
                            /**
                             * 
                             * @return the item to be drawn.
                             * @since 1.8.4
                             */
                            getItem(): _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper;
                            
                            /**
                             * This also sets the overlay to be shown.
                             * @param overlayText the overlay text
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            overlayText(overlayText: string): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item$Builder;
                            
                            /**
                             * 
                             * @return the overlay text.
                             * @since 1.8.4
                             */
                            getOverlayText(): string;
                            
                            /**
                             * 
                             * @param visible whether the overlay should be visible or not
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            overlayVisible(visible: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item$Builder;
                            
                            /**
                             * 
                             * @return {@code true} if the overlay should be visible, {@code false} otherwise.
                             * @since 1.8.4
                             */
                            isOverlayVisible(): boolean;
                            
                            /**
                             * 
                             * @param scale the scale of the item
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            scale(scale: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item$Builder;
                            
                            /**
                             * 
                             * @return the scale of the item.
                             * @since 1.8.4
                             */
                            getScale(): number;
                            
                            /**
                             * 
                             * @param rotation the rotation (clockwise) of the item in degrees
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            rotation(rotation: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item$Builder;
                            
                            /**
                             * 
                             * @return the rotation (clockwise) of the item in degrees.
                             * @since 1.8.4
                             */
                            getRotation(): number;
                            
                            /**
                             * 
                             * @param rotateCenter whether the item should be rotated around its center
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            rotateCenter(rotateCenter: boolean): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item$Builder;
                            
                            /**
                             * 
                             * @return {@code true} if this item should be rotated around its center, {@code false}
                             *          otherwise.
                             * @since 1.8.4
                             */
                            isRotatingCenter(): boolean;
                            
                            /**
                             * 
                             * @param zIndex the z-index of the item
                             * @return self for chaining.
                             * @since 1.8.4
                             */
                            zIndex(zIndex: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item$Builder;
                            
                            /**
                             * 
                             * @return the z-index of the item.
                             * @since 1.8.4
                             */
                            getZIndex(): number;
                            getScaledWidth(): number;
                            getParentWidth(): number;
                            getScaledHeight(): number;
                            getParentHeight(): number;
                            getScaledLeft(): number;
                            getScaledTop(): number;
                            moveTo(x: number, y: number): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item$Builder;
                            
                        }
                        namespace RenderCommon$Item$Builder {
                            interface static {
                                new (draw2D: _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IDraw2D<any>): _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon$Item$Builder;
                                
                                
                                
                            }
                        }
                        interface RenderCommon$RenderElementBuilder<T> extends any {
                            
                            
                            /**
                             * 
                             * @return the newly created element.
                             * @since 1.8.4
                             */
                            build(): T;
                            
                            /**
                             * Builds and adds the element to the draw2D the builder was created from.
                             * @return the newly created element.
                             * @since 1.8.4
                             */
                            buildAndAdd(): T;
                            
                        }
                        namespace RenderCommon$RenderElementBuilder {
                            interface static {
                                
                                
                                
                            }
                        }
                    }
                }
            
                namespace gui {
                
                
                    namespace editor {
                    
                        interface SelectCursor extends any {
                            onChange: _javatypes.java.util._function.Consumer<_javatypes.xyz.wagyourtail.jsmacros.client.gui.editor.SelectCursor>;
                            defaultStyle: /* minecraft classes, as any, because obfuscation: */ any;
                            startLine: number;
                            endLine: number;
                            startIndex: number;
                            endIndex: number;
                            startLineIndex: number;
                            endLineIndex: number;
                            dragStartIndex: number;
                            arrowLineIndex: number;
                            arrowEnd: boolean;
                            startCol: number;
                            endCol: number;
                            
                            updateStartIndex(startIndex: number, current: string): void;
                            updateEndIndex(endIndex: number, current: string): void;
                            
                        }
                        namespace SelectCursor {
                            interface static {
                                new (defaultStyle: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.gui.editor.SelectCursor;
                                
                                
                                
                            }
                        }
                        interface History extends any {
                            onChange: _javatypes.java.util._function.Consumer<string>;
                            current: string;
                            
                            
                            /**
                             * 
                             * @param position
                             * @param content
                             * @return is new step.
                             */
                            addChar(position: number, content: number): boolean;
                            add(position: number, content: string): boolean;
                            
                            /**
                             * 
                             * @param position
                             * @return is new step.
                             */
                            deletePos(position: number, length: number): boolean;
                            
                            /**
                             * 
                             * @param position
                             * @return is new step
                             */
                            bkspacePos(position: number, length: number): boolean;
                            shiftLine(startLine: number, lines: number, shiftDown: boolean): boolean;
                            replace(position: number, length: number, content: string): void;
                            tabLines(startLine: number, lineCount: number, reverse: boolean): void;
                            tabLinesKeepCursor(startLine: number, startLineIndex: number, endLineIndex: number, lineCount: number, reverse: boolean): void;
                            
                            /**
                             * 
                             * @return position of step. -1 if nothing to undo.
                             */
                            undo(): number;
                            
                            /**
                             * 
                             * @return position of step. -1 if nothing to redo.
                             */
                            redo(): number;
                            
                        }
                        namespace History {
                            interface static {
                                new (start: string, cursor: _javatypes.xyz.wagyourtail.jsmacros.client.gui.editor.SelectCursor): _javatypes.xyz.wagyourtail.jsmacros.client.gui.editor.History;
                                
                                
                                
                            }
                        }
                    
                        namespace highlighting {
                        
                            interface AutoCompleteSuggestion extends any {
                                readonly startIndex: number;
                                readonly suggestion: string;
                                readonly displayText: /* minecraft classes, as any, because obfuscation: */ any;
                                
                                
                            }
                            namespace AutoCompleteSuggestion {
                                interface static {
                                    new (startIndex: number, suggestion: string): _javatypes.xyz.wagyourtail.jsmacros.client.gui.editor.highlighting.AutoCompleteSuggestion;
                                    new (startIndex: number, suggestion: string, displayText: /* minecraft classes, as any, because obfuscation: */ any): _javatypes.xyz.wagyourtail.jsmacros.client.gui.editor.highlighting.AutoCompleteSuggestion;
                                    
                                    
                                    
                                }
                            }
                            interface AbstractRenderCodeCompiler extends any {
                                
                                recompileRenderedText(text: string): void;
                                getRightClickOptions(index: number): _javatypes.java.util.Map<string, _javatypes.java.lang.Runnable>;
                                getRenderedText(): /* minecraft classes, as any, because obfuscation: */ any[];
                                getSuggestions(): _javatypes.java.util.List<_javatypes.xyz.wagyourtail.jsmacros.client.gui.editor.highlighting.AutoCompleteSuggestion>;
                                
                            }
                            namespace AbstractRenderCodeCompiler {
                                interface static {
                                    new (language: string, screen: _javatypes.xyz.wagyourtail.jsmacros.client.gui.screens.EditorScreen): _javatypes.xyz.wagyourtail.jsmacros.client.gui.editor.highlighting.AbstractRenderCodeCompiler;
                                    
                                    
                                    
                                }
                            }
                        }
                    }
                
                    namespace screens {
                    
                        interface EditorScreen extends _javatypes.xyz.wagyourtail.wagyourgui.BaseScreen {
                            readonly history: _javatypes.xyz.wagyourtail.jsmacros.client.gui.editor.History;
                            readonly cursor: _javatypes.xyz.wagyourtail.jsmacros.client.gui.editor.SelectCursor;
                            blockFirst: boolean;
                            textRenderTime: number;
                            prevChar: number;
                            language: string;
                            codeCompiler: _javatypes.xyz.wagyourtail.jsmacros.client.gui.editor.highlighting.AbstractRenderCodeCompiler;
                            
                            getDefaultLanguage(): string;
                            setScroll(pages: number): void;
                            setLanguage(language: string): void;
                            init(): void;
                            copyToClipboard(): void;
                            pasteFromClipboard(): void;
                            cutToClipboard(): void;
                            keyPressed(keyCode: number, scanCode: number, modifiers: number): boolean;
                            scrollToCursor(): void;
                            save(): void;
                            needSave(): boolean;
                            mouseScrolled(mouseX: number, mouseY: number, amount: number): boolean;
                            render(matrices: /* minecraft classes, as any, because obfuscation: */ any, mouseX: number, mouseY: number, delta: number): void;
                            openParent(): void;
                            mouseClicked(mouseX: number, mouseY: number, btn: number): boolean;
                            selectWordAtCursor(): void;
                            mouseDragged(mouseX: number, mouseY: number, button: number, deltaX: number, deltaY: number): boolean;
                            updateSettings(): void;
                            charTyped(chr: number, keyCode: number): boolean;
                            
                        }
                        namespace EditorScreen {
                            interface static {
                                new (parent: /* minecraft classes, as any, because obfuscation: */ any, file: _javatypes.java.io.File): _javatypes.xyz.wagyourtail.jsmacros.client.gui.screens.EditorScreen;
                                
                                readonly langs: _javatypes.java.util.List<string>;
                                defaultStyle: /* minecraft classes, as any, because obfuscation: */ any;
                                
                                openAndScrollToIndex(file: _javatypes.java.io.File, startIndex: number, endIndex: number): void;
                                openAndScrollToLine(file: _javatypes.java.io.File, line: number, col: number, endCol: number): void;
                                
                            }
                        }
                    }
                }
            }
        }
    
        namespace wagyourgui {
        
            interface BaseScreen extends /* supressed minecraft class */ _javatypes.java.lang.Object, _javatypes.xyz.wagyourtail.wagyourgui.overlays.IOverlayParent {
                
                setParent(parent: /* minecraft classes, as any, because obfuscation: */ any): void;
                reload(): void;
                removed(): void;
                openOverlay(overlay: _javatypes.xyz.wagyourtail.wagyourgui.overlays.OverlayContainer): void;
                getFirstOverlayParent(): _javatypes.xyz.wagyourtail.wagyourgui.overlays.IOverlayParent;
                getChildOverlay(): _javatypes.xyz.wagyourtail.wagyourgui.overlays.OverlayContainer;
                openOverlay(overlay: _javatypes.xyz.wagyourtail.wagyourgui.overlays.OverlayContainer, disableButtons: boolean): void;
                closeOverlay(overlay: _javatypes.xyz.wagyourtail.wagyourgui.overlays.OverlayContainer): void;
                remove(btn: /* minecraft classes, as any, because obfuscation: */ any): void;
                addDrawableChild<T>(drawableElement: T): T;
                setFocused(focused: /* minecraft classes, as any, because obfuscation: */ any): void;
                keyPressed(keyCode: number, scanCode: number, modifiers: number): boolean;
                mouseScrolled(mouseX: number, mouseY: number, amount: number): boolean;
                mouseClicked(mouseX: number, mouseY: number, button: number): boolean;
                render(matrices: /* minecraft classes, as any, because obfuscation: */ any, mouseX: number, mouseY: number, delta: number): void;
                shouldCloseOnEsc(): boolean;
                updateSettings(): void;
                close(): void;
                openParent(): void;
                
            }
            namespace BaseScreen {
                interface static {
                    
                    
                    trimmed(textRenderer: /* minecraft classes, as any, because obfuscation: */ any, str: /* minecraft classes, as any, because obfuscation: */ any, width: number): /* minecraft classes, as any, because obfuscation: */ any;
                    
                }
            }
        
            namespace elements {
            
                interface CheckBox extends /* supressed minecraft class */ _javatypes.java.lang.Object {
                    
                    onPress(): void;
                    
                }
                namespace CheckBox {
                    interface static {
                        new (x: number, y: number, width: number, height: number, text: /* minecraft classes, as any, because obfuscation: */ any, checked: boolean, action: _javatypes.java.util._function.Consumer<_javatypes.xyz.wagyourtail.wagyourgui.elements.CheckBox>): _javatypes.xyz.wagyourtail.wagyourgui.elements.CheckBox;
                        new (x: number, y: number, width: number, height: number, text: /* minecraft classes, as any, because obfuscation: */ any, checked: boolean, showMessage: boolean, action: _javatypes.java.util._function.Consumer<_javatypes.xyz.wagyourtail.wagyourgui.elements.CheckBox>): _javatypes.xyz.wagyourtail.wagyourgui.elements.CheckBox;
                        
                        
                        
                    }
                }
                interface Slider extends /* supressed minecraft class */ _javatypes.java.lang.Object {
                    
                    keyPressed(keyCode: number, scanCode: number, modifiers: number): boolean;
                    roundValue(value: number): number;
                    getValue(): number;
                    setValue(mouseX: number): void;
                    getSteps(): number;
                    setSteps(steps: number): void;
                    onClick(mouseX: number, mouseY: number): void;
                    onRelease(mouseX: number, mouseY: number): void;
                    setMessage(message: string): void;
                    setMessage(message: /* minecraft classes, as any, because obfuscation: */ any): void;
                    
                }
                namespace Slider {
                    interface static {
                        new (x: number, y: number, width: number, height: number, text: /* minecraft classes, as any, because obfuscation: */ any, value: number, action: _javatypes.java.util._function.Consumer<_javatypes.xyz.wagyourtail.wagyourgui.elements.Slider>, steps: number): _javatypes.xyz.wagyourtail.wagyourgui.elements.Slider;
                        new (x: number, y: number, width: number, height: number, text: /* minecraft classes, as any, because obfuscation: */ any, value: number, action: _javatypes.java.util._function.Consumer<_javatypes.xyz.wagyourtail.wagyourgui.elements.Slider>): _javatypes.xyz.wagyourtail.wagyourgui.elements.Slider;
                        
                        
                        
                    }
                }
                interface Scrollbar extends /* supressed minecraft class */ _javatypes.java.lang.Object {
                    
                    setPos(x: number, y: number, width: number, height: number): _javatypes.xyz.wagyourtail.wagyourgui.elements.Scrollbar;
                    setScrollPages(scrollPages: number): void;
                    scrollToPercent(percent: number): void;
                    onClick(mouseX: number, mouseY: number): void;
                    onChange(): void;
                    mouseDragged(mouseX: number, mouseY: number, button: number, deltaX: number, deltaY: number): boolean;
                    render(matrices: /* minecraft classes, as any, because obfuscation: */ any, mouseX: number, mouseY: number, delta: number): void;
                    
                }
                namespace Scrollbar {
                    interface static {
                        new (x: number, y: number, width: number, height: number, color: number, borderColor: number, highlightColor: number, scrollPages: number, onChange: _javatypes.java.util._function.Consumer<number>): _javatypes.xyz.wagyourtail.wagyourgui.elements.Scrollbar;
                        
                        
                        
                    }
                }
            }
        
            namespace overlays {
            
                interface IOverlayParent extends _javatypes.java.lang.Interface, _javatypes.xyz.wagyourtail.wagyourgui.containers.IContainerParent {
                    
                    closeOverlay(overlay: _javatypes.xyz.wagyourtail.wagyourgui.overlays.OverlayContainer): void;
                    setFocused(focused: /* minecraft classes, as any, because obfuscation: */ any): void;
                    getChildOverlay(): _javatypes.xyz.wagyourtail.wagyourgui.overlays.OverlayContainer;
                    
                }
                namespace IOverlayParent {
                    interface static {
                        
                        
                        
                    }
                }
                interface OverlayContainer extends _javatypes.xyz.wagyourtail.wagyourgui.containers.MultiElementContainer<_javatypes.xyz.wagyourtail.wagyourgui.overlays.IOverlayParent>, _javatypes.xyz.wagyourtail.wagyourgui.overlays.IOverlayParent {
                    savedBtnStates: _javatypes.java.util.Map</* minecraft classes, as any, because obfuscation: */ any, boolean>;
                    scroll: _javatypes.xyz.wagyourtail.wagyourgui.elements.Scrollbar;
                    
                    remove(btn: /* minecraft classes, as any, because obfuscation: */ any): void;
                    openOverlay(overlay: _javatypes.xyz.wagyourtail.wagyourgui.overlays.OverlayContainer): void;
                    getFirstOverlayParent(): _javatypes.xyz.wagyourtail.wagyourgui.overlays.IOverlayParent;
                    openOverlay(overlay: _javatypes.xyz.wagyourtail.wagyourgui.overlays.OverlayContainer, disableButtons: boolean): void;
                    getChildOverlay(): _javatypes.xyz.wagyourtail.wagyourgui.overlays.OverlayContainer;
                    closeOverlay(overlay: _javatypes.xyz.wagyourtail.wagyourgui.overlays.OverlayContainer): void;
                    setFocused(focused: /* minecraft classes, as any, because obfuscation: */ any): void;
                    onClick(mouseX: number, mouseY: number, button: number): void;
                    
                    /**
                     * 
                     * @return true if should be handled by overlay
                     */
                    keyPressed(keyCode: number, scanCode: number, modifiers: number): boolean;
                    close(): void;
                    onClose(): void;
                    renderBackground(matrices: /* minecraft classes, as any, because obfuscation: */ any): void;
                    render(matrices: /* minecraft classes, as any, because obfuscation: */ any, mouseX: number, mouseY: number, delta: number): void;
                    
                }
                namespace OverlayContainer {
                    interface static {
                        new (x: number, y: number, width: number, height: number, textRenderer: /* minecraft classes, as any, because obfuscation: */ any, parent: _javatypes.xyz.wagyourtail.wagyourgui.overlays.IOverlayParent): _javatypes.xyz.wagyourtail.wagyourgui.overlays.OverlayContainer;
                        
                        
                        
                    }
                }
            }
        
            namespace containers {
            
                interface MultiElementContainer<T> extends /* supressed minecraft class */ _javatypes.java.lang.Object, _javatypes.xyz.wagyourtail.wagyourgui.containers.IContainerParent {
                    readonly parent: T;
                    x: number;
                    y: number;
                    width: number;
                    height: number;
                    
                    init(): void;
                    getVisible(): boolean;
                    setVisible(visible: boolean): void;
                    addDrawableChild<T>(drawableElement: T): T;
                    getButtons(): _javatypes.java.util.List</* minecraft classes, as any, because obfuscation: */ any>;
                    setPos(x: number, y: number, width: number, height: number): void;
                    openOverlay(overlay: _javatypes.xyz.wagyourtail.wagyourgui.overlays.OverlayContainer): void;
                    openOverlay(overlay: _javatypes.xyz.wagyourtail.wagyourgui.overlays.OverlayContainer, disableButtons: boolean): void;
                    remove(button: /* minecraft classes, as any, because obfuscation: */ any): void;
                    getFirstOverlayParent(): _javatypes.xyz.wagyourtail.wagyourgui.overlays.IOverlayParent;
                    render(matrices: /* minecraft classes, as any, because obfuscation: */ any, mouseX: number, mouseY: number, delta: number): void;
                    
                }
                namespace MultiElementContainer {
                    interface static {
                        new <T>(x: number, y: number, width: number, height: number, textRenderer: /* minecraft classes, as any, because obfuscation: */ any, parent: T): _javatypes.xyz.wagyourtail.wagyourgui.containers.MultiElementContainer<T>;
                        
                        
                        
                    }
                }
                interface IContainerParent extends _javatypes.java.lang.Interface {
                    
                    addDrawableChild<T>(drawableElement: T): T;
                    remove(button: /* minecraft classes, as any, because obfuscation: */ any): void;
                    openOverlay(overlay: _javatypes.xyz.wagyourtail.wagyourgui.overlays.OverlayContainer): void;
                    openOverlay(overlay: _javatypes.xyz.wagyourtail.wagyourgui.overlays.OverlayContainer, disableButtons: boolean): void;
                    getFirstOverlayParent(): _javatypes.xyz.wagyourtail.wagyourgui.overlays.IOverlayParent;
                    
                }
                namespace IContainerParent {
                    interface static {
                        
                        
                        
                    }
                }
            }
        }
    }

    namespace com {
    
    
        namespace mojang {
        
        
            namespace brigadier {
            
                interface ImmutableStringReader extends _javatypes.java.lang.Interface {
                    
                    getString(): string;
                    getRemainingLength(): number;
                    getTotalLength(): number;
                    getCursor(): number;
                    getRead(): string;
                    getRemaining(): string;
                    canRead(arg0: number): boolean;
                    canRead(): boolean;
                    peek(): number;
                    peek(arg0: number): number;
                    
                }
                namespace ImmutableStringReader {
                    interface static {
                        
                        
                        
                    }
                }
                interface RedirectModifier<S> extends _javatypes.java.lang.Interface {
                    
                    apply(arg0: _javatypes.com.mojang.brigadier.context.CommandContext<S>): _javatypes.java.util.Collection<S>;
                    
                }
                namespace RedirectModifier {
                    interface static {
                        
                        
                        
                    }
                }
                interface AmbiguityConsumer<S> extends _javatypes.java.lang.Interface {
                    
                    ambiguous(arg0: _javatypes.com.mojang.brigadier.tree.CommandNode<S>, arg1: _javatypes.com.mojang.brigadier.tree.CommandNode<S>, arg2: _javatypes.com.mojang.brigadier.tree.CommandNode<S>, arg3: _javatypes.java.util.Collection<string>): void;
                    
                }
                namespace AmbiguityConsumer {
                    interface static {
                        
                        
                        
                    }
                }
                interface Message extends _javatypes.java.lang.Interface {
                    
                    getString(): string;
                    
                }
                namespace Message {
                    interface static {
                        
                        
                        
                    }
                }
                interface CommandDispatcher<S> extends any {
                    
                    register(arg0: _javatypes.com.mojang.brigadier.builder.LiteralArgumentBuilder<S>): _javatypes.com.mojang.brigadier.tree.LiteralCommandNode<S>;
                    setConsumer(arg0: _javatypes.com.mojang.brigadier.ResultConsumer<S>): void;
                    execute(arg0: string, arg1: S): number;
                    execute(arg0: _javatypes.com.mojang.brigadier.StringReader, arg1: S): number;
                    execute(arg0: _javatypes.com.mojang.brigadier.ParseResults<S>): number;
                    parse(arg0: string, arg1: S): _javatypes.com.mojang.brigadier.ParseResults<S>;
                    parse(arg0: _javatypes.com.mojang.brigadier.StringReader, arg1: S): _javatypes.com.mojang.brigadier.ParseResults<S>;
                    getAllUsage(arg0: _javatypes.com.mojang.brigadier.tree.CommandNode<S>, arg1: S, arg2: boolean): string[];
                    getSmartUsage(arg0: _javatypes.com.mojang.brigadier.tree.CommandNode<S>, arg1: S): _javatypes.java.util.Map<_javatypes.com.mojang.brigadier.tree.CommandNode<S>, string>;
                    getCompletionSuggestions(arg0: _javatypes.com.mojang.brigadier.ParseResults<S>): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.com.mojang.brigadier.suggestion.Suggestions>;
                    getCompletionSuggestions(arg0: _javatypes.com.mojang.brigadier.ParseResults<S>, arg1: number): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.com.mojang.brigadier.suggestion.Suggestions>;
                    getRoot(): _javatypes.com.mojang.brigadier.tree.RootCommandNode<S>;
                    getPath(arg0: _javatypes.com.mojang.brigadier.tree.CommandNode<S>): _javatypes.java.util.Collection<string>;
                    findNode(arg0: _javatypes.java.util.Collection<string>): _javatypes.com.mojang.brigadier.tree.CommandNode<S>;
                    findAmbiguities(arg0: _javatypes.com.mojang.brigadier.AmbiguityConsumer<S>): void;
                    
                }
                namespace CommandDispatcher {
                    interface static {
                        new <S>(arg0: _javatypes.com.mojang.brigadier.tree.RootCommandNode<S>): _javatypes.com.mojang.brigadier.CommandDispatcher<S>;
                        new <S>(): _javatypes.com.mojang.brigadier.CommandDispatcher<S>;
                        
                        readonly ARGUMENT_SEPARATOR: string;
                        readonly ARGUMENT_SEPARATOR_CHAR: number;
                        
                        
                    }
                }
                interface Command<S> extends _javatypes.java.lang.Interface {
                    
                    run(arg0: _javatypes.com.mojang.brigadier.context.CommandContext<S>): number;
                    
                }
                namespace Command {
                    interface static {
                        
                        readonly SINGLE_SUCCESS: number;
                        
                        
                    }
                }
                interface StringReader extends any, _javatypes.com.mojang.brigadier.ImmutableStringReader {
                    
                    getString(): string;
                    setCursor(arg0: number): void;
                    getRemainingLength(): number;
                    getTotalLength(): number;
                    getCursor(): number;
                    getRead(): string;
                    getRemaining(): string;
                    canRead(arg0: number): boolean;
                    canRead(): boolean;
                    peek(): number;
                    peek(arg0: number): number;
                    read(): number;
                    skip(): void;
                    skipWhitespace(): void;
                    readInt(): number;
                    readLong(): number;
                    readDouble(): number;
                    readFloat(): number;
                    readUnquotedString(): string;
                    readQuotedString(): string;
                    readStringUntil(arg0: number): string;
                    readString(): string;
                    readBoolean(): boolean;
                    expect(arg0: number): void;
                    
                }
                namespace StringReader {
                    interface static {
                        new (arg0: _javatypes.com.mojang.brigadier.StringReader): _javatypes.com.mojang.brigadier.StringReader;
                        new (arg0: string): _javatypes.com.mojang.brigadier.StringReader;
                        
                        
                        isAllowedNumber(arg0: number): boolean;
                        isQuotedStringStart(arg0: number): boolean;
                        isAllowedInUnquotedString(arg0: number): boolean;
                        
                    }
                }
                interface ParseResults<S> extends any {
                    
                    getContext(): _javatypes.com.mojang.brigadier.context.CommandContextBuilder<S>;
                    getReader(): _javatypes.com.mojang.brigadier.ImmutableStringReader;
                    getExceptions(): _javatypes.java.util.Map<_javatypes.com.mojang.brigadier.tree.CommandNode<S>, _javatypes.com.mojang.brigadier.exceptions.CommandSyntaxException>;
                    
                }
                namespace ParseResults {
                    interface static {
                        new <S>(arg0: _javatypes.com.mojang.brigadier.context.CommandContextBuilder<S>, arg1: _javatypes.com.mojang.brigadier.ImmutableStringReader, arg2: _javatypes.java.util.Map<_javatypes.com.mojang.brigadier.tree.CommandNode<S>, _javatypes.com.mojang.brigadier.exceptions.CommandSyntaxException>): _javatypes.com.mojang.brigadier.ParseResults<S>;
                        new <S>(arg0: _javatypes.com.mojang.brigadier.context.CommandContextBuilder<S>): _javatypes.com.mojang.brigadier.ParseResults<S>;
                        
                        
                        
                    }
                }
                interface ResultConsumer<S> extends _javatypes.java.lang.Interface {
                    
                    onCommandComplete(arg0: _javatypes.com.mojang.brigadier.context.CommandContext<S>, arg1: boolean, arg2: number): void;
                    
                }
                namespace ResultConsumer {
                    interface static {
                        
                        
                        
                    }
                }
                interface SingleRedirectModifier<S> extends _javatypes.java.lang.Interface {
                    
                    apply(arg0: _javatypes.com.mojang.brigadier.context.CommandContext<S>): S;
                    
                }
                namespace SingleRedirectModifier {
                    interface static {
                        
                        
                        
                    }
                }
            
                namespace context {
                
                    interface CommandContextBuilder<S> extends any {
                        
                        withSource(arg0: S): _javatypes.com.mojang.brigadier.context.CommandContextBuilder<S>;
                        getSource(): S;
                        getRootNode(): _javatypes.com.mojang.brigadier.tree.CommandNode<S>;
                        withArgument(arg0: string, arg1: _javatypes.com.mojang.brigadier.context.ParsedArgument<S, any>): _javatypes.com.mojang.brigadier.context.CommandContextBuilder<S>;
                        getArguments(): _javatypes.java.util.Map<string, _javatypes.com.mojang.brigadier.context.ParsedArgument<S, any>>;
                        withCommand(arg0: _javatypes.com.mojang.brigadier.Command<S>): _javatypes.com.mojang.brigadier.context.CommandContextBuilder<S>;
                        withNode(arg0: _javatypes.com.mojang.brigadier.tree.CommandNode<S>, arg1: _javatypes.com.mojang.brigadier.context.StringRange): _javatypes.com.mojang.brigadier.context.CommandContextBuilder<S>;
                        copy(): _javatypes.com.mojang.brigadier.context.CommandContextBuilder<S>;
                        withChild(arg0: _javatypes.com.mojang.brigadier.context.CommandContextBuilder<S>): _javatypes.com.mojang.brigadier.context.CommandContextBuilder<S>;
                        getChild(): _javatypes.com.mojang.brigadier.context.CommandContextBuilder<S>;
                        getLastChild(): _javatypes.com.mojang.brigadier.context.CommandContextBuilder<S>;
                        getCommand(): _javatypes.com.mojang.brigadier.Command<S>;
                        getNodes(): _javatypes.java.util.List<_javatypes.com.mojang.brigadier.context.ParsedCommandNode<S>>;
                        build(arg0: string): _javatypes.com.mojang.brigadier.context.CommandContext<S>;
                        getDispatcher(): _javatypes.com.mojang.brigadier.CommandDispatcher<S>;
                        getRange(): _javatypes.com.mojang.brigadier.context.StringRange;
                        findSuggestionContext(arg0: number): _javatypes.com.mojang.brigadier.context.SuggestionContext<S>;
                        
                    }
                    namespace CommandContextBuilder {
                        interface static {
                            new <S>(arg0: _javatypes.com.mojang.brigadier.CommandDispatcher<S>, arg1: S, arg2: _javatypes.com.mojang.brigadier.tree.CommandNode<S>, arg3: number): _javatypes.com.mojang.brigadier.context.CommandContextBuilder<S>;
                            
                            
                            
                        }
                    }
                    interface CommandContext<S> extends any {
                        
                        copyFor(arg0: S): _javatypes.com.mojang.brigadier.context.CommandContext<S>;
                        getChild(): _javatypes.com.mojang.brigadier.context.CommandContext<S>;
                        getLastChild(): _javatypes.com.mojang.brigadier.context.CommandContext<S>;
                        getCommand(): _javatypes.com.mojang.brigadier.Command<S>;
                        getSource(): S;
                        getArgument<V>(arg0: string, arg1: _javatypes.java.lang.Class<V>): V;
                        equals(arg0: any): boolean;
                        hashCode(): number;
                        getRedirectModifier(): _javatypes.com.mojang.brigadier.RedirectModifier<S>;
                        getRange(): _javatypes.com.mojang.brigadier.context.StringRange;
                        getInput(): string;
                        getRootNode(): _javatypes.com.mojang.brigadier.tree.CommandNode<S>;
                        getNodes(): _javatypes.java.util.List<_javatypes.com.mojang.brigadier.context.ParsedCommandNode<S>>;
                        hasNodes(): boolean;
                        isForked(): boolean;
                        
                    }
                    namespace CommandContext {
                        interface static {
                            new <S>(arg0: S, arg1: string, arg2: _javatypes.java.util.Map<string, _javatypes.com.mojang.brigadier.context.ParsedArgument<S, any>>, arg3: _javatypes.com.mojang.brigadier.Command<S>, arg4: _javatypes.com.mojang.brigadier.tree.CommandNode<S>, arg5: _javatypes.java.util.List<_javatypes.com.mojang.brigadier.context.ParsedCommandNode<S>>, arg6: _javatypes.com.mojang.brigadier.context.StringRange, arg7: _javatypes.com.mojang.brigadier.context.CommandContext<S>, arg8: _javatypes.com.mojang.brigadier.RedirectModifier<S>, arg9: boolean): _javatypes.com.mojang.brigadier.context.CommandContext<S>;
                            
                            
                            
                        }
                    }
                    interface StringRange extends any {
                        
                        getStart(): number;
                        getEnd(): number;
                        get(arg0: _javatypes.com.mojang.brigadier.ImmutableStringReader): string;
                        get(arg0: string): string;
                        isEmpty(): boolean;
                        getLength(): number;
                        equals(arg0: any): boolean;
                        hashCode(): number;
                        toString(): string;
                        
                    }
                    namespace StringRange {
                        interface static {
                            new (arg0: number, arg1: number): _javatypes.com.mojang.brigadier.context.StringRange;
                            
                            
                            at(arg0: number): _javatypes.com.mojang.brigadier.context.StringRange;
                            between(arg0: number, arg1: number): _javatypes.com.mojang.brigadier.context.StringRange;
                            encompassing(arg0: _javatypes.com.mojang.brigadier.context.StringRange, arg1: _javatypes.com.mojang.brigadier.context.StringRange): _javatypes.com.mojang.brigadier.context.StringRange;
                            
                        }
                    }
                    interface ParsedCommandNode<S> extends any {
                        
                        getNode(): _javatypes.com.mojang.brigadier.tree.CommandNode<S>;
                        getRange(): _javatypes.com.mojang.brigadier.context.StringRange;
                        toString(): string;
                        equals(arg0: any): boolean;
                        hashCode(): number;
                        
                    }
                    namespace ParsedCommandNode {
                        interface static {
                            new <S>(arg0: _javatypes.com.mojang.brigadier.tree.CommandNode<S>, arg1: _javatypes.com.mojang.brigadier.context.StringRange): _javatypes.com.mojang.brigadier.context.ParsedCommandNode<S>;
                            
                            
                            
                        }
                    }
                    interface ParsedArgument<S, T> extends any {
                        
                        getRange(): _javatypes.com.mojang.brigadier.context.StringRange;
                        getResult(): T;
                        equals(arg0: any): boolean;
                        hashCode(): number;
                        
                    }
                    namespace ParsedArgument {
                        interface static {
                            new <S, T>(arg0: number, arg1: number, arg2: T): _javatypes.com.mojang.brigadier.context.ParsedArgument<S, T>;
                            
                            
                            
                        }
                    }
                    interface SuggestionContext<S> extends any {
                        readonly parent: _javatypes.com.mojang.brigadier.tree.CommandNode<S>;
                        readonly startPos: number;
                        
                        
                    }
                    namespace SuggestionContext {
                        interface static {
                            new <S>(arg0: _javatypes.com.mojang.brigadier.tree.CommandNode<S>, arg1: number): _javatypes.com.mojang.brigadier.context.SuggestionContext<S>;
                            
                            
                            
                        }
                    }
                }
            
                namespace tree {
                
                    interface CommandNode<S> extends any, _javatypes.java.lang.Comparable<_javatypes.com.mojang.brigadier.tree.CommandNode<S>> {
                        
                        getCommand(): _javatypes.com.mojang.brigadier.Command<S>;
                        getChildren(): _javatypes.java.util.Collection<_javatypes.com.mojang.brigadier.tree.CommandNode<S>>;
                        getChild(arg0: string): _javatypes.com.mojang.brigadier.tree.CommandNode<S>;
                        getRedirect(): _javatypes.com.mojang.brigadier.tree.CommandNode<S>;
                        getRedirectModifier(): _javatypes.com.mojang.brigadier.RedirectModifier<S>;
                        canUse(arg0: S): boolean;
                        addChild(arg0: _javatypes.com.mojang.brigadier.tree.CommandNode<S>): void;
                        findAmbiguities(arg0: _javatypes.com.mojang.brigadier.AmbiguityConsumer<S>): void;
                        equals(arg0: any): boolean;
                        hashCode(): number;
                        getRequirement(): _javatypes.java.util._function.Predicate<S>;
                        getName(): string;
                        getUsageText(): string;
                        parse(arg0: _javatypes.com.mojang.brigadier.StringReader, arg1: _javatypes.com.mojang.brigadier.context.CommandContextBuilder<S>): void;
                        listSuggestions(arg0: _javatypes.com.mojang.brigadier.context.CommandContext<S>, arg1: _javatypes.com.mojang.brigadier.suggestion.SuggestionsBuilder): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.com.mojang.brigadier.suggestion.Suggestions>;
                        createBuilder(): _javatypes.com.mojang.brigadier.builder.ArgumentBuilder<S, any>;
                        getRelevantNodes(arg0: _javatypes.com.mojang.brigadier.StringReader): _javatypes.java.util.Collection<any>;
                        compareTo(arg0: _javatypes.com.mojang.brigadier.tree.CommandNode<S>): number;
                        isFork(): boolean;
                        getExamples(): _javatypes.java.util.Collection<string>;
                        
                    }
                    namespace CommandNode {
                        interface static {
                            
                            
                            
                        }
                    }
                    interface RootCommandNode<S> extends _javatypes.com.mojang.brigadier.tree.CommandNode<S> {
                        
                        getName(): string;
                        getUsageText(): string;
                        parse(arg0: _javatypes.com.mojang.brigadier.StringReader, arg1: _javatypes.com.mojang.brigadier.context.CommandContextBuilder<S>): void;
                        listSuggestions(arg0: _javatypes.com.mojang.brigadier.context.CommandContext<S>, arg1: _javatypes.com.mojang.brigadier.suggestion.SuggestionsBuilder): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.com.mojang.brigadier.suggestion.Suggestions>;
                        isValidInput(arg0: string): boolean;
                        equals(arg0: any): boolean;
                        createBuilder(): _javatypes.com.mojang.brigadier.builder.ArgumentBuilder<S, any>;
                        getExamples(): _javatypes.java.util.Collection<string>;
                        toString(): string;
                        
                    }
                    namespace RootCommandNode {
                        interface static {
                            new <S>(): _javatypes.com.mojang.brigadier.tree.RootCommandNode<S>;
                            
                            
                            
                        }
                    }
                    interface LiteralCommandNode<S> extends _javatypes.com.mojang.brigadier.tree.CommandNode<S> {
                        
                        getLiteral(): string;
                        getName(): string;
                        parse(arg0: _javatypes.com.mojang.brigadier.StringReader, arg1: _javatypes.com.mojang.brigadier.context.CommandContextBuilder<S>): void;
                        listSuggestions(arg0: _javatypes.com.mojang.brigadier.context.CommandContext<S>, arg1: _javatypes.com.mojang.brigadier.suggestion.SuggestionsBuilder): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.com.mojang.brigadier.suggestion.Suggestions>;
                        isValidInput(arg0: string): boolean;
                        equals(arg0: any): boolean;
                        getUsageText(): string;
                        hashCode(): number;
                        createBuilder(): _javatypes.com.mojang.brigadier.builder.LiteralArgumentBuilder<S>;
                        getExamples(): _javatypes.java.util.Collection<string>;
                        toString(): string;
                        
                    }
                    namespace LiteralCommandNode {
                        interface static {
                            new <S>(arg0: string, arg1: _javatypes.com.mojang.brigadier.Command<S>, arg2: _javatypes.java.util._function.Predicate<S>, arg3: _javatypes.com.mojang.brigadier.tree.CommandNode<S>, arg4: _javatypes.com.mojang.brigadier.RedirectModifier<S>, arg5: boolean): _javatypes.com.mojang.brigadier.tree.LiteralCommandNode<S>;
                            
                            
                            
                        }
                    }
                }
            
                namespace suggestion {
                
                    interface Suggestions extends any {
                        
                        getRange(): _javatypes.com.mojang.brigadier.context.StringRange;
                        getList(): _javatypes.java.util.List<_javatypes.com.mojang.brigadier.suggestion.Suggestion>;
                        isEmpty(): boolean;
                        equals(arg0: any): boolean;
                        hashCode(): number;
                        toString(): string;
                        
                    }
                    namespace Suggestions {
                        interface static {
                            new (arg0: _javatypes.com.mojang.brigadier.context.StringRange, arg1: _javatypes.java.util.List<_javatypes.com.mojang.brigadier.suggestion.Suggestion>): _javatypes.com.mojang.brigadier.suggestion.Suggestions;
                            
                            
                            empty(): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.com.mojang.brigadier.suggestion.Suggestions>;
                            merge(arg0: string, arg1: _javatypes.java.util.Collection<_javatypes.com.mojang.brigadier.suggestion.Suggestions>): _javatypes.com.mojang.brigadier.suggestion.Suggestions;
                            create(arg0: string, arg1: _javatypes.java.util.Collection<_javatypes.com.mojang.brigadier.suggestion.Suggestion>): _javatypes.com.mojang.brigadier.suggestion.Suggestions;
                            
                        }
                    }
                    interface SuggestionsBuilder extends any {
                        
                        getInput(): string;
                        getStart(): number;
                        getRemaining(): string;
                        getRemainingLowerCase(): string;
                        build(): _javatypes.com.mojang.brigadier.suggestion.Suggestions;
                        buildFuture(): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.com.mojang.brigadier.suggestion.Suggestions>;
                        suggest(arg0: string): _javatypes.com.mojang.brigadier.suggestion.SuggestionsBuilder;
                        suggest(arg0: string, arg1: _javatypes.com.mojang.brigadier.Message): _javatypes.com.mojang.brigadier.suggestion.SuggestionsBuilder;
                        suggest(arg0: number): _javatypes.com.mojang.brigadier.suggestion.SuggestionsBuilder;
                        suggest(arg0: number, arg1: _javatypes.com.mojang.brigadier.Message): _javatypes.com.mojang.brigadier.suggestion.SuggestionsBuilder;
                        add(arg0: _javatypes.com.mojang.brigadier.suggestion.SuggestionsBuilder): _javatypes.com.mojang.brigadier.suggestion.SuggestionsBuilder;
                        createOffset(arg0: number): _javatypes.com.mojang.brigadier.suggestion.SuggestionsBuilder;
                        restart(): _javatypes.com.mojang.brigadier.suggestion.SuggestionsBuilder;
                        
                    }
                    namespace SuggestionsBuilder {
                        interface static {
                            new (arg0: string, arg1: string, arg2: number): _javatypes.com.mojang.brigadier.suggestion.SuggestionsBuilder;
                            new (arg0: string, arg1: number): _javatypes.com.mojang.brigadier.suggestion.SuggestionsBuilder;
                            
                            
                            
                        }
                    }
                    interface Suggestion extends any, _javatypes.java.lang.Comparable<_javatypes.com.mojang.brigadier.suggestion.Suggestion> {
                        
                        getRange(): _javatypes.com.mojang.brigadier.context.StringRange;
                        getText(): string;
                        getTooltip(): _javatypes.com.mojang.brigadier.Message;
                        apply(arg0: string): string;
                        equals(arg0: any): boolean;
                        hashCode(): number;
                        toString(): string;
                        compareTo(arg0: _javatypes.com.mojang.brigadier.suggestion.Suggestion): number;
                        compareToIgnoreCase(arg0: _javatypes.com.mojang.brigadier.suggestion.Suggestion): number;
                        expand(arg0: string, arg1: _javatypes.com.mojang.brigadier.context.StringRange): _javatypes.com.mojang.brigadier.suggestion.Suggestion;
                        
                    }
                    namespace Suggestion {
                        interface static {
                            new (arg0: _javatypes.com.mojang.brigadier.context.StringRange, arg1: string): _javatypes.com.mojang.brigadier.suggestion.Suggestion;
                            new (arg0: _javatypes.com.mojang.brigadier.context.StringRange, arg1: string, arg2: _javatypes.com.mojang.brigadier.Message): _javatypes.com.mojang.brigadier.suggestion.Suggestion;
                            
                            
                            
                        }
                    }
                }
            
                namespace builder {
                
                    interface ArgumentBuilder<S, T> extends any {
                        
                        then(arg0: _javatypes.com.mojang.brigadier.builder.ArgumentBuilder<S, any>): T;
                        then(arg0: _javatypes.com.mojang.brigadier.tree.CommandNode<S>): T;
                        getArguments(): _javatypes.java.util.Collection<_javatypes.com.mojang.brigadier.tree.CommandNode<S>>;
                        executes(arg0: _javatypes.com.mojang.brigadier.Command<S>): T;
                        getCommand(): _javatypes.com.mojang.brigadier.Command<S>;
                        requires(arg0: _javatypes.java.util._function.Predicate<S>): T;
                        getRequirement(): _javatypes.java.util._function.Predicate<S>;
                        redirect(arg0: _javatypes.com.mojang.brigadier.tree.CommandNode<S>): T;
                        redirect(arg0: _javatypes.com.mojang.brigadier.tree.CommandNode<S>, arg1: _javatypes.com.mojang.brigadier.SingleRedirectModifier<S>): T;
                        fork(arg0: _javatypes.com.mojang.brigadier.tree.CommandNode<S>, arg1: _javatypes.com.mojang.brigadier.RedirectModifier<S>): T;
                        forward(arg0: _javatypes.com.mojang.brigadier.tree.CommandNode<S>, arg1: _javatypes.com.mojang.brigadier.RedirectModifier<S>, arg2: boolean): T;
                        getRedirect(): _javatypes.com.mojang.brigadier.tree.CommandNode<S>;
                        getRedirectModifier(): _javatypes.com.mojang.brigadier.RedirectModifier<S>;
                        isFork(): boolean;
                        build(): _javatypes.com.mojang.brigadier.tree.CommandNode<S>;
                        
                    }
                    namespace ArgumentBuilder {
                        interface static {
                            new <S, T>(): _javatypes.com.mojang.brigadier.builder.ArgumentBuilder<S, T>;
                            
                            
                            
                        }
                    }
                    interface LiteralArgumentBuilder<S> extends _javatypes.com.mojang.brigadier.builder.ArgumentBuilder<S, _javatypes.com.mojang.brigadier.builder.LiteralArgumentBuilder<S>> {
                        
                        getLiteral(): string;
                        build(): _javatypes.com.mojang.brigadier.tree.LiteralCommandNode<S>;
                        
                    }
                    namespace LiteralArgumentBuilder {
                        interface static {
                            
                            
                            literal<S>(arg0: string): _javatypes.com.mojang.brigadier.builder.LiteralArgumentBuilder<S>;
                            
                        }
                    }
                }
            
                namespace exceptions {
                
                    interface CommandSyntaxException extends _javatypes.java.lang.Exception {
                        
                        getMessage(): string;
                        getRawMessage(): _javatypes.com.mojang.brigadier.Message;
                        getContext(): string;
                        getType(): _javatypes.com.mojang.brigadier.exceptions.CommandExceptionType;
                        getInput(): string;
                        getCursor(): number;
                        
                    }
                    namespace CommandSyntaxException {
                        interface static {
                            new (arg0: _javatypes.com.mojang.brigadier.exceptions.CommandExceptionType, arg1: _javatypes.com.mojang.brigadier.Message): _javatypes.com.mojang.brigadier.exceptions.CommandSyntaxException;
                            new (arg0: _javatypes.com.mojang.brigadier.exceptions.CommandExceptionType, arg1: _javatypes.com.mojang.brigadier.Message, arg2: string, arg3: number): _javatypes.com.mojang.brigadier.exceptions.CommandSyntaxException;
                            
                            readonly CONTEXT_AMOUNT: number;
                            ENABLE_COMMAND_STACK_TRACES: boolean;
                            BUILT_IN_EXCEPTIONS: _javatypes.com.mojang.brigadier.exceptions.BuiltInExceptionProvider;
                            
                            
                        }
                    }
                    interface CommandExceptionType extends _javatypes.java.lang.Interface {
                        
                        
                    }
                    namespace CommandExceptionType {
                        interface static {
                            
                            
                            
                        }
                    }
                    interface BuiltInExceptionProvider extends _javatypes.java.lang.Interface {
                        
                        doubleTooLow(): _javatypes.com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType;
                        doubleTooHigh(): _javatypes.com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType;
                        floatTooLow(): _javatypes.com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType;
                        floatTooHigh(): _javatypes.com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType;
                        integerTooLow(): _javatypes.com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType;
                        integerTooHigh(): _javatypes.com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType;
                        longTooLow(): _javatypes.com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType;
                        longTooHigh(): _javatypes.com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType;
                        literalIncorrect(): _javatypes.com.mojang.brigadier.exceptions.DynamicCommandExceptionType;
                        readerExpectedStartOfQuote(): _javatypes.com.mojang.brigadier.exceptions.SimpleCommandExceptionType;
                        readerExpectedEndOfQuote(): _javatypes.com.mojang.brigadier.exceptions.SimpleCommandExceptionType;
                        readerInvalidEscape(): _javatypes.com.mojang.brigadier.exceptions.DynamicCommandExceptionType;
                        readerInvalidBool(): _javatypes.com.mojang.brigadier.exceptions.DynamicCommandExceptionType;
                        readerInvalidInt(): _javatypes.com.mojang.brigadier.exceptions.DynamicCommandExceptionType;
                        readerExpectedInt(): _javatypes.com.mojang.brigadier.exceptions.SimpleCommandExceptionType;
                        readerInvalidLong(): _javatypes.com.mojang.brigadier.exceptions.DynamicCommandExceptionType;
                        readerExpectedLong(): _javatypes.com.mojang.brigadier.exceptions.SimpleCommandExceptionType;
                        readerInvalidDouble(): _javatypes.com.mojang.brigadier.exceptions.DynamicCommandExceptionType;
                        readerExpectedDouble(): _javatypes.com.mojang.brigadier.exceptions.SimpleCommandExceptionType;
                        readerInvalidFloat(): _javatypes.com.mojang.brigadier.exceptions.DynamicCommandExceptionType;
                        readerExpectedFloat(): _javatypes.com.mojang.brigadier.exceptions.SimpleCommandExceptionType;
                        readerExpectedBool(): _javatypes.com.mojang.brigadier.exceptions.SimpleCommandExceptionType;
                        readerExpectedSymbol(): _javatypes.com.mojang.brigadier.exceptions.DynamicCommandExceptionType;
                        dispatcherUnknownCommand(): _javatypes.com.mojang.brigadier.exceptions.SimpleCommandExceptionType;
                        dispatcherUnknownArgument(): _javatypes.com.mojang.brigadier.exceptions.SimpleCommandExceptionType;
                        dispatcherExpectedArgumentSeparator(): _javatypes.com.mojang.brigadier.exceptions.SimpleCommandExceptionType;
                        dispatcherParseException(): _javatypes.com.mojang.brigadier.exceptions.DynamicCommandExceptionType;
                        
                    }
                    namespace BuiltInExceptionProvider {
                        interface static {
                            
                            
                            
                        }
                    }
                    interface DynamicCommandExceptionType extends any, _javatypes.com.mojang.brigadier.exceptions.CommandExceptionType {
                        
                        create(arg0: any): _javatypes.com.mojang.brigadier.exceptions.CommandSyntaxException;
                        createWithContext(arg0: _javatypes.com.mojang.brigadier.ImmutableStringReader, arg1: any): _javatypes.com.mojang.brigadier.exceptions.CommandSyntaxException;
                        
                    }
                    namespace DynamicCommandExceptionType {
                        interface static {
                            new (arg0: _javatypes.java.util._function.Function<any, _javatypes.com.mojang.brigadier.Message>): _javatypes.com.mojang.brigadier.exceptions.DynamicCommandExceptionType;
                            
                            
                            
                        }
                    }
                    interface SimpleCommandExceptionType extends any, _javatypes.com.mojang.brigadier.exceptions.CommandExceptionType {
                        
                        create(): _javatypes.com.mojang.brigadier.exceptions.CommandSyntaxException;
                        createWithContext(arg0: _javatypes.com.mojang.brigadier.ImmutableStringReader): _javatypes.com.mojang.brigadier.exceptions.CommandSyntaxException;
                        toString(): string;
                        
                    }
                    namespace SimpleCommandExceptionType {
                        interface static {
                            new (arg0: _javatypes.com.mojang.brigadier.Message): _javatypes.com.mojang.brigadier.exceptions.SimpleCommandExceptionType;
                            
                            
                            
                        }
                    }
                    interface Dynamic2CommandExceptionType extends any, _javatypes.com.mojang.brigadier.exceptions.CommandExceptionType {
                        
                        create(arg0: any, arg1: any): _javatypes.com.mojang.brigadier.exceptions.CommandSyntaxException;
                        createWithContext(arg0: _javatypes.com.mojang.brigadier.ImmutableStringReader, arg1: any, arg2: any): _javatypes.com.mojang.brigadier.exceptions.CommandSyntaxException;
                        
                    }
                    namespace Dynamic2CommandExceptionType {
                        interface static {
                            new (arg0: _javatypes.com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType$Function): _javatypes.com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType;
                            
                            
                            
                        }
                    }
                    interface Dynamic2CommandExceptionType$Function extends _javatypes.java.lang.Interface {
                        
                        apply(arg0: any, arg1: any): _javatypes.com.mojang.brigadier.Message;
                        
                    }
                    namespace Dynamic2CommandExceptionType$Function {
                        interface static {
                            
                            
                            
                        }
                    }
                }
            }
        
            namespace authlib {
            
                interface GameProfile extends any {
                    
                    getId(): _javatypes.java.util.UUID;
                    getName(): string;
                    getProperties(): _javatypes.com.mojang.authlib.properties.PropertyMap;
                    isComplete(): boolean;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    toString(): string;
                    isLegacy(): boolean;
                    
                }
                namespace GameProfile {
                    interface static {
                        new (arg0: _javatypes.java.util.UUID, arg1: string): _javatypes.com.mojang.authlib.GameProfile;
                        
                        
                        
                    }
                }
            
                namespace properties {
                
                    interface PropertyMap extends _javatypes.com.google.common.collect.ForwardingMultimap<string, _javatypes.com.mojang.authlib.properties.Property> {
                        
                        
                    }
                    namespace PropertyMap {
                        interface static {
                            new (): _javatypes.com.mojang.authlib.properties.PropertyMap;
                            
                            
                            
                        }
                    }
                    interface Property extends any {
                        
                        getName(): string;
                        getValue(): string;
                        getSignature(): string;
                        hasSignature(): boolean;
                        isSignatureValid(arg0: _javatypes.java.security.PublicKey): boolean;
                        
                    }
                    namespace Property {
                        interface static {
                            new (arg0: string, arg1: string): _javatypes.com.mojang.authlib.properties.Property;
                            new (arg0: string, arg1: string, arg2: string): _javatypes.com.mojang.authlib.properties.Property;
                            
                            
                            
                        }
                    }
                }
            }
        }
    
        namespace google {
        
        
            namespace gson {
            
                interface JsonObject extends _javatypes.com.google.gson.JsonElement {
                    
                    deepCopy(): _javatypes.com.google.gson.JsonObject;
                    add(arg0: string, arg1: _javatypes.com.google.gson.JsonElement): void;
                    remove(arg0: string): _javatypes.com.google.gson.JsonElement;
                    addProperty(arg0: string, arg1: string): void;
                    addProperty(arg0: string, arg1: _javatypes.java.lang.Number): void;
                    addProperty(arg0: string, arg1: boolean): void;
                    addProperty(arg0: string, arg1: number): void;
                    entrySet(): _javatypes.java.util.Set<_javatypes.java.util.Map$Entry<string, _javatypes.com.google.gson.JsonElement>>;
                    keySet(): _javatypes.java.util.Set<string>;
                    size(): number;
                    has(arg0: string): boolean;
                    get(arg0: string): _javatypes.com.google.gson.JsonElement;
                    getAsJsonPrimitive(arg0: string): _javatypes.com.google.gson.JsonPrimitive;
                    getAsJsonArray(arg0: string): _javatypes.com.google.gson.JsonArray;
                    getAsJsonObject(arg0: string): _javatypes.com.google.gson.JsonObject;
                    asMap(): _javatypes.java.util.Map<string, _javatypes.com.google.gson.JsonElement>;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    
                }
                namespace JsonObject {
                    interface static {
                        new (): _javatypes.com.google.gson.JsonObject;
                        
                        
                        
                    }
                }
                interface JsonElement extends any {
                    
                    deepCopy(): _javatypes.com.google.gson.JsonElement;
                    isJsonArray(): boolean;
                    isJsonObject(): boolean;
                    isJsonPrimitive(): boolean;
                    isJsonNull(): boolean;
                    getAsJsonObject(): _javatypes.com.google.gson.JsonObject;
                    getAsJsonArray(): _javatypes.com.google.gson.JsonArray;
                    getAsJsonPrimitive(): _javatypes.com.google.gson.JsonPrimitive;
                    getAsJsonNull(): _javatypes.com.google.gson.JsonNull;
                    getAsBoolean(): boolean;
                    getAsNumber(): _javatypes.java.lang.Number;
                    getAsString(): string;
                    getAsDouble(): number;
                    getAsFloat(): number;
                    getAsLong(): number;
                    getAsInt(): number;
                    getAsByte(): number;
                    getAsCharacter(): number;
                    getAsBigDecimal(): _javatypes.java.math.BigDecimal;
                    getAsBigInteger(): _javatypes.java.math.BigInteger;
                    getAsShort(): number;
                    toString(): string;
                    
                }
                namespace JsonElement {
                    interface static {
                        new (): _javatypes.com.google.gson.JsonElement;
                        
                        
                        
                    }
                }
                interface JsonArray extends _javatypes.com.google.gson.JsonElement, _javatypes.java.lang.Iterable<_javatypes.com.google.gson.JsonElement> {
                    
                    deepCopy(): _javatypes.com.google.gson.JsonArray;
                    add(arg0: boolean): void;
                    add(arg0: number): void;
                    add(arg0: _javatypes.java.lang.Number): void;
                    add(arg0: string): void;
                    add(arg0: _javatypes.com.google.gson.JsonElement): void;
                    addAll(arg0: _javatypes.com.google.gson.JsonArray): void;
                    set(arg0: number, arg1: _javatypes.com.google.gson.JsonElement): _javatypes.com.google.gson.JsonElement;
                    remove(arg0: _javatypes.com.google.gson.JsonElement): boolean;
                    remove(arg0: number): _javatypes.com.google.gson.JsonElement;
                    contains(arg0: _javatypes.com.google.gson.JsonElement): boolean;
                    size(): number;
                    isEmpty(): boolean;
                    iterator(): _javatypes.java.util.Iterator<_javatypes.com.google.gson.JsonElement>;
                    get(arg0: number): _javatypes.com.google.gson.JsonElement;
                    getAsNumber(): _javatypes.java.lang.Number;
                    getAsString(): string;
                    getAsDouble(): number;
                    getAsBigDecimal(): _javatypes.java.math.BigDecimal;
                    getAsBigInteger(): _javatypes.java.math.BigInteger;
                    getAsFloat(): number;
                    getAsLong(): number;
                    getAsInt(): number;
                    getAsByte(): number;
                    getAsCharacter(): number;
                    getAsShort(): number;
                    getAsBoolean(): boolean;
                    asList(): _javatypes.java.util.List<_javatypes.com.google.gson.JsonElement>;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    
                }
                namespace JsonArray {
                    interface static {
                        new (): _javatypes.com.google.gson.JsonArray;
                        new (arg0: number): _javatypes.com.google.gson.JsonArray;
                        
                        
                        
                    }
                }
                interface JsonPrimitive extends _javatypes.com.google.gson.JsonElement {
                    
                    deepCopy(): _javatypes.com.google.gson.JsonPrimitive;
                    isBoolean(): boolean;
                    getAsBoolean(): boolean;
                    isNumber(): boolean;
                    getAsNumber(): _javatypes.java.lang.Number;
                    isString(): boolean;
                    getAsString(): string;
                    getAsDouble(): number;
                    getAsBigDecimal(): _javatypes.java.math.BigDecimal;
                    getAsBigInteger(): _javatypes.java.math.BigInteger;
                    getAsFloat(): number;
                    getAsLong(): number;
                    getAsShort(): number;
                    getAsInt(): number;
                    getAsByte(): number;
                    getAsCharacter(): number;
                    hashCode(): number;
                    equals(arg0: any): boolean;
                    
                }
                namespace JsonPrimitive {
                    interface static {
                        new (arg0: boolean): _javatypes.com.google.gson.JsonPrimitive;
                        new (arg0: _javatypes.java.lang.Number): _javatypes.com.google.gson.JsonPrimitive;
                        new (arg0: string): _javatypes.com.google.gson.JsonPrimitive;
                        new (arg0: number): _javatypes.com.google.gson.JsonPrimitive;
                        
                        
                        
                    }
                }
                interface JsonNull extends _javatypes.com.google.gson.JsonElement {
                    
                    deepCopy(): _javatypes.com.google.gson.JsonNull;
                    hashCode(): number;
                    equals(arg0: any): boolean;
                    
                }
                namespace JsonNull {
                    interface static {
                        new (): _javatypes.com.google.gson.JsonNull;
                        
                        readonly INSTANCE: _javatypes.com.google.gson.JsonNull;
                        
                        
                    }
                }
            }
        
            namespace common.collect {
            
                interface ForwardingMultimap<K, V> extends _javatypes.com.google.common.collect.ForwardingObject, _javatypes.com.google.common.collect.Multimap<K, V> {
                    
                    asMap(): _javatypes.java.util.Map<K, _javatypes.java.util.Collection<V>>;
                    clear(): void;
                    containsEntry(arg0: any, arg1: any): boolean;
                    containsKey(arg0: any): boolean;
                    containsValue(arg0: any): boolean;
                    entries(): _javatypes.java.util.Collection<_javatypes.java.util.Map$Entry<K, V>>;
                    get(arg0: K): _javatypes.java.util.Collection<V>;
                    isEmpty(): boolean;
                    keys(): _javatypes.com.google.common.collect.Multiset<K>;
                    keySet(): _javatypes.java.util.Set<K>;
                    put(arg0: K, arg1: V): boolean;
                    putAll(arg0: K, arg1: _javatypes.java.lang.Iterable<any>): boolean;
                    putAll(arg0: _javatypes.com.google.common.collect.Multimap<any, any>): boolean;
                    remove(arg0: any, arg1: any): boolean;
                    removeAll(arg0: any): _javatypes.java.util.Collection<V>;
                    replaceValues(arg0: K, arg1: _javatypes.java.lang.Iterable<any>): _javatypes.java.util.Collection<V>;
                    size(): number;
                    values(): _javatypes.java.util.Collection<V>;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    
                }
                namespace ForwardingMultimap {
                    interface static {
                        
                        
                        
                    }
                }
                interface Multimap<K, V> extends _javatypes.java.lang.Interface {
                    
                    size(): number;
                    isEmpty(): boolean;
                    containsKey(arg0: any): boolean;
                    containsValue(arg0: any): boolean;
                    containsEntry(arg0: any, arg1: any): boolean;
                    put(arg0: K, arg1: V): boolean;
                    remove(arg0: any, arg1: any): boolean;
                    putAll(arg0: K, arg1: _javatypes.java.lang.Iterable<any>): boolean;
                    putAll(arg0: _javatypes.com.google.common.collect.Multimap<any, any>): boolean;
                    replaceValues(arg0: K, arg1: _javatypes.java.lang.Iterable<any>): _javatypes.java.util.Collection<V>;
                    removeAll(arg0: any): _javatypes.java.util.Collection<V>;
                    clear(): void;
                    get(arg0: K): _javatypes.java.util.Collection<V>;
                    keySet(): _javatypes.java.util.Set<K>;
                    keys(): _javatypes.com.google.common.collect.Multiset<K>;
                    values(): _javatypes.java.util.Collection<V>;
                    entries(): _javatypes.java.util.Collection<_javatypes.java.util.Map$Entry<K, V>>;
                    forEach(arg0: _javatypes.java.util._function.BiConsumer<any, any>): void;
                    asMap(): _javatypes.java.util.Map<K, _javatypes.java.util.Collection<V>>;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    
                }
                namespace Multimap {
                    interface static {
                        
                        
                        
                    }
                }
                interface Multiset<E> extends _javatypes.java.lang.Interface, _javatypes.java.util.Collection<E> {
                    
                    size(): number;
                    count(arg0: any): number;
                    add(arg0: E, arg1: number): number;
                    add(arg0: E): boolean;
                    remove(arg0: any, arg1: number): number;
                    remove(arg0: any): boolean;
                    setCount(arg0: E, arg1: number): number;
                    setCount(arg0: E, arg1: number, arg2: number): boolean;
                    elementSet(): _javatypes.java.util.Set<E>;
                    entrySet(): _javatypes.java.util.Set<_javatypes.com.google.common.collect.Multiset$Entry<E>>;
                    forEachEntry(arg0: _javatypes.java.util._function.ObjIntConsumer<any>): void;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    toString(): string;
                    iterator(): _javatypes.java.util.Iterator<E>;
                    contains(arg0: any): boolean;
                    containsAll(arg0: _javatypes.java.util.Collection<any>): boolean;
                    removeAll(arg0: _javatypes.java.util.Collection<any>): boolean;
                    retainAll(arg0: _javatypes.java.util.Collection<any>): boolean;
                    forEach(arg0: _javatypes.java.util._function.Consumer<any>): void;
                    spliterator(): _javatypes.java.util.Spliterator<E>;
                    
                }
                namespace Multiset {
                    interface static {
                        
                        
                        
                    }
                }
                interface ForwardingObject extends any {
                    
                    toString(): string;
                    
                }
                namespace ForwardingObject {
                    interface static {
                        
                        
                        
                    }
                }
                interface Multiset$Entry<E> extends _javatypes.java.lang.Interface {
                    
                    getElement(): E;
                    getCount(): number;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    toString(): string;
                    
                }
                namespace Multiset$Entry {
                    interface static {
                        
                        
                        
                    }
                }
            }
        }
    
        namespace neovisionaries.ws.client {
        
            interface WebSocketException extends _javatypes.java.lang.Exception {
                
                getError(): _javatypes.com.neovisionaries.ws.client.WebSocketError;
                
            }
            namespace WebSocketException {
                interface static {
                    new (arg0: _javatypes.com.neovisionaries.ws.client.WebSocketError): _javatypes.com.neovisionaries.ws.client.WebSocketException;
                    new (arg0: _javatypes.com.neovisionaries.ws.client.WebSocketError, arg1: string): _javatypes.com.neovisionaries.ws.client.WebSocketException;
                    new (arg0: _javatypes.com.neovisionaries.ws.client.WebSocketError, arg1: _javatypes.java.lang.Throwable): _javatypes.com.neovisionaries.ws.client.WebSocketException;
                    new (arg0: _javatypes.com.neovisionaries.ws.client.WebSocketError, arg1: string, arg2: _javatypes.java.lang.Throwable): _javatypes.com.neovisionaries.ws.client.WebSocketException;
                    
                    
                    
                }
            }
            interface WebSocketFrame extends any {
                
                getFin(): boolean;
                setFin(arg0: boolean): _javatypes.com.neovisionaries.ws.client.WebSocketFrame;
                getRsv1(): boolean;
                setRsv1(arg0: boolean): _javatypes.com.neovisionaries.ws.client.WebSocketFrame;
                getRsv2(): boolean;
                setRsv2(arg0: boolean): _javatypes.com.neovisionaries.ws.client.WebSocketFrame;
                getRsv3(): boolean;
                setRsv3(arg0: boolean): _javatypes.com.neovisionaries.ws.client.WebSocketFrame;
                getOpcode(): number;
                setOpcode(arg0: number): _javatypes.com.neovisionaries.ws.client.WebSocketFrame;
                isContinuationFrame(): boolean;
                isTextFrame(): boolean;
                isBinaryFrame(): boolean;
                isCloseFrame(): boolean;
                isPingFrame(): boolean;
                isPongFrame(): boolean;
                isDataFrame(): boolean;
                isControlFrame(): boolean;
                hasPayload(): boolean;
                getPayloadLength(): number;
                getPayload(): number[];
                getPayloadText(): string;
                setPayload(arg0: number[]): _javatypes.com.neovisionaries.ws.client.WebSocketFrame;
                setPayload(arg0: string): _javatypes.com.neovisionaries.ws.client.WebSocketFrame;
                setCloseFramePayload(arg0: number, arg1: string): _javatypes.com.neovisionaries.ws.client.WebSocketFrame;
                getCloseCode(): number;
                getCloseReason(): string;
                toString(): string;
                
            }
            namespace WebSocketFrame {
                interface static {
                    new (): _javatypes.com.neovisionaries.ws.client.WebSocketFrame;
                    
                    
                    createContinuationFrame(): _javatypes.com.neovisionaries.ws.client.WebSocketFrame;
                    createContinuationFrame(arg0: number[]): _javatypes.com.neovisionaries.ws.client.WebSocketFrame;
                    createContinuationFrame(arg0: string): _javatypes.com.neovisionaries.ws.client.WebSocketFrame;
                    createTextFrame(arg0: string): _javatypes.com.neovisionaries.ws.client.WebSocketFrame;
                    createBinaryFrame(arg0: number[]): _javatypes.com.neovisionaries.ws.client.WebSocketFrame;
                    createCloseFrame(): _javatypes.com.neovisionaries.ws.client.WebSocketFrame;
                    createCloseFrame(arg0: number): _javatypes.com.neovisionaries.ws.client.WebSocketFrame;
                    createCloseFrame(arg0: number, arg1: string): _javatypes.com.neovisionaries.ws.client.WebSocketFrame;
                    createPingFrame(): _javatypes.com.neovisionaries.ws.client.WebSocketFrame;
                    createPingFrame(arg0: number[]): _javatypes.com.neovisionaries.ws.client.WebSocketFrame;
                    createPingFrame(arg0: string): _javatypes.com.neovisionaries.ws.client.WebSocketFrame;
                    createPongFrame(): _javatypes.com.neovisionaries.ws.client.WebSocketFrame;
                    createPongFrame(arg0: number[]): _javatypes.com.neovisionaries.ws.client.WebSocketFrame;
                    createPongFrame(arg0: string): _javatypes.com.neovisionaries.ws.client.WebSocketFrame;
                    
                }
            }
            interface WebSocket extends any {
                
                recreate(): _javatypes.com.neovisionaries.ws.client.WebSocket;
                recreate(arg0: number): _javatypes.com.neovisionaries.ws.client.WebSocket;
                getState(): _javatypes.com.neovisionaries.ws.client.WebSocketState;
                isOpen(): boolean;
                addProtocol(arg0: string): _javatypes.com.neovisionaries.ws.client.WebSocket;
                removeProtocol(arg0: string): _javatypes.com.neovisionaries.ws.client.WebSocket;
                clearProtocols(): _javatypes.com.neovisionaries.ws.client.WebSocket;
                addExtension(arg0: _javatypes.com.neovisionaries.ws.client.WebSocketExtension): _javatypes.com.neovisionaries.ws.client.WebSocket;
                addExtension(arg0: string): _javatypes.com.neovisionaries.ws.client.WebSocket;
                removeExtension(arg0: _javatypes.com.neovisionaries.ws.client.WebSocketExtension): _javatypes.com.neovisionaries.ws.client.WebSocket;
                removeExtensions(arg0: string): _javatypes.com.neovisionaries.ws.client.WebSocket;
                clearExtensions(): _javatypes.com.neovisionaries.ws.client.WebSocket;
                addHeader(arg0: string, arg1: string): _javatypes.com.neovisionaries.ws.client.WebSocket;
                removeHeaders(arg0: string): _javatypes.com.neovisionaries.ws.client.WebSocket;
                clearHeaders(): _javatypes.com.neovisionaries.ws.client.WebSocket;
                setUserInfo(arg0: string): _javatypes.com.neovisionaries.ws.client.WebSocket;
                setUserInfo(arg0: string, arg1: string): _javatypes.com.neovisionaries.ws.client.WebSocket;
                clearUserInfo(): _javatypes.com.neovisionaries.ws.client.WebSocket;
                isExtended(): boolean;
                setExtended(arg0: boolean): _javatypes.com.neovisionaries.ws.client.WebSocket;
                isAutoFlush(): boolean;
                setAutoFlush(arg0: boolean): _javatypes.com.neovisionaries.ws.client.WebSocket;
                isMissingCloseFrameAllowed(): boolean;
                setMissingCloseFrameAllowed(arg0: boolean): _javatypes.com.neovisionaries.ws.client.WebSocket;
                isDirectTextMessage(): boolean;
                setDirectTextMessage(arg0: boolean): _javatypes.com.neovisionaries.ws.client.WebSocket;
                flush(): _javatypes.com.neovisionaries.ws.client.WebSocket;
                getFrameQueueSize(): number;
                setFrameQueueSize(arg0: number): _javatypes.com.neovisionaries.ws.client.WebSocket;
                getMaxPayloadSize(): number;
                setMaxPayloadSize(arg0: number): _javatypes.com.neovisionaries.ws.client.WebSocket;
                getPingInterval(): number;
                setPingInterval(arg0: number): _javatypes.com.neovisionaries.ws.client.WebSocket;
                getPongInterval(): number;
                setPongInterval(arg0: number): _javatypes.com.neovisionaries.ws.client.WebSocket;
                getPingPayloadGenerator(): _javatypes.com.neovisionaries.ws.client.PayloadGenerator;
                setPingPayloadGenerator(arg0: _javatypes.com.neovisionaries.ws.client.PayloadGenerator): _javatypes.com.neovisionaries.ws.client.WebSocket;
                getPongPayloadGenerator(): _javatypes.com.neovisionaries.ws.client.PayloadGenerator;
                setPongPayloadGenerator(arg0: _javatypes.com.neovisionaries.ws.client.PayloadGenerator): _javatypes.com.neovisionaries.ws.client.WebSocket;
                getPingSenderName(): string;
                setPingSenderName(arg0: string): _javatypes.com.neovisionaries.ws.client.WebSocket;
                getPongSenderName(): string;
                setPongSenderName(arg0: string): _javatypes.com.neovisionaries.ws.client.WebSocket;
                addListener(arg0: _javatypes.com.neovisionaries.ws.client.WebSocketListener): _javatypes.com.neovisionaries.ws.client.WebSocket;
                addListeners(arg0: _javatypes.java.util.List<_javatypes.com.neovisionaries.ws.client.WebSocketListener>): _javatypes.com.neovisionaries.ws.client.WebSocket;
                removeListener(arg0: _javatypes.com.neovisionaries.ws.client.WebSocketListener): _javatypes.com.neovisionaries.ws.client.WebSocket;
                removeListeners(arg0: _javatypes.java.util.List<_javatypes.com.neovisionaries.ws.client.WebSocketListener>): _javatypes.com.neovisionaries.ws.client.WebSocket;
                clearListeners(): _javatypes.com.neovisionaries.ws.client.WebSocket;
                getSocket(): _javatypes.java.net.Socket;
                getConnectedSocket(): _javatypes.java.net.Socket;
                getURI(): _javatypes.java.net.URI;
                connect(): _javatypes.com.neovisionaries.ws.client.WebSocket;
                connect(arg0: _javatypes.java.util.concurrent.ExecutorService): _javatypes.java.util.concurrent.Future<_javatypes.com.neovisionaries.ws.client.WebSocket>;
                connectable(): _javatypes.java.util.concurrent.Callable<_javatypes.com.neovisionaries.ws.client.WebSocket>;
                connectAsynchronously(): _javatypes.com.neovisionaries.ws.client.WebSocket;
                disconnect(): _javatypes.com.neovisionaries.ws.client.WebSocket;
                disconnect(arg0: number): _javatypes.com.neovisionaries.ws.client.WebSocket;
                disconnect(arg0: string): _javatypes.com.neovisionaries.ws.client.WebSocket;
                disconnect(arg0: number, arg1: string): _javatypes.com.neovisionaries.ws.client.WebSocket;
                disconnect(arg0: number, arg1: string, arg2: number): _javatypes.com.neovisionaries.ws.client.WebSocket;
                getAgreedExtensions(): _javatypes.java.util.List<_javatypes.com.neovisionaries.ws.client.WebSocketExtension>;
                getAgreedProtocol(): string;
                sendFrame(arg0: _javatypes.com.neovisionaries.ws.client.WebSocketFrame): _javatypes.com.neovisionaries.ws.client.WebSocket;
                sendContinuation(): _javatypes.com.neovisionaries.ws.client.WebSocket;
                sendContinuation(arg0: boolean): _javatypes.com.neovisionaries.ws.client.WebSocket;
                sendContinuation(arg0: string): _javatypes.com.neovisionaries.ws.client.WebSocket;
                sendContinuation(arg0: string, arg1: boolean): _javatypes.com.neovisionaries.ws.client.WebSocket;
                sendContinuation(arg0: number[]): _javatypes.com.neovisionaries.ws.client.WebSocket;
                sendContinuation(arg0: number[], arg1: boolean): _javatypes.com.neovisionaries.ws.client.WebSocket;
                sendText(arg0: string): _javatypes.com.neovisionaries.ws.client.WebSocket;
                sendText(arg0: string, arg1: boolean): _javatypes.com.neovisionaries.ws.client.WebSocket;
                sendBinary(arg0: number[]): _javatypes.com.neovisionaries.ws.client.WebSocket;
                sendBinary(arg0: number[], arg1: boolean): _javatypes.com.neovisionaries.ws.client.WebSocket;
                sendClose(): _javatypes.com.neovisionaries.ws.client.WebSocket;
                sendClose(arg0: number): _javatypes.com.neovisionaries.ws.client.WebSocket;
                sendClose(arg0: number, arg1: string): _javatypes.com.neovisionaries.ws.client.WebSocket;
                sendPing(): _javatypes.com.neovisionaries.ws.client.WebSocket;
                sendPing(arg0: number[]): _javatypes.com.neovisionaries.ws.client.WebSocket;
                sendPing(arg0: string): _javatypes.com.neovisionaries.ws.client.WebSocket;
                sendPong(): _javatypes.com.neovisionaries.ws.client.WebSocket;
                sendPong(arg0: number[]): _javatypes.com.neovisionaries.ws.client.WebSocket;
                sendPong(arg0: string): _javatypes.com.neovisionaries.ws.client.WebSocket;
                
            }
            namespace WebSocket {
                interface static {
                    
                    
                    
                }
            }
            interface WebSocketError extends _javatypes.java.lang.Enum<_javatypes.com.neovisionaries.ws.client.WebSocketError> {
                
                
            }
            namespace WebSocketError {
                interface static {
                    
                    readonly NOT_IN_CREATED_STATE: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly SOCKET_INPUT_STREAM_FAILURE: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly SOCKET_OUTPUT_STREAM_FAILURE: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly OPENING_HAHDSHAKE_REQUEST_FAILURE: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly OPENING_HANDSHAKE_RESPONSE_FAILURE: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly STATUS_LINE_EMPTY: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly STATUS_LINE_BAD_FORMAT: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly NOT_SWITCHING_PROTOCOLS: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly HTTP_HEADER_FAILURE: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly NO_UPGRADE_HEADER: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly NO_WEBSOCKET_IN_UPGRADE_HEADER: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly NO_CONNECTION_HEADER: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly NO_UPGRADE_IN_CONNECTION_HEADER: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly NO_SEC_WEBSOCKET_ACCEPT_HEADER: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly UNEXPECTED_SEC_WEBSOCKET_ACCEPT_HEADER: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly EXTENSION_PARSE_ERROR: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly UNSUPPORTED_EXTENSION: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly EXTENSIONS_CONFLICT: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly UNSUPPORTED_PROTOCOL: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly INSUFFICENT_DATA: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly INVALID_PAYLOAD_LENGTH: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly TOO_LONG_PAYLOAD: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly INSUFFICIENT_MEMORY_FOR_PAYLOAD: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly INTERRUPTED_IN_READING: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly IO_ERROR_IN_READING: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly IO_ERROR_IN_WRITING: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly FLUSH_ERROR: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly NON_ZERO_RESERVED_BITS: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly UNEXPECTED_RESERVED_BIT: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly FRAME_MASKED: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly UNKNOWN_OPCODE: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly FRAGMENTED_CONTROL_FRAME: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly UNEXPECTED_CONTINUATION_FRAME: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly CONTINUATION_NOT_CLOSED: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly TOO_LONG_CONTROL_FRAME_PAYLOAD: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly MESSAGE_CONSTRUCTION_ERROR: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly TEXT_MESSAGE_CONSTRUCTION_ERROR: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly UNEXPECTED_ERROR_IN_READING_THREAD: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly UNEXPECTED_ERROR_IN_WRITING_THREAD: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly PERMESSAGE_DEFLATE_UNSUPPORTED_PARAMETER: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly PERMESSAGE_DEFLATE_INVALID_MAX_WINDOW_BITS: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly COMPRESSION_ERROR: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly DECOMPRESSION_ERROR: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly SOCKET_CONNECT_ERROR: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly PROXY_HANDSHAKE_ERROR: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly SOCKET_OVERLAY_ERROR: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly SSL_HANDSHAKE_ERROR: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly NO_MORE_FRAME: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    readonly HOSTNAME_UNVERIFIED: _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    
                    values(): _javatypes.com.neovisionaries.ws.client.WebSocketError[];
                    valueOf(arg0: string): _javatypes.com.neovisionaries.ws.client.WebSocketError;
                    
                }
            }
            interface WebSocketListener extends _javatypes.java.lang.Interface {
                
                onStateChanged(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: _javatypes.com.neovisionaries.ws.client.WebSocketState): void;
                onConnected(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: _javatypes.java.util.Map<string, _javatypes.java.util.List<string>>): void;
                onConnectError(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: _javatypes.com.neovisionaries.ws.client.WebSocketException): void;
                onDisconnected(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: _javatypes.com.neovisionaries.ws.client.WebSocketFrame, arg2: _javatypes.com.neovisionaries.ws.client.WebSocketFrame, arg3: boolean): void;
                onFrame(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: _javatypes.com.neovisionaries.ws.client.WebSocketFrame): void;
                onContinuationFrame(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: _javatypes.com.neovisionaries.ws.client.WebSocketFrame): void;
                onTextFrame(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: _javatypes.com.neovisionaries.ws.client.WebSocketFrame): void;
                onBinaryFrame(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: _javatypes.com.neovisionaries.ws.client.WebSocketFrame): void;
                onCloseFrame(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: _javatypes.com.neovisionaries.ws.client.WebSocketFrame): void;
                onPingFrame(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: _javatypes.com.neovisionaries.ws.client.WebSocketFrame): void;
                onPongFrame(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: _javatypes.com.neovisionaries.ws.client.WebSocketFrame): void;
                onTextMessage(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: string): void;
                onTextMessage(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: number[]): void;
                onBinaryMessage(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: number[]): void;
                onSendingFrame(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: _javatypes.com.neovisionaries.ws.client.WebSocketFrame): void;
                onFrameSent(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: _javatypes.com.neovisionaries.ws.client.WebSocketFrame): void;
                onFrameUnsent(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: _javatypes.com.neovisionaries.ws.client.WebSocketFrame): void;
                onThreadCreated(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: _javatypes.com.neovisionaries.ws.client.ThreadType, arg2: _javatypes.java.lang.Thread): void;
                onThreadStarted(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: _javatypes.com.neovisionaries.ws.client.ThreadType, arg2: _javatypes.java.lang.Thread): void;
                onThreadStopping(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: _javatypes.com.neovisionaries.ws.client.ThreadType, arg2: _javatypes.java.lang.Thread): void;
                onError(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: _javatypes.com.neovisionaries.ws.client.WebSocketException): void;
                onFrameError(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: _javatypes.com.neovisionaries.ws.client.WebSocketException, arg2: _javatypes.com.neovisionaries.ws.client.WebSocketFrame): void;
                onMessageError(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: _javatypes.com.neovisionaries.ws.client.WebSocketException, arg2: _javatypes.java.util.List<_javatypes.com.neovisionaries.ws.client.WebSocketFrame>): void;
                onMessageDecompressionError(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: _javatypes.com.neovisionaries.ws.client.WebSocketException, arg2: number[]): void;
                onTextMessageError(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: _javatypes.com.neovisionaries.ws.client.WebSocketException, arg2: number[]): void;
                onSendError(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: _javatypes.com.neovisionaries.ws.client.WebSocketException, arg2: _javatypes.com.neovisionaries.ws.client.WebSocketFrame): void;
                onUnexpectedError(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: _javatypes.com.neovisionaries.ws.client.WebSocketException): void;
                handleCallbackError(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: _javatypes.java.lang.Throwable): void;
                onSendingHandshake(arg0: _javatypes.com.neovisionaries.ws.client.WebSocket, arg1: string, arg2: _javatypes.java.util.List<string[]>): void;
                
            }
            namespace WebSocketListener {
                interface static {
                    
                    
                    
                }
            }
            interface WebSocketState extends _javatypes.java.lang.Enum<_javatypes.com.neovisionaries.ws.client.WebSocketState> {
                
                
            }
            namespace WebSocketState {
                interface static {
                    
                    readonly CREATED: _javatypes.com.neovisionaries.ws.client.WebSocketState;
                    readonly CONNECTING: _javatypes.com.neovisionaries.ws.client.WebSocketState;
                    readonly OPEN: _javatypes.com.neovisionaries.ws.client.WebSocketState;
                    readonly CLOSING: _javatypes.com.neovisionaries.ws.client.WebSocketState;
                    readonly CLOSED: _javatypes.com.neovisionaries.ws.client.WebSocketState;
                    
                    values(): _javatypes.com.neovisionaries.ws.client.WebSocketState[];
                    valueOf(arg0: string): _javatypes.com.neovisionaries.ws.client.WebSocketState;
                    
                }
            }
            interface WebSocketExtension extends any {
                
                getName(): string;
                getParameters(): _javatypes.java.util.Map<string, string>;
                containsParameter(arg0: string): boolean;
                getParameter(arg0: string): string;
                setParameter(arg0: string, arg1: string): _javatypes.com.neovisionaries.ws.client.WebSocketExtension;
                toString(): string;
                
            }
            namespace WebSocketExtension {
                interface static {
                    new (arg0: string): _javatypes.com.neovisionaries.ws.client.WebSocketExtension;
                    new (arg0: _javatypes.com.neovisionaries.ws.client.WebSocketExtension): _javatypes.com.neovisionaries.ws.client.WebSocketExtension;
                    
                    readonly PERMESSAGE_DEFLATE: string;
                    
                    parse(arg0: string): _javatypes.com.neovisionaries.ws.client.WebSocketExtension;
                    
                }
            }
            interface PayloadGenerator extends _javatypes.java.lang.Interface {
                
                generate(): number[];
                
            }
            namespace PayloadGenerator {
                interface static {
                    
                    
                    
                }
            }
            interface ThreadType extends _javatypes.java.lang.Enum<_javatypes.com.neovisionaries.ws.client.ThreadType> {
                
                
            }
            namespace ThreadType {
                interface static {
                    
                    readonly READING_THREAD: _javatypes.com.neovisionaries.ws.client.ThreadType;
                    readonly WRITING_THREAD: _javatypes.com.neovisionaries.ws.client.ThreadType;
                    readonly CONNECT_THREAD: _javatypes.com.neovisionaries.ws.client.ThreadType;
                    readonly FINISH_THREAD: _javatypes.com.neovisionaries.ws.client.ThreadType;
                    
                    values(): _javatypes.com.neovisionaries.ws.client.ThreadType[];
                    valueOf(arg0: string): _javatypes.com.neovisionaries.ws.client.ThreadType;
                    
                }
            }
        }
    }

    namespace io.noties.prism4j {
    
        interface Prism4j$Node extends _javatypes.java.lang.Interface {
            
            textLength(): number;
            isSyntax(): boolean;
            
        }
        namespace Prism4j$Node {
            interface static {
                
                
                
            }
        }
    }

    namespace java {
    
    
        namespace io {
        
            interface OutputStream extends any, _javatypes.java.io.Closeable, _javatypes.java.io.Flushable {
                
                write(arg0: number): void;
                write(arg0: number[]): void;
                write(arg0: number[], arg1: number, arg2: number): void;
                flush(): void;
                close(): void;
                
            }
            namespace OutputStream {
                interface static {
                    new (): _javatypes.java.io.OutputStream;
                    
                    
                    nullOutputStream(): _javatypes.java.io.OutputStream;
                    
                }
            }
            interface ObjectInput extends _javatypes.java.lang.Interface, _javatypes.java.io.DataInput, _javatypes.java.lang.AutoCloseable {
                
                readObject(): any;
                read(): number;
                read(arg0: number[]): number;
                read(arg0: number[], arg1: number, arg2: number): number;
                skip(arg0: number): number;
                available(): number;
                close(): void;
                
            }
            namespace ObjectInput {
                interface static {
                    
                    
                    
                }
            }
            interface Writer extends any, _javatypes.java.lang.Appendable, _javatypes.java.io.Closeable, _javatypes.java.io.Flushable {
                
                write(arg0: number): void;
                write(arg0: number[]): void;
                write(arg0: number[], arg1: number, arg2: number): void;
                write(arg0: string): void;
                write(arg0: string, arg1: number, arg2: number): void;
                append(arg0: _javatypes.java.lang.CharSequence): _javatypes.java.io.Writer;
                append(arg0: _javatypes.java.lang.CharSequence, arg1: number, arg2: number): _javatypes.java.io.Writer;
                append(arg0: number): _javatypes.java.io.Writer;
                flush(): void;
                close(): void;
                
            }
            namespace Writer {
                interface static {
                    
                    
                    nullWriter(): _javatypes.java.io.Writer;
                    
                }
            }
            interface Externalizable extends _javatypes.java.lang.Interface, _javatypes.java.io.Serializable {
                
                writeExternal(arg0: _javatypes.java.io.ObjectOutput): void;
                readExternal(arg0: _javatypes.java.io.ObjectInput): void;
                
            }
            namespace Externalizable {
                interface static {
                    
                    
                    
                }
            }
            interface IOException extends _javatypes.java.lang.Exception {
                
                
            }
            namespace IOException {
                interface static {
                    new (): _javatypes.java.io.IOException;
                    new (arg0: string): _javatypes.java.io.IOException;
                    new (arg0: string, arg1: _javatypes.java.lang.Throwable): _javatypes.java.io.IOException;
                    new (arg0: _javatypes.java.lang.Throwable): _javatypes.java.io.IOException;
                    
                    
                    
                }
            }
            interface ObjectOutput extends _javatypes.java.lang.Interface, _javatypes.java.io.DataOutput, _javatypes.java.lang.AutoCloseable {
                
                writeObject(arg0: any): void;
                write(arg0: number): void;
                write(arg0: number[]): void;
                write(arg0: number[], arg1: number, arg2: number): void;
                flush(): void;
                close(): void;
                
            }
            namespace ObjectOutput {
                interface static {
                    
                    
                    
                }
            }
            interface Reader extends any, _javatypes.java.lang.Readable, _javatypes.java.io.Closeable {
                
                read(arg0: _javatypes.java.nio.CharBuffer): number;
                read(): number;
                read(arg0: number[]): number;
                read(arg0: number[], arg1: number, arg2: number): number;
                skip(arg0: number): number;
                ready(): boolean;
                markSupported(): boolean;
                mark(arg0: number): void;
                reset(): void;
                close(): void;
                transferTo(arg0: _javatypes.java.io.Writer): number;
                
            }
            namespace Reader {
                interface static {
                    
                    
                    nullReader(): _javatypes.java.io.Reader;
                    
                }
            }
            interface PrintWriter extends _javatypes.java.io.Writer {
                
                flush(): void;
                close(): void;
                checkError(): boolean;
                write(arg0: number): void;
                write(arg0: number[], arg1: number, arg2: number): void;
                write(arg0: number[]): void;
                write(arg0: string, arg1: number, arg2: number): void;
                write(arg0: string): void;
                print(arg0: boolean): void;
                print(arg0: number): void;
                print(arg0: number): void;
                print(arg0: number): void;
                print(arg0: number): void;
                print(arg0: number): void;
                print(arg0: number[]): void;
                print(arg0: string): void;
                print(arg0: any): void;
                println(): void;
                println(arg0: boolean): void;
                println(arg0: number): void;
                println(arg0: number): void;
                println(arg0: number): void;
                println(arg0: number): void;
                println(arg0: number): void;
                println(arg0: number[]): void;
                println(arg0: string): void;
                println(arg0: any): void;
                printf(arg0: string, arg1: any[]): _javatypes.java.io.PrintWriter;
                printf(arg0: _javatypes.java.util.Locale, arg1: string, arg2: any[]): _javatypes.java.io.PrintWriter;
                format(arg0: string, arg1: any[]): _javatypes.java.io.PrintWriter;
                format(arg0: _javatypes.java.util.Locale, arg1: string, arg2: any[]): _javatypes.java.io.PrintWriter;
                append(arg0: _javatypes.java.lang.CharSequence): _javatypes.java.io.PrintWriter;
                append(arg0: _javatypes.java.lang.CharSequence, arg1: number, arg2: number): _javatypes.java.io.PrintWriter;
                append(arg0: number): _javatypes.java.io.PrintWriter;
                
            }
            namespace PrintWriter {
                interface static {
                    new (arg0: _javatypes.java.io.Writer): _javatypes.java.io.PrintWriter;
                    new (arg0: _javatypes.java.io.Writer, arg1: boolean): _javatypes.java.io.PrintWriter;
                    new (arg0: _javatypes.java.io.OutputStream): _javatypes.java.io.PrintWriter;
                    new (arg0: _javatypes.java.io.OutputStream, arg1: boolean): _javatypes.java.io.PrintWriter;
                    new (arg0: _javatypes.java.io.OutputStream, arg1: boolean, arg2: _javatypes.java.nio.charset.Charset): _javatypes.java.io.PrintWriter;
                    new (arg0: string): _javatypes.java.io.PrintWriter;
                    new (arg0: string, arg1: string): _javatypes.java.io.PrintWriter;
                    new (arg0: string, arg1: _javatypes.java.nio.charset.Charset): _javatypes.java.io.PrintWriter;
                    new (arg0: _javatypes.java.io.File): _javatypes.java.io.PrintWriter;
                    new (arg0: _javatypes.java.io.File, arg1: string): _javatypes.java.io.PrintWriter;
                    new (arg0: _javatypes.java.io.File, arg1: _javatypes.java.nio.charset.Charset): _javatypes.java.io.PrintWriter;
                    
                    
                    
                }
            }
            interface Closeable extends _javatypes.java.lang.Interface, _javatypes.java.lang.AutoCloseable {
                
                close(): void;
                
            }
            namespace Closeable {
                interface static {
                    
                    
                    
                }
            }
            interface PrintStream extends _javatypes.java.io.FilterOutputStream, _javatypes.java.lang.Appendable, _javatypes.java.io.Closeable {
                
                flush(): void;
                close(): void;
                checkError(): boolean;
                write(arg0: number): void;
                write(arg0: number[], arg1: number, arg2: number): void;
                write(arg0: number[]): void;
                writeBytes(arg0: number[]): void;
                print(arg0: boolean): void;
                print(arg0: number): void;
                print(arg0: number): void;
                print(arg0: number): void;
                print(arg0: number): void;
                print(arg0: number): void;
                print(arg0: number[]): void;
                print(arg0: string): void;
                print(arg0: any): void;
                println(): void;
                println(arg0: boolean): void;
                println(arg0: number): void;
                println(arg0: number): void;
                println(arg0: number): void;
                println(arg0: number): void;
                println(arg0: number): void;
                println(arg0: number[]): void;
                println(arg0: string): void;
                println(arg0: any): void;
                printf(arg0: string, arg1: any[]): _javatypes.java.io.PrintStream;
                printf(arg0: _javatypes.java.util.Locale, arg1: string, arg2: any[]): _javatypes.java.io.PrintStream;
                format(arg0: string, arg1: any[]): _javatypes.java.io.PrintStream;
                format(arg0: _javatypes.java.util.Locale, arg1: string, arg2: any[]): _javatypes.java.io.PrintStream;
                append(arg0: _javatypes.java.lang.CharSequence): _javatypes.java.io.PrintStream;
                append(arg0: _javatypes.java.lang.CharSequence, arg1: number, arg2: number): _javatypes.java.io.PrintStream;
                append(arg0: number): _javatypes.java.io.PrintStream;
                
            }
            namespace PrintStream {
                interface static {
                    new (arg0: _javatypes.java.io.OutputStream): _javatypes.java.io.PrintStream;
                    new (arg0: _javatypes.java.io.OutputStream, arg1: boolean): _javatypes.java.io.PrintStream;
                    new (arg0: _javatypes.java.io.OutputStream, arg1: boolean, arg2: string): _javatypes.java.io.PrintStream;
                    new (arg0: _javatypes.java.io.OutputStream, arg1: boolean, arg2: _javatypes.java.nio.charset.Charset): _javatypes.java.io.PrintStream;
                    new (arg0: string): _javatypes.java.io.PrintStream;
                    new (arg0: string, arg1: string): _javatypes.java.io.PrintStream;
                    new (arg0: string, arg1: _javatypes.java.nio.charset.Charset): _javatypes.java.io.PrintStream;
                    new (arg0: _javatypes.java.io.File): _javatypes.java.io.PrintStream;
                    new (arg0: _javatypes.java.io.File, arg1: string): _javatypes.java.io.PrintStream;
                    new (arg0: _javatypes.java.io.File, arg1: _javatypes.java.nio.charset.Charset): _javatypes.java.io.PrintStream;
                    
                    
                    
                }
            }
            interface InputStream extends any, _javatypes.java.io.Closeable {
                
                read(): number;
                read(arg0: number[]): number;
                read(arg0: number[], arg1: number, arg2: number): number;
                readAllBytes(): number[];
                readNBytes(arg0: number): number[];
                readNBytes(arg0: number[], arg1: number, arg2: number): number;
                skip(arg0: number): number;
                skipNBytes(arg0: number): void;
                available(): number;
                close(): void;
                mark(arg0: number): void;
                reset(): void;
                markSupported(): boolean;
                transferTo(arg0: _javatypes.java.io.OutputStream): number;
                
            }
            namespace InputStream {
                interface static {
                    new (): _javatypes.java.io.InputStream;
                    
                    
                    nullInputStream(): _javatypes.java.io.InputStream;
                    
                }
            }
            interface DataInput extends _javatypes.java.lang.Interface {
                
                readFully(arg0: number[]): void;
                readFully(arg0: number[], arg1: number, arg2: number): void;
                skipBytes(arg0: number): number;
                readBoolean(): boolean;
                readByte(): number;
                readUnsignedByte(): number;
                readShort(): number;
                readUnsignedShort(): number;
                readChar(): number;
                readInt(): number;
                readLong(): number;
                readFloat(): number;
                readDouble(): number;
                readLine(): string;
                readUTF(): string;
                
            }
            namespace DataInput {
                interface static {
                    
                    
                    
                }
            }
            interface DataOutput extends _javatypes.java.lang.Interface {
                
                write(arg0: number): void;
                write(arg0: number[]): void;
                write(arg0: number[], arg1: number, arg2: number): void;
                writeBoolean(arg0: boolean): void;
                writeByte(arg0: number): void;
                writeShort(arg0: number): void;
                writeChar(arg0: number): void;
                writeInt(arg0: number): void;
                writeLong(arg0: number): void;
                writeFloat(arg0: number): void;
                writeDouble(arg0: number): void;
                writeBytes(arg0: string): void;
                writeChars(arg0: string): void;
                writeUTF(arg0: string): void;
                
            }
            namespace DataOutput {
                interface static {
                    
                    
                    
                }
            }
            interface Flushable extends _javatypes.java.lang.Interface {
                
                flush(): void;
                
            }
            namespace Flushable {
                interface static {
                    
                    
                    
                }
            }
            interface FilterOutputStream extends _javatypes.java.io.OutputStream {
                
                write(arg0: number): void;
                write(arg0: number[]): void;
                write(arg0: number[], arg1: number, arg2: number): void;
                flush(): void;
                close(): void;
                
            }
            namespace FilterOutputStream {
                interface static {
                    new (arg0: _javatypes.java.io.OutputStream): _javatypes.java.io.FilterOutputStream;
                    
                    
                    
                }
            }
            interface DataOutputStream extends _javatypes.java.io.FilterOutputStream, _javatypes.java.io.DataOutput {
                
                write(arg0: number): void;
                write(arg0: number[], arg1: number, arg2: number): void;
                flush(): void;
                writeBoolean(arg0: boolean): void;
                writeByte(arg0: number): void;
                writeShort(arg0: number): void;
                writeChar(arg0: number): void;
                writeInt(arg0: number): void;
                writeLong(arg0: number): void;
                writeFloat(arg0: number): void;
                writeDouble(arg0: number): void;
                writeBytes(arg0: string): void;
                writeChars(arg0: string): void;
                writeUTF(arg0: string): void;
                size(): number;
                
            }
            namespace DataOutputStream {
                interface static {
                    new (arg0: _javatypes.java.io.OutputStream): _javatypes.java.io.DataOutputStream;
                    
                    
                    
                }
            }
            interface DataInputStream extends _javatypes.java.io.FilterInputStream, _javatypes.java.io.DataInput {
                
                read(arg0: number[]): number;
                read(arg0: number[], arg1: number, arg2: number): number;
                readFully(arg0: number[]): void;
                readFully(arg0: number[], arg1: number, arg2: number): void;
                skipBytes(arg0: number): number;
                readBoolean(): boolean;
                readByte(): number;
                readUnsignedByte(): number;
                readShort(): number;
                readUnsignedShort(): number;
                readChar(): number;
                readInt(): number;
                readLong(): number;
                readFloat(): number;
                readDouble(): number;
                readLine(): string;
                readUTF(): string;
                
            }
            namespace DataInputStream {
                interface static {
                    new (arg0: _javatypes.java.io.InputStream): _javatypes.java.io.DataInputStream;
                    
                    
                    readUTF(arg0: _javatypes.java.io.DataInput): string;
                    
                }
            }
            interface FilterInputStream extends _javatypes.java.io.InputStream {
                
                read(): number;
                read(arg0: number[]): number;
                read(arg0: number[], arg1: number, arg2: number): number;
                skip(arg0: number): number;
                available(): number;
                close(): void;
                mark(arg0: number): void;
                reset(): void;
                markSupported(): boolean;
                
            }
            namespace FilterInputStream {
                interface static {
                    
                    
                    
                }
            }
        }
    
        namespace util {
        
            interface Locale extends any, _javatypes.java.lang.Cloneable, _javatypes.java.io.Serializable {
                
                getLanguage(): string;
                getScript(): string;
                getCountry(): string;
                getVariant(): string;
                hasExtensions(): boolean;
                stripExtensions(): _javatypes.java.util.Locale;
                getExtension(arg0: number): string;
                getExtensionKeys(): _javatypes.java.util.Set<number>;
                getUnicodeLocaleAttributes(): _javatypes.java.util.Set<string>;
                getUnicodeLocaleType(arg0: string): string;
                getUnicodeLocaleKeys(): _javatypes.java.util.Set<string>;
                toString(): string;
                toLanguageTag(): string;
                getISO3Language(): string;
                getISO3Country(): string;
                getDisplayLanguage(): string;
                getDisplayLanguage(arg0: _javatypes.java.util.Locale): string;
                getDisplayScript(): string;
                getDisplayScript(arg0: _javatypes.java.util.Locale): string;
                getDisplayCountry(): string;
                getDisplayCountry(arg0: _javatypes.java.util.Locale): string;
                getDisplayVariant(): string;
                getDisplayVariant(arg0: _javatypes.java.util.Locale): string;
                getDisplayName(): string;
                getDisplayName(arg0: _javatypes.java.util.Locale): string;
                clone(): any;
                hashCode(): number;
                equals(arg0: any): boolean;
                
            }
            namespace Locale {
                interface static {
                    new (arg0: string, arg1: string, arg2: string): _javatypes.java.util.Locale;
                    new (arg0: string, arg1: string): _javatypes.java.util.Locale;
                    new (arg0: string): _javatypes.java.util.Locale;
                    
                    readonly ENGLISH: _javatypes.java.util.Locale;
                    readonly FRENCH: _javatypes.java.util.Locale;
                    readonly GERMAN: _javatypes.java.util.Locale;
                    readonly ITALIAN: _javatypes.java.util.Locale;
                    readonly JAPANESE: _javatypes.java.util.Locale;
                    readonly KOREAN: _javatypes.java.util.Locale;
                    readonly CHINESE: _javatypes.java.util.Locale;
                    readonly SIMPLIFIED_CHINESE: _javatypes.java.util.Locale;
                    readonly TRADITIONAL_CHINESE: _javatypes.java.util.Locale;
                    readonly FRANCE: _javatypes.java.util.Locale;
                    readonly GERMANY: _javatypes.java.util.Locale;
                    readonly ITALY: _javatypes.java.util.Locale;
                    readonly JAPAN: _javatypes.java.util.Locale;
                    readonly KOREA: _javatypes.java.util.Locale;
                    readonly UK: _javatypes.java.util.Locale;
                    readonly US: _javatypes.java.util.Locale;
                    readonly CANADA: _javatypes.java.util.Locale;
                    readonly CANADA_FRENCH: _javatypes.java.util.Locale;
                    readonly ROOT: _javatypes.java.util.Locale;
                    readonly CHINA: _javatypes.java.util.Locale;
                    readonly PRC: _javatypes.java.util.Locale;
                    readonly TAIWAN: _javatypes.java.util.Locale;
                    readonly PRIVATE_USE_EXTENSION: number;
                    readonly UNICODE_LOCALE_EXTENSION: number;
                    
                    getDefault(): _javatypes.java.util.Locale;
                    getDefault(arg0: _javatypes.java.util.Locale$Category): _javatypes.java.util.Locale;
                    setDefault(arg0: _javatypes.java.util.Locale): void;
                    setDefault(arg0: _javatypes.java.util.Locale$Category, arg1: _javatypes.java.util.Locale): void;
                    getAvailableLocales(): _javatypes.java.util.Locale[];
                    getISOCountries(): string[];
                    getISOCountries(arg0: _javatypes.java.util.Locale$IsoCountryCode): _javatypes.java.util.Set<string>;
                    getISOLanguages(): string[];
                    forLanguageTag(arg0: string): _javatypes.java.util.Locale;
                    filter(arg0: _javatypes.java.util.List<_javatypes.java.util.Locale$LanguageRange>, arg1: _javatypes.java.util.Collection<_javatypes.java.util.Locale>, arg2: _javatypes.java.util.Locale$FilteringMode): _javatypes.java.util.List<_javatypes.java.util.Locale>;
                    filter(arg0: _javatypes.java.util.List<_javatypes.java.util.Locale$LanguageRange>, arg1: _javatypes.java.util.Collection<_javatypes.java.util.Locale>): _javatypes.java.util.List<_javatypes.java.util.Locale>;
                    filterTags(arg0: _javatypes.java.util.List<_javatypes.java.util.Locale$LanguageRange>, arg1: _javatypes.java.util.Collection<string>, arg2: _javatypes.java.util.Locale$FilteringMode): _javatypes.java.util.List<string>;
                    filterTags(arg0: _javatypes.java.util.List<_javatypes.java.util.Locale$LanguageRange>, arg1: _javatypes.java.util.Collection<string>): _javatypes.java.util.List<string>;
                    lookup(arg0: _javatypes.java.util.List<_javatypes.java.util.Locale$LanguageRange>, arg1: _javatypes.java.util.Collection<_javatypes.java.util.Locale>): _javatypes.java.util.Locale;
                    lookupTag(arg0: _javatypes.java.util.List<_javatypes.java.util.Locale$LanguageRange>, arg1: _javatypes.java.util.Collection<string>): string;
                    
                }
            }
            interface ResourceBundle extends any {
                
                getBaseBundleName(): string;
                getString(arg0: string): string;
                getStringArray(arg0: string): string[];
                getObject(arg0: string): any;
                getLocale(): _javatypes.java.util.Locale;
                getKeys(): _javatypes.java.util.Enumeration<string>;
                containsKey(arg0: string): boolean;
                keySet(): _javatypes.java.util.Set<string>;
                
            }
            namespace ResourceBundle {
                interface static {
                    new (): _javatypes.java.util.ResourceBundle;
                    
                    
                    getBundle(arg0: string): _javatypes.java.util.ResourceBundle;
                    getBundle(arg0: string, arg1: _javatypes.java.util.ResourceBundle$Control): _javatypes.java.util.ResourceBundle;
                    getBundle(arg0: string, arg1: _javatypes.java.util.Locale): _javatypes.java.util.ResourceBundle;
                    getBundle(arg0: string, arg1: _javatypes.java.lang.Module): _javatypes.java.util.ResourceBundle;
                    getBundle(arg0: string, arg1: _javatypes.java.util.Locale, arg2: _javatypes.java.lang.Module): _javatypes.java.util.ResourceBundle;
                    getBundle(arg0: string, arg1: _javatypes.java.util.Locale, arg2: _javatypes.java.util.ResourceBundle$Control): _javatypes.java.util.ResourceBundle;
                    getBundle(arg0: string, arg1: _javatypes.java.util.Locale, arg2: _javatypes.java.lang.ClassLoader): _javatypes.java.util.ResourceBundle;
                    getBundle(arg0: string, arg1: _javatypes.java.util.Locale, arg2: _javatypes.java.lang.ClassLoader, arg3: _javatypes.java.util.ResourceBundle$Control): _javatypes.java.util.ResourceBundle;
                    clearCache(): void;
                    clearCache(arg0: _javatypes.java.lang.ClassLoader): void;
                    
                }
            }
            interface Map$Entry<K, V> extends _javatypes.java.lang.Interface {
                
                getKey(): K;
                getValue(): V;
                setValue(arg0: V): V;
                equals(arg0: any): boolean;
                hashCode(): number;
                
            }
            namespace Map$Entry {
                interface static {
                    
                    
                    comparingByKey<K, V>(): _javatypes.java.util.Comparator<_javatypes.java.util.Map$Entry<K, V>>;
                    comparingByValue<K, V>(): _javatypes.java.util.Comparator<_javatypes.java.util.Map$Entry<K, V>>;
                    comparingByKey<K, V>(arg0: _javatypes.java.util.Comparator<any>): _javatypes.java.util.Comparator<_javatypes.java.util.Map$Entry<K, V>>;
                    comparingByValue<K, V>(arg0: _javatypes.java.util.Comparator<any>): _javatypes.java.util.Comparator<_javatypes.java.util.Map$Entry<K, V>>;
                    copyOf<K, V>(arg0: _javatypes.java.util.Map$Entry<any, any>): _javatypes.java.util.Map$Entry<K, V>;
                    
                }
            }
            interface BitSet extends any, _javatypes.java.lang.Cloneable, _javatypes.java.io.Serializable {
                
                toByteArray(): number[];
                toLongArray(): number[];
                flip(arg0: number): void;
                flip(arg0: number, arg1: number): void;
                set(arg0: number): void;
                set(arg0: number, arg1: boolean): void;
                set(arg0: number, arg1: number): void;
                set(arg0: number, arg1: number, arg2: boolean): void;
                clear(arg0: number): void;
                clear(arg0: number, arg1: number): void;
                clear(): void;
                get(arg0: number): boolean;
                get(arg0: number, arg1: number): _javatypes.java.util.BitSet;
                nextSetBit(arg0: number): number;
                nextClearBit(arg0: number): number;
                previousSetBit(arg0: number): number;
                previousClearBit(arg0: number): number;
                length(): number;
                isEmpty(): boolean;
                intersects(arg0: _javatypes.java.util.BitSet): boolean;
                cardinality(): number;
                and(arg0: _javatypes.java.util.BitSet): void;
                or(arg0: _javatypes.java.util.BitSet): void;
                xor(arg0: _javatypes.java.util.BitSet): void;
                andNot(arg0: _javatypes.java.util.BitSet): void;
                hashCode(): number;
                size(): number;
                equals(arg0: any): boolean;
                clone(): any;
                toString(): string;
                stream(): _javatypes.java.util.stream.IntStream;
                
            }
            namespace BitSet {
                interface static {
                    new (): _javatypes.java.util.BitSet;
                    new (arg0: number): _javatypes.java.util.BitSet;
                    
                    
                    valueOf(arg0: number[]): _javatypes.java.util.BitSet;
                    valueOf(arg0: _javatypes.java.nio.LongBuffer): _javatypes.java.util.BitSet;
                    valueOf(arg0: number[]): _javatypes.java.util.BitSet;
                    valueOf(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.util.BitSet;
                    
                }
            }
            interface HashMap<K, V> extends _javatypes.java.util.AbstractMap<K, V>, _javatypes.java.util.Map<K, V>, _javatypes.java.lang.Cloneable, _javatypes.java.io.Serializable {
                
                size(): number;
                isEmpty(): boolean;
                get(arg0: any): V;
                containsKey(arg0: any): boolean;
                put(arg0: K, arg1: V): V;
                putAll(arg0: _javatypes.java.util.Map<any, any>): void;
                remove(arg0: any): V;
                clear(): void;
                containsValue(arg0: any): boolean;
                keySet(): _javatypes.java.util.Set<K>;
                values(): _javatypes.java.util.Collection<V>;
                entrySet(): _javatypes.java.util.Set<_javatypes.java.util.Map$Entry<K, V>>;
                getOrDefault(arg0: any, arg1: V): V;
                putIfAbsent(arg0: K, arg1: V): V;
                remove(arg0: any, arg1: any): boolean;
                replace(arg0: K, arg1: V, arg2: V): boolean;
                replace(arg0: K, arg1: V): V;
                computeIfAbsent(arg0: K, arg1: _javatypes.java.util._function.Function<any, any>): V;
                computeIfPresent(arg0: K, arg1: _javatypes.java.util._function.BiFunction<any, any, any>): V;
                compute(arg0: K, arg1: _javatypes.java.util._function.BiFunction<any, any, any>): V;
                merge(arg0: K, arg1: V, arg2: _javatypes.java.util._function.BiFunction<any, any, any>): V;
                forEach(arg0: _javatypes.java.util._function.BiConsumer<any, any>): void;
                replaceAll(arg0: _javatypes.java.util._function.BiFunction<any, any, any>): void;
                clone(): any;
                
            }
            namespace HashMap {
                interface static {
                    new <K, V>(arg0: number, arg1: number): _javatypes.java.util.HashMap<K, V>;
                    new <K, V>(arg0: number): _javatypes.java.util.HashMap<K, V>;
                    new <K, V>(): _javatypes.java.util.HashMap<K, V>;
                    new <K, V>(arg0: _javatypes.java.util.Map<any, any>): _javatypes.java.util.HashMap<K, V>;
                    
                    
                    
                }
            }
            interface Hashtable<K, V> extends _javatypes.java.util.Dictionary<K, V>, _javatypes.java.util.Map<K, V>, _javatypes.java.lang.Cloneable, _javatypes.java.io.Serializable {
                
                size(): number;
                isEmpty(): boolean;
                keys(): _javatypes.java.util.Enumeration<K>;
                elements(): _javatypes.java.util.Enumeration<V>;
                contains(arg0: any): boolean;
                containsValue(arg0: any): boolean;
                containsKey(arg0: any): boolean;
                get(arg0: any): V;
                put(arg0: K, arg1: V): V;
                remove(arg0: any): V;
                putAll(arg0: _javatypes.java.util.Map<any, any>): void;
                clear(): void;
                clone(): any;
                toString(): string;
                keySet(): _javatypes.java.util.Set<K>;
                entrySet(): _javatypes.java.util.Set<_javatypes.java.util.Map$Entry<K, V>>;
                values(): _javatypes.java.util.Collection<V>;
                equals(arg0: any): boolean;
                hashCode(): number;
                getOrDefault(arg0: any, arg1: V): V;
                forEach(arg0: _javatypes.java.util._function.BiConsumer<any, any>): void;
                replaceAll(arg0: _javatypes.java.util._function.BiFunction<any, any, any>): void;
                putIfAbsent(arg0: K, arg1: V): V;
                remove(arg0: any, arg1: any): boolean;
                replace(arg0: K, arg1: V, arg2: V): boolean;
                replace(arg0: K, arg1: V): V;
                computeIfAbsent(arg0: K, arg1: _javatypes.java.util._function.Function<any, any>): V;
                computeIfPresent(arg0: K, arg1: _javatypes.java.util._function.BiFunction<any, any, any>): V;
                compute(arg0: K, arg1: _javatypes.java.util._function.BiFunction<any, any, any>): V;
                merge(arg0: K, arg1: V, arg2: _javatypes.java.util._function.BiFunction<any, any, any>): V;
                
            }
            namespace Hashtable {
                interface static {
                    new <K, V>(arg0: number, arg1: number): _javatypes.java.util.Hashtable<K, V>;
                    new <K, V>(arg0: number): _javatypes.java.util.Hashtable<K, V>;
                    new <K, V>(): _javatypes.java.util.Hashtable<K, V>;
                    new <K, V>(arg0: _javatypes.java.util.Map<any, any>): _javatypes.java.util.Hashtable<K, V>;
                    
                    
                    
                }
            }
            interface Optional<T> extends any {
                
                get(): T;
                isPresent(): boolean;
                isEmpty(): boolean;
                ifPresent(arg0: _javatypes.java.util._function.Consumer<any>): void;
                ifPresentOrElse(arg0: _javatypes.java.util._function.Consumer<any>, arg1: _javatypes.java.lang.Runnable): void;
                filter(arg0: _javatypes.java.util._function.Predicate<any>): _javatypes.java.util.Optional<T>;
                map<U>(arg0: _javatypes.java.util._function.Function<any, any>): _javatypes.java.util.Optional<U>;
                flatMap<U>(arg0: _javatypes.java.util._function.Function<any, any>): _javatypes.java.util.Optional<U>;
                or(arg0: _javatypes.java.util._function.Supplier<any>): _javatypes.java.util.Optional<T>;
                stream(): _javatypes.java.util.stream.Stream<T>;
                orElse(arg0: T): T;
                orElseGet(arg0: _javatypes.java.util._function.Supplier<any>): T;
                orElseThrow(): T;
                orElseThrow<X>(arg0: _javatypes.java.util._function.Supplier<any>): T;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace Optional {
                interface static {
                    
                    
                    empty<T>(): _javatypes.java.util.Optional<T>;
                    of<T>(arg0: T): _javatypes.java.util.Optional<T>;
                    ofNullable<T>(arg0: T): _javatypes.java.util.Optional<T>;
                    
                }
            }
            interface UUID extends any, _javatypes.java.io.Serializable, _javatypes.java.lang.Comparable<_javatypes.java.util.UUID> {
                
                getLeastSignificantBits(): number;
                getMostSignificantBits(): number;
                version(): number;
                variant(): number;
                timestamp(): number;
                clockSequence(): number;
                node(): number;
                toString(): string;
                hashCode(): number;
                equals(arg0: any): boolean;
                compareTo(arg0: _javatypes.java.util.UUID): number;
                
            }
            namespace UUID {
                interface static {
                    new (arg0: number, arg1: number): _javatypes.java.util.UUID;
                    
                    
                    randomUUID(): _javatypes.java.util.UUID;
                    nameUUIDFromBytes(arg0: number[]): _javatypes.java.util.UUID;
                    fromString(arg0: string): _javatypes.java.util.UUID;
                    
                }
            }
            interface HashSet<E> extends _javatypes.java.util.AbstractSet<E>, _javatypes.java.util.Set<E>, _javatypes.java.lang.Cloneable, _javatypes.java.io.Serializable {
                
                iterator(): _javatypes.java.util.Iterator<E>;
                size(): number;
                isEmpty(): boolean;
                contains(arg0: any): boolean;
                add(arg0: E): boolean;
                remove(arg0: any): boolean;
                clear(): void;
                clone(): any;
                spliterator(): _javatypes.java.util.Spliterator<E>;
                toArray(): any[];
                toArray<T>(arg0: T[]): T[];
                
            }
            namespace HashSet {
                interface static {
                    new <E>(): _javatypes.java.util.HashSet<E>;
                    new <E>(arg0: _javatypes.java.util.Collection<any>): _javatypes.java.util.HashSet<E>;
                    new <E>(arg0: number, arg1: number): _javatypes.java.util.HashSet<E>;
                    new <E>(arg0: number): _javatypes.java.util.HashSet<E>;
                    
                    
                    
                }
            }
            interface Comparator<T> extends _javatypes.java.lang.Interface {
                
                compare(arg0: T, arg1: T): number;
                equals(arg0: any): boolean;
                reversed(): _javatypes.java.util.Comparator<T>;
                thenComparing(arg0: _javatypes.java.util.Comparator<any>): _javatypes.java.util.Comparator<T>;
                thenComparing<U>(arg0: _javatypes.java.util._function.Function<any, any>, arg1: _javatypes.java.util.Comparator<any>): _javatypes.java.util.Comparator<T>;
                thenComparing<U>(arg0: _javatypes.java.util._function.Function<any, any>): _javatypes.java.util.Comparator<T>;
                thenComparingInt(arg0: _javatypes.java.util._function.ToIntFunction<any>): _javatypes.java.util.Comparator<T>;
                thenComparingLong(arg0: _javatypes.java.util._function.ToLongFunction<any>): _javatypes.java.util.Comparator<T>;
                thenComparingDouble(arg0: _javatypes.java.util._function.ToDoubleFunction<any>): _javatypes.java.util.Comparator<T>;
                
            }
            namespace Comparator {
                interface static {
                    
                    
                    reverseOrder<T>(): _javatypes.java.util.Comparator<T>;
                    naturalOrder<T>(): _javatypes.java.util.Comparator<T>;
                    nullsFirst<T>(arg0: _javatypes.java.util.Comparator<any>): _javatypes.java.util.Comparator<T>;
                    nullsLast<T>(arg0: _javatypes.java.util.Comparator<any>): _javatypes.java.util.Comparator<T>;
                    comparing<T, U>(arg0: _javatypes.java.util._function.Function<any, any>, arg1: _javatypes.java.util.Comparator<any>): _javatypes.java.util.Comparator<T>;
                    comparing<T, U>(arg0: _javatypes.java.util._function.Function<any, any>): _javatypes.java.util.Comparator<T>;
                    comparingInt<T>(arg0: _javatypes.java.util._function.ToIntFunction<any>): _javatypes.java.util.Comparator<T>;
                    comparingLong<T>(arg0: _javatypes.java.util._function.ToLongFunction<any>): _javatypes.java.util.Comparator<T>;
                    comparingDouble<T>(arg0: _javatypes.java.util._function.ToDoubleFunction<any>): _javatypes.java.util.Comparator<T>;
                    
                }
            }
            interface ArrayList<E> extends _javatypes.java.util.AbstractList<E>, _javatypes.java.util.List<E>, _javatypes.java.util.RandomAccess, _javatypes.java.lang.Cloneable, _javatypes.java.io.Serializable {
                
                trimToSize(): void;
                ensureCapacity(arg0: number): void;
                size(): number;
                isEmpty(): boolean;
                contains(arg0: any): boolean;
                indexOf(arg0: any): number;
                lastIndexOf(arg0: any): number;
                clone(): any;
                toArray(): any[];
                toArray<T>(arg0: T[]): T[];
                get(arg0: number): E;
                set(arg0: number, arg1: E): E;
                add(arg0: E): boolean;
                add(arg0: number, arg1: E): void;
                remove(arg0: number): E;
                equals(arg0: any): boolean;
                hashCode(): number;
                remove(arg0: any): boolean;
                clear(): void;
                addAll(arg0: _javatypes.java.util.Collection<any>): boolean;
                addAll(arg0: number, arg1: _javatypes.java.util.Collection<any>): boolean;
                removeAll(arg0: _javatypes.java.util.Collection<any>): boolean;
                retainAll(arg0: _javatypes.java.util.Collection<any>): boolean;
                listIterator(arg0: number): _javatypes.java.util.ListIterator<E>;
                listIterator(): _javatypes.java.util.ListIterator<E>;
                iterator(): _javatypes.java.util.Iterator<E>;
                subList(arg0: number, arg1: number): _javatypes.java.util.List<E>;
                forEach(arg0: _javatypes.java.util._function.Consumer<any>): void;
                spliterator(): _javatypes.java.util.Spliterator<E>;
                removeIf(arg0: _javatypes.java.util._function.Predicate<any>): boolean;
                replaceAll(arg0: _javatypes.java.util._function.UnaryOperator<E>): void;
                sort(arg0: _javatypes.java.util.Comparator<any>): void;
                
            }
            namespace ArrayList {
                interface static {
                    new <E>(arg0: number): _javatypes.java.util.ArrayList<E>;
                    new <E>(): _javatypes.java.util.ArrayList<E>;
                    new <E>(arg0: _javatypes.java.util.Collection<any>): _javatypes.java.util.ArrayList<E>;
                    
                    
                    
                }
            }
            interface EventListener extends _javatypes.java.lang.Interface {
                
                
            }
            namespace EventListener {
                interface static {
                    
                    
                    
                }
            }
            interface EventObject extends any, _javatypes.java.io.Serializable {
                
                getSource(): any;
                toString(): string;
                
            }
            namespace EventObject {
                interface static {
                    new (arg0: any): _javatypes.java.util.EventObject;
                    
                    
                    
                }
            }
            interface Enumeration<E> extends _javatypes.java.lang.Interface {
                
                hasMoreElements(): boolean;
                nextElement(): E;
                asIterator(): _javatypes.java.util.Iterator<E>;
                
            }
            namespace Enumeration {
                interface static {
                    
                    
                    
                }
            }
            interface Properties extends _javatypes.java.util.Hashtable<any, any> {
                
                setProperty(arg0: string, arg1: string): any;
                load(arg0: _javatypes.java.io.Reader): void;
                load(arg0: _javatypes.java.io.InputStream): void;
                save(arg0: _javatypes.java.io.OutputStream, arg1: string): void;
                store(arg0: _javatypes.java.io.Writer, arg1: string): void;
                store(arg0: _javatypes.java.io.OutputStream, arg1: string): void;
                loadFromXML(arg0: _javatypes.java.io.InputStream): void;
                storeToXML(arg0: _javatypes.java.io.OutputStream, arg1: string): void;
                storeToXML(arg0: _javatypes.java.io.OutputStream, arg1: string, arg2: string): void;
                storeToXML(arg0: _javatypes.java.io.OutputStream, arg1: string, arg2: _javatypes.java.nio.charset.Charset): void;
                getProperty(arg0: string): string;
                getProperty(arg0: string, arg1: string): string;
                propertyNames(): _javatypes.java.util.Enumeration<any>;
                stringPropertyNames(): _javatypes.java.util.Set<string>;
                list(arg0: _javatypes.java.io.PrintStream): void;
                list(arg0: _javatypes.java.io.PrintWriter): void;
                size(): number;
                isEmpty(): boolean;
                keys(): _javatypes.java.util.Enumeration<any>;
                elements(): _javatypes.java.util.Enumeration<any>;
                contains(arg0: any): boolean;
                containsValue(arg0: any): boolean;
                containsKey(arg0: any): boolean;
                get(arg0: any): any;
                put(arg0: any, arg1: any): any;
                remove(arg0: any): any;
                putAll(arg0: _javatypes.java.util.Map<any, any>): void;
                clear(): void;
                toString(): string;
                keySet(): _javatypes.java.util.Set<any>;
                values(): _javatypes.java.util.Collection<any>;
                entrySet(): _javatypes.java.util.Set<_javatypes.java.util.Map$Entry<any, any>>;
                equals(arg0: any): boolean;
                hashCode(): number;
                getOrDefault(arg0: any, arg1: any): any;
                forEach(arg0: _javatypes.java.util._function.BiConsumer<any, any>): void;
                replaceAll(arg0: _javatypes.java.util._function.BiFunction<any, any, any>): void;
                putIfAbsent(arg0: any, arg1: any): any;
                remove(arg0: any, arg1: any): boolean;
                replace(arg0: any, arg1: any, arg2: any): boolean;
                replace(arg0: any, arg1: any): any;
                computeIfAbsent(arg0: any, arg1: _javatypes.java.util._function.Function<any, any>): any;
                computeIfPresent(arg0: any, arg1: _javatypes.java.util._function.BiFunction<any, any, any>): any;
                compute(arg0: any, arg1: _javatypes.java.util._function.BiFunction<any, any, any>): any;
                merge(arg0: any, arg1: any, arg2: _javatypes.java.util._function.BiFunction<any, any, any>): any;
                clone(): any;
                
            }
            namespace Properties {
                interface static {
                    new (): _javatypes.java.util.Properties;
                    new (arg0: number): _javatypes.java.util.Properties;
                    new (arg0: _javatypes.java.util.Properties): _javatypes.java.util.Properties;
                    
                    
                    
                }
            }
            interface Date extends any, _javatypes.java.io.Serializable, _javatypes.java.lang.Cloneable, _javatypes.java.lang.Comparable<_javatypes.java.util.Date> {
                
                clone(): any;
                getYear(): number;
                setYear(arg0: number): void;
                getMonth(): number;
                setMonth(arg0: number): void;
                getDate(): number;
                setDate(arg0: number): void;
                getDay(): number;
                getHours(): number;
                setHours(arg0: number): void;
                getMinutes(): number;
                setMinutes(arg0: number): void;
                getSeconds(): number;
                setSeconds(arg0: number): void;
                getTime(): number;
                setTime(arg0: number): void;
                before(arg0: _javatypes.java.util.Date): boolean;
                after(arg0: _javatypes.java.util.Date): boolean;
                equals(arg0: any): boolean;
                compareTo(arg0: _javatypes.java.util.Date): number;
                hashCode(): number;
                toString(): string;
                toLocaleString(): string;
                toGMTString(): string;
                getTimezoneOffset(): number;
                toInstant(): _javatypes.java.time.Instant;
                
            }
            namespace Date {
                interface static {
                    new (): _javatypes.java.util.Date;
                    new (arg0: number): _javatypes.java.util.Date;
                    new (arg0: number, arg1: number, arg2: number): _javatypes.java.util.Date;
                    new (arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): _javatypes.java.util.Date;
                    new (arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.java.util.Date;
                    new (arg0: string): _javatypes.java.util.Date;
                    
                    
                    UTC(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
                    parse(arg0: string): number;
                    from(arg0: _javatypes.java.time.Instant): _javatypes.java.util.Date;
                    
                }
            }
            interface SplittableRandom extends any, _javatypes.java.util.random.RandomGenerator, _javatypes.java.util.random.RandomGenerator$SplittableGenerator {
                
                split(): _javatypes.java.util.SplittableRandom;
                split(arg0: _javatypes.java.util.random.RandomGenerator$SplittableGenerator): _javatypes.java.util.SplittableRandom;
                nextInt(): number;
                nextLong(): number;
                nextBytes(arg0: number[]): void;
                splits(): _javatypes.java.util.stream.Stream<_javatypes.java.util.random.RandomGenerator$SplittableGenerator>;
                splits(arg0: number): _javatypes.java.util.stream.Stream<_javatypes.java.util.random.RandomGenerator$SplittableGenerator>;
                splits(arg0: _javatypes.java.util.random.RandomGenerator$SplittableGenerator): _javatypes.java.util.stream.Stream<_javatypes.java.util.random.RandomGenerator$SplittableGenerator>;
                splits(arg0: number, arg1: _javatypes.java.util.random.RandomGenerator$SplittableGenerator): _javatypes.java.util.stream.Stream<_javatypes.java.util.random.RandomGenerator$SplittableGenerator>;
                ints(arg0: number): _javatypes.java.util.stream.IntStream;
                ints(): _javatypes.java.util.stream.IntStream;
                ints(arg0: number, arg1: number, arg2: number): _javatypes.java.util.stream.IntStream;
                ints(arg0: number, arg1: number): _javatypes.java.util.stream.IntStream;
                longs(arg0: number): _javatypes.java.util.stream.LongStream;
                longs(): _javatypes.java.util.stream.LongStream;
                longs(arg0: number, arg1: number, arg2: number): _javatypes.java.util.stream.LongStream;
                longs(arg0: number, arg1: number): _javatypes.java.util.stream.LongStream;
                doubles(arg0: number): _javatypes.java.util.stream.DoubleStream;
                doubles(): _javatypes.java.util.stream.DoubleStream;
                doubles(arg0: number, arg1: number, arg2: number): _javatypes.java.util.stream.DoubleStream;
                doubles(arg0: number, arg1: number): _javatypes.java.util.stream.DoubleStream;
                
            }
            namespace SplittableRandom {
                interface static {
                    new (arg0: number): _javatypes.java.util.SplittableRandom;
                    new (): _javatypes.java.util.SplittableRandom;
                    
                    
                    
                }
            }
            interface Vector<E> extends _javatypes.java.util.AbstractList<E>, _javatypes.java.util.List<E>, _javatypes.java.util.RandomAccess, _javatypes.java.lang.Cloneable, _javatypes.java.io.Serializable {
                
                copyInto(arg0: any[]): void;
                trimToSize(): void;
                ensureCapacity(arg0: number): void;
                setSize(arg0: number): void;
                capacity(): number;
                size(): number;
                isEmpty(): boolean;
                elements(): _javatypes.java.util.Enumeration<E>;
                contains(arg0: any): boolean;
                indexOf(arg0: any): number;
                indexOf(arg0: any, arg1: number): number;
                lastIndexOf(arg0: any): number;
                lastIndexOf(arg0: any, arg1: number): number;
                elementAt(arg0: number): E;
                firstElement(): E;
                lastElement(): E;
                setElementAt(arg0: E, arg1: number): void;
                removeElementAt(arg0: number): void;
                insertElementAt(arg0: E, arg1: number): void;
                addElement(arg0: E): void;
                removeElement(arg0: any): boolean;
                removeAllElements(): void;
                clone(): any;
                toArray(): any[];
                toArray<T>(arg0: T[]): T[];
                get(arg0: number): E;
                set(arg0: number, arg1: E): E;
                add(arg0: E): boolean;
                remove(arg0: any): boolean;
                add(arg0: number, arg1: E): void;
                remove(arg0: number): E;
                clear(): void;
                containsAll(arg0: _javatypes.java.util.Collection<any>): boolean;
                addAll(arg0: _javatypes.java.util.Collection<any>): boolean;
                removeAll(arg0: _javatypes.java.util.Collection<any>): boolean;
                retainAll(arg0: _javatypes.java.util.Collection<any>): boolean;
                removeIf(arg0: _javatypes.java.util._function.Predicate<any>): boolean;
                addAll(arg0: number, arg1: _javatypes.java.util.Collection<any>): boolean;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                subList(arg0: number, arg1: number): _javatypes.java.util.List<E>;
                listIterator(arg0: number): _javatypes.java.util.ListIterator<E>;
                listIterator(): _javatypes.java.util.ListIterator<E>;
                iterator(): _javatypes.java.util.Iterator<E>;
                forEach(arg0: _javatypes.java.util._function.Consumer<any>): void;
                replaceAll(arg0: _javatypes.java.util._function.UnaryOperator<E>): void;
                sort(arg0: _javatypes.java.util.Comparator<any>): void;
                spliterator(): _javatypes.java.util.Spliterator<E>;
                
            }
            namespace Vector {
                interface static {
                    new <E>(arg0: number, arg1: number): _javatypes.java.util.Vector<E>;
                    new <E>(arg0: number): _javatypes.java.util.Vector<E>;
                    new <E>(): _javatypes.java.util.Vector<E>;
                    new <E>(arg0: _javatypes.java.util.Collection<any>): _javatypes.java.util.Vector<E>;
                    
                    
                    
                }
            }
            interface Iterator<E> extends _javatypes.java.lang.Interface {
                
                hasNext(): boolean;
                next(): E;
                remove(): void;
                forEachRemaining(arg0: _javatypes.java.util._function.Consumer<any>): void;
                
            }
            namespace Iterator {
                interface static {
                    
                    
                    
                }
            }
            interface ResourceBundle$Control extends any {
                
                getFormats(arg0: string): _javatypes.java.util.List<string>;
                getCandidateLocales(arg0: string, arg1: _javatypes.java.util.Locale): _javatypes.java.util.List<_javatypes.java.util.Locale>;
                getFallbackLocale(arg0: string, arg1: _javatypes.java.util.Locale): _javatypes.java.util.Locale;
                newBundle(arg0: string, arg1: _javatypes.java.util.Locale, arg2: string, arg3: _javatypes.java.lang.ClassLoader, arg4: boolean): _javatypes.java.util.ResourceBundle;
                getTimeToLive(arg0: string, arg1: _javatypes.java.util.Locale): number;
                needsReload(arg0: string, arg1: _javatypes.java.util.Locale, arg2: string, arg3: _javatypes.java.lang.ClassLoader, arg4: _javatypes.java.util.ResourceBundle, arg5: number): boolean;
                toBundleName(arg0: string, arg1: _javatypes.java.util.Locale): string;
                toResourceName(arg0: string, arg1: string): string;
                
            }
            namespace ResourceBundle$Control {
                interface static {
                    
                    readonly FORMAT_DEFAULT: _javatypes.java.util.List<string>;
                    readonly FORMAT_CLASS: _javatypes.java.util.List<string>;
                    readonly FORMAT_PROPERTIES: _javatypes.java.util.List<string>;
                    readonly TTL_DONT_CACHE: number;
                    readonly TTL_NO_EXPIRATION_CONTROL: number;
                    
                    getControl(arg0: _javatypes.java.util.List<string>): _javatypes.java.util.ResourceBundle$Control;
                    getNoFallbackControl(arg0: _javatypes.java.util.List<string>): _javatypes.java.util.ResourceBundle$Control;
                    
                }
            }
            interface Dictionary<K, V> extends any {
                
                size(): number;
                isEmpty(): boolean;
                keys(): _javatypes.java.util.Enumeration<K>;
                elements(): _javatypes.java.util.Enumeration<V>;
                get(arg0: any): V;
                put(arg0: K, arg1: V): V;
                remove(arg0: any): V;
                
            }
            namespace Dictionary {
                interface static {
                    new <K, V>(): _javatypes.java.util.Dictionary<K, V>;
                    
                    
                    
                }
            }
            interface Spliterator$OfLong extends _javatypes.java.lang.Interface, _javatypes.java.util.Spliterator$OfPrimitive<number, _javatypes.java.util._function.LongConsumer, _javatypes.java.util.Spliterator$OfLong> {
                
                trySplit(): _javatypes.java.util.Spliterator$OfLong;
                tryAdvance(arg0: _javatypes.java.util._function.LongConsumer): boolean;
                forEachRemaining(arg0: _javatypes.java.util._function.LongConsumer): void;
                tryAdvance(arg0: _javatypes.java.util._function.Consumer<any>): boolean;
                forEachRemaining(arg0: _javatypes.java.util._function.Consumer<any>): void;
                
            }
            namespace Spliterator$OfLong {
                interface static {
                    
                    
                    
                }
            }
            interface OptionalLong extends any {
                
                getAsLong(): number;
                isPresent(): boolean;
                isEmpty(): boolean;
                ifPresent(arg0: _javatypes.java.util._function.LongConsumer): void;
                ifPresentOrElse(arg0: _javatypes.java.util._function.LongConsumer, arg1: _javatypes.java.lang.Runnable): void;
                stream(): _javatypes.java.util.stream.LongStream;
                orElse(arg0: number): number;
                orElseGet(arg0: _javatypes.java.util._function.LongSupplier): number;
                orElseThrow(): number;
                orElseThrow<X>(arg0: _javatypes.java.util._function.Supplier<any>): number;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace OptionalLong {
                interface static {
                    
                    
                    empty(): _javatypes.java.util.OptionalLong;
                    of(arg0: number): _javatypes.java.util.OptionalLong;
                    
                }
            }
            interface AbstractList<E> extends _javatypes.java.util.AbstractCollection<E>, _javatypes.java.util.List<E> {
                
                add(arg0: E): boolean;
                get(arg0: number): E;
                set(arg0: number, arg1: E): E;
                add(arg0: number, arg1: E): void;
                remove(arg0: number): E;
                indexOf(arg0: any): number;
                lastIndexOf(arg0: any): number;
                clear(): void;
                addAll(arg0: number, arg1: _javatypes.java.util.Collection<any>): boolean;
                iterator(): _javatypes.java.util.Iterator<E>;
                listIterator(): _javatypes.java.util.ListIterator<E>;
                listIterator(arg0: number): _javatypes.java.util.ListIterator<E>;
                subList(arg0: number, arg1: number): _javatypes.java.util.List<E>;
                equals(arg0: any): boolean;
                hashCode(): number;
                
            }
            namespace AbstractList {
                interface static {
                    
                    
                    
                }
            }
            interface ListIterator<E> extends _javatypes.java.lang.Interface, _javatypes.java.util.Iterator<E> {
                
                hasNext(): boolean;
                next(): E;
                hasPrevious(): boolean;
                previous(): E;
                nextIndex(): number;
                previousIndex(): number;
                remove(): void;
                set(arg0: E): void;
                add(arg0: E): void;
                
            }
            namespace ListIterator {
                interface static {
                    
                    
                    
                }
            }
            interface Locale$FilteringMode extends _javatypes.java.lang.Enum<_javatypes.java.util.Locale$FilteringMode> {
                
                
            }
            namespace Locale$FilteringMode {
                interface static {
                    
                    readonly AUTOSELECT_FILTERING: _javatypes.java.util.Locale$FilteringMode;
                    readonly EXTENDED_FILTERING: _javatypes.java.util.Locale$FilteringMode;
                    readonly IGNORE_EXTENDED_RANGES: _javatypes.java.util.Locale$FilteringMode;
                    readonly MAP_EXTENDED_RANGES: _javatypes.java.util.Locale$FilteringMode;
                    readonly REJECT_EXTENDED_RANGES: _javatypes.java.util.Locale$FilteringMode;
                    
                    values(): _javatypes.java.util.Locale$FilteringMode[];
                    valueOf(arg0: string): _javatypes.java.util.Locale$FilteringMode;
                    
                }
            }
            interface LongSummaryStatistics extends any, _javatypes.java.util._function.LongConsumer, _javatypes.java.util._function.IntConsumer {
                
                accept(arg0: number): void;
                accept(arg0: number): void;
                combine(arg0: _javatypes.java.util.LongSummaryStatistics): void;
                getCount(): number;
                getSum(): number;
                getMin(): number;
                getMax(): number;
                getAverage(): number;
                toString(): string;
                
            }
            namespace LongSummaryStatistics {
                interface static {
                    new (): _javatypes.java.util.LongSummaryStatistics;
                    new (arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.java.util.LongSummaryStatistics;
                    
                    
                    
                }
            }
            interface PrimitiveIterator$OfDouble extends _javatypes.java.lang.Interface, _javatypes.java.util.PrimitiveIterator<number, _javatypes.java.util._function.DoubleConsumer> {
                
                nextDouble(): number;
                forEachRemaining(arg0: _javatypes.java.util._function.DoubleConsumer): void;
                next(): number;
                forEachRemaining(arg0: _javatypes.java.util._function.Consumer<any>): void;
                
            }
            namespace PrimitiveIterator$OfDouble {
                interface static {
                    
                    
                    
                }
            }
            interface OptionalInt extends any {
                
                getAsInt(): number;
                isPresent(): boolean;
                isEmpty(): boolean;
                ifPresent(arg0: _javatypes.java.util._function.IntConsumer): void;
                ifPresentOrElse(arg0: _javatypes.java.util._function.IntConsumer, arg1: _javatypes.java.lang.Runnable): void;
                stream(): _javatypes.java.util.stream.IntStream;
                orElse(arg0: number): number;
                orElseGet(arg0: _javatypes.java.util._function.IntSupplier): number;
                orElseThrow(): number;
                orElseThrow<X>(arg0: _javatypes.java.util._function.Supplier<any>): number;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace OptionalInt {
                interface static {
                    
                    
                    empty(): _javatypes.java.util.OptionalInt;
                    of(arg0: number): _javatypes.java.util.OptionalInt;
                    
                }
            }
            interface Locale$IsoCountryCode extends _javatypes.java.lang.Enum<_javatypes.java.util.Locale$IsoCountryCode> {
                
                
            }
            namespace Locale$IsoCountryCode {
                interface static {
                    
                    readonly PART1_ALPHA2: _javatypes.java.util.Locale$IsoCountryCode;
                    readonly PART1_ALPHA3: _javatypes.java.util.Locale$IsoCountryCode;
                    readonly PART3: _javatypes.java.util.Locale$IsoCountryCode;
                    
                    values(): _javatypes.java.util.Locale$IsoCountryCode[];
                    valueOf(arg0: string): _javatypes.java.util.Locale$IsoCountryCode;
                    
                }
            }
            interface Spliterator<T> extends _javatypes.java.lang.Interface {
                
                tryAdvance(arg0: _javatypes.java.util._function.Consumer<any>): boolean;
                forEachRemaining(arg0: _javatypes.java.util._function.Consumer<any>): void;
                trySplit(): _javatypes.java.util.Spliterator<T>;
                estimateSize(): number;
                getExactSizeIfKnown(): number;
                characteristics(): number;
                hasCharacteristics(arg0: number): boolean;
                getComparator(): _javatypes.java.util.Comparator<any>;
                
            }
            namespace Spliterator {
                interface static {
                    
                    readonly ORDERED: number;
                    readonly DISTINCT: number;
                    readonly SORTED: number;
                    readonly SIZED: number;
                    readonly NONNULL: number;
                    readonly IMMUTABLE: number;
                    readonly CONCURRENT: number;
                    readonly SUBSIZED: number;
                    
                    
                }
            }
            interface OptionalDouble extends any {
                
                getAsDouble(): number;
                isPresent(): boolean;
                isEmpty(): boolean;
                ifPresent(arg0: _javatypes.java.util._function.DoubleConsumer): void;
                ifPresentOrElse(arg0: _javatypes.java.util._function.DoubleConsumer, arg1: _javatypes.java.lang.Runnable): void;
                stream(): _javatypes.java.util.stream.DoubleStream;
                orElse(arg0: number): number;
                orElseGet(arg0: _javatypes.java.util._function.DoubleSupplier): number;
                orElseThrow(): number;
                orElseThrow<X>(arg0: _javatypes.java.util._function.Supplier<any>): number;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace OptionalDouble {
                interface static {
                    
                    
                    empty(): _javatypes.java.util.OptionalDouble;
                    of(arg0: number): _javatypes.java.util.OptionalDouble;
                    
                }
            }
            interface AbstractSet<E> extends _javatypes.java.util.AbstractCollection<E>, _javatypes.java.util.Set<E> {
                
                equals(arg0: any): boolean;
                hashCode(): number;
                removeAll(arg0: _javatypes.java.util.Collection<any>): boolean;
                
            }
            namespace AbstractSet {
                interface static {
                    
                    
                    
                }
            }
            interface AbstractMap<K, V> extends any, _javatypes.java.util.Map<K, V> {
                
                size(): number;
                isEmpty(): boolean;
                containsValue(arg0: any): boolean;
                containsKey(arg0: any): boolean;
                get(arg0: any): V;
                put(arg0: K, arg1: V): V;
                remove(arg0: any): V;
                putAll(arg0: _javatypes.java.util.Map<any, any>): void;
                clear(): void;
                keySet(): _javatypes.java.util.Set<K>;
                values(): _javatypes.java.util.Collection<V>;
                entrySet(): _javatypes.java.util.Set<_javatypes.java.util.Map$Entry<K, V>>;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace AbstractMap {
                interface static {
                    
                    
                    
                }
            }
            interface Spliterator$OfInt extends _javatypes.java.lang.Interface, _javatypes.java.util.Spliterator$OfPrimitive<number, _javatypes.java.util._function.IntConsumer, _javatypes.java.util.Spliterator$OfInt> {
                
                trySplit(): _javatypes.java.util.Spliterator$OfInt;
                tryAdvance(arg0: _javatypes.java.util._function.IntConsumer): boolean;
                forEachRemaining(arg0: _javatypes.java.util._function.IntConsumer): void;
                tryAdvance(arg0: _javatypes.java.util._function.Consumer<any>): boolean;
                forEachRemaining(arg0: _javatypes.java.util._function.Consumer<any>): void;
                
            }
            namespace Spliterator$OfInt {
                interface static {
                    
                    
                    
                }
            }
            interface DoubleSummaryStatistics extends any, _javatypes.java.util._function.DoubleConsumer {
                
                accept(arg0: number): void;
                combine(arg0: _javatypes.java.util.DoubleSummaryStatistics): void;
                getCount(): number;
                getSum(): number;
                getMin(): number;
                getMax(): number;
                getAverage(): number;
                toString(): string;
                
            }
            namespace DoubleSummaryStatistics {
                interface static {
                    new (): _javatypes.java.util.DoubleSummaryStatistics;
                    new (arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.java.util.DoubleSummaryStatistics;
                    
                    
                    
                }
            }
            interface PrimitiveIterator$OfLong extends _javatypes.java.lang.Interface, _javatypes.java.util.PrimitiveIterator<number, _javatypes.java.util._function.LongConsumer> {
                
                nextLong(): number;
                forEachRemaining(arg0: _javatypes.java.util._function.LongConsumer): void;
                next(): number;
                forEachRemaining(arg0: _javatypes.java.util._function.Consumer<any>): void;
                
            }
            namespace PrimitiveIterator$OfLong {
                interface static {
                    
                    
                    
                }
            }
            interface Locale$LanguageRange extends any {
                
                getRange(): string;
                getWeight(): number;
                hashCode(): number;
                equals(arg0: any): boolean;
                toString(): string;
                
            }
            namespace Locale$LanguageRange {
                interface static {
                    new (arg0: string): _javatypes.java.util.Locale$LanguageRange;
                    new (arg0: string, arg1: number): _javatypes.java.util.Locale$LanguageRange;
                    
                    readonly MAX_WEIGHT: number;
                    readonly MIN_WEIGHT: number;
                    
                    parse(arg0: string): _javatypes.java.util.List<_javatypes.java.util.Locale$LanguageRange>;
                    parse(arg0: string, arg1: _javatypes.java.util.Map<string, _javatypes.java.util.List<string>>): _javatypes.java.util.List<_javatypes.java.util.Locale$LanguageRange>;
                    mapEquivalents(arg0: _javatypes.java.util.List<_javatypes.java.util.Locale$LanguageRange>, arg1: _javatypes.java.util.Map<string, _javatypes.java.util.List<string>>): _javatypes.java.util.List<_javatypes.java.util.Locale$LanguageRange>;
                    
                }
            }
            interface RandomAccess extends _javatypes.java.lang.Interface {
                
                
            }
            namespace RandomAccess {
                interface static {
                    
                    
                    
                }
            }
            interface PrimitiveIterator$OfInt extends _javatypes.java.lang.Interface, _javatypes.java.util.PrimitiveIterator<number, _javatypes.java.util._function.IntConsumer> {
                
                nextInt(): number;
                forEachRemaining(arg0: _javatypes.java.util._function.IntConsumer): void;
                next(): number;
                forEachRemaining(arg0: _javatypes.java.util._function.Consumer<any>): void;
                
            }
            namespace PrimitiveIterator$OfInt {
                interface static {
                    
                    
                    
                }
            }
            interface Locale$Category extends _javatypes.java.lang.Enum<_javatypes.java.util.Locale$Category> {
                
                
            }
            namespace Locale$Category {
                interface static {
                    
                    readonly DISPLAY: _javatypes.java.util.Locale$Category;
                    readonly FORMAT: _javatypes.java.util.Locale$Category;
                    
                    values(): _javatypes.java.util.Locale$Category[];
                    valueOf(arg0: string): _javatypes.java.util.Locale$Category;
                    
                }
            }
            interface IntSummaryStatistics extends any, _javatypes.java.util._function.IntConsumer {
                
                accept(arg0: number): void;
                combine(arg0: _javatypes.java.util.IntSummaryStatistics): void;
                getCount(): number;
                getSum(): number;
                getMin(): number;
                getMax(): number;
                getAverage(): number;
                toString(): string;
                
            }
            namespace IntSummaryStatistics {
                interface static {
                    new (): _javatypes.java.util.IntSummaryStatistics;
                    new (arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.java.util.IntSummaryStatistics;
                    
                    
                    
                }
            }
            interface Spliterator$OfDouble extends _javatypes.java.lang.Interface, _javatypes.java.util.Spliterator$OfPrimitive<number, _javatypes.java.util._function.DoubleConsumer, _javatypes.java.util.Spliterator$OfDouble> {
                
                trySplit(): _javatypes.java.util.Spliterator$OfDouble;
                tryAdvance(arg0: _javatypes.java.util._function.DoubleConsumer): boolean;
                forEachRemaining(arg0: _javatypes.java.util._function.DoubleConsumer): void;
                tryAdvance(arg0: _javatypes.java.util._function.Consumer<any>): boolean;
                forEachRemaining(arg0: _javatypes.java.util._function.Consumer<any>): void;
                
            }
            namespace Spliterator$OfDouble {
                interface static {
                    
                    
                    
                }
            }
            interface AbstractCollection<E> extends any, _javatypes.java.util.Collection<E> {
                
                iterator(): _javatypes.java.util.Iterator<E>;
                size(): number;
                isEmpty(): boolean;
                contains(arg0: any): boolean;
                toArray(): any[];
                toArray<T>(arg0: T[]): T[];
                add(arg0: E): boolean;
                remove(arg0: any): boolean;
                containsAll(arg0: _javatypes.java.util.Collection<any>): boolean;
                addAll(arg0: _javatypes.java.util.Collection<any>): boolean;
                removeAll(arg0: _javatypes.java.util.Collection<any>): boolean;
                retainAll(arg0: _javatypes.java.util.Collection<any>): boolean;
                clear(): void;
                toString(): string;
                
            }
            namespace AbstractCollection {
                interface static {
                    
                    
                    
                }
            }
            interface PrimitiveIterator<T, T_CONS> extends _javatypes.java.lang.Interface, _javatypes.java.util.Iterator<T> {
                
                forEachRemaining(arg0: T_CONS): void;
                
            }
            namespace PrimitiveIterator {
                interface static {
                    
                    
                    
                }
            }
            interface Spliterator$OfPrimitive<T, T_CONS, T_SPLITR> extends _javatypes.java.lang.Interface, _javatypes.java.util.Spliterator<T> {
                
                trySplit(): T_SPLITR;
                tryAdvance(arg0: T_CONS): boolean;
                forEachRemaining(arg0: T_CONS): void;
                
            }
            namespace Spliterator$OfPrimitive {
                interface static {
                    
                    
                    
                }
            }
            interface SortedMap<K, V> extends _javatypes.java.lang.Interface, _javatypes.java.util.Map<K, V> {
                
                comparator(): _javatypes.java.util.Comparator<any>;
                subMap(arg0: K, arg1: K): _javatypes.java.util.SortedMap<K, V>;
                headMap(arg0: K): _javatypes.java.util.SortedMap<K, V>;
                tailMap(arg0: K): _javatypes.java.util.SortedMap<K, V>;
                firstKey(): K;
                lastKey(): K;
                keySet(): _javatypes.java.util.Set<K>;
                values(): _javatypes.java.util.Collection<V>;
                entrySet(): _javatypes.java.util.Set<_javatypes.java.util.Map$Entry<K, V>>;
                
            }
            namespace SortedMap {
                interface static {
                    
                    
                    
                }
            }
            interface Random extends any, _javatypes.java.util.random.RandomGenerator, _javatypes.java.io.Serializable {
                
                setSeed(arg0: number): void;
                nextBytes(arg0: number[]): void;
                nextInt(): number;
                nextInt(arg0: number): number;
                nextLong(): number;
                nextBoolean(): boolean;
                nextFloat(): number;
                nextDouble(): number;
                nextGaussian(): number;
                ints(arg0: number): _javatypes.java.util.stream.IntStream;
                ints(): _javatypes.java.util.stream.IntStream;
                ints(arg0: number, arg1: number, arg2: number): _javatypes.java.util.stream.IntStream;
                ints(arg0: number, arg1: number): _javatypes.java.util.stream.IntStream;
                longs(arg0: number): _javatypes.java.util.stream.LongStream;
                longs(): _javatypes.java.util.stream.LongStream;
                longs(arg0: number, arg1: number, arg2: number): _javatypes.java.util.stream.LongStream;
                longs(arg0: number, arg1: number): _javatypes.java.util.stream.LongStream;
                doubles(arg0: number): _javatypes.java.util.stream.DoubleStream;
                doubles(): _javatypes.java.util.stream.DoubleStream;
                doubles(arg0: number, arg1: number, arg2: number): _javatypes.java.util.stream.DoubleStream;
                doubles(arg0: number, arg1: number): _javatypes.java.util.stream.DoubleStream;
                
            }
            namespace Random {
                interface static {
                    new (): _javatypes.java.util.Random;
                    new (arg0: number): _javatypes.java.util.Random;
                    
                    
                    
                }
            }
            interface Currency extends any, _javatypes.java.io.Serializable {
                
                getCurrencyCode(): string;
                getSymbol(): string;
                getSymbol(arg0: _javatypes.java.util.Locale): string;
                getDefaultFractionDigits(): number;
                getNumericCode(): number;
                getNumericCodeAsString(): string;
                getDisplayName(): string;
                getDisplayName(arg0: _javatypes.java.util.Locale): string;
                toString(): string;
                
            }
            namespace Currency {
                interface static {
                    
                    
                    getInstance(arg0: string): _javatypes.java.util.Currency;
                    getInstance(arg0: _javatypes.java.util.Locale): _javatypes.java.util.Currency;
                    getAvailableCurrencies(): _javatypes.java.util.Set<_javatypes.java.util.Currency>;
                    
                }
            }
        
            namespace _function {
            
                interface Predicate<T> extends _javatypes.java.lang.Interface {
                    
                    test(arg0: T): boolean;
                    and(arg0: _javatypes.java.util._function.Predicate<any>): _javatypes.java.util._function.Predicate<T>;
                    negate(): _javatypes.java.util._function.Predicate<T>;
                    or(arg0: _javatypes.java.util._function.Predicate<any>): _javatypes.java.util._function.Predicate<T>;
                    
                }
                namespace Predicate {
                    interface static {
                        
                        
                        isEqual<T>(arg0: any): _javatypes.java.util._function.Predicate<T>;
                        not<T>(arg0: _javatypes.java.util._function.Predicate<any>): _javatypes.java.util._function.Predicate<T>;
                        
                    }
                }
                interface IntSupplier extends _javatypes.java.lang.Interface {
                    
                    getAsInt(): number;
                    
                }
                namespace IntSupplier {
                    interface static {
                        
                        
                        
                    }
                }
                interface BiPredicate<T, U> extends _javatypes.java.lang.Interface {
                    
                    test(arg0: T, arg1: U): boolean;
                    and(arg0: _javatypes.java.util._function.BiPredicate<any, any>): _javatypes.java.util._function.BiPredicate<T, U>;
                    negate(): _javatypes.java.util._function.BiPredicate<T, U>;
                    or(arg0: _javatypes.java.util._function.BiPredicate<any, any>): _javatypes.java.util._function.BiPredicate<T, U>;
                    
                }
                namespace BiPredicate {
                    interface static {
                        
                        
                        
                    }
                }
                interface ToLongFunction<T> extends _javatypes.java.lang.Interface {
                    
                    applyAsLong(arg0: T): number;
                    
                }
                namespace ToLongFunction {
                    interface static {
                        
                        
                        
                    }
                }
                interface Consumer<T> extends _javatypes.java.lang.Interface {
                    
                    accept(arg0: T): void;
                    andThen(arg0: _javatypes.java.util._function.Consumer<any>): _javatypes.java.util._function.Consumer<T>;
                    
                }
                namespace Consumer {
                    interface static {
                        
                        
                        
                    }
                }
                interface UnaryOperator<T> extends _javatypes.java.lang.Interface, _javatypes.java.util._function.Function<T, T> {
                    
                    
                }
                namespace UnaryOperator {
                    interface static {
                        
                        
                        identity<T>(): _javatypes.java.util._function.UnaryOperator<T>;
                        
                    }
                }
                interface Supplier<T> extends _javatypes.java.lang.Interface {
                    
                    get(): T;
                    
                }
                namespace Supplier {
                    interface static {
                        
                        
                        
                    }
                }
                interface BiConsumer<T, U> extends _javatypes.java.lang.Interface {
                    
                    accept(arg0: T, arg1: U): void;
                    andThen(arg0: _javatypes.java.util._function.BiConsumer<any, any>): _javatypes.java.util._function.BiConsumer<T, U>;
                    
                }
                namespace BiConsumer {
                    interface static {
                        
                        
                        
                    }
                }
                interface BiFunction<T, U, R> extends _javatypes.java.lang.Interface {
                    
                    apply(arg0: T, arg1: U): R;
                    andThen<V>(arg0: _javatypes.java.util._function.Function<any, any>): _javatypes.java.util._function.BiFunction<T, U, V>;
                    
                }
                namespace BiFunction {
                    interface static {
                        
                        
                        
                    }
                }
                interface Function<T, R> extends _javatypes.java.lang.Interface {
                    
                    apply(arg0: T): R;
                    compose<V>(arg0: _javatypes.java.util._function.Function<any, any>): _javatypes.java.util._function.Function<V, R>;
                    andThen<V>(arg0: _javatypes.java.util._function.Function<any, any>): _javatypes.java.util._function.Function<T, V>;
                    
                }
                namespace Function {
                    interface static {
                        
                        
                        identity<T>(): _javatypes.java.util._function.Function<T, T>;
                        
                    }
                }
                interface ToDoubleFunction<T> extends _javatypes.java.lang.Interface {
                    
                    applyAsDouble(arg0: T): number;
                    
                }
                namespace ToDoubleFunction {
                    interface static {
                        
                        
                        
                    }
                }
                interface ToIntFunction<T> extends _javatypes.java.lang.Interface {
                    
                    applyAsInt(arg0: T): number;
                    
                }
                namespace ToIntFunction {
                    interface static {
                        
                        
                        
                    }
                }
                interface DoubleFunction<R> extends _javatypes.java.lang.Interface {
                    
                    apply(arg0: number): R;
                    
                }
                namespace DoubleFunction {
                    interface static {
                        
                        
                        
                    }
                }
                interface ObjLongConsumer<T> extends _javatypes.java.lang.Interface {
                    
                    accept(arg0: T, arg1: number): void;
                    
                }
                namespace ObjLongConsumer {
                    interface static {
                        
                        
                        
                    }
                }
                interface IntBinaryOperator extends _javatypes.java.lang.Interface {
                    
                    applyAsInt(arg0: number, arg1: number): number;
                    
                }
                namespace IntBinaryOperator {
                    interface static {
                        
                        
                        
                    }
                }
                interface DoubleUnaryOperator extends _javatypes.java.lang.Interface {
                    
                    applyAsDouble(arg0: number): number;
                    compose(arg0: _javatypes.java.util._function.DoubleUnaryOperator): _javatypes.java.util._function.DoubleUnaryOperator;
                    andThen(arg0: _javatypes.java.util._function.DoubleUnaryOperator): _javatypes.java.util._function.DoubleUnaryOperator;
                    
                }
                namespace DoubleUnaryOperator {
                    interface static {
                        
                        
                        identity(): _javatypes.java.util._function.DoubleUnaryOperator;
                        
                    }
                }
                interface ObjDoubleConsumer<T> extends _javatypes.java.lang.Interface {
                    
                    accept(arg0: T, arg1: number): void;
                    
                }
                namespace ObjDoubleConsumer {
                    interface static {
                        
                        
                        
                    }
                }
                interface IntToLongFunction extends _javatypes.java.lang.Interface {
                    
                    applyAsLong(arg0: number): number;
                    
                }
                namespace IntToLongFunction {
                    interface static {
                        
                        
                        
                    }
                }
                interface DoubleToLongFunction extends _javatypes.java.lang.Interface {
                    
                    applyAsLong(arg0: number): number;
                    
                }
                namespace DoubleToLongFunction {
                    interface static {
                        
                        
                        
                    }
                }
                interface DoubleSupplier extends _javatypes.java.lang.Interface {
                    
                    getAsDouble(): number;
                    
                }
                namespace DoubleSupplier {
                    interface static {
                        
                        
                        
                    }
                }
                interface IntConsumer extends _javatypes.java.lang.Interface {
                    
                    accept(arg0: number): void;
                    andThen(arg0: _javatypes.java.util._function.IntConsumer): _javatypes.java.util._function.IntConsumer;
                    
                }
                namespace IntConsumer {
                    interface static {
                        
                        
                        
                    }
                }
                interface DoubleBinaryOperator extends _javatypes.java.lang.Interface {
                    
                    applyAsDouble(arg0: number, arg1: number): number;
                    
                }
                namespace DoubleBinaryOperator {
                    interface static {
                        
                        
                        
                    }
                }
                interface LongConsumer extends _javatypes.java.lang.Interface {
                    
                    accept(arg0: number): void;
                    andThen(arg0: _javatypes.java.util._function.LongConsumer): _javatypes.java.util._function.LongConsumer;
                    
                }
                namespace LongConsumer {
                    interface static {
                        
                        
                        
                    }
                }
                interface IntPredicate extends _javatypes.java.lang.Interface {
                    
                    test(arg0: number): boolean;
                    and(arg0: _javatypes.java.util._function.IntPredicate): _javatypes.java.util._function.IntPredicate;
                    negate(): _javatypes.java.util._function.IntPredicate;
                    or(arg0: _javatypes.java.util._function.IntPredicate): _javatypes.java.util._function.IntPredicate;
                    
                }
                namespace IntPredicate {
                    interface static {
                        
                        
                        
                    }
                }
                interface LongPredicate extends _javatypes.java.lang.Interface {
                    
                    test(arg0: number): boolean;
                    and(arg0: _javatypes.java.util._function.LongPredicate): _javatypes.java.util._function.LongPredicate;
                    negate(): _javatypes.java.util._function.LongPredicate;
                    or(arg0: _javatypes.java.util._function.LongPredicate): _javatypes.java.util._function.LongPredicate;
                    
                }
                namespace LongPredicate {
                    interface static {
                        
                        
                        
                    }
                }
                interface IntFunction<R> extends _javatypes.java.lang.Interface {
                    
                    apply(arg0: number): R;
                    
                }
                namespace IntFunction {
                    interface static {
                        
                        
                        
                    }
                }
                interface LongFunction<R> extends _javatypes.java.lang.Interface {
                    
                    apply(arg0: number): R;
                    
                }
                namespace LongFunction {
                    interface static {
                        
                        
                        
                    }
                }
                interface LongSupplier extends _javatypes.java.lang.Interface {
                    
                    getAsLong(): number;
                    
                }
                namespace LongSupplier {
                    interface static {
                        
                        
                        
                    }
                }
                interface DoubleConsumer extends _javatypes.java.lang.Interface {
                    
                    accept(arg0: number): void;
                    andThen(arg0: _javatypes.java.util._function.DoubleConsumer): _javatypes.java.util._function.DoubleConsumer;
                    
                }
                namespace DoubleConsumer {
                    interface static {
                        
                        
                        
                    }
                }
                interface IntToDoubleFunction extends _javatypes.java.lang.Interface {
                    
                    applyAsDouble(arg0: number): number;
                    
                }
                namespace IntToDoubleFunction {
                    interface static {
                        
                        
                        
                    }
                }
                interface ObjIntConsumer<T> extends _javatypes.java.lang.Interface {
                    
                    accept(arg0: T, arg1: number): void;
                    
                }
                namespace ObjIntConsumer {
                    interface static {
                        
                        
                        
                    }
                }
                interface LongBinaryOperator extends _javatypes.java.lang.Interface {
                    
                    applyAsLong(arg0: number, arg1: number): number;
                    
                }
                namespace LongBinaryOperator {
                    interface static {
                        
                        
                        
                    }
                }
                interface LongToIntFunction extends _javatypes.java.lang.Interface {
                    
                    applyAsInt(arg0: number): number;
                    
                }
                namespace LongToIntFunction {
                    interface static {
                        
                        
                        
                    }
                }
                interface BinaryOperator<T> extends _javatypes.java.lang.Interface, _javatypes.java.util._function.BiFunction<T, T, T> {
                    
                    
                }
                namespace BinaryOperator {
                    interface static {
                        
                        
                        minBy<T>(arg0: _javatypes.java.util.Comparator<any>): _javatypes.java.util._function.BinaryOperator<T>;
                        maxBy<T>(arg0: _javatypes.java.util.Comparator<any>): _javatypes.java.util._function.BinaryOperator<T>;
                        
                    }
                }
                interface IntUnaryOperator extends _javatypes.java.lang.Interface {
                    
                    applyAsInt(arg0: number): number;
                    compose(arg0: _javatypes.java.util._function.IntUnaryOperator): _javatypes.java.util._function.IntUnaryOperator;
                    andThen(arg0: _javatypes.java.util._function.IntUnaryOperator): _javatypes.java.util._function.IntUnaryOperator;
                    
                }
                namespace IntUnaryOperator {
                    interface static {
                        
                        
                        identity(): _javatypes.java.util._function.IntUnaryOperator;
                        
                    }
                }
                interface LongToDoubleFunction extends _javatypes.java.lang.Interface {
                    
                    applyAsDouble(arg0: number): number;
                    
                }
                namespace LongToDoubleFunction {
                    interface static {
                        
                        
                        
                    }
                }
                interface DoubleToIntFunction extends _javatypes.java.lang.Interface {
                    
                    applyAsInt(arg0: number): number;
                    
                }
                namespace DoubleToIntFunction {
                    interface static {
                        
                        
                        
                    }
                }
                interface LongUnaryOperator extends _javatypes.java.lang.Interface {
                    
                    applyAsLong(arg0: number): number;
                    compose(arg0: _javatypes.java.util._function.LongUnaryOperator): _javatypes.java.util._function.LongUnaryOperator;
                    andThen(arg0: _javatypes.java.util._function.LongUnaryOperator): _javatypes.java.util._function.LongUnaryOperator;
                    
                }
                namespace LongUnaryOperator {
                    interface static {
                        
                        
                        identity(): _javatypes.java.util._function.LongUnaryOperator;
                        
                    }
                }
                interface DoublePredicate extends _javatypes.java.lang.Interface {
                    
                    test(arg0: number): boolean;
                    and(arg0: _javatypes.java.util._function.DoublePredicate): _javatypes.java.util._function.DoublePredicate;
                    negate(): _javatypes.java.util._function.DoublePredicate;
                    or(arg0: _javatypes.java.util._function.DoublePredicate): _javatypes.java.util._function.DoublePredicate;
                    
                }
                namespace DoublePredicate {
                    interface static {
                        
                        
                        
                    }
                }
            }
        
            namespace regex {
            
                interface Pattern extends any, _javatypes.java.io.Serializable {
                    
                    pattern(): string;
                    toString(): string;
                    matcher(arg0: _javatypes.java.lang.CharSequence): _javatypes.java.util.regex.Matcher;
                    flags(): number;
                    split(arg0: _javatypes.java.lang.CharSequence, arg1: number): string[];
                    split(arg0: _javatypes.java.lang.CharSequence): string[];
                    asPredicate(): _javatypes.java.util._function.Predicate<string>;
                    asMatchPredicate(): _javatypes.java.util._function.Predicate<string>;
                    splitAsStream(arg0: _javatypes.java.lang.CharSequence): _javatypes.java.util.stream.Stream<string>;
                    
                }
                namespace Pattern {
                    interface static {
                        
                        readonly UNIX_LINES: number;
                        readonly CASE_INSENSITIVE: number;
                        readonly COMMENTS: number;
                        readonly MULTILINE: number;
                        readonly LITERAL: number;
                        readonly DOTALL: number;
                        readonly UNICODE_CASE: number;
                        readonly CANON_EQ: number;
                        readonly UNICODE_CHARACTER_CLASS: number;
                        
                        compile(arg0: string): _javatypes.java.util.regex.Pattern;
                        compile(arg0: string, arg1: number): _javatypes.java.util.regex.Pattern;
                        matches(arg0: string, arg1: _javatypes.java.lang.CharSequence): boolean;
                        quote(arg0: string): string;
                        
                    }
                }
                interface Matcher extends any, _javatypes.java.util.regex.MatchResult {
                    
                    pattern(): _javatypes.java.util.regex.Pattern;
                    toMatchResult(): _javatypes.java.util.regex.MatchResult;
                    usePattern(arg0: _javatypes.java.util.regex.Pattern): _javatypes.java.util.regex.Matcher;
                    reset(): _javatypes.java.util.regex.Matcher;
                    reset(arg0: _javatypes.java.lang.CharSequence): _javatypes.java.util.regex.Matcher;
                    start(): number;
                    start(arg0: number): number;
                    start(arg0: string): number;
                    end(): number;
                    end(arg0: number): number;
                    end(arg0: string): number;
                    group(): string;
                    group(arg0: number): string;
                    group(arg0: string): string;
                    groupCount(): number;
                    matches(): boolean;
                    find(): boolean;
                    find(arg0: number): boolean;
                    lookingAt(): boolean;
                    appendReplacement(arg0: _javatypes.java.lang.StringBuffer, arg1: string): _javatypes.java.util.regex.Matcher;
                    appendReplacement(arg0: _javatypes.java.lang.StringBuilder, arg1: string): _javatypes.java.util.regex.Matcher;
                    appendTail(arg0: _javatypes.java.lang.StringBuffer): _javatypes.java.lang.StringBuffer;
                    appendTail(arg0: _javatypes.java.lang.StringBuilder): _javatypes.java.lang.StringBuilder;
                    replaceAll(arg0: string): string;
                    replaceAll(arg0: _javatypes.java.util._function.Function<_javatypes.java.util.regex.MatchResult, string>): string;
                    results(): _javatypes.java.util.stream.Stream<_javatypes.java.util.regex.MatchResult>;
                    replaceFirst(arg0: string): string;
                    replaceFirst(arg0: _javatypes.java.util._function.Function<_javatypes.java.util.regex.MatchResult, string>): string;
                    region(arg0: number, arg1: number): _javatypes.java.util.regex.Matcher;
                    regionStart(): number;
                    regionEnd(): number;
                    hasTransparentBounds(): boolean;
                    useTransparentBounds(arg0: boolean): _javatypes.java.util.regex.Matcher;
                    hasAnchoringBounds(): boolean;
                    useAnchoringBounds(arg0: boolean): _javatypes.java.util.regex.Matcher;
                    toString(): string;
                    hitEnd(): boolean;
                    requireEnd(): boolean;
                    
                }
                namespace Matcher {
                    interface static {
                        
                        
                        quoteReplacement(arg0: string): string;
                        
                    }
                }
                interface MatchResult extends _javatypes.java.lang.Interface {
                    
                    start(): number;
                    start(arg0: number): number;
                    end(): number;
                    end(arg0: number): number;
                    group(): string;
                    group(arg0: number): string;
                    groupCount(): number;
                    
                }
                namespace MatchResult {
                    interface static {
                        
                        
                        
                    }
                }
            }
        
            namespace stream {
            
                interface IntStream extends _javatypes.java.lang.Interface, _javatypes.java.util.stream.BaseStream<number, _javatypes.java.util.stream.IntStream> {
                    
                    filter(arg0: _javatypes.java.util._function.IntPredicate): _javatypes.java.util.stream.IntStream;
                    map(arg0: _javatypes.java.util._function.IntUnaryOperator): _javatypes.java.util.stream.IntStream;
                    mapToObj<U>(arg0: _javatypes.java.util._function.IntFunction<any>): _javatypes.java.util.stream.Stream<U>;
                    mapToLong(arg0: _javatypes.java.util._function.IntToLongFunction): _javatypes.java.util.stream.LongStream;
                    mapToDouble(arg0: _javatypes.java.util._function.IntToDoubleFunction): _javatypes.java.util.stream.DoubleStream;
                    flatMap(arg0: _javatypes.java.util._function.IntFunction<any>): _javatypes.java.util.stream.IntStream;
                    mapMulti(arg0: _javatypes.java.util.stream.IntStream$IntMapMultiConsumer): _javatypes.java.util.stream.IntStream;
                    distinct(): _javatypes.java.util.stream.IntStream;
                    sorted(): _javatypes.java.util.stream.IntStream;
                    peek(arg0: _javatypes.java.util._function.IntConsumer): _javatypes.java.util.stream.IntStream;
                    limit(arg0: number): _javatypes.java.util.stream.IntStream;
                    skip(arg0: number): _javatypes.java.util.stream.IntStream;
                    takeWhile(arg0: _javatypes.java.util._function.IntPredicate): _javatypes.java.util.stream.IntStream;
                    dropWhile(arg0: _javatypes.java.util._function.IntPredicate): _javatypes.java.util.stream.IntStream;
                    forEach(arg0: _javatypes.java.util._function.IntConsumer): void;
                    forEachOrdered(arg0: _javatypes.java.util._function.IntConsumer): void;
                    toArray(): number[];
                    reduce(arg0: number, arg1: _javatypes.java.util._function.IntBinaryOperator): number;
                    reduce(arg0: _javatypes.java.util._function.IntBinaryOperator): _javatypes.java.util.OptionalInt;
                    collect<R>(arg0: _javatypes.java.util._function.Supplier<R>, arg1: _javatypes.java.util._function.ObjIntConsumer<R>, arg2: _javatypes.java.util._function.BiConsumer<R, R>): R;
                    sum(): number;
                    min(): _javatypes.java.util.OptionalInt;
                    max(): _javatypes.java.util.OptionalInt;
                    count(): number;
                    average(): _javatypes.java.util.OptionalDouble;
                    summaryStatistics(): _javatypes.java.util.IntSummaryStatistics;
                    anyMatch(arg0: _javatypes.java.util._function.IntPredicate): boolean;
                    allMatch(arg0: _javatypes.java.util._function.IntPredicate): boolean;
                    noneMatch(arg0: _javatypes.java.util._function.IntPredicate): boolean;
                    findFirst(): _javatypes.java.util.OptionalInt;
                    findAny(): _javatypes.java.util.OptionalInt;
                    asLongStream(): _javatypes.java.util.stream.LongStream;
                    asDoubleStream(): _javatypes.java.util.stream.DoubleStream;
                    boxed(): _javatypes.java.util.stream.Stream<number>;
                    sequential(): _javatypes.java.util.stream.IntStream;
                    parallel(): _javatypes.java.util.stream.IntStream;
                    iterator(): _javatypes.java.util.PrimitiveIterator$OfInt;
                    spliterator(): _javatypes.java.util.Spliterator$OfInt;
                    
                }
                namespace IntStream {
                    interface static {
                        
                        
                        builder(): _javatypes.java.util.stream.IntStream$Builder;
                        empty(): _javatypes.java.util.stream.IntStream;
                        of(arg0: number): _javatypes.java.util.stream.IntStream;
                        of(arg0: number[]): _javatypes.java.util.stream.IntStream;
                        iterate(arg0: number, arg1: _javatypes.java.util._function.IntUnaryOperator): _javatypes.java.util.stream.IntStream;
                        iterate(arg0: number, arg1: _javatypes.java.util._function.IntPredicate, arg2: _javatypes.java.util._function.IntUnaryOperator): _javatypes.java.util.stream.IntStream;
                        generate(arg0: _javatypes.java.util._function.IntSupplier): _javatypes.java.util.stream.IntStream;
                        range(arg0: number, arg1: number): _javatypes.java.util.stream.IntStream;
                        rangeClosed(arg0: number, arg1: number): _javatypes.java.util.stream.IntStream;
                        concat(arg0: _javatypes.java.util.stream.IntStream, arg1: _javatypes.java.util.stream.IntStream): _javatypes.java.util.stream.IntStream;
                        
                    }
                }
                interface LongStream extends _javatypes.java.lang.Interface, _javatypes.java.util.stream.BaseStream<number, _javatypes.java.util.stream.LongStream> {
                    
                    filter(arg0: _javatypes.java.util._function.LongPredicate): _javatypes.java.util.stream.LongStream;
                    map(arg0: _javatypes.java.util._function.LongUnaryOperator): _javatypes.java.util.stream.LongStream;
                    mapToObj<U>(arg0: _javatypes.java.util._function.LongFunction<any>): _javatypes.java.util.stream.Stream<U>;
                    mapToInt(arg0: _javatypes.java.util._function.LongToIntFunction): _javatypes.java.util.stream.IntStream;
                    mapToDouble(arg0: _javatypes.java.util._function.LongToDoubleFunction): _javatypes.java.util.stream.DoubleStream;
                    flatMap(arg0: _javatypes.java.util._function.LongFunction<any>): _javatypes.java.util.stream.LongStream;
                    mapMulti(arg0: _javatypes.java.util.stream.LongStream$LongMapMultiConsumer): _javatypes.java.util.stream.LongStream;
                    distinct(): _javatypes.java.util.stream.LongStream;
                    sorted(): _javatypes.java.util.stream.LongStream;
                    peek(arg0: _javatypes.java.util._function.LongConsumer): _javatypes.java.util.stream.LongStream;
                    limit(arg0: number): _javatypes.java.util.stream.LongStream;
                    skip(arg0: number): _javatypes.java.util.stream.LongStream;
                    takeWhile(arg0: _javatypes.java.util._function.LongPredicate): _javatypes.java.util.stream.LongStream;
                    dropWhile(arg0: _javatypes.java.util._function.LongPredicate): _javatypes.java.util.stream.LongStream;
                    forEach(arg0: _javatypes.java.util._function.LongConsumer): void;
                    forEachOrdered(arg0: _javatypes.java.util._function.LongConsumer): void;
                    toArray(): number[];
                    reduce(arg0: number, arg1: _javatypes.java.util._function.LongBinaryOperator): number;
                    reduce(arg0: _javatypes.java.util._function.LongBinaryOperator): _javatypes.java.util.OptionalLong;
                    collect<R>(arg0: _javatypes.java.util._function.Supplier<R>, arg1: _javatypes.java.util._function.ObjLongConsumer<R>, arg2: _javatypes.java.util._function.BiConsumer<R, R>): R;
                    sum(): number;
                    min(): _javatypes.java.util.OptionalLong;
                    max(): _javatypes.java.util.OptionalLong;
                    count(): number;
                    average(): _javatypes.java.util.OptionalDouble;
                    summaryStatistics(): _javatypes.java.util.LongSummaryStatistics;
                    anyMatch(arg0: _javatypes.java.util._function.LongPredicate): boolean;
                    allMatch(arg0: _javatypes.java.util._function.LongPredicate): boolean;
                    noneMatch(arg0: _javatypes.java.util._function.LongPredicate): boolean;
                    findFirst(): _javatypes.java.util.OptionalLong;
                    findAny(): _javatypes.java.util.OptionalLong;
                    asDoubleStream(): _javatypes.java.util.stream.DoubleStream;
                    boxed(): _javatypes.java.util.stream.Stream<number>;
                    sequential(): _javatypes.java.util.stream.LongStream;
                    parallel(): _javatypes.java.util.stream.LongStream;
                    iterator(): _javatypes.java.util.PrimitiveIterator$OfLong;
                    spliterator(): _javatypes.java.util.Spliterator$OfLong;
                    
                }
                namespace LongStream {
                    interface static {
                        
                        
                        builder(): _javatypes.java.util.stream.LongStream$Builder;
                        empty(): _javatypes.java.util.stream.LongStream;
                        of(arg0: number): _javatypes.java.util.stream.LongStream;
                        of(arg0: number[]): _javatypes.java.util.stream.LongStream;
                        iterate(arg0: number, arg1: _javatypes.java.util._function.LongUnaryOperator): _javatypes.java.util.stream.LongStream;
                        iterate(arg0: number, arg1: _javatypes.java.util._function.LongPredicate, arg2: _javatypes.java.util._function.LongUnaryOperator): _javatypes.java.util.stream.LongStream;
                        generate(arg0: _javatypes.java.util._function.LongSupplier): _javatypes.java.util.stream.LongStream;
                        range(arg0: number, arg1: number): _javatypes.java.util.stream.LongStream;
                        rangeClosed(arg0: number, arg1: number): _javatypes.java.util.stream.LongStream;
                        concat(arg0: _javatypes.java.util.stream.LongStream, arg1: _javatypes.java.util.stream.LongStream): _javatypes.java.util.stream.LongStream;
                        
                    }
                }
                interface Stream<T> extends _javatypes.java.lang.Interface, _javatypes.java.util.stream.BaseStream<T, _javatypes.java.util.stream.Stream<T>> {
                    
                    filter(arg0: _javatypes.java.util._function.Predicate<any>): _javatypes.java.util.stream.Stream<T>;
                    map<R>(arg0: _javatypes.java.util._function.Function<any, any>): _javatypes.java.util.stream.Stream<R>;
                    mapToInt(arg0: _javatypes.java.util._function.ToIntFunction<any>): _javatypes.java.util.stream.IntStream;
                    mapToLong(arg0: _javatypes.java.util._function.ToLongFunction<any>): _javatypes.java.util.stream.LongStream;
                    mapToDouble(arg0: _javatypes.java.util._function.ToDoubleFunction<any>): _javatypes.java.util.stream.DoubleStream;
                    flatMap<R>(arg0: _javatypes.java.util._function.Function<any, any>): _javatypes.java.util.stream.Stream<R>;
                    flatMapToInt(arg0: _javatypes.java.util._function.Function<any, any>): _javatypes.java.util.stream.IntStream;
                    flatMapToLong(arg0: _javatypes.java.util._function.Function<any, any>): _javatypes.java.util.stream.LongStream;
                    flatMapToDouble(arg0: _javatypes.java.util._function.Function<any, any>): _javatypes.java.util.stream.DoubleStream;
                    mapMulti<R>(arg0: _javatypes.java.util._function.BiConsumer<any, any>): _javatypes.java.util.stream.Stream<R>;
                    mapMultiToInt(arg0: _javatypes.java.util._function.BiConsumer<any, any>): _javatypes.java.util.stream.IntStream;
                    mapMultiToLong(arg0: _javatypes.java.util._function.BiConsumer<any, any>): _javatypes.java.util.stream.LongStream;
                    mapMultiToDouble(arg0: _javatypes.java.util._function.BiConsumer<any, any>): _javatypes.java.util.stream.DoubleStream;
                    distinct(): _javatypes.java.util.stream.Stream<T>;
                    sorted(): _javatypes.java.util.stream.Stream<T>;
                    sorted(arg0: _javatypes.java.util.Comparator<any>): _javatypes.java.util.stream.Stream<T>;
                    peek(arg0: _javatypes.java.util._function.Consumer<any>): _javatypes.java.util.stream.Stream<T>;
                    limit(arg0: number): _javatypes.java.util.stream.Stream<T>;
                    skip(arg0: number): _javatypes.java.util.stream.Stream<T>;
                    takeWhile(arg0: _javatypes.java.util._function.Predicate<any>): _javatypes.java.util.stream.Stream<T>;
                    dropWhile(arg0: _javatypes.java.util._function.Predicate<any>): _javatypes.java.util.stream.Stream<T>;
                    forEach(arg0: _javatypes.java.util._function.Consumer<any>): void;
                    forEachOrdered(arg0: _javatypes.java.util._function.Consumer<any>): void;
                    toArray(): any[];
                    toArray<A>(arg0: _javatypes.java.util._function.IntFunction<A[]>): A[];
                    reduce(arg0: T, arg1: _javatypes.java.util._function.BinaryOperator<T>): T;
                    reduce(arg0: _javatypes.java.util._function.BinaryOperator<T>): _javatypes.java.util.Optional<T>;
                    reduce<U>(arg0: U, arg1: _javatypes.java.util._function.BiFunction<U, any, U>, arg2: _javatypes.java.util._function.BinaryOperator<U>): U;
                    collect<R>(arg0: _javatypes.java.util._function.Supplier<R>, arg1: _javatypes.java.util._function.BiConsumer<R, any>, arg2: _javatypes.java.util._function.BiConsumer<R, R>): R;
                    collect<R, A>(arg0: _javatypes.java.util.stream.Collector<any, A, R>): R;
                    toList(): _javatypes.java.util.List<T>;
                    min(arg0: _javatypes.java.util.Comparator<any>): _javatypes.java.util.Optional<T>;
                    max(arg0: _javatypes.java.util.Comparator<any>): _javatypes.java.util.Optional<T>;
                    count(): number;
                    anyMatch(arg0: _javatypes.java.util._function.Predicate<any>): boolean;
                    allMatch(arg0: _javatypes.java.util._function.Predicate<any>): boolean;
                    noneMatch(arg0: _javatypes.java.util._function.Predicate<any>): boolean;
                    findFirst(): _javatypes.java.util.Optional<T>;
                    findAny(): _javatypes.java.util.Optional<T>;
                    
                }
                namespace Stream {
                    interface static {
                        
                        
                        builder<T>(): _javatypes.java.util.stream.Stream$Builder<T>;
                        empty<T>(): _javatypes.java.util.stream.Stream<T>;
                        of<T>(arg0: T): _javatypes.java.util.stream.Stream<T>;
                        ofNullable<T>(arg0: T): _javatypes.java.util.stream.Stream<T>;
                        of<T>(arg0: T[]): _javatypes.java.util.stream.Stream<T>;
                        iterate<T>(arg0: T, arg1: _javatypes.java.util._function.UnaryOperator<T>): _javatypes.java.util.stream.Stream<T>;
                        iterate<T>(arg0: T, arg1: _javatypes.java.util._function.Predicate<any>, arg2: _javatypes.java.util._function.UnaryOperator<T>): _javatypes.java.util.stream.Stream<T>;
                        generate<T>(arg0: _javatypes.java.util._function.Supplier<any>): _javatypes.java.util.stream.Stream<T>;
                        concat<T>(arg0: _javatypes.java.util.stream.Stream<any>, arg1: _javatypes.java.util.stream.Stream<any>): _javatypes.java.util.stream.Stream<T>;
                        
                    }
                }
                interface DoubleStream extends _javatypes.java.lang.Interface, _javatypes.java.util.stream.BaseStream<number, _javatypes.java.util.stream.DoubleStream> {
                    
                    filter(arg0: _javatypes.java.util._function.DoublePredicate): _javatypes.java.util.stream.DoubleStream;
                    map(arg0: _javatypes.java.util._function.DoubleUnaryOperator): _javatypes.java.util.stream.DoubleStream;
                    mapToObj<U>(arg0: _javatypes.java.util._function.DoubleFunction<any>): _javatypes.java.util.stream.Stream<U>;
                    mapToInt(arg0: _javatypes.java.util._function.DoubleToIntFunction): _javatypes.java.util.stream.IntStream;
                    mapToLong(arg0: _javatypes.java.util._function.DoubleToLongFunction): _javatypes.java.util.stream.LongStream;
                    flatMap(arg0: _javatypes.java.util._function.DoubleFunction<any>): _javatypes.java.util.stream.DoubleStream;
                    mapMulti(arg0: _javatypes.java.util.stream.DoubleStream$DoubleMapMultiConsumer): _javatypes.java.util.stream.DoubleStream;
                    distinct(): _javatypes.java.util.stream.DoubleStream;
                    sorted(): _javatypes.java.util.stream.DoubleStream;
                    peek(arg0: _javatypes.java.util._function.DoubleConsumer): _javatypes.java.util.stream.DoubleStream;
                    limit(arg0: number): _javatypes.java.util.stream.DoubleStream;
                    skip(arg0: number): _javatypes.java.util.stream.DoubleStream;
                    takeWhile(arg0: _javatypes.java.util._function.DoublePredicate): _javatypes.java.util.stream.DoubleStream;
                    dropWhile(arg0: _javatypes.java.util._function.DoublePredicate): _javatypes.java.util.stream.DoubleStream;
                    forEach(arg0: _javatypes.java.util._function.DoubleConsumer): void;
                    forEachOrdered(arg0: _javatypes.java.util._function.DoubleConsumer): void;
                    toArray(): number[];
                    reduce(arg0: number, arg1: _javatypes.java.util._function.DoubleBinaryOperator): number;
                    reduce(arg0: _javatypes.java.util._function.DoubleBinaryOperator): _javatypes.java.util.OptionalDouble;
                    collect<R>(arg0: _javatypes.java.util._function.Supplier<R>, arg1: _javatypes.java.util._function.ObjDoubleConsumer<R>, arg2: _javatypes.java.util._function.BiConsumer<R, R>): R;
                    sum(): number;
                    min(): _javatypes.java.util.OptionalDouble;
                    max(): _javatypes.java.util.OptionalDouble;
                    count(): number;
                    average(): _javatypes.java.util.OptionalDouble;
                    summaryStatistics(): _javatypes.java.util.DoubleSummaryStatistics;
                    anyMatch(arg0: _javatypes.java.util._function.DoublePredicate): boolean;
                    allMatch(arg0: _javatypes.java.util._function.DoublePredicate): boolean;
                    noneMatch(arg0: _javatypes.java.util._function.DoublePredicate): boolean;
                    findFirst(): _javatypes.java.util.OptionalDouble;
                    findAny(): _javatypes.java.util.OptionalDouble;
                    boxed(): _javatypes.java.util.stream.Stream<number>;
                    sequential(): _javatypes.java.util.stream.DoubleStream;
                    parallel(): _javatypes.java.util.stream.DoubleStream;
                    iterator(): _javatypes.java.util.PrimitiveIterator$OfDouble;
                    spliterator(): _javatypes.java.util.Spliterator$OfDouble;
                    
                }
                namespace DoubleStream {
                    interface static {
                        
                        
                        builder(): _javatypes.java.util.stream.DoubleStream$Builder;
                        empty(): _javatypes.java.util.stream.DoubleStream;
                        of(arg0: number): _javatypes.java.util.stream.DoubleStream;
                        of(arg0: number[]): _javatypes.java.util.stream.DoubleStream;
                        iterate(arg0: number, arg1: _javatypes.java.util._function.DoubleUnaryOperator): _javatypes.java.util.stream.DoubleStream;
                        iterate(arg0: number, arg1: _javatypes.java.util._function.DoublePredicate, arg2: _javatypes.java.util._function.DoubleUnaryOperator): _javatypes.java.util.stream.DoubleStream;
                        generate(arg0: _javatypes.java.util._function.DoubleSupplier): _javatypes.java.util.stream.DoubleStream;
                        concat(arg0: _javatypes.java.util.stream.DoubleStream, arg1: _javatypes.java.util.stream.DoubleStream): _javatypes.java.util.stream.DoubleStream;
                        
                    }
                }
                interface DoubleStream$Builder extends _javatypes.java.lang.Interface, _javatypes.java.util._function.DoubleConsumer {
                    
                    accept(arg0: number): void;
                    add(arg0: number): _javatypes.java.util.stream.DoubleStream$Builder;
                    build(): _javatypes.java.util.stream.DoubleStream;
                    
                }
                namespace DoubleStream$Builder {
                    interface static {
                        
                        
                        
                    }
                }
                interface IntStream$Builder extends _javatypes.java.lang.Interface, _javatypes.java.util._function.IntConsumer {
                    
                    accept(arg0: number): void;
                    add(arg0: number): _javatypes.java.util.stream.IntStream$Builder;
                    build(): _javatypes.java.util.stream.IntStream;
                    
                }
                namespace IntStream$Builder {
                    interface static {
                        
                        
                        
                    }
                }
                interface DoubleStream$DoubleMapMultiConsumer extends _javatypes.java.lang.Interface {
                    
                    accept(arg0: number, arg1: _javatypes.java.util._function.DoubleConsumer): void;
                    
                }
                namespace DoubleStream$DoubleMapMultiConsumer {
                    interface static {
                        
                        
                        
                    }
                }
                interface BaseStream<T, S> extends _javatypes.java.lang.Interface, _javatypes.java.lang.AutoCloseable {
                    
                    iterator(): _javatypes.java.util.Iterator<T>;
                    spliterator(): _javatypes.java.util.Spliterator<T>;
                    isParallel(): boolean;
                    sequential(): S;
                    parallel(): S;
                    unordered(): S;
                    onClose(arg0: _javatypes.java.lang.Runnable): S;
                    close(): void;
                    
                }
                namespace BaseStream {
                    interface static {
                        
                        
                        
                    }
                }
                interface Collector<T, A, R> extends _javatypes.java.lang.Interface {
                    
                    supplier(): _javatypes.java.util._function.Supplier<A>;
                    accumulator(): _javatypes.java.util._function.BiConsumer<A, T>;
                    combiner(): _javatypes.java.util._function.BinaryOperator<A>;
                    finisher(): _javatypes.java.util._function.Function<A, R>;
                    characteristics(): _javatypes.java.util.Set<_javatypes.java.util.stream.Collector$Characteristics>;
                    
                }
                namespace Collector {
                    interface static {
                        
                        
                        of<T, R>(arg0: _javatypes.java.util._function.Supplier<R>, arg1: _javatypes.java.util._function.BiConsumer<R, T>, arg2: _javatypes.java.util._function.BinaryOperator<R>, arg3: _javatypes.java.util.stream.Collector$Characteristics[]): _javatypes.java.util.stream.Collector<T, R, R>;
                        of<T, A, R>(arg0: _javatypes.java.util._function.Supplier<A>, arg1: _javatypes.java.util._function.BiConsumer<A, T>, arg2: _javatypes.java.util._function.BinaryOperator<A>, arg3: _javatypes.java.util._function.Function<A, R>, arg4: _javatypes.java.util.stream.Collector$Characteristics[]): _javatypes.java.util.stream.Collector<T, A, R>;
                        
                    }
                }
                interface Stream$Builder<T> extends _javatypes.java.lang.Interface, _javatypes.java.util._function.Consumer<T> {
                    
                    accept(arg0: T): void;
                    add(arg0: T): _javatypes.java.util.stream.Stream$Builder<T>;
                    build(): _javatypes.java.util.stream.Stream<T>;
                    
                }
                namespace Stream$Builder {
                    interface static {
                        
                        
                        
                    }
                }
                interface IntStream$IntMapMultiConsumer extends _javatypes.java.lang.Interface {
                    
                    accept(arg0: number, arg1: _javatypes.java.util._function.IntConsumer): void;
                    
                }
                namespace IntStream$IntMapMultiConsumer {
                    interface static {
                        
                        
                        
                    }
                }
                interface LongStream$LongMapMultiConsumer extends _javatypes.java.lang.Interface {
                    
                    accept(arg0: number, arg1: _javatypes.java.util._function.LongConsumer): void;
                    
                }
                namespace LongStream$LongMapMultiConsumer {
                    interface static {
                        
                        
                        
                    }
                }
                interface LongStream$Builder extends _javatypes.java.lang.Interface, _javatypes.java.util._function.LongConsumer {
                    
                    accept(arg0: number): void;
                    add(arg0: number): _javatypes.java.util.stream.LongStream$Builder;
                    build(): _javatypes.java.util.stream.LongStream;
                    
                }
                namespace LongStream$Builder {
                    interface static {
                        
                        
                        
                    }
                }
                interface Collector$Characteristics extends _javatypes.java.lang.Enum<_javatypes.java.util.stream.Collector$Characteristics> {
                    
                    
                }
                namespace Collector$Characteristics {
                    interface static {
                        
                        readonly CONCURRENT: _javatypes.java.util.stream.Collector$Characteristics;
                        readonly UNORDERED: _javatypes.java.util.stream.Collector$Characteristics;
                        readonly IDENTITY_FINISH: _javatypes.java.util.stream.Collector$Characteristics;
                        
                        values(): _javatypes.java.util.stream.Collector$Characteristics[];
                        valueOf(arg0: string): _javatypes.java.util.stream.Collector$Characteristics;
                        
                    }
                }
            }
        
            namespace random {
            
                interface RandomGenerator extends _javatypes.java.lang.Interface {
                    
                    isDeprecated(): boolean;
                    doubles(): _javatypes.java.util.stream.DoubleStream;
                    doubles(arg0: number, arg1: number): _javatypes.java.util.stream.DoubleStream;
                    doubles(arg0: number): _javatypes.java.util.stream.DoubleStream;
                    doubles(arg0: number, arg1: number, arg2: number): _javatypes.java.util.stream.DoubleStream;
                    ints(): _javatypes.java.util.stream.IntStream;
                    ints(arg0: number, arg1: number): _javatypes.java.util.stream.IntStream;
                    ints(arg0: number): _javatypes.java.util.stream.IntStream;
                    ints(arg0: number, arg1: number, arg2: number): _javatypes.java.util.stream.IntStream;
                    longs(): _javatypes.java.util.stream.LongStream;
                    longs(arg0: number, arg1: number): _javatypes.java.util.stream.LongStream;
                    longs(arg0: number): _javatypes.java.util.stream.LongStream;
                    longs(arg0: number, arg1: number, arg2: number): _javatypes.java.util.stream.LongStream;
                    nextBoolean(): boolean;
                    nextBytes(arg0: number[]): void;
                    nextFloat(): number;
                    nextFloat(arg0: number): number;
                    nextFloat(arg0: number, arg1: number): number;
                    nextDouble(): number;
                    nextDouble(arg0: number): number;
                    nextDouble(arg0: number, arg1: number): number;
                    nextInt(): number;
                    nextInt(arg0: number): number;
                    nextInt(arg0: number, arg1: number): number;
                    nextLong(): number;
                    nextLong(arg0: number): number;
                    nextLong(arg0: number, arg1: number): number;
                    nextGaussian(): number;
                    nextGaussian(arg0: number, arg1: number): number;
                    nextExponential(): number;
                    
                }
                namespace RandomGenerator {
                    interface static {
                        
                        
                        of(arg0: string): _javatypes.java.util.random.RandomGenerator;
                        getDefault(): _javatypes.java.util.random.RandomGenerator;
                        
                    }
                }
                interface RandomGenerator$SplittableGenerator extends _javatypes.java.lang.Interface, _javatypes.java.util.random.RandomGenerator$StreamableGenerator {
                    
                    split(): _javatypes.java.util.random.RandomGenerator$SplittableGenerator;
                    split(arg0: _javatypes.java.util.random.RandomGenerator$SplittableGenerator): _javatypes.java.util.random.RandomGenerator$SplittableGenerator;
                    splits(): _javatypes.java.util.stream.Stream<_javatypes.java.util.random.RandomGenerator$SplittableGenerator>;
                    splits(arg0: number): _javatypes.java.util.stream.Stream<_javatypes.java.util.random.RandomGenerator$SplittableGenerator>;
                    splits(arg0: _javatypes.java.util.random.RandomGenerator$SplittableGenerator): _javatypes.java.util.stream.Stream<_javatypes.java.util.random.RandomGenerator$SplittableGenerator>;
                    splits(arg0: number, arg1: _javatypes.java.util.random.RandomGenerator$SplittableGenerator): _javatypes.java.util.stream.Stream<_javatypes.java.util.random.RandomGenerator$SplittableGenerator>;
                    rngs(): _javatypes.java.util.stream.Stream<_javatypes.java.util.random.RandomGenerator>;
                    rngs(arg0: number): _javatypes.java.util.stream.Stream<_javatypes.java.util.random.RandomGenerator>;
                    
                }
                namespace RandomGenerator$SplittableGenerator {
                    interface static {
                        
                        
                        of(arg0: string): _javatypes.java.util.random.RandomGenerator$SplittableGenerator;
                        
                    }
                }
                interface RandomGenerator$StreamableGenerator extends _javatypes.java.lang.Interface, _javatypes.java.util.random.RandomGenerator {
                    
                    rngs(): _javatypes.java.util.stream.Stream<_javatypes.java.util.random.RandomGenerator>;
                    rngs(arg0: number): _javatypes.java.util.stream.Stream<_javatypes.java.util.random.RandomGenerator>;
                    
                }
                namespace RandomGenerator$StreamableGenerator {
                    interface static {
                        
                        
                        of(arg0: string): _javatypes.java.util.random.RandomGenerator$StreamableGenerator;
                        
                    }
                }
            }
        
            namespace concurrent {
            
                interface Future<V> extends _javatypes.java.lang.Interface {
                    
                    cancel(arg0: boolean): boolean;
                    isCancelled(): boolean;
                    isDone(): boolean;
                    get(): V;
                    get(arg0: number, arg1: _javatypes.java.util.concurrent.TimeUnit): V;
                    
                }
                namespace Future {
                    interface static {
                        
                        
                        
                    }
                }
                interface ExecutorService extends _javatypes.java.lang.Interface, _javatypes.java.util.concurrent.Executor {
                    
                    shutdown(): void;
                    shutdownNow(): _javatypes.java.util.List<_javatypes.java.lang.Runnable>;
                    isShutdown(): boolean;
                    isTerminated(): boolean;
                    awaitTermination(arg0: number, arg1: _javatypes.java.util.concurrent.TimeUnit): boolean;
                    submit<T>(arg0: _javatypes.java.util.concurrent.Callable<T>): _javatypes.java.util.concurrent.Future<T>;
                    submit<T>(arg0: _javatypes.java.lang.Runnable, arg1: T): _javatypes.java.util.concurrent.Future<T>;
                    submit(arg0: _javatypes.java.lang.Runnable): _javatypes.java.util.concurrent.Future<any>;
                    invokeAll<T>(arg0: _javatypes.java.util.Collection<any>): _javatypes.java.util.List<_javatypes.java.util.concurrent.Future<T>>;
                    invokeAll<T>(arg0: _javatypes.java.util.Collection<any>, arg1: number, arg2: _javatypes.java.util.concurrent.TimeUnit): _javatypes.java.util.List<_javatypes.java.util.concurrent.Future<T>>;
                    invokeAny<T>(arg0: _javatypes.java.util.Collection<any>): T;
                    invokeAny<T>(arg0: _javatypes.java.util.Collection<any>, arg1: number, arg2: _javatypes.java.util.concurrent.TimeUnit): T;
                    
                }
                namespace ExecutorService {
                    interface static {
                        
                        
                        
                    }
                }
                interface TimeUnit extends _javatypes.java.lang.Enum<_javatypes.java.util.concurrent.TimeUnit> {
                    
                    convert(arg0: number, arg1: _javatypes.java.util.concurrent.TimeUnit): number;
                    convert(arg0: _javatypes.java.time.Duration): number;
                    toNanos(arg0: number): number;
                    toMicros(arg0: number): number;
                    toMillis(arg0: number): number;
                    toSeconds(arg0: number): number;
                    toMinutes(arg0: number): number;
                    toHours(arg0: number): number;
                    toDays(arg0: number): number;
                    timedWait(arg0: any, arg1: number): void;
                    timedJoin(arg0: _javatypes.java.lang.Thread, arg1: number): void;
                    sleep(arg0: number): void;
                    toChronoUnit(): _javatypes.java.time.temporal.ChronoUnit;
                    
                }
                namespace TimeUnit {
                    interface static {
                        
                        readonly NANOSECONDS: _javatypes.java.util.concurrent.TimeUnit;
                        readonly MICROSECONDS: _javatypes.java.util.concurrent.TimeUnit;
                        readonly MILLISECONDS: _javatypes.java.util.concurrent.TimeUnit;
                        readonly SECONDS: _javatypes.java.util.concurrent.TimeUnit;
                        readonly MINUTES: _javatypes.java.util.concurrent.TimeUnit;
                        readonly HOURS: _javatypes.java.util.concurrent.TimeUnit;
                        readonly DAYS: _javatypes.java.util.concurrent.TimeUnit;
                        
                        values(): _javatypes.java.util.concurrent.TimeUnit[];
                        valueOf(arg0: string): _javatypes.java.util.concurrent.TimeUnit;
                        of(arg0: _javatypes.java.time.temporal.ChronoUnit): _javatypes.java.util.concurrent.TimeUnit;
                        
                    }
                }
                interface Callable<V> extends _javatypes.java.lang.Interface {
                    
                    call(): V;
                    
                }
                namespace Callable {
                    interface static {
                        
                        
                        
                    }
                }
                interface Executor extends _javatypes.java.lang.Interface {
                    
                    execute(arg0: _javatypes.java.lang.Runnable): void;
                    
                }
                namespace Executor {
                    interface static {
                        
                        
                        
                    }
                }
                interface CompletableFuture<T> extends any, _javatypes.java.util.concurrent.Future<T>, _javatypes.java.util.concurrent.CompletionStage<T> {
                    
                    isDone(): boolean;
                    get(): T;
                    get(arg0: number, arg1: _javatypes.java.util.concurrent.TimeUnit): T;
                    join(): T;
                    getNow(arg0: T): T;
                    complete(arg0: T): boolean;
                    completeExceptionally(arg0: _javatypes.java.lang.Throwable): boolean;
                    thenApply<U>(arg0: _javatypes.java.util._function.Function<any, any>): _javatypes.java.util.concurrent.CompletableFuture<U>;
                    thenApplyAsync<U>(arg0: _javatypes.java.util._function.Function<any, any>): _javatypes.java.util.concurrent.CompletableFuture<U>;
                    thenApplyAsync<U>(arg0: _javatypes.java.util._function.Function<any, any>, arg1: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletableFuture<U>;
                    thenAccept(arg0: _javatypes.java.util._function.Consumer<any>): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.java.lang.Void>;
                    thenAcceptAsync(arg0: _javatypes.java.util._function.Consumer<any>): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.java.lang.Void>;
                    thenAcceptAsync(arg0: _javatypes.java.util._function.Consumer<any>, arg1: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.java.lang.Void>;
                    thenRun(arg0: _javatypes.java.lang.Runnable): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.java.lang.Void>;
                    thenRunAsync(arg0: _javatypes.java.lang.Runnable): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.java.lang.Void>;
                    thenRunAsync(arg0: _javatypes.java.lang.Runnable, arg1: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.java.lang.Void>;
                    thenCombine<U, V>(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.util._function.BiFunction<any, any, any>): _javatypes.java.util.concurrent.CompletableFuture<V>;
                    thenCombineAsync<U, V>(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.util._function.BiFunction<any, any, any>): _javatypes.java.util.concurrent.CompletableFuture<V>;
                    thenCombineAsync<U, V>(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.util._function.BiFunction<any, any, any>, arg2: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletableFuture<V>;
                    thenAcceptBoth<U>(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.util._function.BiConsumer<any, any>): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.java.lang.Void>;
                    thenAcceptBothAsync<U>(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.util._function.BiConsumer<any, any>): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.java.lang.Void>;
                    thenAcceptBothAsync<U>(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.util._function.BiConsumer<any, any>, arg2: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.java.lang.Void>;
                    runAfterBoth(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.lang.Runnable): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.java.lang.Void>;
                    runAfterBothAsync(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.lang.Runnable): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.java.lang.Void>;
                    runAfterBothAsync(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.lang.Runnable, arg2: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.java.lang.Void>;
                    applyToEither<U>(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.util._function.Function<any, U>): _javatypes.java.util.concurrent.CompletableFuture<U>;
                    applyToEitherAsync<U>(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.util._function.Function<any, U>): _javatypes.java.util.concurrent.CompletableFuture<U>;
                    applyToEitherAsync<U>(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.util._function.Function<any, U>, arg2: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletableFuture<U>;
                    acceptEither(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.util._function.Consumer<any>): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.java.lang.Void>;
                    acceptEitherAsync(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.util._function.Consumer<any>): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.java.lang.Void>;
                    acceptEitherAsync(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.util._function.Consumer<any>, arg2: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.java.lang.Void>;
                    runAfterEither(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.lang.Runnable): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.java.lang.Void>;
                    runAfterEitherAsync(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.lang.Runnable): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.java.lang.Void>;
                    runAfterEitherAsync(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.lang.Runnable, arg2: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.java.lang.Void>;
                    thenCompose<U>(arg0: _javatypes.java.util._function.Function<any, any>): _javatypes.java.util.concurrent.CompletableFuture<U>;
                    thenComposeAsync<U>(arg0: _javatypes.java.util._function.Function<any, any>): _javatypes.java.util.concurrent.CompletableFuture<U>;
                    thenComposeAsync<U>(arg0: _javatypes.java.util._function.Function<any, any>, arg1: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletableFuture<U>;
                    whenComplete(arg0: _javatypes.java.util._function.BiConsumer<any, any>): _javatypes.java.util.concurrent.CompletableFuture<T>;
                    whenCompleteAsync(arg0: _javatypes.java.util._function.BiConsumer<any, any>): _javatypes.java.util.concurrent.CompletableFuture<T>;
                    whenCompleteAsync(arg0: _javatypes.java.util._function.BiConsumer<any, any>, arg1: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletableFuture<T>;
                    handle<U>(arg0: _javatypes.java.util._function.BiFunction<any, _javatypes.java.lang.Throwable, any>): _javatypes.java.util.concurrent.CompletableFuture<U>;
                    handleAsync<U>(arg0: _javatypes.java.util._function.BiFunction<any, _javatypes.java.lang.Throwable, any>): _javatypes.java.util.concurrent.CompletableFuture<U>;
                    handleAsync<U>(arg0: _javatypes.java.util._function.BiFunction<any, _javatypes.java.lang.Throwable, any>, arg1: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletableFuture<U>;
                    toCompletableFuture(): _javatypes.java.util.concurrent.CompletableFuture<T>;
                    exceptionally(arg0: _javatypes.java.util._function.Function<_javatypes.java.lang.Throwable, any>): _javatypes.java.util.concurrent.CompletableFuture<T>;
                    exceptionallyAsync(arg0: _javatypes.java.util._function.Function<_javatypes.java.lang.Throwable, any>): _javatypes.java.util.concurrent.CompletableFuture<T>;
                    exceptionallyAsync(arg0: _javatypes.java.util._function.Function<_javatypes.java.lang.Throwable, any>, arg1: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletableFuture<T>;
                    exceptionallyCompose(arg0: _javatypes.java.util._function.Function<_javatypes.java.lang.Throwable, any>): _javatypes.java.util.concurrent.CompletableFuture<T>;
                    exceptionallyComposeAsync(arg0: _javatypes.java.util._function.Function<_javatypes.java.lang.Throwable, any>): _javatypes.java.util.concurrent.CompletableFuture<T>;
                    exceptionallyComposeAsync(arg0: _javatypes.java.util._function.Function<_javatypes.java.lang.Throwable, any>, arg1: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletableFuture<T>;
                    cancel(arg0: boolean): boolean;
                    isCancelled(): boolean;
                    isCompletedExceptionally(): boolean;
                    obtrudeValue(arg0: T): void;
                    obtrudeException(arg0: _javatypes.java.lang.Throwable): void;
                    getNumberOfDependents(): number;
                    toString(): string;
                    newIncompleteFuture<U>(): _javatypes.java.util.concurrent.CompletableFuture<U>;
                    defaultExecutor(): _javatypes.java.util.concurrent.Executor;
                    copy(): _javatypes.java.util.concurrent.CompletableFuture<T>;
                    minimalCompletionStage(): _javatypes.java.util.concurrent.CompletionStage<T>;
                    completeAsync(arg0: _javatypes.java.util._function.Supplier<any>, arg1: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletableFuture<T>;
                    completeAsync(arg0: _javatypes.java.util._function.Supplier<any>): _javatypes.java.util.concurrent.CompletableFuture<T>;
                    orTimeout(arg0: number, arg1: _javatypes.java.util.concurrent.TimeUnit): _javatypes.java.util.concurrent.CompletableFuture<T>;
                    completeOnTimeout(arg0: T, arg1: number, arg2: _javatypes.java.util.concurrent.TimeUnit): _javatypes.java.util.concurrent.CompletableFuture<T>;
                    
                }
                namespace CompletableFuture {
                    interface static {
                        new <T>(): _javatypes.java.util.concurrent.CompletableFuture<T>;
                        
                        
                        supplyAsync<U>(arg0: _javatypes.java.util._function.Supplier<U>): _javatypes.java.util.concurrent.CompletableFuture<U>;
                        supplyAsync<U>(arg0: _javatypes.java.util._function.Supplier<U>, arg1: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletableFuture<U>;
                        runAsync(arg0: _javatypes.java.lang.Runnable): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.java.lang.Void>;
                        runAsync(arg0: _javatypes.java.lang.Runnable, arg1: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.java.lang.Void>;
                        completedFuture<U>(arg0: U): _javatypes.java.util.concurrent.CompletableFuture<U>;
                        allOf(arg0: _javatypes.java.util.concurrent.CompletableFuture<any>[]): _javatypes.java.util.concurrent.CompletableFuture<_javatypes.java.lang.Void>;
                        anyOf(arg0: _javatypes.java.util.concurrent.CompletableFuture<any>[]): _javatypes.java.util.concurrent.CompletableFuture<any>;
                        delayedExecutor(arg0: number, arg1: _javatypes.java.util.concurrent.TimeUnit, arg2: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.Executor;
                        delayedExecutor(arg0: number, arg1: _javatypes.java.util.concurrent.TimeUnit): _javatypes.java.util.concurrent.Executor;
                        completedStage<U>(arg0: U): _javatypes.java.util.concurrent.CompletionStage<U>;
                        failedFuture<U>(arg0: _javatypes.java.lang.Throwable): _javatypes.java.util.concurrent.CompletableFuture<U>;
                        failedStage<U>(arg0: _javatypes.java.lang.Throwable): _javatypes.java.util.concurrent.CompletionStage<U>;
                        
                    }
                }
                interface CompletionStage<T> extends _javatypes.java.lang.Interface {
                    
                    thenApply<U>(arg0: _javatypes.java.util._function.Function<any, any>): _javatypes.java.util.concurrent.CompletionStage<U>;
                    thenApplyAsync<U>(arg0: _javatypes.java.util._function.Function<any, any>): _javatypes.java.util.concurrent.CompletionStage<U>;
                    thenApplyAsync<U>(arg0: _javatypes.java.util._function.Function<any, any>, arg1: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletionStage<U>;
                    thenAccept(arg0: _javatypes.java.util._function.Consumer<any>): _javatypes.java.util.concurrent.CompletionStage<_javatypes.java.lang.Void>;
                    thenAcceptAsync(arg0: _javatypes.java.util._function.Consumer<any>): _javatypes.java.util.concurrent.CompletionStage<_javatypes.java.lang.Void>;
                    thenAcceptAsync(arg0: _javatypes.java.util._function.Consumer<any>, arg1: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletionStage<_javatypes.java.lang.Void>;
                    thenRun(arg0: _javatypes.java.lang.Runnable): _javatypes.java.util.concurrent.CompletionStage<_javatypes.java.lang.Void>;
                    thenRunAsync(arg0: _javatypes.java.lang.Runnable): _javatypes.java.util.concurrent.CompletionStage<_javatypes.java.lang.Void>;
                    thenRunAsync(arg0: _javatypes.java.lang.Runnable, arg1: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletionStage<_javatypes.java.lang.Void>;
                    thenCombine<U, V>(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.util._function.BiFunction<any, any, any>): _javatypes.java.util.concurrent.CompletionStage<V>;
                    thenCombineAsync<U, V>(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.util._function.BiFunction<any, any, any>): _javatypes.java.util.concurrent.CompletionStage<V>;
                    thenCombineAsync<U, V>(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.util._function.BiFunction<any, any, any>, arg2: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletionStage<V>;
                    thenAcceptBoth<U>(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.util._function.BiConsumer<any, any>): _javatypes.java.util.concurrent.CompletionStage<_javatypes.java.lang.Void>;
                    thenAcceptBothAsync<U>(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.util._function.BiConsumer<any, any>): _javatypes.java.util.concurrent.CompletionStage<_javatypes.java.lang.Void>;
                    thenAcceptBothAsync<U>(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.util._function.BiConsumer<any, any>, arg2: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletionStage<_javatypes.java.lang.Void>;
                    runAfterBoth(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.lang.Runnable): _javatypes.java.util.concurrent.CompletionStage<_javatypes.java.lang.Void>;
                    runAfterBothAsync(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.lang.Runnable): _javatypes.java.util.concurrent.CompletionStage<_javatypes.java.lang.Void>;
                    runAfterBothAsync(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.lang.Runnable, arg2: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletionStage<_javatypes.java.lang.Void>;
                    applyToEither<U>(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.util._function.Function<any, U>): _javatypes.java.util.concurrent.CompletionStage<U>;
                    applyToEitherAsync<U>(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.util._function.Function<any, U>): _javatypes.java.util.concurrent.CompletionStage<U>;
                    applyToEitherAsync<U>(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.util._function.Function<any, U>, arg2: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletionStage<U>;
                    acceptEither(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.util._function.Consumer<any>): _javatypes.java.util.concurrent.CompletionStage<_javatypes.java.lang.Void>;
                    acceptEitherAsync(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.util._function.Consumer<any>): _javatypes.java.util.concurrent.CompletionStage<_javatypes.java.lang.Void>;
                    acceptEitherAsync(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.util._function.Consumer<any>, arg2: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletionStage<_javatypes.java.lang.Void>;
                    runAfterEither(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.lang.Runnable): _javatypes.java.util.concurrent.CompletionStage<_javatypes.java.lang.Void>;
                    runAfterEitherAsync(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.lang.Runnable): _javatypes.java.util.concurrent.CompletionStage<_javatypes.java.lang.Void>;
                    runAfterEitherAsync(arg0: _javatypes.java.util.concurrent.CompletionStage<any>, arg1: _javatypes.java.lang.Runnable, arg2: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletionStage<_javatypes.java.lang.Void>;
                    thenCompose<U>(arg0: _javatypes.java.util._function.Function<any, any>): _javatypes.java.util.concurrent.CompletionStage<U>;
                    thenComposeAsync<U>(arg0: _javatypes.java.util._function.Function<any, any>): _javatypes.java.util.concurrent.CompletionStage<U>;
                    thenComposeAsync<U>(arg0: _javatypes.java.util._function.Function<any, any>, arg1: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletionStage<U>;
                    handle<U>(arg0: _javatypes.java.util._function.BiFunction<any, _javatypes.java.lang.Throwable, any>): _javatypes.java.util.concurrent.CompletionStage<U>;
                    handleAsync<U>(arg0: _javatypes.java.util._function.BiFunction<any, _javatypes.java.lang.Throwable, any>): _javatypes.java.util.concurrent.CompletionStage<U>;
                    handleAsync<U>(arg0: _javatypes.java.util._function.BiFunction<any, _javatypes.java.lang.Throwable, any>, arg1: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletionStage<U>;
                    whenComplete(arg0: _javatypes.java.util._function.BiConsumer<any, any>): _javatypes.java.util.concurrent.CompletionStage<T>;
                    whenCompleteAsync(arg0: _javatypes.java.util._function.BiConsumer<any, any>): _javatypes.java.util.concurrent.CompletionStage<T>;
                    whenCompleteAsync(arg0: _javatypes.java.util._function.BiConsumer<any, any>, arg1: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletionStage<T>;
                    exceptionally(arg0: _javatypes.java.util._function.Function<_javatypes.java.lang.Throwable, any>): _javatypes.java.util.concurrent.CompletionStage<T>;
                    exceptionallyAsync(arg0: _javatypes.java.util._function.Function<_javatypes.java.lang.Throwable, any>): _javatypes.java.util.concurrent.CompletionStage<T>;
                    exceptionallyAsync(arg0: _javatypes.java.util._function.Function<_javatypes.java.lang.Throwable, any>, arg1: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletionStage<T>;
                    exceptionallyCompose(arg0: _javatypes.java.util._function.Function<_javatypes.java.lang.Throwable, any>): _javatypes.java.util.concurrent.CompletionStage<T>;
                    exceptionallyComposeAsync(arg0: _javatypes.java.util._function.Function<_javatypes.java.lang.Throwable, any>): _javatypes.java.util.concurrent.CompletionStage<T>;
                    exceptionallyComposeAsync(arg0: _javatypes.java.util._function.Function<_javatypes.java.lang.Throwable, any>, arg1: _javatypes.java.util.concurrent.Executor): _javatypes.java.util.concurrent.CompletionStage<T>;
                    toCompletableFuture(): _javatypes.java.util.concurrent.CompletableFuture<T>;
                    
                }
                namespace CompletionStage {
                    interface static {
                        
                        
                        
                    }
                }
            }
        }
    
        namespace nio {
        
            interface LongBuffer extends _javatypes.java.nio.Buffer, _javatypes.java.lang.Comparable<_javatypes.java.nio.LongBuffer> {
                
                slice(): _javatypes.java.nio.LongBuffer;
                slice(arg0: number, arg1: number): _javatypes.java.nio.LongBuffer;
                duplicate(): _javatypes.java.nio.LongBuffer;
                asReadOnlyBuffer(): _javatypes.java.nio.LongBuffer;
                get(): number;
                put(arg0: number): _javatypes.java.nio.LongBuffer;
                get(arg0: number): number;
                put(arg0: number, arg1: number): _javatypes.java.nio.LongBuffer;
                get(arg0: number[], arg1: number, arg2: number): _javatypes.java.nio.LongBuffer;
                get(arg0: number[]): _javatypes.java.nio.LongBuffer;
                get(arg0: number, arg1: number[], arg2: number, arg3: number): _javatypes.java.nio.LongBuffer;
                get(arg0: number, arg1: number[]): _javatypes.java.nio.LongBuffer;
                put(arg0: _javatypes.java.nio.LongBuffer): _javatypes.java.nio.LongBuffer;
                put(arg0: number, arg1: _javatypes.java.nio.LongBuffer, arg2: number, arg3: number): _javatypes.java.nio.LongBuffer;
                put(arg0: number[], arg1: number, arg2: number): _javatypes.java.nio.LongBuffer;
                put(arg0: number[]): _javatypes.java.nio.LongBuffer;
                put(arg0: number, arg1: number[], arg2: number, arg3: number): _javatypes.java.nio.LongBuffer;
                put(arg0: number, arg1: number[]): _javatypes.java.nio.LongBuffer;
                hasArray(): boolean;
                array(): number[];
                arrayOffset(): number;
                position(arg0: number): _javatypes.java.nio.LongBuffer;
                limit(arg0: number): _javatypes.java.nio.LongBuffer;
                mark(): _javatypes.java.nio.LongBuffer;
                reset(): _javatypes.java.nio.LongBuffer;
                clear(): _javatypes.java.nio.LongBuffer;
                flip(): _javatypes.java.nio.LongBuffer;
                rewind(): _javatypes.java.nio.LongBuffer;
                compact(): _javatypes.java.nio.LongBuffer;
                isDirect(): boolean;
                toString(): string;
                hashCode(): number;
                equals(arg0: any): boolean;
                compareTo(arg0: _javatypes.java.nio.LongBuffer): number;
                mismatch(arg0: _javatypes.java.nio.LongBuffer): number;
                order(): _javatypes.java.nio.ByteOrder;
                
            }
            namespace LongBuffer {
                interface static {
                    
                    
                    allocate(arg0: number): _javatypes.java.nio.LongBuffer;
                    wrap(arg0: number[], arg1: number, arg2: number): _javatypes.java.nio.LongBuffer;
                    wrap(arg0: number[]): _javatypes.java.nio.LongBuffer;
                    
                }
            }
            interface ByteBuffer extends _javatypes.java.nio.Buffer, _javatypes.java.lang.Comparable<_javatypes.java.nio.ByteBuffer> {
                
                slice(): _javatypes.java.nio.ByteBuffer;
                slice(arg0: number, arg1: number): _javatypes.java.nio.ByteBuffer;
                duplicate(): _javatypes.java.nio.ByteBuffer;
                asReadOnlyBuffer(): _javatypes.java.nio.ByteBuffer;
                get(): number;
                put(arg0: number): _javatypes.java.nio.ByteBuffer;
                get(arg0: number): number;
                put(arg0: number, arg1: number): _javatypes.java.nio.ByteBuffer;
                get(arg0: number[], arg1: number, arg2: number): _javatypes.java.nio.ByteBuffer;
                get(arg0: number[]): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: number[], arg2: number, arg3: number): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: number[]): _javatypes.java.nio.ByteBuffer;
                put(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                put(arg0: number, arg1: _javatypes.java.nio.ByteBuffer, arg2: number, arg3: number): _javatypes.java.nio.ByteBuffer;
                put(arg0: number[], arg1: number, arg2: number): _javatypes.java.nio.ByteBuffer;
                put(arg0: number[]): _javatypes.java.nio.ByteBuffer;
                put(arg0: number, arg1: number[], arg2: number, arg3: number): _javatypes.java.nio.ByteBuffer;
                put(arg0: number, arg1: number[]): _javatypes.java.nio.ByteBuffer;
                hasArray(): boolean;
                array(): number[];
                arrayOffset(): number;
                position(arg0: number): _javatypes.java.nio.ByteBuffer;
                limit(arg0: number): _javatypes.java.nio.ByteBuffer;
                mark(): _javatypes.java.nio.ByteBuffer;
                reset(): _javatypes.java.nio.ByteBuffer;
                clear(): _javatypes.java.nio.ByteBuffer;
                flip(): _javatypes.java.nio.ByteBuffer;
                rewind(): _javatypes.java.nio.ByteBuffer;
                compact(): _javatypes.java.nio.ByteBuffer;
                isDirect(): boolean;
                toString(): string;
                hashCode(): number;
                equals(arg0: any): boolean;
                compareTo(arg0: _javatypes.java.nio.ByteBuffer): number;
                mismatch(arg0: _javatypes.java.nio.ByteBuffer): number;
                order(): _javatypes.java.nio.ByteOrder;
                order(arg0: _javatypes.java.nio.ByteOrder): _javatypes.java.nio.ByteBuffer;
                alignmentOffset(arg0: number, arg1: number): number;
                alignedSlice(arg0: number): _javatypes.java.nio.ByteBuffer;
                getChar(): number;
                putChar(arg0: number): _javatypes.java.nio.ByteBuffer;
                getChar(arg0: number): number;
                putChar(arg0: number, arg1: number): _javatypes.java.nio.ByteBuffer;
                asCharBuffer(): _javatypes.java.nio.CharBuffer;
                getShort(): number;
                putShort(arg0: number): _javatypes.java.nio.ByteBuffer;
                getShort(arg0: number): number;
                putShort(arg0: number, arg1: number): _javatypes.java.nio.ByteBuffer;
                asShortBuffer(): _javatypes.java.nio.ShortBuffer;
                getInt(): number;
                putInt(arg0: number): _javatypes.java.nio.ByteBuffer;
                getInt(arg0: number): number;
                putInt(arg0: number, arg1: number): _javatypes.java.nio.ByteBuffer;
                asIntBuffer(): _javatypes.java.nio.IntBuffer;
                getLong(): number;
                putLong(arg0: number): _javatypes.java.nio.ByteBuffer;
                getLong(arg0: number): number;
                putLong(arg0: number, arg1: number): _javatypes.java.nio.ByteBuffer;
                asLongBuffer(): _javatypes.java.nio.LongBuffer;
                getFloat(): number;
                putFloat(arg0: number): _javatypes.java.nio.ByteBuffer;
                getFloat(arg0: number): number;
                putFloat(arg0: number, arg1: number): _javatypes.java.nio.ByteBuffer;
                asFloatBuffer(): _javatypes.java.nio.FloatBuffer;
                getDouble(): number;
                putDouble(arg0: number): _javatypes.java.nio.ByteBuffer;
                getDouble(arg0: number): number;
                putDouble(arg0: number, arg1: number): _javatypes.java.nio.ByteBuffer;
                asDoubleBuffer(): _javatypes.java.nio.DoubleBuffer;
                
            }
            namespace ByteBuffer {
                interface static {
                    
                    
                    allocateDirect(arg0: number): _javatypes.java.nio.ByteBuffer;
                    allocate(arg0: number): _javatypes.java.nio.ByteBuffer;
                    wrap(arg0: number[], arg1: number, arg2: number): _javatypes.java.nio.ByteBuffer;
                    wrap(arg0: number[]): _javatypes.java.nio.ByteBuffer;
                    
                }
            }
            interface IntBuffer extends _javatypes.java.nio.Buffer, _javatypes.java.lang.Comparable<_javatypes.java.nio.IntBuffer> {
                
                slice(): _javatypes.java.nio.IntBuffer;
                slice(arg0: number, arg1: number): _javatypes.java.nio.IntBuffer;
                duplicate(): _javatypes.java.nio.IntBuffer;
                asReadOnlyBuffer(): _javatypes.java.nio.IntBuffer;
                get(): number;
                put(arg0: number): _javatypes.java.nio.IntBuffer;
                get(arg0: number): number;
                put(arg0: number, arg1: number): _javatypes.java.nio.IntBuffer;
                get(arg0: number[], arg1: number, arg2: number): _javatypes.java.nio.IntBuffer;
                get(arg0: number[]): _javatypes.java.nio.IntBuffer;
                get(arg0: number, arg1: number[], arg2: number, arg3: number): _javatypes.java.nio.IntBuffer;
                get(arg0: number, arg1: number[]): _javatypes.java.nio.IntBuffer;
                put(arg0: _javatypes.java.nio.IntBuffer): _javatypes.java.nio.IntBuffer;
                put(arg0: number, arg1: _javatypes.java.nio.IntBuffer, arg2: number, arg3: number): _javatypes.java.nio.IntBuffer;
                put(arg0: number[], arg1: number, arg2: number): _javatypes.java.nio.IntBuffer;
                put(arg0: number[]): _javatypes.java.nio.IntBuffer;
                put(arg0: number, arg1: number[], arg2: number, arg3: number): _javatypes.java.nio.IntBuffer;
                put(arg0: number, arg1: number[]): _javatypes.java.nio.IntBuffer;
                hasArray(): boolean;
                array(): number[];
                arrayOffset(): number;
                position(arg0: number): _javatypes.java.nio.IntBuffer;
                limit(arg0: number): _javatypes.java.nio.IntBuffer;
                mark(): _javatypes.java.nio.IntBuffer;
                reset(): _javatypes.java.nio.IntBuffer;
                clear(): _javatypes.java.nio.IntBuffer;
                flip(): _javatypes.java.nio.IntBuffer;
                rewind(): _javatypes.java.nio.IntBuffer;
                compact(): _javatypes.java.nio.IntBuffer;
                isDirect(): boolean;
                toString(): string;
                hashCode(): number;
                equals(arg0: any): boolean;
                compareTo(arg0: _javatypes.java.nio.IntBuffer): number;
                mismatch(arg0: _javatypes.java.nio.IntBuffer): number;
                order(): _javatypes.java.nio.ByteOrder;
                
            }
            namespace IntBuffer {
                interface static {
                    
                    
                    allocate(arg0: number): _javatypes.java.nio.IntBuffer;
                    wrap(arg0: number[], arg1: number, arg2: number): _javatypes.java.nio.IntBuffer;
                    wrap(arg0: number[]): _javatypes.java.nio.IntBuffer;
                    
                }
            }
            interface CharBuffer extends _javatypes.java.nio.Buffer, _javatypes.java.lang.Comparable<_javatypes.java.nio.CharBuffer>, _javatypes.java.lang.Appendable, _javatypes.java.lang.CharSequence, _javatypes.java.lang.Readable {
                
                read(arg0: _javatypes.java.nio.CharBuffer): number;
                slice(): _javatypes.java.nio.CharBuffer;
                slice(arg0: number, arg1: number): _javatypes.java.nio.CharBuffer;
                duplicate(): _javatypes.java.nio.CharBuffer;
                asReadOnlyBuffer(): _javatypes.java.nio.CharBuffer;
                get(): number;
                put(arg0: number): _javatypes.java.nio.CharBuffer;
                get(arg0: number): number;
                put(arg0: number, arg1: number): _javatypes.java.nio.CharBuffer;
                get(arg0: number[], arg1: number, arg2: number): _javatypes.java.nio.CharBuffer;
                get(arg0: number[]): _javatypes.java.nio.CharBuffer;
                get(arg0: number, arg1: number[], arg2: number, arg3: number): _javatypes.java.nio.CharBuffer;
                get(arg0: number, arg1: number[]): _javatypes.java.nio.CharBuffer;
                put(arg0: _javatypes.java.nio.CharBuffer): _javatypes.java.nio.CharBuffer;
                put(arg0: number, arg1: _javatypes.java.nio.CharBuffer, arg2: number, arg3: number): _javatypes.java.nio.CharBuffer;
                put(arg0: number[], arg1: number, arg2: number): _javatypes.java.nio.CharBuffer;
                put(arg0: number[]): _javatypes.java.nio.CharBuffer;
                put(arg0: number, arg1: number[], arg2: number, arg3: number): _javatypes.java.nio.CharBuffer;
                put(arg0: number, arg1: number[]): _javatypes.java.nio.CharBuffer;
                put(arg0: string, arg1: number, arg2: number): _javatypes.java.nio.CharBuffer;
                put(arg0: string): _javatypes.java.nio.CharBuffer;
                hasArray(): boolean;
                array(): number[];
                arrayOffset(): number;
                position(arg0: number): _javatypes.java.nio.CharBuffer;
                limit(arg0: number): _javatypes.java.nio.CharBuffer;
                mark(): _javatypes.java.nio.CharBuffer;
                reset(): _javatypes.java.nio.CharBuffer;
                clear(): _javatypes.java.nio.CharBuffer;
                flip(): _javatypes.java.nio.CharBuffer;
                rewind(): _javatypes.java.nio.CharBuffer;
                compact(): _javatypes.java.nio.CharBuffer;
                isDirect(): boolean;
                hashCode(): number;
                equals(arg0: any): boolean;
                compareTo(arg0: _javatypes.java.nio.CharBuffer): number;
                mismatch(arg0: _javatypes.java.nio.CharBuffer): number;
                toString(): string;
                length(): number;
                isEmpty(): boolean;
                charAt(arg0: number): number;
                subSequence(arg0: number, arg1: number): _javatypes.java.nio.CharBuffer;
                append(arg0: _javatypes.java.lang.CharSequence): _javatypes.java.nio.CharBuffer;
                append(arg0: _javatypes.java.lang.CharSequence, arg1: number, arg2: number): _javatypes.java.nio.CharBuffer;
                append(arg0: number): _javatypes.java.nio.CharBuffer;
                order(): _javatypes.java.nio.ByteOrder;
                chars(): _javatypes.java.util.stream.IntStream;
                
            }
            namespace CharBuffer {
                interface static {
                    
                    
                    allocate(arg0: number): _javatypes.java.nio.CharBuffer;
                    wrap(arg0: number[], arg1: number, arg2: number): _javatypes.java.nio.CharBuffer;
                    wrap(arg0: number[]): _javatypes.java.nio.CharBuffer;
                    wrap(arg0: _javatypes.java.lang.CharSequence, arg1: number, arg2: number): _javatypes.java.nio.CharBuffer;
                    wrap(arg0: _javatypes.java.lang.CharSequence): _javatypes.java.nio.CharBuffer;
                    
                }
            }
            interface ByteOrder extends any {
                
                toString(): string;
                
            }
            namespace ByteOrder {
                interface static {
                    
                    readonly BIG_ENDIAN: _javatypes.java.nio.ByteOrder;
                    readonly LITTLE_ENDIAN: _javatypes.java.nio.ByteOrder;
                    
                    nativeOrder(): _javatypes.java.nio.ByteOrder;
                    
                }
            }
            interface ShortBuffer extends _javatypes.java.nio.Buffer, _javatypes.java.lang.Comparable<_javatypes.java.nio.ShortBuffer> {
                
                slice(): _javatypes.java.nio.ShortBuffer;
                slice(arg0: number, arg1: number): _javatypes.java.nio.ShortBuffer;
                duplicate(): _javatypes.java.nio.ShortBuffer;
                asReadOnlyBuffer(): _javatypes.java.nio.ShortBuffer;
                get(): number;
                put(arg0: number): _javatypes.java.nio.ShortBuffer;
                get(arg0: number): number;
                put(arg0: number, arg1: number): _javatypes.java.nio.ShortBuffer;
                get(arg0: number[], arg1: number, arg2: number): _javatypes.java.nio.ShortBuffer;
                get(arg0: number[]): _javatypes.java.nio.ShortBuffer;
                get(arg0: number, arg1: number[], arg2: number, arg3: number): _javatypes.java.nio.ShortBuffer;
                get(arg0: number, arg1: number[]): _javatypes.java.nio.ShortBuffer;
                put(arg0: _javatypes.java.nio.ShortBuffer): _javatypes.java.nio.ShortBuffer;
                put(arg0: number, arg1: _javatypes.java.nio.ShortBuffer, arg2: number, arg3: number): _javatypes.java.nio.ShortBuffer;
                put(arg0: number[], arg1: number, arg2: number): _javatypes.java.nio.ShortBuffer;
                put(arg0: number[]): _javatypes.java.nio.ShortBuffer;
                put(arg0: number, arg1: number[], arg2: number, arg3: number): _javatypes.java.nio.ShortBuffer;
                put(arg0: number, arg1: number[]): _javatypes.java.nio.ShortBuffer;
                hasArray(): boolean;
                array(): number[];
                arrayOffset(): number;
                position(arg0: number): _javatypes.java.nio.ShortBuffer;
                limit(arg0: number): _javatypes.java.nio.ShortBuffer;
                mark(): _javatypes.java.nio.ShortBuffer;
                reset(): _javatypes.java.nio.ShortBuffer;
                clear(): _javatypes.java.nio.ShortBuffer;
                flip(): _javatypes.java.nio.ShortBuffer;
                rewind(): _javatypes.java.nio.ShortBuffer;
                compact(): _javatypes.java.nio.ShortBuffer;
                isDirect(): boolean;
                toString(): string;
                hashCode(): number;
                equals(arg0: any): boolean;
                compareTo(arg0: _javatypes.java.nio.ShortBuffer): number;
                mismatch(arg0: _javatypes.java.nio.ShortBuffer): number;
                order(): _javatypes.java.nio.ByteOrder;
                
            }
            namespace ShortBuffer {
                interface static {
                    
                    
                    allocate(arg0: number): _javatypes.java.nio.ShortBuffer;
                    wrap(arg0: number[], arg1: number, arg2: number): _javatypes.java.nio.ShortBuffer;
                    wrap(arg0: number[]): _javatypes.java.nio.ShortBuffer;
                    
                }
            }
            interface FloatBuffer extends _javatypes.java.nio.Buffer, _javatypes.java.lang.Comparable<_javatypes.java.nio.FloatBuffer> {
                
                slice(): _javatypes.java.nio.FloatBuffer;
                slice(arg0: number, arg1: number): _javatypes.java.nio.FloatBuffer;
                duplicate(): _javatypes.java.nio.FloatBuffer;
                asReadOnlyBuffer(): _javatypes.java.nio.FloatBuffer;
                get(): number;
                put(arg0: number): _javatypes.java.nio.FloatBuffer;
                get(arg0: number): number;
                put(arg0: number, arg1: number): _javatypes.java.nio.FloatBuffer;
                get(arg0: number[], arg1: number, arg2: number): _javatypes.java.nio.FloatBuffer;
                get(arg0: number[]): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: number[], arg2: number, arg3: number): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: number[]): _javatypes.java.nio.FloatBuffer;
                put(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                put(arg0: number, arg1: _javatypes.java.nio.FloatBuffer, arg2: number, arg3: number): _javatypes.java.nio.FloatBuffer;
                put(arg0: number[], arg1: number, arg2: number): _javatypes.java.nio.FloatBuffer;
                put(arg0: number[]): _javatypes.java.nio.FloatBuffer;
                put(arg0: number, arg1: number[], arg2: number, arg3: number): _javatypes.java.nio.FloatBuffer;
                put(arg0: number, arg1: number[]): _javatypes.java.nio.FloatBuffer;
                hasArray(): boolean;
                array(): number[];
                arrayOffset(): number;
                position(arg0: number): _javatypes.java.nio.FloatBuffer;
                limit(arg0: number): _javatypes.java.nio.FloatBuffer;
                mark(): _javatypes.java.nio.FloatBuffer;
                reset(): _javatypes.java.nio.FloatBuffer;
                clear(): _javatypes.java.nio.FloatBuffer;
                flip(): _javatypes.java.nio.FloatBuffer;
                rewind(): _javatypes.java.nio.FloatBuffer;
                compact(): _javatypes.java.nio.FloatBuffer;
                isDirect(): boolean;
                toString(): string;
                hashCode(): number;
                equals(arg0: any): boolean;
                compareTo(arg0: _javatypes.java.nio.FloatBuffer): number;
                mismatch(arg0: _javatypes.java.nio.FloatBuffer): number;
                order(): _javatypes.java.nio.ByteOrder;
                
            }
            namespace FloatBuffer {
                interface static {
                    
                    
                    allocate(arg0: number): _javatypes.java.nio.FloatBuffer;
                    wrap(arg0: number[], arg1: number, arg2: number): _javatypes.java.nio.FloatBuffer;
                    wrap(arg0: number[]): _javatypes.java.nio.FloatBuffer;
                    
                }
            }
            interface Buffer extends any {
                
                capacity(): number;
                position(): number;
                position(arg0: number): _javatypes.java.nio.Buffer;
                limit(): number;
                limit(arg0: number): _javatypes.java.nio.Buffer;
                mark(): _javatypes.java.nio.Buffer;
                reset(): _javatypes.java.nio.Buffer;
                clear(): _javatypes.java.nio.Buffer;
                flip(): _javatypes.java.nio.Buffer;
                rewind(): _javatypes.java.nio.Buffer;
                remaining(): number;
                hasRemaining(): boolean;
                isReadOnly(): boolean;
                hasArray(): boolean;
                array(): any;
                arrayOffset(): number;
                isDirect(): boolean;
                slice(): _javatypes.java.nio.Buffer;
                slice(arg0: number, arg1: number): _javatypes.java.nio.Buffer;
                duplicate(): _javatypes.java.nio.Buffer;
                
            }
            namespace Buffer {
                interface static {
                    
                    
                    
                }
            }
            interface DoubleBuffer extends _javatypes.java.nio.Buffer, _javatypes.java.lang.Comparable<_javatypes.java.nio.DoubleBuffer> {
                
                slice(): _javatypes.java.nio.DoubleBuffer;
                slice(arg0: number, arg1: number): _javatypes.java.nio.DoubleBuffer;
                duplicate(): _javatypes.java.nio.DoubleBuffer;
                asReadOnlyBuffer(): _javatypes.java.nio.DoubleBuffer;
                get(): number;
                put(arg0: number): _javatypes.java.nio.DoubleBuffer;
                get(arg0: number): number;
                put(arg0: number, arg1: number): _javatypes.java.nio.DoubleBuffer;
                get(arg0: number[], arg1: number, arg2: number): _javatypes.java.nio.DoubleBuffer;
                get(arg0: number[]): _javatypes.java.nio.DoubleBuffer;
                get(arg0: number, arg1: number[], arg2: number, arg3: number): _javatypes.java.nio.DoubleBuffer;
                get(arg0: number, arg1: number[]): _javatypes.java.nio.DoubleBuffer;
                put(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                put(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer, arg2: number, arg3: number): _javatypes.java.nio.DoubleBuffer;
                put(arg0: number[], arg1: number, arg2: number): _javatypes.java.nio.DoubleBuffer;
                put(arg0: number[]): _javatypes.java.nio.DoubleBuffer;
                put(arg0: number, arg1: number[], arg2: number, arg3: number): _javatypes.java.nio.DoubleBuffer;
                put(arg0: number, arg1: number[]): _javatypes.java.nio.DoubleBuffer;
                hasArray(): boolean;
                array(): number[];
                arrayOffset(): number;
                position(arg0: number): _javatypes.java.nio.DoubleBuffer;
                limit(arg0: number): _javatypes.java.nio.DoubleBuffer;
                mark(): _javatypes.java.nio.DoubleBuffer;
                reset(): _javatypes.java.nio.DoubleBuffer;
                clear(): _javatypes.java.nio.DoubleBuffer;
                flip(): _javatypes.java.nio.DoubleBuffer;
                rewind(): _javatypes.java.nio.DoubleBuffer;
                compact(): _javatypes.java.nio.DoubleBuffer;
                isDirect(): boolean;
                toString(): string;
                hashCode(): number;
                equals(arg0: any): boolean;
                compareTo(arg0: _javatypes.java.nio.DoubleBuffer): number;
                mismatch(arg0: _javatypes.java.nio.DoubleBuffer): number;
                order(): _javatypes.java.nio.ByteOrder;
                
            }
            namespace DoubleBuffer {
                interface static {
                    
                    
                    allocate(arg0: number): _javatypes.java.nio.DoubleBuffer;
                    wrap(arg0: number[], arg1: number, arg2: number): _javatypes.java.nio.DoubleBuffer;
                    wrap(arg0: number[]): _javatypes.java.nio.DoubleBuffer;
                    
                }
            }
            interface MappedByteBuffer extends _javatypes.java.nio.ByteBuffer {
                
                isLoaded(): boolean;
                load(): _javatypes.java.nio.MappedByteBuffer;
                force(): _javatypes.java.nio.MappedByteBuffer;
                force(arg0: number, arg1: number): _javatypes.java.nio.MappedByteBuffer;
                position(arg0: number): _javatypes.java.nio.MappedByteBuffer;
                limit(arg0: number): _javatypes.java.nio.MappedByteBuffer;
                mark(): _javatypes.java.nio.MappedByteBuffer;
                reset(): _javatypes.java.nio.MappedByteBuffer;
                clear(): _javatypes.java.nio.MappedByteBuffer;
                flip(): _javatypes.java.nio.MappedByteBuffer;
                rewind(): _javatypes.java.nio.MappedByteBuffer;
                slice(): _javatypes.java.nio.MappedByteBuffer;
                slice(arg0: number, arg1: number): _javatypes.java.nio.MappedByteBuffer;
                duplicate(): _javatypes.java.nio.MappedByteBuffer;
                compact(): _javatypes.java.nio.MappedByteBuffer;
                
            }
            namespace MappedByteBuffer {
                interface static {
                    
                    
                    
                }
            }
        
            namespace file {
            
                interface Path extends _javatypes.java.lang.Interface, _javatypes.java.lang.Comparable<_javatypes.java.nio.file.Path>, _javatypes.java.lang.Iterable<_javatypes.java.nio.file.Path>, _javatypes.java.nio.file.Watchable {
                    
                    getFileSystem(): _javatypes.java.nio.file.FileSystem;
                    isAbsolute(): boolean;
                    getRoot(): _javatypes.java.nio.file.Path;
                    getFileName(): _javatypes.java.nio.file.Path;
                    getParent(): _javatypes.java.nio.file.Path;
                    getNameCount(): number;
                    getName(arg0: number): _javatypes.java.nio.file.Path;
                    subpath(arg0: number, arg1: number): _javatypes.java.nio.file.Path;
                    startsWith(arg0: _javatypes.java.nio.file.Path): boolean;
                    startsWith(arg0: string): boolean;
                    endsWith(arg0: _javatypes.java.nio.file.Path): boolean;
                    endsWith(arg0: string): boolean;
                    normalize(): _javatypes.java.nio.file.Path;
                    resolve(arg0: _javatypes.java.nio.file.Path): _javatypes.java.nio.file.Path;
                    resolve(arg0: string): _javatypes.java.nio.file.Path;
                    resolveSibling(arg0: _javatypes.java.nio.file.Path): _javatypes.java.nio.file.Path;
                    resolveSibling(arg0: string): _javatypes.java.nio.file.Path;
                    relativize(arg0: _javatypes.java.nio.file.Path): _javatypes.java.nio.file.Path;
                    toUri(): _javatypes.java.net.URI;
                    toAbsolutePath(): _javatypes.java.nio.file.Path;
                    toRealPath(arg0: _javatypes.java.nio.file.LinkOption[]): _javatypes.java.nio.file.Path;
                    toFile(): _javatypes.java.io.File;
                    register(arg0: _javatypes.java.nio.file.WatchService, arg1: _javatypes.java.nio.file.WatchEvent$Kind<any>[], arg2: _javatypes.java.nio.file.WatchEvent$Modifier[]): _javatypes.java.nio.file.WatchKey;
                    register(arg0: _javatypes.java.nio.file.WatchService, arg1: _javatypes.java.nio.file.WatchEvent$Kind<any>[]): _javatypes.java.nio.file.WatchKey;
                    iterator(): _javatypes.java.util.Iterator<_javatypes.java.nio.file.Path>;
                    compareTo(arg0: _javatypes.java.nio.file.Path): number;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    toString(): string;
                    
                }
                namespace Path {
                    interface static {
                        
                        
                        of(arg0: string, arg1: string[]): _javatypes.java.nio.file.Path;
                        of(arg0: _javatypes.java.net.URI): _javatypes.java.nio.file.Path;
                        
                    }
                }
                interface FileSystem extends any, _javatypes.java.io.Closeable {
                    
                    provider(): _javatypes.java.nio.file.spi.FileSystemProvider;
                    close(): void;
                    isOpen(): boolean;
                    isReadOnly(): boolean;
                    getSeparator(): string;
                    getRootDirectories(): _javatypes.java.lang.Iterable<_javatypes.java.nio.file.Path>;
                    getFileStores(): _javatypes.java.lang.Iterable<_javatypes.java.nio.file.FileStore>;
                    supportedFileAttributeViews(): _javatypes.java.util.Set<string>;
                    getPath(arg0: string, arg1: string[]): _javatypes.java.nio.file.Path;
                    getPathMatcher(arg0: string): _javatypes.java.nio.file.PathMatcher;
                    getUserPrincipalLookupService(): _javatypes.java.nio.file.attribute.UserPrincipalLookupService;
                    newWatchService(): _javatypes.java.nio.file.WatchService;
                    
                }
                namespace FileSystem {
                    interface static {
                        
                        
                        
                    }
                }
                interface WatchEvent$Modifier extends _javatypes.java.lang.Interface {
                    
                    name(): string;
                    
                }
                namespace WatchEvent$Modifier {
                    interface static {
                        
                        
                        
                    }
                }
                interface WatchEvent$Kind<T> extends _javatypes.java.lang.Interface {
                    
                    name(): string;
                    type(): _javatypes.java.lang.Class<T>;
                    
                }
                namespace WatchEvent$Kind {
                    interface static {
                        
                        
                        
                    }
                }
                interface WatchService extends _javatypes.java.lang.Interface, _javatypes.java.io.Closeable {
                    
                    close(): void;
                    poll(): _javatypes.java.nio.file.WatchKey;
                    poll(arg0: number, arg1: _javatypes.java.util.concurrent.TimeUnit): _javatypes.java.nio.file.WatchKey;
                    take(): _javatypes.java.nio.file.WatchKey;
                    
                }
                namespace WatchService {
                    interface static {
                        
                        
                        
                    }
                }
                interface WatchKey extends _javatypes.java.lang.Interface {
                    
                    isValid(): boolean;
                    pollEvents(): _javatypes.java.util.List<_javatypes.java.nio.file.WatchEvent<any>>;
                    reset(): boolean;
                    cancel(): void;
                    watchable(): _javatypes.java.nio.file.Watchable;
                    
                }
                namespace WatchKey {
                    interface static {
                        
                        
                        
                    }
                }
                interface LinkOption extends _javatypes.java.lang.Enum<_javatypes.java.nio.file.LinkOption>, _javatypes.java.nio.file.OpenOption, _javatypes.java.nio.file.CopyOption {
                    
                    
                }
                namespace LinkOption {
                    interface static {
                        
                        readonly NOFOLLOW_LINKS: _javatypes.java.nio.file.LinkOption;
                        
                        values(): _javatypes.java.nio.file.LinkOption[];
                        valueOf(arg0: string): _javatypes.java.nio.file.LinkOption;
                        
                    }
                }
                interface Watchable extends _javatypes.java.lang.Interface {
                    
                    register(arg0: _javatypes.java.nio.file.WatchService, arg1: _javatypes.java.nio.file.WatchEvent$Kind<any>[], arg2: _javatypes.java.nio.file.WatchEvent$Modifier[]): _javatypes.java.nio.file.WatchKey;
                    register(arg0: _javatypes.java.nio.file.WatchService, arg1: _javatypes.java.nio.file.WatchEvent$Kind<any>[]): _javatypes.java.nio.file.WatchKey;
                    
                }
                namespace Watchable {
                    interface static {
                        
                        
                        
                    }
                }
                interface WatchEvent<T> extends _javatypes.java.lang.Interface {
                    
                    kind(): _javatypes.java.nio.file.WatchEvent$Kind<T>;
                    count(): number;
                    context(): T;
                    
                }
                namespace WatchEvent {
                    interface static {
                        
                        
                        
                    }
                }
                interface OpenOption extends _javatypes.java.lang.Interface {
                    
                    
                }
                namespace OpenOption {
                    interface static {
                        
                        
                        
                    }
                }
                interface DirectoryStream$Filter<T> extends _javatypes.java.lang.Interface {
                    
                    accept(arg0: T): boolean;
                    
                }
                namespace DirectoryStream$Filter {
                    interface static {
                        
                        
                        
                    }
                }
                interface DirectoryStream<T> extends _javatypes.java.lang.Interface, _javatypes.java.io.Closeable, _javatypes.java.lang.Iterable<T> {
                    
                    iterator(): _javatypes.java.util.Iterator<T>;
                    
                }
                namespace DirectoryStream {
                    interface static {
                        
                        
                        
                    }
                }
                interface FileStore extends any {
                    
                    name(): string;
                    type(): string;
                    isReadOnly(): boolean;
                    getTotalSpace(): number;
                    getUsableSpace(): number;
                    getUnallocatedSpace(): number;
                    getBlockSize(): number;
                    supportsFileAttributeView(arg0: _javatypes.java.lang.Class<any>): boolean;
                    supportsFileAttributeView(arg0: string): boolean;
                    getFileStoreAttributeView<V>(arg0: _javatypes.java.lang.Class<V>): V;
                    getAttribute(arg0: string): any;
                    
                }
                namespace FileStore {
                    interface static {
                        
                        
                        
                    }
                }
                interface AccessMode extends _javatypes.java.lang.Enum<_javatypes.java.nio.file.AccessMode> {
                    
                    
                }
                namespace AccessMode {
                    interface static {
                        
                        readonly READ: _javatypes.java.nio.file.AccessMode;
                        readonly WRITE: _javatypes.java.nio.file.AccessMode;
                        readonly EXECUTE: _javatypes.java.nio.file.AccessMode;
                        
                        values(): _javatypes.java.nio.file.AccessMode[];
                        valueOf(arg0: string): _javatypes.java.nio.file.AccessMode;
                        
                    }
                }
                interface PathMatcher extends _javatypes.java.lang.Interface {
                    
                    matches(arg0: _javatypes.java.nio.file.Path): boolean;
                    
                }
                namespace PathMatcher {
                    interface static {
                        
                        
                        
                    }
                }
                interface CopyOption extends _javatypes.java.lang.Interface {
                    
                    
                }
                namespace CopyOption {
                    interface static {
                        
                        
                        
                    }
                }
            
                namespace attribute {
                
                    interface BasicFileAttributes extends _javatypes.java.lang.Interface {
                        
                        lastModifiedTime(): _javatypes.java.nio.file.attribute.FileTime;
                        lastAccessTime(): _javatypes.java.nio.file.attribute.FileTime;
                        creationTime(): _javatypes.java.nio.file.attribute.FileTime;
                        isRegularFile(): boolean;
                        isDirectory(): boolean;
                        isSymbolicLink(): boolean;
                        isOther(): boolean;
                        size(): number;
                        fileKey(): any;
                        
                    }
                    namespace BasicFileAttributes {
                        interface static {
                            
                            
                            
                        }
                    }
                    interface FileTime extends any, _javatypes.java.lang.Comparable<_javatypes.java.nio.file.attribute.FileTime> {
                        
                        to(arg0: _javatypes.java.util.concurrent.TimeUnit): number;
                        toMillis(): number;
                        toInstant(): _javatypes.java.time.Instant;
                        equals(arg0: any): boolean;
                        hashCode(): number;
                        compareTo(arg0: _javatypes.java.nio.file.attribute.FileTime): number;
                        toString(): string;
                        
                    }
                    namespace FileTime {
                        interface static {
                            
                            
                            from(arg0: number, arg1: _javatypes.java.util.concurrent.TimeUnit): _javatypes.java.nio.file.attribute.FileTime;
                            fromMillis(arg0: number): _javatypes.java.nio.file.attribute.FileTime;
                            from(arg0: _javatypes.java.time.Instant): _javatypes.java.nio.file.attribute.FileTime;
                            
                        }
                    }
                    interface UserPrincipalLookupService extends any {
                        
                        lookupPrincipalByName(arg0: string): _javatypes.java.nio.file.attribute.UserPrincipal;
                        lookupPrincipalByGroupName(arg0: string): _javatypes.java.nio.file.attribute.GroupPrincipal;
                        
                    }
                    namespace UserPrincipalLookupService {
                        interface static {
                            
                            
                            
                        }
                    }
                    interface GroupPrincipal extends _javatypes.java.lang.Interface, _javatypes.java.nio.file.attribute.UserPrincipal {
                        
                        
                    }
                    namespace GroupPrincipal {
                        interface static {
                            
                            
                            
                        }
                    }
                    interface UserPrincipal extends _javatypes.java.lang.Interface, _javatypes.java.security.Principal {
                        
                        
                    }
                    namespace UserPrincipal {
                        interface static {
                            
                            
                            
                        }
                    }
                    interface FileAttribute<T> extends _javatypes.java.lang.Interface {
                        
                        name(): string;
                        value(): T;
                        
                    }
                    namespace FileAttribute {
                        interface static {
                            
                            
                            
                        }
                    }
                }
            
                namespace spi {
                
                    interface FileSystemProvider extends any {
                        
                        getScheme(): string;
                        newFileSystem(arg0: _javatypes.java.net.URI, arg1: _javatypes.java.util.Map<string, any>): _javatypes.java.nio.file.FileSystem;
                        getFileSystem(arg0: _javatypes.java.net.URI): _javatypes.java.nio.file.FileSystem;
                        getPath(arg0: _javatypes.java.net.URI): _javatypes.java.nio.file.Path;
                        newFileSystem(arg0: _javatypes.java.nio.file.Path, arg1: _javatypes.java.util.Map<string, any>): _javatypes.java.nio.file.FileSystem;
                        newInputStream(arg0: _javatypes.java.nio.file.Path, arg1: _javatypes.java.nio.file.OpenOption[]): _javatypes.java.io.InputStream;
                        newOutputStream(arg0: _javatypes.java.nio.file.Path, arg1: _javatypes.java.nio.file.OpenOption[]): _javatypes.java.io.OutputStream;
                        newFileChannel(arg0: _javatypes.java.nio.file.Path, arg1: _javatypes.java.util.Set<any>, arg2: _javatypes.java.nio.file.attribute.FileAttribute<any>[]): _javatypes.java.nio.channels.FileChannel;
                        newAsynchronousFileChannel(arg0: _javatypes.java.nio.file.Path, arg1: _javatypes.java.util.Set<any>, arg2: _javatypes.java.util.concurrent.ExecutorService, arg3: _javatypes.java.nio.file.attribute.FileAttribute<any>[]): _javatypes.java.nio.channels.AsynchronousFileChannel;
                        newByteChannel(arg0: _javatypes.java.nio.file.Path, arg1: _javatypes.java.util.Set<any>, arg2: _javatypes.java.nio.file.attribute.FileAttribute<any>[]): _javatypes.java.nio.channels.SeekableByteChannel;
                        newDirectoryStream(arg0: _javatypes.java.nio.file.Path, arg1: _javatypes.java.nio.file.DirectoryStream$Filter<any>): _javatypes.java.nio.file.DirectoryStream<_javatypes.java.nio.file.Path>;
                        createDirectory(arg0: _javatypes.java.nio.file.Path, arg1: _javatypes.java.nio.file.attribute.FileAttribute<any>[]): void;
                        createSymbolicLink(arg0: _javatypes.java.nio.file.Path, arg1: _javatypes.java.nio.file.Path, arg2: _javatypes.java.nio.file.attribute.FileAttribute<any>[]): void;
                        createLink(arg0: _javatypes.java.nio.file.Path, arg1: _javatypes.java.nio.file.Path): void;
                        delete(arg0: _javatypes.java.nio.file.Path): void;
                        deleteIfExists(arg0: _javatypes.java.nio.file.Path): boolean;
                        readSymbolicLink(arg0: _javatypes.java.nio.file.Path): _javatypes.java.nio.file.Path;
                        copy(arg0: _javatypes.java.nio.file.Path, arg1: _javatypes.java.nio.file.Path, arg2: _javatypes.java.nio.file.CopyOption[]): void;
                        move(arg0: _javatypes.java.nio.file.Path, arg1: _javatypes.java.nio.file.Path, arg2: _javatypes.java.nio.file.CopyOption[]): void;
                        isSameFile(arg0: _javatypes.java.nio.file.Path, arg1: _javatypes.java.nio.file.Path): boolean;
                        isHidden(arg0: _javatypes.java.nio.file.Path): boolean;
                        getFileStore(arg0: _javatypes.java.nio.file.Path): _javatypes.java.nio.file.FileStore;
                        checkAccess(arg0: _javatypes.java.nio.file.Path, arg1: _javatypes.java.nio.file.AccessMode[]): void;
                        getFileAttributeView<V>(arg0: _javatypes.java.nio.file.Path, arg1: _javatypes.java.lang.Class<V>, arg2: _javatypes.java.nio.file.LinkOption[]): V;
                        readAttributes<A>(arg0: _javatypes.java.nio.file.Path, arg1: _javatypes.java.lang.Class<A>, arg2: _javatypes.java.nio.file.LinkOption[]): A;
                        readAttributes(arg0: _javatypes.java.nio.file.Path, arg1: string, arg2: _javatypes.java.nio.file.LinkOption[]): _javatypes.java.util.Map<string, any>;
                        setAttribute(arg0: _javatypes.java.nio.file.Path, arg1: string, arg2: any, arg3: _javatypes.java.nio.file.LinkOption[]): void;
                        
                    }
                    namespace FileSystemProvider {
                        interface static {
                            
                            
                            installedProviders(): _javatypes.java.util.List<_javatypes.java.nio.file.spi.FileSystemProvider>;
                            
                        }
                    }
                }
            }
        
            namespace charset {
            
                interface Charset extends any, _javatypes.java.lang.Comparable<_javatypes.java.nio.charset.Charset> {
                    
                    name(): string;
                    aliases(): _javatypes.java.util.Set<string>;
                    displayName(): string;
                    isRegistered(): boolean;
                    displayName(arg0: _javatypes.java.util.Locale): string;
                    contains(arg0: _javatypes.java.nio.charset.Charset): boolean;
                    newDecoder(): _javatypes.java.nio.charset.CharsetDecoder;
                    newEncoder(): _javatypes.java.nio.charset.CharsetEncoder;
                    canEncode(): boolean;
                    decode(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.CharBuffer;
                    encode(arg0: _javatypes.java.nio.CharBuffer): _javatypes.java.nio.ByteBuffer;
                    encode(arg0: string): _javatypes.java.nio.ByteBuffer;
                    compareTo(arg0: _javatypes.java.nio.charset.Charset): number;
                    hashCode(): number;
                    equals(arg0: any): boolean;
                    toString(): string;
                    
                }
                namespace Charset {
                    interface static {
                        
                        
                        isSupported(arg0: string): boolean;
                        forName(arg0: string): _javatypes.java.nio.charset.Charset;
                        availableCharsets(): _javatypes.java.util.SortedMap<string, _javatypes.java.nio.charset.Charset>;
                        defaultCharset(): _javatypes.java.nio.charset.Charset;
                        
                    }
                }
                interface CharsetEncoder extends any {
                    
                    charset(): _javatypes.java.nio.charset.Charset;
                    replacement(): number[];
                    replaceWith(arg0: number[]): _javatypes.java.nio.charset.CharsetEncoder;
                    isLegalReplacement(arg0: number[]): boolean;
                    malformedInputAction(): _javatypes.java.nio.charset.CodingErrorAction;
                    onMalformedInput(arg0: _javatypes.java.nio.charset.CodingErrorAction): _javatypes.java.nio.charset.CharsetEncoder;
                    unmappableCharacterAction(): _javatypes.java.nio.charset.CodingErrorAction;
                    onUnmappableCharacter(arg0: _javatypes.java.nio.charset.CodingErrorAction): _javatypes.java.nio.charset.CharsetEncoder;
                    averageBytesPerChar(): number;
                    maxBytesPerChar(): number;
                    encode(arg0: _javatypes.java.nio.CharBuffer, arg1: _javatypes.java.nio.ByteBuffer, arg2: boolean): _javatypes.java.nio.charset.CoderResult;
                    flush(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.charset.CoderResult;
                    reset(): _javatypes.java.nio.charset.CharsetEncoder;
                    encode(arg0: _javatypes.java.nio.CharBuffer): _javatypes.java.nio.ByteBuffer;
                    canEncode(arg0: number): boolean;
                    canEncode(arg0: _javatypes.java.lang.CharSequence): boolean;
                    
                }
                namespace CharsetEncoder {
                    interface static {
                        
                        
                        
                    }
                }
                interface CharsetDecoder extends any {
                    
                    charset(): _javatypes.java.nio.charset.Charset;
                    replacement(): string;
                    replaceWith(arg0: string): _javatypes.java.nio.charset.CharsetDecoder;
                    malformedInputAction(): _javatypes.java.nio.charset.CodingErrorAction;
                    onMalformedInput(arg0: _javatypes.java.nio.charset.CodingErrorAction): _javatypes.java.nio.charset.CharsetDecoder;
                    unmappableCharacterAction(): _javatypes.java.nio.charset.CodingErrorAction;
                    onUnmappableCharacter(arg0: _javatypes.java.nio.charset.CodingErrorAction): _javatypes.java.nio.charset.CharsetDecoder;
                    averageCharsPerByte(): number;
                    maxCharsPerByte(): number;
                    decode(arg0: _javatypes.java.nio.ByteBuffer, arg1: _javatypes.java.nio.CharBuffer, arg2: boolean): _javatypes.java.nio.charset.CoderResult;
                    flush(arg0: _javatypes.java.nio.CharBuffer): _javatypes.java.nio.charset.CoderResult;
                    reset(): _javatypes.java.nio.charset.CharsetDecoder;
                    decode(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.CharBuffer;
                    isAutoDetecting(): boolean;
                    isCharsetDetected(): boolean;
                    detectedCharset(): _javatypes.java.nio.charset.Charset;
                    
                }
                namespace CharsetDecoder {
                    interface static {
                        
                        
                        
                    }
                }
                interface CoderResult extends any {
                    
                    toString(): string;
                    isUnderflow(): boolean;
                    isOverflow(): boolean;
                    isError(): boolean;
                    isMalformed(): boolean;
                    isUnmappable(): boolean;
                    length(): number;
                    throwException(): void;
                    
                }
                namespace CoderResult {
                    interface static {
                        
                        readonly UNDERFLOW: _javatypes.java.nio.charset.CoderResult;
                        readonly OVERFLOW: _javatypes.java.nio.charset.CoderResult;
                        
                        malformedForLength(arg0: number): _javatypes.java.nio.charset.CoderResult;
                        unmappableForLength(arg0: number): _javatypes.java.nio.charset.CoderResult;
                        
                    }
                }
                interface CodingErrorAction extends any {
                    
                    toString(): string;
                    
                }
                namespace CodingErrorAction {
                    interface static {
                        
                        readonly IGNORE: _javatypes.java.nio.charset.CodingErrorAction;
                        readonly REPLACE: _javatypes.java.nio.charset.CodingErrorAction;
                        readonly REPORT: _javatypes.java.nio.charset.CodingErrorAction;
                        
                        
                    }
                }
            }
        
            namespace channels {
            
                interface FileChannel extends _javatypes.java.nio.channels.spi.AbstractInterruptibleChannel, _javatypes.java.nio.channels.SeekableByteChannel, _javatypes.java.nio.channels.GatheringByteChannel, _javatypes.java.nio.channels.ScatteringByteChannel {
                    
                    read(arg0: _javatypes.java.nio.ByteBuffer): number;
                    read(arg0: _javatypes.java.nio.ByteBuffer[], arg1: number, arg2: number): number;
                    read(arg0: _javatypes.java.nio.ByteBuffer[]): number;
                    write(arg0: _javatypes.java.nio.ByteBuffer): number;
                    write(arg0: _javatypes.java.nio.ByteBuffer[], arg1: number, arg2: number): number;
                    write(arg0: _javatypes.java.nio.ByteBuffer[]): number;
                    position(): number;
                    position(arg0: number): _javatypes.java.nio.channels.FileChannel;
                    size(): number;
                    truncate(arg0: number): _javatypes.java.nio.channels.FileChannel;
                    force(arg0: boolean): void;
                    transferTo(arg0: number, arg1: number, arg2: _javatypes.java.nio.channels.WritableByteChannel): number;
                    transferFrom(arg0: _javatypes.java.nio.channels.ReadableByteChannel, arg1: number, arg2: number): number;
                    read(arg0: _javatypes.java.nio.ByteBuffer, arg1: number): number;
                    write(arg0: _javatypes.java.nio.ByteBuffer, arg1: number): number;
                    map(arg0: _javatypes.java.nio.channels.FileChannel$MapMode, arg1: number, arg2: number): _javatypes.java.nio.MappedByteBuffer;
                    lock(arg0: number, arg1: number, arg2: boolean): _javatypes.java.nio.channels.FileLock;
                    lock(): _javatypes.java.nio.channels.FileLock;
                    tryLock(arg0: number, arg1: number, arg2: boolean): _javatypes.java.nio.channels.FileLock;
                    tryLock(): _javatypes.java.nio.channels.FileLock;
                    
                }
                namespace FileChannel {
                    interface static {
                        
                        
                        open(arg0: _javatypes.java.nio.file.Path, arg1: _javatypes.java.util.Set<any>, arg2: _javatypes.java.nio.file.attribute.FileAttribute<any>[]): _javatypes.java.nio.channels.FileChannel;
                        open(arg0: _javatypes.java.nio.file.Path, arg1: _javatypes.java.nio.file.OpenOption[]): _javatypes.java.nio.channels.FileChannel;
                        
                    }
                }
                interface SeekableByteChannel extends _javatypes.java.lang.Interface, _javatypes.java.nio.channels.ByteChannel {
                    
                    read(arg0: _javatypes.java.nio.ByteBuffer): number;
                    write(arg0: _javatypes.java.nio.ByteBuffer): number;
                    position(): number;
                    position(arg0: number): _javatypes.java.nio.channels.SeekableByteChannel;
                    size(): number;
                    truncate(arg0: number): _javatypes.java.nio.channels.SeekableByteChannel;
                    
                }
                namespace SeekableByteChannel {
                    interface static {
                        
                        
                        
                    }
                }
                interface AsynchronousFileChannel extends any, _javatypes.java.nio.channels.AsynchronousChannel {
                    
                    size(): number;
                    truncate(arg0: number): _javatypes.java.nio.channels.AsynchronousFileChannel;
                    force(arg0: boolean): void;
                    lock<A>(arg0: number, arg1: number, arg2: boolean, arg3: A, arg4: _javatypes.java.nio.channels.CompletionHandler<_javatypes.java.nio.channels.FileLock, any>): void;
                    lock<A>(arg0: A, arg1: _javatypes.java.nio.channels.CompletionHandler<_javatypes.java.nio.channels.FileLock, any>): void;
                    lock(arg0: number, arg1: number, arg2: boolean): _javatypes.java.util.concurrent.Future<_javatypes.java.nio.channels.FileLock>;
                    lock(): _javatypes.java.util.concurrent.Future<_javatypes.java.nio.channels.FileLock>;
                    tryLock(arg0: number, arg1: number, arg2: boolean): _javatypes.java.nio.channels.FileLock;
                    tryLock(): _javatypes.java.nio.channels.FileLock;
                    read<A>(arg0: _javatypes.java.nio.ByteBuffer, arg1: number, arg2: A, arg3: _javatypes.java.nio.channels.CompletionHandler<number, any>): void;
                    read(arg0: _javatypes.java.nio.ByteBuffer, arg1: number): _javatypes.java.util.concurrent.Future<number>;
                    write<A>(arg0: _javatypes.java.nio.ByteBuffer, arg1: number, arg2: A, arg3: _javatypes.java.nio.channels.CompletionHandler<number, any>): void;
                    write(arg0: _javatypes.java.nio.ByteBuffer, arg1: number): _javatypes.java.util.concurrent.Future<number>;
                    
                }
                namespace AsynchronousFileChannel {
                    interface static {
                        
                        
                        open(arg0: _javatypes.java.nio.file.Path, arg1: _javatypes.java.util.Set<any>, arg2: _javatypes.java.util.concurrent.ExecutorService, arg3: _javatypes.java.nio.file.attribute.FileAttribute<any>[]): _javatypes.java.nio.channels.AsynchronousFileChannel;
                        open(arg0: _javatypes.java.nio.file.Path, arg1: _javatypes.java.nio.file.OpenOption[]): _javatypes.java.nio.channels.AsynchronousFileChannel;
                        
                    }
                }
                interface ScatteringByteChannel extends _javatypes.java.lang.Interface, _javatypes.java.nio.channels.ReadableByteChannel {
                    
                    read(arg0: _javatypes.java.nio.ByteBuffer[], arg1: number, arg2: number): number;
                    read(arg0: _javatypes.java.nio.ByteBuffer[]): number;
                    
                }
                namespace ScatteringByteChannel {
                    interface static {
                        
                        
                        
                    }
                }
                interface ReadableByteChannel extends _javatypes.java.lang.Interface, _javatypes.java.nio.channels.Channel {
                    
                    read(arg0: _javatypes.java.nio.ByteBuffer): number;
                    
                }
                namespace ReadableByteChannel {
                    interface static {
                        
                        
                        
                    }
                }
                interface GatheringByteChannel extends _javatypes.java.lang.Interface, _javatypes.java.nio.channels.WritableByteChannel {
                    
                    write(arg0: _javatypes.java.nio.ByteBuffer[], arg1: number, arg2: number): number;
                    write(arg0: _javatypes.java.nio.ByteBuffer[]): number;
                    
                }
                namespace GatheringByteChannel {
                    interface static {
                        
                        
                        
                    }
                }
                interface ByteChannel extends _javatypes.java.lang.Interface, _javatypes.java.nio.channels.ReadableByteChannel, _javatypes.java.nio.channels.WritableByteChannel {
                    
                    
                }
                namespace ByteChannel {
                    interface static {
                        
                        
                        
                    }
                }
                interface WritableByteChannel extends _javatypes.java.lang.Interface, _javatypes.java.nio.channels.Channel {
                    
                    write(arg0: _javatypes.java.nio.ByteBuffer): number;
                    
                }
                namespace WritableByteChannel {
                    interface static {
                        
                        
                        
                    }
                }
                interface AsynchronousChannel extends _javatypes.java.lang.Interface, _javatypes.java.nio.channels.Channel {
                    
                    close(): void;
                    
                }
                namespace AsynchronousChannel {
                    interface static {
                        
                        
                        
                    }
                }
                interface CompletionHandler<V, A> extends _javatypes.java.lang.Interface {
                    
                    completed(arg0: V, arg1: A): void;
                    failed(arg0: _javatypes.java.lang.Throwable, arg1: A): void;
                    
                }
                namespace CompletionHandler {
                    interface static {
                        
                        
                        
                    }
                }
                interface Channel extends _javatypes.java.lang.Interface, _javatypes.java.io.Closeable {
                    
                    isOpen(): boolean;
                    close(): void;
                    
                }
                namespace Channel {
                    interface static {
                        
                        
                        
                    }
                }
                interface FileLock extends any, _javatypes.java.lang.AutoCloseable {
                    
                    channel(): _javatypes.java.nio.channels.FileChannel;
                    acquiredBy(): _javatypes.java.nio.channels.Channel;
                    position(): number;
                    size(): number;
                    isShared(): boolean;
                    overlaps(arg0: number, arg1: number): boolean;
                    isValid(): boolean;
                    release(): void;
                    close(): void;
                    toString(): string;
                    
                }
                namespace FileLock {
                    interface static {
                        
                        
                        
                    }
                }
                interface InterruptibleChannel extends _javatypes.java.lang.Interface, _javatypes.java.nio.channels.Channel {
                    
                    close(): void;
                    
                }
                namespace InterruptibleChannel {
                    interface static {
                        
                        
                        
                    }
                }
                interface FileChannel$MapMode extends any {
                    
                    toString(): string;
                    
                }
                namespace FileChannel$MapMode {
                    interface static {
                        
                        readonly READ_ONLY: _javatypes.java.nio.channels.FileChannel$MapMode;
                        readonly READ_WRITE: _javatypes.java.nio.channels.FileChannel$MapMode;
                        readonly PRIVATE: _javatypes.java.nio.channels.FileChannel$MapMode;
                        
                        
                    }
                }
                interface SocketChannel extends _javatypes.java.nio.channels.spi.AbstractSelectableChannel, _javatypes.java.nio.channels.ByteChannel, _javatypes.java.nio.channels.ScatteringByteChannel, _javatypes.java.nio.channels.GatheringByteChannel, _javatypes.java.nio.channels.NetworkChannel {
                    
                    validOps(): number;
                    bind(arg0: _javatypes.java.net.SocketAddress): _javatypes.java.nio.channels.SocketChannel;
                    setOption<T>(arg0: _javatypes.java.net.SocketOption<T>, arg1: T): _javatypes.java.nio.channels.SocketChannel;
                    shutdownInput(): _javatypes.java.nio.channels.SocketChannel;
                    shutdownOutput(): _javatypes.java.nio.channels.SocketChannel;
                    socket(): _javatypes.java.net.Socket;
                    isConnected(): boolean;
                    isConnectionPending(): boolean;
                    connect(arg0: _javatypes.java.net.SocketAddress): boolean;
                    finishConnect(): boolean;
                    getRemoteAddress(): _javatypes.java.net.SocketAddress;
                    read(arg0: _javatypes.java.nio.ByteBuffer): number;
                    read(arg0: _javatypes.java.nio.ByteBuffer[], arg1: number, arg2: number): number;
                    read(arg0: _javatypes.java.nio.ByteBuffer[]): number;
                    write(arg0: _javatypes.java.nio.ByteBuffer): number;
                    write(arg0: _javatypes.java.nio.ByteBuffer[], arg1: number, arg2: number): number;
                    write(arg0: _javatypes.java.nio.ByteBuffer[]): number;
                    getLocalAddress(): _javatypes.java.net.SocketAddress;
                    
                }
                namespace SocketChannel {
                    interface static {
                        
                        
                        open(): _javatypes.java.nio.channels.SocketChannel;
                        open(arg0: _javatypes.java.net.ProtocolFamily): _javatypes.java.nio.channels.SocketChannel;
                        open(arg0: _javatypes.java.net.SocketAddress): _javatypes.java.nio.channels.SocketChannel;
                        
                    }
                }
                interface SelectionKey extends any {
                    
                    channel(): _javatypes.java.nio.channels.SelectableChannel;
                    selector(): _javatypes.java.nio.channels.Selector;
                    isValid(): boolean;
                    cancel(): void;
                    interestOps(): number;
                    interestOps(arg0: number): _javatypes.java.nio.channels.SelectionKey;
                    interestOpsOr(arg0: number): number;
                    interestOpsAnd(arg0: number): number;
                    readyOps(): number;
                    isReadable(): boolean;
                    isWritable(): boolean;
                    isConnectable(): boolean;
                    isAcceptable(): boolean;
                    attach(arg0: any): any;
                    attachment(): any;
                    
                }
                namespace SelectionKey {
                    interface static {
                        
                        readonly OP_READ: number;
                        readonly OP_WRITE: number;
                        readonly OP_CONNECT: number;
                        readonly OP_ACCEPT: number;
                        
                        
                    }
                }
                interface Pipe extends any {
                    
                    source(): _javatypes.java.nio.channels.Pipe$SourceChannel;
                    sink(): _javatypes.java.nio.channels.Pipe$SinkChannel;
                    
                }
                namespace Pipe {
                    interface static {
                        
                        
                        open(): _javatypes.java.nio.channels.Pipe;
                        
                    }
                }
                interface NetworkChannel extends _javatypes.java.lang.Interface, _javatypes.java.nio.channels.Channel {
                    
                    bind(arg0: _javatypes.java.net.SocketAddress): _javatypes.java.nio.channels.NetworkChannel;
                    getLocalAddress(): _javatypes.java.net.SocketAddress;
                    setOption<T>(arg0: _javatypes.java.net.SocketOption<T>, arg1: T): _javatypes.java.nio.channels.NetworkChannel;
                    getOption<T>(arg0: _javatypes.java.net.SocketOption<T>): T;
                    supportedOptions(): _javatypes.java.util.Set<_javatypes.java.net.SocketOption<any>>;
                    
                }
                namespace NetworkChannel {
                    interface static {
                        
                        
                        
                    }
                }
                interface DatagramChannel extends _javatypes.java.nio.channels.spi.AbstractSelectableChannel, _javatypes.java.nio.channels.ByteChannel, _javatypes.java.nio.channels.ScatteringByteChannel, _javatypes.java.nio.channels.GatheringByteChannel, _javatypes.java.nio.channels.MulticastChannel {
                    
                    validOps(): number;
                    bind(arg0: _javatypes.java.net.SocketAddress): _javatypes.java.nio.channels.DatagramChannel;
                    setOption<T>(arg0: _javatypes.java.net.SocketOption<T>, arg1: T): _javatypes.java.nio.channels.DatagramChannel;
                    socket(): _javatypes.java.net.DatagramSocket;
                    isConnected(): boolean;
                    connect(arg0: _javatypes.java.net.SocketAddress): _javatypes.java.nio.channels.DatagramChannel;
                    disconnect(): _javatypes.java.nio.channels.DatagramChannel;
                    getRemoteAddress(): _javatypes.java.net.SocketAddress;
                    receive(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.net.SocketAddress;
                    send(arg0: _javatypes.java.nio.ByteBuffer, arg1: _javatypes.java.net.SocketAddress): number;
                    read(arg0: _javatypes.java.nio.ByteBuffer): number;
                    read(arg0: _javatypes.java.nio.ByteBuffer[], arg1: number, arg2: number): number;
                    read(arg0: _javatypes.java.nio.ByteBuffer[]): number;
                    write(arg0: _javatypes.java.nio.ByteBuffer): number;
                    write(arg0: _javatypes.java.nio.ByteBuffer[], arg1: number, arg2: number): number;
                    write(arg0: _javatypes.java.nio.ByteBuffer[]): number;
                    getLocalAddress(): _javatypes.java.net.SocketAddress;
                    
                }
                namespace DatagramChannel {
                    interface static {
                        
                        
                        open(): _javatypes.java.nio.channels.DatagramChannel;
                        open(arg0: _javatypes.java.net.ProtocolFamily): _javatypes.java.nio.channels.DatagramChannel;
                        
                    }
                }
                interface SelectableChannel extends _javatypes.java.nio.channels.spi.AbstractInterruptibleChannel, _javatypes.java.nio.channels.Channel {
                    
                    provider(): _javatypes.java.nio.channels.spi.SelectorProvider;
                    validOps(): number;
                    isRegistered(): boolean;
                    keyFor(arg0: _javatypes.java.nio.channels.Selector): _javatypes.java.nio.channels.SelectionKey;
                    register(arg0: _javatypes.java.nio.channels.Selector, arg1: number, arg2: any): _javatypes.java.nio.channels.SelectionKey;
                    register(arg0: _javatypes.java.nio.channels.Selector, arg1: number): _javatypes.java.nio.channels.SelectionKey;
                    configureBlocking(arg0: boolean): _javatypes.java.nio.channels.SelectableChannel;
                    isBlocking(): boolean;
                    blockingLock(): any;
                    
                }
                namespace SelectableChannel {
                    interface static {
                        
                        
                        
                    }
                }
                interface ServerSocketChannel extends _javatypes.java.nio.channels.spi.AbstractSelectableChannel, _javatypes.java.nio.channels.NetworkChannel {
                    
                    validOps(): number;
                    bind(arg0: _javatypes.java.net.SocketAddress): _javatypes.java.nio.channels.ServerSocketChannel;
                    bind(arg0: _javatypes.java.net.SocketAddress, arg1: number): _javatypes.java.nio.channels.ServerSocketChannel;
                    setOption<T>(arg0: _javatypes.java.net.SocketOption<T>, arg1: T): _javatypes.java.nio.channels.ServerSocketChannel;
                    socket(): _javatypes.java.net.ServerSocket;
                    accept(): _javatypes.java.nio.channels.SocketChannel;
                    getLocalAddress(): _javatypes.java.net.SocketAddress;
                    
                }
                namespace ServerSocketChannel {
                    interface static {
                        
                        
                        open(): _javatypes.java.nio.channels.ServerSocketChannel;
                        open(arg0: _javatypes.java.net.ProtocolFamily): _javatypes.java.nio.channels.ServerSocketChannel;
                        
                    }
                }
                interface Selector extends any, _javatypes.java.io.Closeable {
                    
                    isOpen(): boolean;
                    provider(): _javatypes.java.nio.channels.spi.SelectorProvider;
                    keys(): _javatypes.java.util.Set<_javatypes.java.nio.channels.SelectionKey>;
                    selectedKeys(): _javatypes.java.util.Set<_javatypes.java.nio.channels.SelectionKey>;
                    selectNow(): number;
                    select(arg0: number): number;
                    select(): number;
                    select(arg0: _javatypes.java.util._function.Consumer<_javatypes.java.nio.channels.SelectionKey>, arg1: number): number;
                    select(arg0: _javatypes.java.util._function.Consumer<_javatypes.java.nio.channels.SelectionKey>): number;
                    selectNow(arg0: _javatypes.java.util._function.Consumer<_javatypes.java.nio.channels.SelectionKey>): number;
                    wakeup(): _javatypes.java.nio.channels.Selector;
                    close(): void;
                    
                }
                namespace Selector {
                    interface static {
                        
                        
                        open(): _javatypes.java.nio.channels.Selector;
                        
                    }
                }
                interface Pipe$SinkChannel extends _javatypes.java.nio.channels.spi.AbstractSelectableChannel, _javatypes.java.nio.channels.WritableByteChannel, _javatypes.java.nio.channels.GatheringByteChannel {
                    
                    validOps(): number;
                    
                }
                namespace Pipe$SinkChannel {
                    interface static {
                        
                        
                        
                    }
                }
                interface Pipe$SourceChannel extends _javatypes.java.nio.channels.spi.AbstractSelectableChannel, _javatypes.java.nio.channels.ReadableByteChannel, _javatypes.java.nio.channels.ScatteringByteChannel {
                    
                    validOps(): number;
                    
                }
                namespace Pipe$SourceChannel {
                    interface static {
                        
                        
                        
                    }
                }
                interface MulticastChannel extends _javatypes.java.lang.Interface, _javatypes.java.nio.channels.NetworkChannel {
                    
                    close(): void;
                    join(arg0: _javatypes.java.net.InetAddress, arg1: _javatypes.java.net.NetworkInterface): _javatypes.java.nio.channels.MembershipKey;
                    join(arg0: _javatypes.java.net.InetAddress, arg1: _javatypes.java.net.NetworkInterface, arg2: _javatypes.java.net.InetAddress): _javatypes.java.nio.channels.MembershipKey;
                    
                }
                namespace MulticastChannel {
                    interface static {
                        
                        
                        
                    }
                }
                interface MembershipKey extends any {
                    
                    isValid(): boolean;
                    drop(): void;
                    block(arg0: _javatypes.java.net.InetAddress): _javatypes.java.nio.channels.MembershipKey;
                    unblock(arg0: _javatypes.java.net.InetAddress): _javatypes.java.nio.channels.MembershipKey;
                    channel(): _javatypes.java.nio.channels.MulticastChannel;
                    group(): _javatypes.java.net.InetAddress;
                    networkInterface(): _javatypes.java.net.NetworkInterface;
                    sourceAddress(): _javatypes.java.net.InetAddress;
                    
                }
                namespace MembershipKey {
                    interface static {
                        
                        
                        
                    }
                }
            
                namespace spi {
                
                    interface AbstractInterruptibleChannel extends any, _javatypes.java.nio.channels.Channel, _javatypes.java.nio.channels.InterruptibleChannel {
                        
                        close(): void;
                        isOpen(): boolean;
                        
                    }
                    namespace AbstractInterruptibleChannel {
                        interface static {
                            
                            
                            
                        }
                    }
                    interface AbstractSelectableChannel extends _javatypes.java.nio.channels.SelectableChannel {
                        
                        provider(): _javatypes.java.nio.channels.spi.SelectorProvider;
                        isRegistered(): boolean;
                        keyFor(arg0: _javatypes.java.nio.channels.Selector): _javatypes.java.nio.channels.SelectionKey;
                        register(arg0: _javatypes.java.nio.channels.Selector, arg1: number, arg2: any): _javatypes.java.nio.channels.SelectionKey;
                        isBlocking(): boolean;
                        blockingLock(): any;
                        configureBlocking(arg0: boolean): _javatypes.java.nio.channels.SelectableChannel;
                        
                    }
                    namespace AbstractSelectableChannel {
                        interface static {
                            
                            
                            
                        }
                    }
                    interface SelectorProvider extends any {
                        
                        openDatagramChannel(): _javatypes.java.nio.channels.DatagramChannel;
                        openDatagramChannel(arg0: _javatypes.java.net.ProtocolFamily): _javatypes.java.nio.channels.DatagramChannel;
                        openPipe(): _javatypes.java.nio.channels.Pipe;
                        openSelector(): _javatypes.java.nio.channels.spi.AbstractSelector;
                        openServerSocketChannel(): _javatypes.java.nio.channels.ServerSocketChannel;
                        openSocketChannel(): _javatypes.java.nio.channels.SocketChannel;
                        inheritedChannel(): _javatypes.java.nio.channels.Channel;
                        openSocketChannel(arg0: _javatypes.java.net.ProtocolFamily): _javatypes.java.nio.channels.SocketChannel;
                        openServerSocketChannel(arg0: _javatypes.java.net.ProtocolFamily): _javatypes.java.nio.channels.ServerSocketChannel;
                        
                    }
                    namespace SelectorProvider {
                        interface static {
                            
                            
                            provider(): _javatypes.java.nio.channels.spi.SelectorProvider;
                            
                        }
                    }
                    interface AbstractSelector extends _javatypes.java.nio.channels.Selector {
                        
                        close(): void;
                        isOpen(): boolean;
                        provider(): _javatypes.java.nio.channels.spi.SelectorProvider;
                        
                    }
                    namespace AbstractSelector {
                        interface static {
                            
                            
                            
                        }
                    }
                }
            }
        }
    
        namespace lang {
        
            interface Enum<E> extends any, _javatypes.java.lang.constant.Constable, _javatypes.java.lang.Comparable<E>, _javatypes.java.io.Serializable {
                
                name(): string;
                ordinal(): number;
                toString(): string;
                equals(arg0: any): boolean;
                hashCode(): number;
                compareTo(arg0: E): number;
                getDeclaringClass(): _javatypes.java.lang.Class<E>;
                describeConstable(): _javatypes.java.util.Optional<_javatypes.java.lang.Enum$EnumDesc<E>>;
                
            }
            namespace Enum {
                interface static {
                    
                    
                    valueOf<T>(arg0: _javatypes.java.lang.Class<T>, arg1: string): T;
                    
                }
            }
            interface Number extends any, _javatypes.java.io.Serializable {
                
                intValue(): number;
                longValue(): number;
                floatValue(): number;
                doubleValue(): number;
                byteValue(): number;
                shortValue(): number;
                
            }
            namespace Number {
                interface static {
                    new (): _javatypes.java.lang.Number;
                    
                    
                    
                }
            }
            interface Runnable extends _javatypes.java.lang.Interface {
                
                run(): void;
                
            }
            namespace Runnable {
                interface static {
                    
                    
                    
                }
            }
            interface Thread extends any, _javatypes.java.lang.Runnable {
                
                start(): void;
                run(): void;
                stop(): void;
                interrupt(): void;
                isInterrupted(): boolean;
                isAlive(): boolean;
                suspend(): void;
                resume(): void;
                setPriority(arg0: number): void;
                getPriority(): number;
                setName(arg0: string): void;
                getName(): string;
                getThreadGroup(): _javatypes.java.lang.ThreadGroup;
                countStackFrames(): number;
                join(arg0: number): void;
                join(arg0: number, arg1: number): void;
                join(): void;
                setDaemon(arg0: boolean): void;
                isDaemon(): boolean;
                checkAccess(): void;
                toString(): string;
                getContextClassLoader(): _javatypes.java.lang.ClassLoader;
                setContextClassLoader(arg0: _javatypes.java.lang.ClassLoader): void;
                getStackTrace(): _javatypes.java.lang.StackTraceElement[];
                getId(): number;
                getState(): _javatypes.java.lang.Thread$State;
                getUncaughtExceptionHandler(): _javatypes.java.lang.Thread$UncaughtExceptionHandler;
                setUncaughtExceptionHandler(arg0: _javatypes.java.lang.Thread$UncaughtExceptionHandler): void;
                
            }
            namespace Thread {
                interface static {
                    new (): _javatypes.java.lang.Thread;
                    new (arg0: _javatypes.java.lang.Runnable): _javatypes.java.lang.Thread;
                    new (arg0: _javatypes.java.lang.ThreadGroup, arg1: _javatypes.java.lang.Runnable): _javatypes.java.lang.Thread;
                    new (arg0: string): _javatypes.java.lang.Thread;
                    new (arg0: _javatypes.java.lang.ThreadGroup, arg1: string): _javatypes.java.lang.Thread;
                    new (arg0: _javatypes.java.lang.Runnable, arg1: string): _javatypes.java.lang.Thread;
                    new (arg0: _javatypes.java.lang.ThreadGroup, arg1: _javatypes.java.lang.Runnable, arg2: string): _javatypes.java.lang.Thread;
                    new (arg0: _javatypes.java.lang.ThreadGroup, arg1: _javatypes.java.lang.Runnable, arg2: string, arg3: number): _javatypes.java.lang.Thread;
                    new (arg0: _javatypes.java.lang.ThreadGroup, arg1: _javatypes.java.lang.Runnable, arg2: string, arg3: number, arg4: boolean): _javatypes.java.lang.Thread;
                    
                    readonly MIN_PRIORITY: number;
                    readonly NORM_PRIORITY: number;
                    readonly MAX_PRIORITY: number;
                    
                    currentThread(): _javatypes.java.lang.Thread;
                    yield(): void;
                    sleep(arg0: number): void;
                    sleep(arg0: number, arg1: number): void;
                    onSpinWait(): void;
                    interrupted(): boolean;
                    activeCount(): number;
                    enumerate(arg0: _javatypes.java.lang.Thread[]): number;
                    dumpStack(): void;
                    holdsLock(arg0: any): boolean;
                    getAllStackTraces(): _javatypes.java.util.Map<_javatypes.java.lang.Thread, _javatypes.java.lang.StackTraceElement[]>;
                    setDefaultUncaughtExceptionHandler(arg0: _javatypes.java.lang.Thread$UncaughtExceptionHandler): void;
                    getDefaultUncaughtExceptionHandler(): _javatypes.java.lang.Thread$UncaughtExceptionHandler;
                    
                }
            }
            interface AutoCloseable extends _javatypes.java.lang.Interface {
                
                close(): void;
                
            }
            namespace AutoCloseable {
                interface static {
                    
                    
                    
                }
            }
            interface Enum$EnumDesc<E> extends _javatypes.java.lang.constant.DynamicConstantDesc<E> {
                
                resolveConstantDesc(arg0: _javatypes.java.lang.invoke.MethodHandles$Lookup): E;
                toString(): string;
                
            }
            namespace Enum$EnumDesc {
                interface static {
                    
                    
                    of<E>(arg0: _javatypes.java.lang.constant.ClassDesc, arg1: string): _javatypes.java.lang.Enum$EnumDesc<E>;
                    
                }
            }
            interface Thread$State extends _javatypes.java.lang.Enum<_javatypes.java.lang.Thread$State> {
                
                
            }
            namespace Thread$State {
                interface static {
                    
                    readonly NEW: _javatypes.java.lang.Thread$State;
                    readonly RUNNABLE: _javatypes.java.lang.Thread$State;
                    readonly BLOCKED: _javatypes.java.lang.Thread$State;
                    readonly WAITING: _javatypes.java.lang.Thread$State;
                    readonly TIMED_WAITING: _javatypes.java.lang.Thread$State;
                    readonly TERMINATED: _javatypes.java.lang.Thread$State;
                    
                    values(): _javatypes.java.lang.Thread$State[];
                    valueOf(arg0: string): _javatypes.java.lang.Thread$State;
                    
                }
            }
            interface ClassLoader extends any {
                
                getName(): string;
                loadClass(arg0: string): _javatypes.java.lang.Class<any>;
                getResource(arg0: string): _javatypes.java.net.URL;
                getResources(arg0: string): _javatypes.java.util.Enumeration<_javatypes.java.net.URL>;
                resources(arg0: string): _javatypes.java.util.stream.Stream<_javatypes.java.net.URL>;
                isRegisteredAsParallelCapable(): boolean;
                getResourceAsStream(arg0: string): _javatypes.java.io.InputStream;
                getParent(): _javatypes.java.lang.ClassLoader;
                getUnnamedModule(): _javatypes.java.lang.Module;
                getDefinedPackage(arg0: string): _javatypes.java.lang.Package;
                getDefinedPackages(): _javatypes.java.lang.Package[];
                setDefaultAssertionStatus(arg0: boolean): void;
                setPackageAssertionStatus(arg0: string, arg1: boolean): void;
                setClassAssertionStatus(arg0: string, arg1: boolean): void;
                clearAssertionStatus(): void;
                
            }
            namespace ClassLoader {
                interface static {
                    
                    
                    getSystemResource(arg0: string): _javatypes.java.net.URL;
                    getSystemResources(arg0: string): _javatypes.java.util.Enumeration<_javatypes.java.net.URL>;
                    getSystemResourceAsStream(arg0: string): _javatypes.java.io.InputStream;
                    getPlatformClassLoader(): _javatypes.java.lang.ClassLoader;
                    getSystemClassLoader(): _javatypes.java.lang.ClassLoader;
                    
                }
            }
            interface Thread$UncaughtExceptionHandler extends _javatypes.java.lang.Interface {
                
                uncaughtException(arg0: _javatypes.java.lang.Thread, arg1: _javatypes.java.lang.Throwable): void;
                
            }
            namespace Thread$UncaughtExceptionHandler {
                interface static {
                    
                    
                    
                }
            }
            interface Comparable<T> extends _javatypes.java.lang.Interface {
                
                compareTo(arg0: T): number;
                
            }
            namespace Comparable {
                interface static {
                    
                    
                    
                }
            }
            interface ThreadGroup extends any, _javatypes.java.lang.Thread$UncaughtExceptionHandler {
                
                getName(): string;
                getParent(): _javatypes.java.lang.ThreadGroup;
                getMaxPriority(): number;
                isDaemon(): boolean;
                isDestroyed(): boolean;
                setDaemon(arg0: boolean): void;
                setMaxPriority(arg0: number): void;
                parentOf(arg0: _javatypes.java.lang.ThreadGroup): boolean;
                checkAccess(): void;
                activeCount(): number;
                enumerate(arg0: _javatypes.java.lang.Thread[]): number;
                enumerate(arg0: _javatypes.java.lang.Thread[], arg1: boolean): number;
                activeGroupCount(): number;
                enumerate(arg0: _javatypes.java.lang.ThreadGroup[]): number;
                enumerate(arg0: _javatypes.java.lang.ThreadGroup[], arg1: boolean): number;
                stop(): void;
                interrupt(): void;
                suspend(): void;
                resume(): void;
                destroy(): void;
                list(): void;
                uncaughtException(arg0: _javatypes.java.lang.Thread, arg1: _javatypes.java.lang.Throwable): void;
                allowThreadSuspension(arg0: boolean): boolean;
                toString(): string;
                
            }
            namespace ThreadGroup {
                interface static {
                    new (arg0: string): _javatypes.java.lang.ThreadGroup;
                    new (arg0: _javatypes.java.lang.ThreadGroup, arg1: string): _javatypes.java.lang.ThreadGroup;
                    
                    
                    
                }
            }
            interface Module extends any, _javatypes.java.lang.reflect.AnnotatedElement {
                
                isNamed(): boolean;
                getName(): string;
                getClassLoader(): _javatypes.java.lang.ClassLoader;
                getDescriptor(): _javatypes.java.lang.module.ModuleDescriptor;
                getLayer(): _javatypes.java.lang.ModuleLayer;
                canRead(arg0: _javatypes.java.lang.Module): boolean;
                addReads(arg0: _javatypes.java.lang.Module): _javatypes.java.lang.Module;
                isExported(arg0: string, arg1: _javatypes.java.lang.Module): boolean;
                isOpen(arg0: string, arg1: _javatypes.java.lang.Module): boolean;
                isExported(arg0: string): boolean;
                isOpen(arg0: string): boolean;
                addExports(arg0: string, arg1: _javatypes.java.lang.Module): _javatypes.java.lang.Module;
                addOpens(arg0: string, arg1: _javatypes.java.lang.Module): _javatypes.java.lang.Module;
                addUses(arg0: _javatypes.java.lang.Class<any>): _javatypes.java.lang.Module;
                canUse(arg0: _javatypes.java.lang.Class<any>): boolean;
                getPackages(): _javatypes.java.util.Set<string>;
                getAnnotation<T>(arg0: _javatypes.java.lang.Class<T>): T;
                getAnnotations(): _javatypes.java.lang.annotation.Annotation[];
                getDeclaredAnnotations(): _javatypes.java.lang.annotation.Annotation[];
                getResourceAsStream(arg0: string): _javatypes.java.io.InputStream;
                toString(): string;
                
            }
            namespace Module {
                interface static {
                    
                    
                    
                }
            }
            interface Package extends _javatypes.java.lang.NamedPackage, _javatypes.java.lang.reflect.AnnotatedElement {
                
                getName(): string;
                getSpecificationTitle(): string;
                getSpecificationVersion(): string;
                getSpecificationVendor(): string;
                getImplementationTitle(): string;
                getImplementationVersion(): string;
                getImplementationVendor(): string;
                isSealed(): boolean;
                isSealed(arg0: _javatypes.java.net.URL): boolean;
                isCompatibleWith(arg0: string): boolean;
                hashCode(): number;
                toString(): string;
                getAnnotation<A>(arg0: _javatypes.java.lang.Class<A>): A;
                isAnnotationPresent(arg0: _javatypes.java.lang.Class<any>): boolean;
                getAnnotationsByType<A>(arg0: _javatypes.java.lang.Class<A>): A[];
                getAnnotations(): _javatypes.java.lang.annotation.Annotation[];
                getDeclaredAnnotation<A>(arg0: _javatypes.java.lang.Class<A>): A;
                getDeclaredAnnotationsByType<A>(arg0: _javatypes.java.lang.Class<A>): A[];
                getDeclaredAnnotations(): _javatypes.java.lang.annotation.Annotation[];
                
            }
            namespace Package {
                interface static {
                    
                    
                    getPackage(arg0: string): _javatypes.java.lang.Package;
                    getPackages(): _javatypes.java.lang.Package[];
                    
                }
            }
            interface ModuleLayer extends any {
                
                defineModulesWithOneLoader(arg0: _javatypes.java.lang.module.Configuration, arg1: _javatypes.java.lang.ClassLoader): _javatypes.java.lang.ModuleLayer;
                defineModulesWithManyLoaders(arg0: _javatypes.java.lang.module.Configuration, arg1: _javatypes.java.lang.ClassLoader): _javatypes.java.lang.ModuleLayer;
                defineModules(arg0: _javatypes.java.lang.module.Configuration, arg1: _javatypes.java.util._function.Function<string, _javatypes.java.lang.ClassLoader>): _javatypes.java.lang.ModuleLayer;
                configuration(): _javatypes.java.lang.module.Configuration;
                parents(): _javatypes.java.util.List<_javatypes.java.lang.ModuleLayer>;
                modules(): _javatypes.java.util.Set<_javatypes.java.lang.Module>;
                findModule(arg0: string): _javatypes.java.util.Optional<_javatypes.java.lang.Module>;
                findLoader(arg0: string): _javatypes.java.lang.ClassLoader;
                toString(): string;
                
            }
            namespace ModuleLayer {
                interface static {
                    
                    
                    defineModulesWithOneLoader(arg0: _javatypes.java.lang.module.Configuration, arg1: _javatypes.java.util.List<_javatypes.java.lang.ModuleLayer>, arg2: _javatypes.java.lang.ClassLoader): _javatypes.java.lang.ModuleLayer$Controller;
                    defineModulesWithManyLoaders(arg0: _javatypes.java.lang.module.Configuration, arg1: _javatypes.java.util.List<_javatypes.java.lang.ModuleLayer>, arg2: _javatypes.java.lang.ClassLoader): _javatypes.java.lang.ModuleLayer$Controller;
                    defineModules(arg0: _javatypes.java.lang.module.Configuration, arg1: _javatypes.java.util.List<_javatypes.java.lang.ModuleLayer>, arg2: _javatypes.java.util._function.Function<string, _javatypes.java.lang.ClassLoader>): _javatypes.java.lang.ModuleLayer$Controller;
                    empty(): _javatypes.java.lang.ModuleLayer;
                    boot(): _javatypes.java.lang.ModuleLayer;
                    
                }
            }
            interface NamedPackage extends any {
                
                
            }
            namespace NamedPackage {
                interface static {
                    
                    
                    
                }
            }
            interface ModuleLayer$Controller extends any {
                
                layer(): _javatypes.java.lang.ModuleLayer;
                addReads(arg0: _javatypes.java.lang.Module, arg1: _javatypes.java.lang.Module): _javatypes.java.lang.ModuleLayer$Controller;
                addExports(arg0: _javatypes.java.lang.Module, arg1: string, arg2: _javatypes.java.lang.Module): _javatypes.java.lang.ModuleLayer$Controller;
                addOpens(arg0: _javatypes.java.lang.Module, arg1: string, arg2: _javatypes.java.lang.Module): _javatypes.java.lang.ModuleLayer$Controller;
                
            }
            namespace ModuleLayer$Controller {
                interface static {
                    
                    
                    
                }
            }
            interface Character$Subset extends any {
                
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace Character$Subset {
                interface static {
                    
                    
                    
                }
            }
            interface Exception extends _javatypes.java.lang.Throwable {
                
                
            }
            namespace Exception {
                interface static {
                    new (): _javatypes.java.lang.Exception;
                    new (arg0: string): _javatypes.java.lang.Exception;
                    new (arg0: string, arg1: _javatypes.java.lang.Throwable): _javatypes.java.lang.Exception;
                    new (arg0: _javatypes.java.lang.Throwable): _javatypes.java.lang.Exception;
                    
                    
                    
                }
            }
            interface Appendable extends _javatypes.java.lang.Interface {
                
                append(arg0: _javatypes.java.lang.CharSequence): _javatypes.java.lang.Appendable;
                append(arg0: _javatypes.java.lang.CharSequence, arg1: number, arg2: number): _javatypes.java.lang.Appendable;
                append(arg0: number): _javatypes.java.lang.Appendable;
                
            }
            namespace Appendable {
                interface static {
                    
                    
                    
                }
            }
            interface Readable extends _javatypes.java.lang.Interface {
                
                read(arg0: _javatypes.java.nio.CharBuffer): number;
                
            }
            namespace Readable {
                interface static {
                    
                    
                    
                }
            }
            interface StringBuilder extends _javatypes.java.lang.AbstractStringBuilder, _javatypes.java.io.Serializable, _javatypes.java.lang.Comparable<_javatypes.java.lang.StringBuilder>, _javatypes.java.lang.CharSequence {
                
                compareTo(arg0: _javatypes.java.lang.StringBuilder): number;
                append(arg0: any): _javatypes.java.lang.StringBuilder;
                append(arg0: string): _javatypes.java.lang.StringBuilder;
                append(arg0: _javatypes.java.lang.StringBuffer): _javatypes.java.lang.StringBuilder;
                append(arg0: _javatypes.java.lang.CharSequence): _javatypes.java.lang.StringBuilder;
                append(arg0: _javatypes.java.lang.CharSequence, arg1: number, arg2: number): _javatypes.java.lang.StringBuilder;
                append(arg0: number[]): _javatypes.java.lang.StringBuilder;
                append(arg0: number[], arg1: number, arg2: number): _javatypes.java.lang.StringBuilder;
                append(arg0: boolean): _javatypes.java.lang.StringBuilder;
                append(arg0: number): _javatypes.java.lang.StringBuilder;
                append(arg0: number): _javatypes.java.lang.StringBuilder;
                append(arg0: number): _javatypes.java.lang.StringBuilder;
                append(arg0: number): _javatypes.java.lang.StringBuilder;
                append(arg0: number): _javatypes.java.lang.StringBuilder;
                appendCodePoint(arg0: number): _javatypes.java.lang.StringBuilder;
                delete(arg0: number, arg1: number): _javatypes.java.lang.StringBuilder;
                deleteCharAt(arg0: number): _javatypes.java.lang.StringBuilder;
                replace(arg0: number, arg1: number, arg2: string): _javatypes.java.lang.StringBuilder;
                insert(arg0: number, arg1: number[], arg2: number, arg3: number): _javatypes.java.lang.StringBuilder;
                insert(arg0: number, arg1: any): _javatypes.java.lang.StringBuilder;
                insert(arg0: number, arg1: string): _javatypes.java.lang.StringBuilder;
                insert(arg0: number, arg1: number[]): _javatypes.java.lang.StringBuilder;
                insert(arg0: number, arg1: _javatypes.java.lang.CharSequence): _javatypes.java.lang.StringBuilder;
                insert(arg0: number, arg1: _javatypes.java.lang.CharSequence, arg2: number, arg3: number): _javatypes.java.lang.StringBuilder;
                insert(arg0: number, arg1: boolean): _javatypes.java.lang.StringBuilder;
                insert(arg0: number, arg1: number): _javatypes.java.lang.StringBuilder;
                insert(arg0: number, arg1: number): _javatypes.java.lang.StringBuilder;
                insert(arg0: number, arg1: number): _javatypes.java.lang.StringBuilder;
                insert(arg0: number, arg1: number): _javatypes.java.lang.StringBuilder;
                insert(arg0: number, arg1: number): _javatypes.java.lang.StringBuilder;
                indexOf(arg0: string): number;
                indexOf(arg0: string, arg1: number): number;
                lastIndexOf(arg0: string): number;
                lastIndexOf(arg0: string, arg1: number): number;
                reverse(): _javatypes.java.lang.StringBuilder;
                toString(): string;
                
            }
            namespace StringBuilder {
                interface static {
                    new (): _javatypes.java.lang.StringBuilder;
                    new (arg0: number): _javatypes.java.lang.StringBuilder;
                    new (arg0: string): _javatypes.java.lang.StringBuilder;
                    new (arg0: _javatypes.java.lang.CharSequence): _javatypes.java.lang.StringBuilder;
                    
                    
                    
                }
            }
            interface Cloneable extends _javatypes.java.lang.Interface {
                
                
            }
            namespace Cloneable {
                interface static {
                    
                    
                    
                }
            }
            interface Iterable<T> extends _javatypes.java.lang.Interface {
                
                iterator(): _javatypes.java.util.Iterator<T>;
                forEach(arg0: _javatypes.java.util._function.Consumer<any>): void;
                spliterator(): _javatypes.java.util.Spliterator<T>;
                
            }
            namespace Iterable {
                interface static {
                    
                    
                    
                }
            }
            interface CharSequence extends _javatypes.java.lang.Interface {
                
                length(): number;
                charAt(arg0: number): number;
                isEmpty(): boolean;
                subSequence(arg0: number, arg1: number): _javatypes.java.lang.CharSequence;
                toString(): string;
                chars(): _javatypes.java.util.stream.IntStream;
                codePoints(): _javatypes.java.util.stream.IntStream;
                
            }
            namespace CharSequence {
                interface static {
                    
                    
                    compare(arg0: _javatypes.java.lang.CharSequence, arg1: _javatypes.java.lang.CharSequence): number;
                    
                }
            }
            interface StringBuffer extends _javatypes.java.lang.AbstractStringBuilder, _javatypes.java.io.Serializable, _javatypes.java.lang.Comparable<_javatypes.java.lang.StringBuffer>, _javatypes.java.lang.CharSequence {
                
                compareTo(arg0: _javatypes.java.lang.StringBuffer): number;
                length(): number;
                capacity(): number;
                ensureCapacity(arg0: number): void;
                trimToSize(): void;
                setLength(arg0: number): void;
                charAt(arg0: number): number;
                codePointAt(arg0: number): number;
                codePointBefore(arg0: number): number;
                codePointCount(arg0: number, arg1: number): number;
                offsetByCodePoints(arg0: number, arg1: number): number;
                getChars(arg0: number, arg1: number, arg2: number[], arg3: number): void;
                setCharAt(arg0: number, arg1: number): void;
                append(arg0: any): _javatypes.java.lang.StringBuffer;
                append(arg0: string): _javatypes.java.lang.StringBuffer;
                append(arg0: _javatypes.java.lang.StringBuffer): _javatypes.java.lang.StringBuffer;
                append(arg0: _javatypes.java.lang.CharSequence): _javatypes.java.lang.StringBuffer;
                append(arg0: _javatypes.java.lang.CharSequence, arg1: number, arg2: number): _javatypes.java.lang.StringBuffer;
                append(arg0: number[]): _javatypes.java.lang.StringBuffer;
                append(arg0: number[], arg1: number, arg2: number): _javatypes.java.lang.StringBuffer;
                append(arg0: boolean): _javatypes.java.lang.StringBuffer;
                append(arg0: number): _javatypes.java.lang.StringBuffer;
                append(arg0: number): _javatypes.java.lang.StringBuffer;
                appendCodePoint(arg0: number): _javatypes.java.lang.StringBuffer;
                append(arg0: number): _javatypes.java.lang.StringBuffer;
                append(arg0: number): _javatypes.java.lang.StringBuffer;
                append(arg0: number): _javatypes.java.lang.StringBuffer;
                delete(arg0: number, arg1: number): _javatypes.java.lang.StringBuffer;
                deleteCharAt(arg0: number): _javatypes.java.lang.StringBuffer;
                replace(arg0: number, arg1: number, arg2: string): _javatypes.java.lang.StringBuffer;
                substring(arg0: number): string;
                subSequence(arg0: number, arg1: number): _javatypes.java.lang.CharSequence;
                substring(arg0: number, arg1: number): string;
                insert(arg0: number, arg1: number[], arg2: number, arg3: number): _javatypes.java.lang.StringBuffer;
                insert(arg0: number, arg1: any): _javatypes.java.lang.StringBuffer;
                insert(arg0: number, arg1: string): _javatypes.java.lang.StringBuffer;
                insert(arg0: number, arg1: number[]): _javatypes.java.lang.StringBuffer;
                insert(arg0: number, arg1: _javatypes.java.lang.CharSequence): _javatypes.java.lang.StringBuffer;
                insert(arg0: number, arg1: _javatypes.java.lang.CharSequence, arg2: number, arg3: number): _javatypes.java.lang.StringBuffer;
                insert(arg0: number, arg1: boolean): _javatypes.java.lang.StringBuffer;
                insert(arg0: number, arg1: number): _javatypes.java.lang.StringBuffer;
                insert(arg0: number, arg1: number): _javatypes.java.lang.StringBuffer;
                insert(arg0: number, arg1: number): _javatypes.java.lang.StringBuffer;
                insert(arg0: number, arg1: number): _javatypes.java.lang.StringBuffer;
                insert(arg0: number, arg1: number): _javatypes.java.lang.StringBuffer;
                indexOf(arg0: string): number;
                indexOf(arg0: string, arg1: number): number;
                lastIndexOf(arg0: string): number;
                lastIndexOf(arg0: string, arg1: number): number;
                reverse(): _javatypes.java.lang.StringBuffer;
                toString(): string;
                
            }
            namespace StringBuffer {
                interface static {
                    new (): _javatypes.java.lang.StringBuffer;
                    new (arg0: number): _javatypes.java.lang.StringBuffer;
                    new (arg0: string): _javatypes.java.lang.StringBuffer;
                    new (arg0: _javatypes.java.lang.CharSequence): _javatypes.java.lang.StringBuffer;
                    
                    
                    
                }
            }
            interface AbstractStringBuilder extends any, _javatypes.java.lang.Appendable, _javatypes.java.lang.CharSequence {
                
                length(): number;
                capacity(): number;
                ensureCapacity(arg0: number): void;
                trimToSize(): void;
                setLength(arg0: number): void;
                charAt(arg0: number): number;
                codePointAt(arg0: number): number;
                codePointBefore(arg0: number): number;
                codePointCount(arg0: number, arg1: number): number;
                offsetByCodePoints(arg0: number, arg1: number): number;
                getChars(arg0: number, arg1: number, arg2: number[], arg3: number): void;
                setCharAt(arg0: number, arg1: number): void;
                append(arg0: any): _javatypes.java.lang.AbstractStringBuilder;
                append(arg0: string): _javatypes.java.lang.AbstractStringBuilder;
                append(arg0: _javatypes.java.lang.StringBuffer): _javatypes.java.lang.AbstractStringBuilder;
                append(arg0: _javatypes.java.lang.CharSequence): _javatypes.java.lang.AbstractStringBuilder;
                append(arg0: _javatypes.java.lang.CharSequence, arg1: number, arg2: number): _javatypes.java.lang.AbstractStringBuilder;
                append(arg0: number[]): _javatypes.java.lang.AbstractStringBuilder;
                append(arg0: number[], arg1: number, arg2: number): _javatypes.java.lang.AbstractStringBuilder;
                append(arg0: boolean): _javatypes.java.lang.AbstractStringBuilder;
                append(arg0: number): _javatypes.java.lang.AbstractStringBuilder;
                append(arg0: number): _javatypes.java.lang.AbstractStringBuilder;
                append(arg0: number): _javatypes.java.lang.AbstractStringBuilder;
                append(arg0: number): _javatypes.java.lang.AbstractStringBuilder;
                append(arg0: number): _javatypes.java.lang.AbstractStringBuilder;
                delete(arg0: number, arg1: number): _javatypes.java.lang.AbstractStringBuilder;
                appendCodePoint(arg0: number): _javatypes.java.lang.AbstractStringBuilder;
                deleteCharAt(arg0: number): _javatypes.java.lang.AbstractStringBuilder;
                replace(arg0: number, arg1: number, arg2: string): _javatypes.java.lang.AbstractStringBuilder;
                substring(arg0: number): string;
                subSequence(arg0: number, arg1: number): _javatypes.java.lang.CharSequence;
                substring(arg0: number, arg1: number): string;
                insert(arg0: number, arg1: number[], arg2: number, arg3: number): _javatypes.java.lang.AbstractStringBuilder;
                insert(arg0: number, arg1: any): _javatypes.java.lang.AbstractStringBuilder;
                insert(arg0: number, arg1: string): _javatypes.java.lang.AbstractStringBuilder;
                insert(arg0: number, arg1: number[]): _javatypes.java.lang.AbstractStringBuilder;
                insert(arg0: number, arg1: _javatypes.java.lang.CharSequence): _javatypes.java.lang.AbstractStringBuilder;
                insert(arg0: number, arg1: _javatypes.java.lang.CharSequence, arg2: number, arg3: number): _javatypes.java.lang.AbstractStringBuilder;
                insert(arg0: number, arg1: boolean): _javatypes.java.lang.AbstractStringBuilder;
                insert(arg0: number, arg1: number): _javatypes.java.lang.AbstractStringBuilder;
                insert(arg0: number, arg1: number): _javatypes.java.lang.AbstractStringBuilder;
                insert(arg0: number, arg1: number): _javatypes.java.lang.AbstractStringBuilder;
                insert(arg0: number, arg1: number): _javatypes.java.lang.AbstractStringBuilder;
                insert(arg0: number, arg1: number): _javatypes.java.lang.AbstractStringBuilder;
                indexOf(arg0: string): number;
                indexOf(arg0: string, arg1: number): number;
                lastIndexOf(arg0: string): number;
                lastIndexOf(arg0: string, arg1: number): number;
                reverse(): _javatypes.java.lang.AbstractStringBuilder;
                toString(): string;
                chars(): _javatypes.java.util.stream.IntStream;
                codePoints(): _javatypes.java.util.stream.IntStream;
                
            }
            namespace AbstractStringBuilder {
                interface static {
                    
                    
                    
                }
            }
            interface Void extends any {
                
                
            }
            namespace Void {
                interface static {
                    
                    readonly TYPE: _javatypes.java.lang.Class<_javatypes.java.lang.Void>;
                    
                    
                }
            }
        
            namespace reflect {
            
                interface Field extends _javatypes.java.lang.reflect.AccessibleObject, _javatypes.java.lang.reflect.Member {
                    
                    setAccessible(arg0: boolean): void;
                    getDeclaringClass(): _javatypes.java.lang.Class<any>;
                    getName(): string;
                    getModifiers(): number;
                    isEnumConstant(): boolean;
                    isSynthetic(): boolean;
                    getType(): _javatypes.java.lang.Class<any>;
                    getGenericType(): _javatypes.java.lang.reflect.Type;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    toString(): string;
                    toGenericString(): string;
                    get(arg0: any): any;
                    getBoolean(arg0: any): boolean;
                    getByte(arg0: any): number;
                    getChar(arg0: any): number;
                    getShort(arg0: any): number;
                    getInt(arg0: any): number;
                    getLong(arg0: any): number;
                    getFloat(arg0: any): number;
                    getDouble(arg0: any): number;
                    set(arg0: any, arg1: any): void;
                    setBoolean(arg0: any, arg1: boolean): void;
                    setByte(arg0: any, arg1: number): void;
                    setChar(arg0: any, arg1: number): void;
                    setShort(arg0: any, arg1: number): void;
                    setInt(arg0: any, arg1: number): void;
                    setLong(arg0: any, arg1: number): void;
                    setFloat(arg0: any, arg1: number): void;
                    setDouble(arg0: any, arg1: number): void;
                    getAnnotation<T>(arg0: _javatypes.java.lang.Class<T>): T;
                    getAnnotationsByType<T>(arg0: _javatypes.java.lang.Class<T>): T[];
                    getDeclaredAnnotations(): _javatypes.java.lang.annotation.Annotation[];
                    getAnnotatedType(): _javatypes.java.lang.reflect.AnnotatedType;
                    
                }
                namespace Field {
                    interface static {
                        
                        
                        
                    }
                }
                interface Method extends _javatypes.java.lang.reflect.Executable {
                    
                    setAccessible(arg0: boolean): void;
                    getDeclaringClass(): _javatypes.java.lang.Class<any>;
                    getName(): string;
                    getModifiers(): number;
                    getTypeParameters(): _javatypes.java.lang.reflect.TypeVariable<_javatypes.java.lang.reflect.Method>[];
                    getReturnType(): _javatypes.java.lang.Class<any>;
                    getGenericReturnType(): _javatypes.java.lang.reflect.Type;
                    getParameterTypes(): _javatypes.java.lang.Class<any>[];
                    getParameterCount(): number;
                    getGenericParameterTypes(): _javatypes.java.lang.reflect.Type[];
                    getExceptionTypes(): _javatypes.java.lang.Class<any>[];
                    getGenericExceptionTypes(): _javatypes.java.lang.reflect.Type[];
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    toString(): string;
                    toGenericString(): string;
                    invoke(arg0: any, arg1: any[]): any;
                    isBridge(): boolean;
                    isVarArgs(): boolean;
                    isSynthetic(): boolean;
                    isDefault(): boolean;
                    getDefaultValue(): any;
                    getAnnotation<T>(arg0: _javatypes.java.lang.Class<T>): T;
                    getDeclaredAnnotations(): _javatypes.java.lang.annotation.Annotation[];
                    getParameterAnnotations(): _javatypes.java.lang.annotation.Annotation[][];
                    getAnnotatedReturnType(): _javatypes.java.lang.reflect.AnnotatedType;
                    
                }
                namespace Method {
                    interface static {
                        
                        
                        
                    }
                }
                interface AnnotatedType extends _javatypes.java.lang.Interface, _javatypes.java.lang.reflect.AnnotatedElement {
                    
                    getAnnotatedOwnerType(): _javatypes.java.lang.reflect.AnnotatedType;
                    getType(): _javatypes.java.lang.reflect.Type;
                    getAnnotation<T>(arg0: _javatypes.java.lang.Class<T>): T;
                    getAnnotations(): _javatypes.java.lang.annotation.Annotation[];
                    getDeclaredAnnotations(): _javatypes.java.lang.annotation.Annotation[];
                    
                }
                namespace AnnotatedType {
                    interface static {
                        
                        
                        
                    }
                }
                interface Type extends _javatypes.java.lang.Interface {
                    
                    getTypeName(): string;
                    
                }
                namespace Type {
                    interface static {
                        
                        
                        
                    }
                }
                interface AccessibleObject extends any, _javatypes.java.lang.reflect.AnnotatedElement {
                    
                    setAccessible(arg0: boolean): void;
                    trySetAccessible(): boolean;
                    isAccessible(): boolean;
                    canAccess(arg0: any): boolean;
                    getAnnotation<T>(arg0: _javatypes.java.lang.Class<T>): T;
                    isAnnotationPresent(arg0: _javatypes.java.lang.Class<any>): boolean;
                    getAnnotationsByType<T>(arg0: _javatypes.java.lang.Class<T>): T[];
                    getAnnotations(): _javatypes.java.lang.annotation.Annotation[];
                    getDeclaredAnnotation<T>(arg0: _javatypes.java.lang.Class<T>): T;
                    getDeclaredAnnotationsByType<T>(arg0: _javatypes.java.lang.Class<T>): T[];
                    getDeclaredAnnotations(): _javatypes.java.lang.annotation.Annotation[];
                    
                }
                namespace AccessibleObject {
                    interface static {
                        
                        
                        setAccessible(arg0: _javatypes.java.lang.reflect.AccessibleObject[], arg1: boolean): void;
                        
                    }
                }
                interface Executable extends _javatypes.java.lang.reflect.AccessibleObject, _javatypes.java.lang.reflect.Member, _javatypes.java.lang.reflect.GenericDeclaration {
                    
                    getDeclaringClass(): _javatypes.java.lang.Class<any>;
                    getName(): string;
                    getModifiers(): number;
                    getTypeParameters(): _javatypes.java.lang.reflect.TypeVariable<any>[];
                    getParameterTypes(): _javatypes.java.lang.Class<any>[];
                    getParameterCount(): number;
                    getGenericParameterTypes(): _javatypes.java.lang.reflect.Type[];
                    getParameters(): _javatypes.java.lang.reflect.Parameter[];
                    getExceptionTypes(): _javatypes.java.lang.Class<any>[];
                    getGenericExceptionTypes(): _javatypes.java.lang.reflect.Type[];
                    toGenericString(): string;
                    isVarArgs(): boolean;
                    isSynthetic(): boolean;
                    getParameterAnnotations(): _javatypes.java.lang.annotation.Annotation[][];
                    getAnnotation<T>(arg0: _javatypes.java.lang.Class<T>): T;
                    getAnnotationsByType<T>(arg0: _javatypes.java.lang.Class<T>): T[];
                    getDeclaredAnnotations(): _javatypes.java.lang.annotation.Annotation[];
                    getAnnotatedReturnType(): _javatypes.java.lang.reflect.AnnotatedType;
                    getAnnotatedReceiverType(): _javatypes.java.lang.reflect.AnnotatedType;
                    getAnnotatedParameterTypes(): _javatypes.java.lang.reflect.AnnotatedType[];
                    getAnnotatedExceptionTypes(): _javatypes.java.lang.reflect.AnnotatedType[];
                    
                }
                namespace Executable {
                    interface static {
                        
                        
                        
                    }
                }
                interface TypeVariable<D> extends _javatypes.java.lang.Interface, _javatypes.java.lang.reflect.Type, _javatypes.java.lang.reflect.AnnotatedElement {
                    
                    getBounds(): _javatypes.java.lang.reflect.Type[];
                    getGenericDeclaration(): D;
                    getName(): string;
                    getAnnotatedBounds(): _javatypes.java.lang.reflect.AnnotatedType[];
                    
                }
                namespace TypeVariable {
                    interface static {
                        
                        
                        
                    }
                }
                interface Member extends _javatypes.java.lang.Interface {
                    
                    getDeclaringClass(): _javatypes.java.lang.Class<any>;
                    getName(): string;
                    getModifiers(): number;
                    isSynthetic(): boolean;
                    
                }
                namespace Member {
                    interface static {
                        
                        readonly PUBLIC: number;
                        readonly DECLARED: number;
                        
                        
                    }
                }
                interface AnnotatedElement extends _javatypes.java.lang.Interface {
                    
                    isAnnotationPresent(arg0: _javatypes.java.lang.Class<any>): boolean;
                    getAnnotation<T>(arg0: _javatypes.java.lang.Class<T>): T;
                    getAnnotations(): _javatypes.java.lang.annotation.Annotation[];
                    getAnnotationsByType<T>(arg0: _javatypes.java.lang.Class<T>): T[];
                    getDeclaredAnnotation<T>(arg0: _javatypes.java.lang.Class<T>): T;
                    getDeclaredAnnotationsByType<T>(arg0: _javatypes.java.lang.Class<T>): T[];
                    getDeclaredAnnotations(): _javatypes.java.lang.annotation.Annotation[];
                    
                }
                namespace AnnotatedElement {
                    interface static {
                        
                        
                        
                    }
                }
                interface Parameter extends any, _javatypes.java.lang.reflect.AnnotatedElement {
                    
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    isNamePresent(): boolean;
                    toString(): string;
                    getDeclaringExecutable(): _javatypes.java.lang.reflect.Executable;
                    getModifiers(): number;
                    getName(): string;
                    getParameterizedType(): _javatypes.java.lang.reflect.Type;
                    getType(): _javatypes.java.lang.Class<any>;
                    getAnnotatedType(): _javatypes.java.lang.reflect.AnnotatedType;
                    isImplicit(): boolean;
                    isSynthetic(): boolean;
                    isVarArgs(): boolean;
                    getAnnotation<T>(arg0: _javatypes.java.lang.Class<T>): T;
                    getAnnotationsByType<T>(arg0: _javatypes.java.lang.Class<T>): T[];
                    getDeclaredAnnotations(): _javatypes.java.lang.annotation.Annotation[];
                    getDeclaredAnnotation<T>(arg0: _javatypes.java.lang.Class<T>): T;
                    getDeclaredAnnotationsByType<T>(arg0: _javatypes.java.lang.Class<T>): T[];
                    getAnnotations(): _javatypes.java.lang.annotation.Annotation[];
                    
                }
                namespace Parameter {
                    interface static {
                        
                        
                        
                    }
                }
                interface GenericDeclaration extends _javatypes.java.lang.Interface, _javatypes.java.lang.reflect.AnnotatedElement {
                    
                    getTypeParameters(): _javatypes.java.lang.reflect.TypeVariable<any>[];
                    
                }
                namespace GenericDeclaration {
                    interface static {
                        
                        
                        
                    }
                }
                interface Constructor<T> extends _javatypes.java.lang.reflect.Executable {
                    
                    setAccessible(arg0: boolean): void;
                    getDeclaringClass(): _javatypes.java.lang.Class<T>;
                    getName(): string;
                    getModifiers(): number;
                    getTypeParameters(): _javatypes.java.lang.reflect.TypeVariable<_javatypes.java.lang.reflect.Constructor<T>>[];
                    getParameterTypes(): _javatypes.java.lang.Class<any>[];
                    getParameterCount(): number;
                    getGenericParameterTypes(): _javatypes.java.lang.reflect.Type[];
                    getExceptionTypes(): _javatypes.java.lang.Class<any>[];
                    getGenericExceptionTypes(): _javatypes.java.lang.reflect.Type[];
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    toString(): string;
                    toGenericString(): string;
                    newInstance(arg0: any[]): T;
                    isVarArgs(): boolean;
                    isSynthetic(): boolean;
                    getAnnotation<T>(arg0: _javatypes.java.lang.Class<T>): T;
                    getDeclaredAnnotations(): _javatypes.java.lang.annotation.Annotation[];
                    getParameterAnnotations(): _javatypes.java.lang.annotation.Annotation[][];
                    getAnnotatedReturnType(): _javatypes.java.lang.reflect.AnnotatedType;
                    getAnnotatedReceiverType(): _javatypes.java.lang.reflect.AnnotatedType;
                    
                }
                namespace Constructor {
                    interface static {
                        
                        
                        
                    }
                }
            }
        
            namespace ref {
            
                interface WeakReference<T> extends _javatypes.java.lang.ref.Reference<T> {
                    
                    
                }
                namespace WeakReference {
                    interface static {
                        new <T>(arg0: T): _javatypes.java.lang.ref.WeakReference<T>;
                        new <T>(arg0: T, arg1: _javatypes.java.lang.ref.ReferenceQueue<any>): _javatypes.java.lang.ref.WeakReference<T>;
                        
                        
                        
                    }
                }
                interface Reference<T> extends any {
                    
                    get(): T;
                    refersTo(arg0: T): boolean;
                    clear(): void;
                    isEnqueued(): boolean;
                    enqueue(): boolean;
                    
                }
                namespace Reference {
                    interface static {
                        
                        
                        reachabilityFence(arg0: any): void;
                        
                    }
                }
                interface ReferenceQueue<T> extends any {
                    
                    poll(): _javatypes.java.lang.ref.Reference<any>;
                    remove(arg0: number): _javatypes.java.lang.ref.Reference<any>;
                    remove(): _javatypes.java.lang.ref.Reference<any>;
                    
                }
                namespace ReferenceQueue {
                    interface static {
                        new <T>(): _javatypes.java.lang.ref.ReferenceQueue<T>;
                        
                        
                        
                    }
                }
            }
        
            namespace annotation {
            
                interface Annotation extends _javatypes.java.lang.Interface {
                    
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    toString(): string;
                    annotationType(): _javatypes.java.lang.Class<any>;
                    
                }
                namespace Annotation {
                    interface static {
                        
                        
                        
                    }
                }
            }
        
            namespace constant {
            
                interface Constable extends _javatypes.java.lang.Interface {
                    
                    describeConstable(): _javatypes.java.util.Optional<any>;
                    
                }
                namespace Constable {
                    interface static {
                        
                        
                        
                    }
                }
                interface DynamicConstantDesc<T> extends any, _javatypes.java.lang.constant.ConstantDesc {
                    
                    constantName(): string;
                    constantType(): _javatypes.java.lang.constant.ClassDesc;
                    bootstrapMethod(): _javatypes.java.lang.constant.DirectMethodHandleDesc;
                    bootstrapArgs(): _javatypes.java.lang.constant.ConstantDesc[];
                    bootstrapArgsList(): _javatypes.java.util.List<_javatypes.java.lang.constant.ConstantDesc>;
                    resolveConstantDesc(arg0: _javatypes.java.lang.invoke.MethodHandles$Lookup): T;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    toString(): string;
                    
                }
                namespace DynamicConstantDesc {
                    interface static {
                        
                        
                        ofCanonical<T>(arg0: _javatypes.java.lang.constant.DirectMethodHandleDesc, arg1: string, arg2: _javatypes.java.lang.constant.ClassDesc, arg3: _javatypes.java.lang.constant.ConstantDesc[]): _javatypes.java.lang.constant.ConstantDesc;
                        ofNamed<T>(arg0: _javatypes.java.lang.constant.DirectMethodHandleDesc, arg1: string, arg2: _javatypes.java.lang.constant.ClassDesc, arg3: _javatypes.java.lang.constant.ConstantDesc[]): _javatypes.java.lang.constant.DynamicConstantDesc<T>;
                        of<T>(arg0: _javatypes.java.lang.constant.DirectMethodHandleDesc, arg1: _javatypes.java.lang.constant.ConstantDesc[]): _javatypes.java.lang.constant.DynamicConstantDesc<T>;
                        of<T>(arg0: _javatypes.java.lang.constant.DirectMethodHandleDesc): _javatypes.java.lang.constant.DynamicConstantDesc<T>;
                        
                    }
                }
                interface ClassDesc extends _javatypes.java.lang.Interface, _javatypes.java.lang.constant.ConstantDesc, _javatypes.java.lang.invoke.TypeDescriptor$OfField<_javatypes.java.lang.constant.ClassDesc> {
                    
                    arrayType(): _javatypes.java.lang.constant.ClassDesc;
                    arrayType(arg0: number): _javatypes.java.lang.constant.ClassDesc;
                    nested(arg0: string): _javatypes.java.lang.constant.ClassDesc;
                    nested(arg0: string, arg1: string[]): _javatypes.java.lang.constant.ClassDesc;
                    isArray(): boolean;
                    isPrimitive(): boolean;
                    isClassOrInterface(): boolean;
                    componentType(): _javatypes.java.lang.constant.ClassDesc;
                    packageName(): string;
                    displayName(): string;
                    descriptorString(): string;
                    equals(arg0: any): boolean;
                    
                }
                namespace ClassDesc {
                    interface static {
                        
                        
                        of(arg0: string): _javatypes.java.lang.constant.ClassDesc;
                        of(arg0: string, arg1: string): _javatypes.java.lang.constant.ClassDesc;
                        ofDescriptor(arg0: string): _javatypes.java.lang.constant.ClassDesc;
                        
                    }
                }
                interface MethodHandleDesc extends _javatypes.java.lang.Interface, _javatypes.java.lang.constant.ConstantDesc {
                    
                    asType(arg0: _javatypes.java.lang.constant.MethodTypeDesc): _javatypes.java.lang.constant.MethodHandleDesc;
                    invocationType(): _javatypes.java.lang.constant.MethodTypeDesc;
                    equals(arg0: any): boolean;
                    
                }
                namespace MethodHandleDesc {
                    interface static {
                        
                        
                        of(arg0: _javatypes.java.lang.constant.DirectMethodHandleDesc$Kind, arg1: _javatypes.java.lang.constant.ClassDesc, arg2: string, arg3: string): _javatypes.java.lang.constant.DirectMethodHandleDesc;
                        ofMethod(arg0: _javatypes.java.lang.constant.DirectMethodHandleDesc$Kind, arg1: _javatypes.java.lang.constant.ClassDesc, arg2: string, arg3: _javatypes.java.lang.constant.MethodTypeDesc): _javatypes.java.lang.constant.DirectMethodHandleDesc;
                        ofField(arg0: _javatypes.java.lang.constant.DirectMethodHandleDesc$Kind, arg1: _javatypes.java.lang.constant.ClassDesc, arg2: string, arg3: _javatypes.java.lang.constant.ClassDesc): _javatypes.java.lang.constant.DirectMethodHandleDesc;
                        ofConstructor(arg0: _javatypes.java.lang.constant.ClassDesc, arg1: _javatypes.java.lang.constant.ClassDesc[]): _javatypes.java.lang.constant.DirectMethodHandleDesc;
                        
                    }
                }
                interface MethodTypeDesc extends _javatypes.java.lang.Interface, _javatypes.java.lang.constant.ConstantDesc, _javatypes.java.lang.invoke.TypeDescriptor$OfMethod<_javatypes.java.lang.constant.ClassDesc, _javatypes.java.lang.constant.MethodTypeDesc> {
                    
                    returnType(): _javatypes.java.lang.constant.ClassDesc;
                    parameterCount(): number;
                    parameterType(arg0: number): _javatypes.java.lang.constant.ClassDesc;
                    parameterList(): _javatypes.java.util.List<_javatypes.java.lang.constant.ClassDesc>;
                    parameterArray(): _javatypes.java.lang.constant.ClassDesc[];
                    changeReturnType(arg0: _javatypes.java.lang.constant.ClassDesc): _javatypes.java.lang.constant.MethodTypeDesc;
                    changeParameterType(arg0: number, arg1: _javatypes.java.lang.constant.ClassDesc): _javatypes.java.lang.constant.MethodTypeDesc;
                    dropParameterTypes(arg0: number, arg1: number): _javatypes.java.lang.constant.MethodTypeDesc;
                    insertParameterTypes(arg0: number, arg1: _javatypes.java.lang.constant.ClassDesc[]): _javatypes.java.lang.constant.MethodTypeDesc;
                    descriptorString(): string;
                    displayDescriptor(): string;
                    equals(arg0: any): boolean;
                    
                }
                namespace MethodTypeDesc {
                    interface static {
                        
                        
                        ofDescriptor(arg0: string): _javatypes.java.lang.constant.MethodTypeDesc;
                        of(arg0: _javatypes.java.lang.constant.ClassDesc, arg1: _javatypes.java.lang.constant.ClassDesc[]): _javatypes.java.lang.constant.MethodTypeDesc;
                        
                    }
                }
                interface DirectMethodHandleDesc extends _javatypes.java.lang.Interface, _javatypes.java.lang.constant.MethodHandleDesc {
                    
                    kind(): _javatypes.java.lang.constant.DirectMethodHandleDesc$Kind;
                    refKind(): number;
                    isOwnerInterface(): boolean;
                    owner(): _javatypes.java.lang.constant.ClassDesc;
                    methodName(): string;
                    lookupDescriptor(): string;
                    
                }
                namespace DirectMethodHandleDesc {
                    interface static {
                        
                        
                        
                    }
                }
                interface ConstantDesc extends _javatypes.java.lang.Interface {
                    
                    resolveConstantDesc(arg0: _javatypes.java.lang.invoke.MethodHandles$Lookup): any;
                    
                }
                namespace ConstantDesc {
                    interface static {
                        
                        
                        
                    }
                }
                interface DirectMethodHandleDesc$Kind extends _javatypes.java.lang.Enum<_javatypes.java.lang.constant.DirectMethodHandleDesc$Kind> {
                    readonly refKind: number;
                    readonly isInterface: boolean;
                    
                    
                }
                namespace DirectMethodHandleDesc$Kind {
                    interface static {
                        
                        readonly STATIC: _javatypes.java.lang.constant.DirectMethodHandleDesc$Kind;
                        readonly INTERFACE_STATIC: _javatypes.java.lang.constant.DirectMethodHandleDesc$Kind;
                        readonly VIRTUAL: _javatypes.java.lang.constant.DirectMethodHandleDesc$Kind;
                        readonly INTERFACE_VIRTUAL: _javatypes.java.lang.constant.DirectMethodHandleDesc$Kind;
                        readonly SPECIAL: _javatypes.java.lang.constant.DirectMethodHandleDesc$Kind;
                        readonly INTERFACE_SPECIAL: _javatypes.java.lang.constant.DirectMethodHandleDesc$Kind;
                        readonly CONSTRUCTOR: _javatypes.java.lang.constant.DirectMethodHandleDesc$Kind;
                        readonly GETTER: _javatypes.java.lang.constant.DirectMethodHandleDesc$Kind;
                        readonly SETTER: _javatypes.java.lang.constant.DirectMethodHandleDesc$Kind;
                        readonly STATIC_GETTER: _javatypes.java.lang.constant.DirectMethodHandleDesc$Kind;
                        readonly STATIC_SETTER: _javatypes.java.lang.constant.DirectMethodHandleDesc$Kind;
                        
                        values(): _javatypes.java.lang.constant.DirectMethodHandleDesc$Kind[];
                        valueOf(arg0: string): _javatypes.java.lang.constant.DirectMethodHandleDesc$Kind;
                        valueOf(arg0: number): _javatypes.java.lang.constant.DirectMethodHandleDesc$Kind;
                        valueOf(arg0: number, arg1: boolean): _javatypes.java.lang.constant.DirectMethodHandleDesc$Kind;
                        
                    }
                }
            }
        
            namespace invoke {
            
                interface MethodHandles$Lookup extends any {
                    
                    lookupClass(): _javatypes.java.lang.Class<any>;
                    previousLookupClass(): _javatypes.java.lang.Class<any>;
                    lookupModes(): number;
                    in(arg0: _javatypes.java.lang.Class<any>): _javatypes.java.lang.invoke.MethodHandles$Lookup;
                    dropLookupMode(arg0: number): _javatypes.java.lang.invoke.MethodHandles$Lookup;
                    defineClass(arg0: number[]): _javatypes.java.lang.Class<any>;
                    defineHiddenClass(arg0: number[], arg1: boolean, arg2: _javatypes.java.lang.invoke.MethodHandles$Lookup$ClassOption[]): _javatypes.java.lang.invoke.MethodHandles$Lookup;
                    defineHiddenClassWithClassData(arg0: number[], arg1: any, arg2: boolean, arg3: _javatypes.java.lang.invoke.MethodHandles$Lookup$ClassOption[]): _javatypes.java.lang.invoke.MethodHandles$Lookup;
                    toString(): string;
                    findStatic(arg0: _javatypes.java.lang.Class<any>, arg1: string, arg2: _javatypes.java.lang.invoke.MethodType): _javatypes.java.lang.invoke.MethodHandle;
                    findVirtual(arg0: _javatypes.java.lang.Class<any>, arg1: string, arg2: _javatypes.java.lang.invoke.MethodType): _javatypes.java.lang.invoke.MethodHandle;
                    findConstructor(arg0: _javatypes.java.lang.Class<any>, arg1: _javatypes.java.lang.invoke.MethodType): _javatypes.java.lang.invoke.MethodHandle;
                    findClass(arg0: string): _javatypes.java.lang.Class<any>;
                    ensureInitialized(arg0: _javatypes.java.lang.Class<any>): _javatypes.java.lang.Class<any>;
                    accessClass(arg0: _javatypes.java.lang.Class<any>): _javatypes.java.lang.Class<any>;
                    findSpecial(arg0: _javatypes.java.lang.Class<any>, arg1: string, arg2: _javatypes.java.lang.invoke.MethodType, arg3: _javatypes.java.lang.Class<any>): _javatypes.java.lang.invoke.MethodHandle;
                    findGetter(arg0: _javatypes.java.lang.Class<any>, arg1: string, arg2: _javatypes.java.lang.Class<any>): _javatypes.java.lang.invoke.MethodHandle;
                    findSetter(arg0: _javatypes.java.lang.Class<any>, arg1: string, arg2: _javatypes.java.lang.Class<any>): _javatypes.java.lang.invoke.MethodHandle;
                    findVarHandle(arg0: _javatypes.java.lang.Class<any>, arg1: string, arg2: _javatypes.java.lang.Class<any>): _javatypes.java.lang.invoke.VarHandle;
                    findStaticGetter(arg0: _javatypes.java.lang.Class<any>, arg1: string, arg2: _javatypes.java.lang.Class<any>): _javatypes.java.lang.invoke.MethodHandle;
                    findStaticSetter(arg0: _javatypes.java.lang.Class<any>, arg1: string, arg2: _javatypes.java.lang.Class<any>): _javatypes.java.lang.invoke.MethodHandle;
                    findStaticVarHandle(arg0: _javatypes.java.lang.Class<any>, arg1: string, arg2: _javatypes.java.lang.Class<any>): _javatypes.java.lang.invoke.VarHandle;
                    bind(arg0: any, arg1: string, arg2: _javatypes.java.lang.invoke.MethodType): _javatypes.java.lang.invoke.MethodHandle;
                    unreflect(arg0: _javatypes.java.lang.reflect.Method): _javatypes.java.lang.invoke.MethodHandle;
                    unreflectSpecial(arg0: _javatypes.java.lang.reflect.Method, arg1: _javatypes.java.lang.Class<any>): _javatypes.java.lang.invoke.MethodHandle;
                    unreflectConstructor(arg0: _javatypes.java.lang.reflect.Constructor<any>): _javatypes.java.lang.invoke.MethodHandle;
                    unreflectGetter(arg0: _javatypes.java.lang.reflect.Field): _javatypes.java.lang.invoke.MethodHandle;
                    unreflectSetter(arg0: _javatypes.java.lang.reflect.Field): _javatypes.java.lang.invoke.MethodHandle;
                    unreflectVarHandle(arg0: _javatypes.java.lang.reflect.Field): _javatypes.java.lang.invoke.VarHandle;
                    revealDirect(arg0: _javatypes.java.lang.invoke.MethodHandle): _javatypes.java.lang.invoke.MethodHandleInfo;
                    hasPrivateAccess(): boolean;
                    hasFullPrivilegeAccess(): boolean;
                    
                }
                namespace MethodHandles$Lookup {
                    interface static {
                        
                        readonly PUBLIC: number;
                        readonly PRIVATE: number;
                        readonly PROTECTED: number;
                        readonly PACKAGE: number;
                        readonly MODULE: number;
                        readonly UNCONDITIONAL: number;
                        readonly ORIGINAL: number;
                        
                        
                    }
                }
                interface MethodHandle extends any, _javatypes.java.lang.constant.Constable {
                    
                    type(): _javatypes.java.lang.invoke.MethodType;
                    invokeExact(arg0: any[]): any;
                    invoke(arg0: any[]): any;
                    invokeWithArguments(arg0: any[]): any;
                    invokeWithArguments(arg0: _javatypes.java.util.List<any>): any;
                    asType(arg0: _javatypes.java.lang.invoke.MethodType): _javatypes.java.lang.invoke.MethodHandle;
                    asSpreader(arg0: _javatypes.java.lang.Class<any>, arg1: number): _javatypes.java.lang.invoke.MethodHandle;
                    asSpreader(arg0: number, arg1: _javatypes.java.lang.Class<any>, arg2: number): _javatypes.java.lang.invoke.MethodHandle;
                    withVarargs(arg0: boolean): _javatypes.java.lang.invoke.MethodHandle;
                    asCollector(arg0: _javatypes.java.lang.Class<any>, arg1: number): _javatypes.java.lang.invoke.MethodHandle;
                    asCollector(arg0: number, arg1: _javatypes.java.lang.Class<any>, arg2: number): _javatypes.java.lang.invoke.MethodHandle;
                    asVarargsCollector(arg0: _javatypes.java.lang.Class<any>): _javatypes.java.lang.invoke.MethodHandle;
                    isVarargsCollector(): boolean;
                    asFixedArity(): _javatypes.java.lang.invoke.MethodHandle;
                    bindTo(arg0: any): _javatypes.java.lang.invoke.MethodHandle;
                    describeConstable(): _javatypes.java.util.Optional<_javatypes.java.lang.constant.MethodHandleDesc>;
                    toString(): string;
                    
                }
                namespace MethodHandle {
                    interface static {
                        
                        
                        
                    }
                }
                interface MethodType extends any, _javatypes.java.lang.constant.Constable, _javatypes.java.lang.invoke.TypeDescriptor$OfMethod<_javatypes.java.lang.Class<any>, _javatypes.java.lang.invoke.MethodType>, _javatypes.java.io.Serializable {
                    
                    changeParameterType(arg0: number, arg1: _javatypes.java.lang.Class<any>): _javatypes.java.lang.invoke.MethodType;
                    insertParameterTypes(arg0: number, arg1: _javatypes.java.lang.Class<any>[]): _javatypes.java.lang.invoke.MethodType;
                    appendParameterTypes(arg0: _javatypes.java.lang.Class<any>[]): _javatypes.java.lang.invoke.MethodType;
                    insertParameterTypes(arg0: number, arg1: _javatypes.java.util.List<_javatypes.java.lang.Class<any>>): _javatypes.java.lang.invoke.MethodType;
                    appendParameterTypes(arg0: _javatypes.java.util.List<_javatypes.java.lang.Class<any>>): _javatypes.java.lang.invoke.MethodType;
                    dropParameterTypes(arg0: number, arg1: number): _javatypes.java.lang.invoke.MethodType;
                    changeReturnType(arg0: _javatypes.java.lang.Class<any>): _javatypes.java.lang.invoke.MethodType;
                    hasPrimitives(): boolean;
                    hasWrappers(): boolean;
                    erase(): _javatypes.java.lang.invoke.MethodType;
                    generic(): _javatypes.java.lang.invoke.MethodType;
                    wrap(): _javatypes.java.lang.invoke.MethodType;
                    unwrap(): _javatypes.java.lang.invoke.MethodType;
                    parameterType(arg0: number): _javatypes.java.lang.Class<any>;
                    parameterCount(): number;
                    returnType(): _javatypes.java.lang.Class<any>;
                    parameterList(): _javatypes.java.util.List<_javatypes.java.lang.Class<any>>;
                    lastParameterType(): _javatypes.java.lang.Class<any>;
                    parameterArray(): _javatypes.java.lang.Class<any>[];
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    toString(): string;
                    toMethodDescriptorString(): string;
                    descriptorString(): string;
                    describeConstable(): _javatypes.java.util.Optional<_javatypes.java.lang.constant.MethodTypeDesc>;
                    
                }
                namespace MethodType {
                    interface static {
                        
                        
                        methodType(arg0: _javatypes.java.lang.Class<any>, arg1: _javatypes.java.lang.Class<any>[]): _javatypes.java.lang.invoke.MethodType;
                        methodType(arg0: _javatypes.java.lang.Class<any>, arg1: _javatypes.java.util.List<_javatypes.java.lang.Class<any>>): _javatypes.java.lang.invoke.MethodType;
                        methodType(arg0: _javatypes.java.lang.Class<any>, arg1: _javatypes.java.lang.Class<any>, arg2: _javatypes.java.lang.Class<any>[]): _javatypes.java.lang.invoke.MethodType;
                        methodType(arg0: _javatypes.java.lang.Class<any>): _javatypes.java.lang.invoke.MethodType;
                        methodType(arg0: _javatypes.java.lang.Class<any>, arg1: _javatypes.java.lang.Class<any>): _javatypes.java.lang.invoke.MethodType;
                        methodType(arg0: _javatypes.java.lang.Class<any>, arg1: _javatypes.java.lang.invoke.MethodType): _javatypes.java.lang.invoke.MethodType;
                        genericMethodType(arg0: number, arg1: boolean): _javatypes.java.lang.invoke.MethodType;
                        genericMethodType(arg0: number): _javatypes.java.lang.invoke.MethodType;
                        fromMethodDescriptorString(arg0: string, arg1: _javatypes.java.lang.ClassLoader): _javatypes.java.lang.invoke.MethodType;
                        
                    }
                }
                interface VarHandle extends any, _javatypes.java.lang.constant.Constable {
                    
                    hasInvokeExactBehavior(): boolean;
                    get(arg0: any[]): any;
                    set(arg0: any[]): void;
                    getVolatile(arg0: any[]): any;
                    setVolatile(arg0: any[]): void;
                    getOpaque(arg0: any[]): any;
                    setOpaque(arg0: any[]): void;
                    getAcquire(arg0: any[]): any;
                    setRelease(arg0: any[]): void;
                    compareAndSet(arg0: any[]): boolean;
                    compareAndExchange(arg0: any[]): any;
                    compareAndExchangeAcquire(arg0: any[]): any;
                    compareAndExchangeRelease(arg0: any[]): any;
                    weakCompareAndSetPlain(arg0: any[]): boolean;
                    weakCompareAndSet(arg0: any[]): boolean;
                    weakCompareAndSetAcquire(arg0: any[]): boolean;
                    weakCompareAndSetRelease(arg0: any[]): boolean;
                    getAndSet(arg0: any[]): any;
                    getAndSetAcquire(arg0: any[]): any;
                    getAndSetRelease(arg0: any[]): any;
                    getAndAdd(arg0: any[]): any;
                    getAndAddAcquire(arg0: any[]): any;
                    getAndAddRelease(arg0: any[]): any;
                    getAndBitwiseOr(arg0: any[]): any;
                    getAndBitwiseOrAcquire(arg0: any[]): any;
                    getAndBitwiseOrRelease(arg0: any[]): any;
                    getAndBitwiseAnd(arg0: any[]): any;
                    getAndBitwiseAndAcquire(arg0: any[]): any;
                    getAndBitwiseAndRelease(arg0: any[]): any;
                    getAndBitwiseXor(arg0: any[]): any;
                    getAndBitwiseXorAcquire(arg0: any[]): any;
                    getAndBitwiseXorRelease(arg0: any[]): any;
                    withInvokeExactBehavior(): _javatypes.java.lang.invoke.VarHandle;
                    withInvokeBehavior(): _javatypes.java.lang.invoke.VarHandle;
                    toString(): string;
                    varType(): _javatypes.java.lang.Class<any>;
                    coordinateTypes(): _javatypes.java.util.List<_javatypes.java.lang.Class<any>>;
                    accessModeType(arg0: _javatypes.java.lang.invoke.VarHandle$AccessMode): _javatypes.java.lang.invoke.MethodType;
                    isAccessModeSupported(arg0: _javatypes.java.lang.invoke.VarHandle$AccessMode): boolean;
                    toMethodHandle(arg0: _javatypes.java.lang.invoke.VarHandle$AccessMode): _javatypes.java.lang.invoke.MethodHandle;
                    describeConstable(): _javatypes.java.util.Optional<_javatypes.java.lang.invoke.VarHandle$VarHandleDesc>;
                    
                }
                namespace VarHandle {
                    interface static {
                        
                        
                        fullFence(): void;
                        acquireFence(): void;
                        releaseFence(): void;
                        loadLoadFence(): void;
                        storeStoreFence(): void;
                        
                    }
                }
                interface MethodHandles$Lookup$ClassOption extends _javatypes.java.lang.Enum<_javatypes.java.lang.invoke.MethodHandles$Lookup$ClassOption> {
                    
                    
                }
                namespace MethodHandles$Lookup$ClassOption {
                    interface static {
                        
                        readonly NESTMATE: _javatypes.java.lang.invoke.MethodHandles$Lookup$ClassOption;
                        readonly STRONG: _javatypes.java.lang.invoke.MethodHandles$Lookup$ClassOption;
                        
                        values(): _javatypes.java.lang.invoke.MethodHandles$Lookup$ClassOption[];
                        valueOf(arg0: string): _javatypes.java.lang.invoke.MethodHandles$Lookup$ClassOption;
                        
                    }
                }
                interface MethodHandleInfo extends _javatypes.java.lang.Interface {
                    
                    getReferenceKind(): number;
                    getDeclaringClass(): _javatypes.java.lang.Class<any>;
                    getName(): string;
                    getMethodType(): _javatypes.java.lang.invoke.MethodType;
                    reflectAs<T>(arg0: _javatypes.java.lang.Class<T>, arg1: _javatypes.java.lang.invoke.MethodHandles$Lookup): T;
                    getModifiers(): number;
                    isVarArgs(): boolean;
                    
                }
                namespace MethodHandleInfo {
                    interface static {
                        
                        readonly REF_getField: number;
                        readonly REF_getStatic: number;
                        readonly REF_putField: number;
                        readonly REF_putStatic: number;
                        readonly REF_invokeVirtual: number;
                        readonly REF_invokeStatic: number;
                        readonly REF_invokeSpecial: number;
                        readonly REF_newInvokeSpecial: number;
                        readonly REF_invokeInterface: number;
                        
                        referenceKindToString(arg0: number): string;
                        toString(arg0: number, arg1: _javatypes.java.lang.Class<any>, arg2: string, arg3: _javatypes.java.lang.invoke.MethodType): string;
                        
                    }
                }
                interface VarHandle$VarHandleDesc extends _javatypes.java.lang.constant.DynamicConstantDesc<_javatypes.java.lang.invoke.VarHandle> {
                    
                    varType(): _javatypes.java.lang.constant.ClassDesc;
                    resolveConstantDesc(arg0: _javatypes.java.lang.invoke.MethodHandles$Lookup): _javatypes.java.lang.invoke.VarHandle;
                    toString(): string;
                    
                }
                namespace VarHandle$VarHandleDesc {
                    interface static {
                        
                        
                        ofField(arg0: _javatypes.java.lang.constant.ClassDesc, arg1: string, arg2: _javatypes.java.lang.constant.ClassDesc): _javatypes.java.lang.invoke.VarHandle$VarHandleDesc;
                        ofStaticField(arg0: _javatypes.java.lang.constant.ClassDesc, arg1: string, arg2: _javatypes.java.lang.constant.ClassDesc): _javatypes.java.lang.invoke.VarHandle$VarHandleDesc;
                        ofArray(arg0: _javatypes.java.lang.constant.ClassDesc): _javatypes.java.lang.invoke.VarHandle$VarHandleDesc;
                        
                    }
                }
                interface VarHandle$AccessMode extends _javatypes.java.lang.Enum<_javatypes.java.lang.invoke.VarHandle$AccessMode> {
                    
                    methodName(): string;
                    
                }
                namespace VarHandle$AccessMode {
                    interface static {
                        
                        readonly GET: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly SET: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly GET_VOLATILE: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly SET_VOLATILE: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly GET_ACQUIRE: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly SET_RELEASE: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly GET_OPAQUE: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly SET_OPAQUE: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly COMPARE_AND_SET: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly COMPARE_AND_EXCHANGE: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly COMPARE_AND_EXCHANGE_ACQUIRE: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly COMPARE_AND_EXCHANGE_RELEASE: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly WEAK_COMPARE_AND_SET_PLAIN: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly WEAK_COMPARE_AND_SET: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly WEAK_COMPARE_AND_SET_ACQUIRE: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly WEAK_COMPARE_AND_SET_RELEASE: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly GET_AND_SET: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly GET_AND_SET_ACQUIRE: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly GET_AND_SET_RELEASE: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly GET_AND_ADD: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly GET_AND_ADD_ACQUIRE: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly GET_AND_ADD_RELEASE: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly GET_AND_BITWISE_OR: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly GET_AND_BITWISE_OR_RELEASE: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly GET_AND_BITWISE_OR_ACQUIRE: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly GET_AND_BITWISE_AND: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly GET_AND_BITWISE_AND_RELEASE: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly GET_AND_BITWISE_AND_ACQUIRE: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly GET_AND_BITWISE_XOR: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly GET_AND_BITWISE_XOR_RELEASE: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        readonly GET_AND_BITWISE_XOR_ACQUIRE: _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        
                        values(): _javatypes.java.lang.invoke.VarHandle$AccessMode[];
                        valueOf(arg0: string): _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        valueFromMethodName(arg0: string): _javatypes.java.lang.invoke.VarHandle$AccessMode;
                        
                    }
                }
                interface TypeDescriptor$OfMethod<F, M> extends _javatypes.java.lang.Interface, _javatypes.java.lang.invoke.TypeDescriptor {
                    
                    parameterCount(): number;
                    parameterType(arg0: number): F;
                    returnType(): F;
                    parameterArray(): F[];
                    parameterList(): _javatypes.java.util.List<F>;
                    changeReturnType(arg0: F): M;
                    changeParameterType(arg0: number, arg1: F): M;
                    dropParameterTypes(arg0: number, arg1: number): M;
                    insertParameterTypes(arg0: number, arg1: F[]): M;
                    
                }
                namespace TypeDescriptor$OfMethod {
                    interface static {
                        
                        
                        
                    }
                }
                interface TypeDescriptor extends _javatypes.java.lang.Interface {
                    
                    descriptorString(): string;
                    
                }
                namespace TypeDescriptor {
                    interface static {
                        
                        
                        
                    }
                }
                interface TypeDescriptor$OfField<F> extends _javatypes.java.lang.Interface, _javatypes.java.lang.invoke.TypeDescriptor {
                    
                    isArray(): boolean;
                    isPrimitive(): boolean;
                    componentType(): F;
                    arrayType(): F;
                    
                }
                namespace TypeDescriptor$OfField {
                    interface static {
                        
                        
                        
                    }
                }
            }
        
            namespace module {
            
                interface ModuleDescriptor extends any, _javatypes.java.lang.Comparable<_javatypes.java.lang.module.ModuleDescriptor> {
                    
                    name(): string;
                    modifiers(): _javatypes.java.util.Set<_javatypes.java.lang.module.ModuleDescriptor$Modifier>;
                    isOpen(): boolean;
                    isAutomatic(): boolean;
                    requires(): _javatypes.java.util.Set<_javatypes.java.lang.module.ModuleDescriptor$Requires>;
                    exports(): _javatypes.java.util.Set<_javatypes.java.lang.module.ModuleDescriptor$Exports>;
                    opens(): _javatypes.java.util.Set<_javatypes.java.lang.module.ModuleDescriptor$Opens>;
                    uses(): _javatypes.java.util.Set<string>;
                    provides(): _javatypes.java.util.Set<_javatypes.java.lang.module.ModuleDescriptor$Provides>;
                    version(): _javatypes.java.util.Optional<_javatypes.java.lang.module.ModuleDescriptor$Version>;
                    rawVersion(): _javatypes.java.util.Optional<string>;
                    toNameAndVersion(): string;
                    mainClass(): _javatypes.java.util.Optional<string>;
                    packages(): _javatypes.java.util.Set<string>;
                    compareTo(arg0: _javatypes.java.lang.module.ModuleDescriptor): number;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    toString(): string;
                    
                }
                namespace ModuleDescriptor {
                    interface static {
                        
                        
                        newModule(arg0: string, arg1: _javatypes.java.util.Set<_javatypes.java.lang.module.ModuleDescriptor$Modifier>): _javatypes.java.lang.module.ModuleDescriptor$Builder;
                        newModule(arg0: string): _javatypes.java.lang.module.ModuleDescriptor$Builder;
                        newOpenModule(arg0: string): _javatypes.java.lang.module.ModuleDescriptor$Builder;
                        newAutomaticModule(arg0: string): _javatypes.java.lang.module.ModuleDescriptor$Builder;
                        read(arg0: _javatypes.java.io.InputStream, arg1: _javatypes.java.util._function.Supplier<_javatypes.java.util.Set<string>>): _javatypes.java.lang.module.ModuleDescriptor;
                        read(arg0: _javatypes.java.io.InputStream): _javatypes.java.lang.module.ModuleDescriptor;
                        read(arg0: _javatypes.java.nio.ByteBuffer, arg1: _javatypes.java.util._function.Supplier<_javatypes.java.util.Set<string>>): _javatypes.java.lang.module.ModuleDescriptor;
                        read(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.lang.module.ModuleDescriptor;
                        
                    }
                }
                interface ModuleDescriptor$Modifier extends _javatypes.java.lang.Enum<_javatypes.java.lang.module.ModuleDescriptor$Modifier> {
                    
                    
                }
                namespace ModuleDescriptor$Modifier {
                    interface static {
                        
                        readonly OPEN: _javatypes.java.lang.module.ModuleDescriptor$Modifier;
                        readonly AUTOMATIC: _javatypes.java.lang.module.ModuleDescriptor$Modifier;
                        readonly SYNTHETIC: _javatypes.java.lang.module.ModuleDescriptor$Modifier;
                        readonly MANDATED: _javatypes.java.lang.module.ModuleDescriptor$Modifier;
                        
                        values(): _javatypes.java.lang.module.ModuleDescriptor$Modifier[];
                        valueOf(arg0: string): _javatypes.java.lang.module.ModuleDescriptor$Modifier;
                        
                    }
                }
                interface ModuleDescriptor$Version extends any, _javatypes.java.lang.Comparable<_javatypes.java.lang.module.ModuleDescriptor$Version> {
                    
                    compareTo(arg0: _javatypes.java.lang.module.ModuleDescriptor$Version): number;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    toString(): string;
                    
                }
                namespace ModuleDescriptor$Version {
                    interface static {
                        
                        
                        parse(arg0: string): _javatypes.java.lang.module.ModuleDescriptor$Version;
                        
                    }
                }
                interface ModuleDescriptor$Exports extends any, _javatypes.java.lang.Comparable<_javatypes.java.lang.module.ModuleDescriptor$Exports> {
                    
                    modifiers(): _javatypes.java.util.Set<_javatypes.java.lang.module.ModuleDescriptor$Exports$Modifier>;
                    isQualified(): boolean;
                    source(): string;
                    targets(): _javatypes.java.util.Set<string>;
                    compareTo(arg0: _javatypes.java.lang.module.ModuleDescriptor$Exports): number;
                    hashCode(): number;
                    equals(arg0: any): boolean;
                    toString(): string;
                    
                }
                namespace ModuleDescriptor$Exports {
                    interface static {
                        
                        
                        
                    }
                }
                interface ModuleDescriptor$Requires extends any, _javatypes.java.lang.Comparable<_javatypes.java.lang.module.ModuleDescriptor$Requires> {
                    
                    modifiers(): _javatypes.java.util.Set<_javatypes.java.lang.module.ModuleDescriptor$Requires$Modifier>;
                    name(): string;
                    compiledVersion(): _javatypes.java.util.Optional<_javatypes.java.lang.module.ModuleDescriptor$Version>;
                    rawCompiledVersion(): _javatypes.java.util.Optional<string>;
                    compareTo(arg0: _javatypes.java.lang.module.ModuleDescriptor$Requires): number;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    toString(): string;
                    
                }
                namespace ModuleDescriptor$Requires {
                    interface static {
                        
                        
                        
                    }
                }
                interface ModuleDescriptor$Opens extends any, _javatypes.java.lang.Comparable<_javatypes.java.lang.module.ModuleDescriptor$Opens> {
                    
                    modifiers(): _javatypes.java.util.Set<_javatypes.java.lang.module.ModuleDescriptor$Opens$Modifier>;
                    isQualified(): boolean;
                    source(): string;
                    targets(): _javatypes.java.util.Set<string>;
                    compareTo(arg0: _javatypes.java.lang.module.ModuleDescriptor$Opens): number;
                    hashCode(): number;
                    equals(arg0: any): boolean;
                    toString(): string;
                    
                }
                namespace ModuleDescriptor$Opens {
                    interface static {
                        
                        
                        
                    }
                }
                interface ModuleDescriptor$Provides extends any, _javatypes.java.lang.Comparable<_javatypes.java.lang.module.ModuleDescriptor$Provides> {
                    
                    service(): string;
                    providers(): _javatypes.java.util.List<string>;
                    compareTo(arg0: _javatypes.java.lang.module.ModuleDescriptor$Provides): number;
                    hashCode(): number;
                    equals(arg0: any): boolean;
                    toString(): string;
                    
                }
                namespace ModuleDescriptor$Provides {
                    interface static {
                        
                        
                        
                    }
                }
                interface ModuleDescriptor$Builder extends any {
                    
                    requires(arg0: _javatypes.java.lang.module.ModuleDescriptor$Requires): _javatypes.java.lang.module.ModuleDescriptor$Builder;
                    requires(arg0: _javatypes.java.util.Set<_javatypes.java.lang.module.ModuleDescriptor$Requires$Modifier>, arg1: string, arg2: _javatypes.java.lang.module.ModuleDescriptor$Version): _javatypes.java.lang.module.ModuleDescriptor$Builder;
                    requires(arg0: _javatypes.java.util.Set<_javatypes.java.lang.module.ModuleDescriptor$Requires$Modifier>, arg1: string): _javatypes.java.lang.module.ModuleDescriptor$Builder;
                    requires(arg0: string): _javatypes.java.lang.module.ModuleDescriptor$Builder;
                    exports(arg0: _javatypes.java.lang.module.ModuleDescriptor$Exports): _javatypes.java.lang.module.ModuleDescriptor$Builder;
                    exports(arg0: _javatypes.java.util.Set<_javatypes.java.lang.module.ModuleDescriptor$Exports$Modifier>, arg1: string, arg2: _javatypes.java.util.Set<string>): _javatypes.java.lang.module.ModuleDescriptor$Builder;
                    exports(arg0: _javatypes.java.util.Set<_javatypes.java.lang.module.ModuleDescriptor$Exports$Modifier>, arg1: string): _javatypes.java.lang.module.ModuleDescriptor$Builder;
                    exports(arg0: string, arg1: _javatypes.java.util.Set<string>): _javatypes.java.lang.module.ModuleDescriptor$Builder;
                    exports(arg0: string): _javatypes.java.lang.module.ModuleDescriptor$Builder;
                    opens(arg0: _javatypes.java.lang.module.ModuleDescriptor$Opens): _javatypes.java.lang.module.ModuleDescriptor$Builder;
                    opens(arg0: _javatypes.java.util.Set<_javatypes.java.lang.module.ModuleDescriptor$Opens$Modifier>, arg1: string, arg2: _javatypes.java.util.Set<string>): _javatypes.java.lang.module.ModuleDescriptor$Builder;
                    opens(arg0: _javatypes.java.util.Set<_javatypes.java.lang.module.ModuleDescriptor$Opens$Modifier>, arg1: string): _javatypes.java.lang.module.ModuleDescriptor$Builder;
                    opens(arg0: string, arg1: _javatypes.java.util.Set<string>): _javatypes.java.lang.module.ModuleDescriptor$Builder;
                    opens(arg0: string): _javatypes.java.lang.module.ModuleDescriptor$Builder;
                    uses(arg0: string): _javatypes.java.lang.module.ModuleDescriptor$Builder;
                    provides(arg0: _javatypes.java.lang.module.ModuleDescriptor$Provides): _javatypes.java.lang.module.ModuleDescriptor$Builder;
                    provides(arg0: string, arg1: _javatypes.java.util.List<string>): _javatypes.java.lang.module.ModuleDescriptor$Builder;
                    packages(arg0: _javatypes.java.util.Set<string>): _javatypes.java.lang.module.ModuleDescriptor$Builder;
                    version(arg0: _javatypes.java.lang.module.ModuleDescriptor$Version): _javatypes.java.lang.module.ModuleDescriptor$Builder;
                    version(arg0: string): _javatypes.java.lang.module.ModuleDescriptor$Builder;
                    mainClass(arg0: string): _javatypes.java.lang.module.ModuleDescriptor$Builder;
                    build(): _javatypes.java.lang.module.ModuleDescriptor;
                    
                }
                namespace ModuleDescriptor$Builder {
                    interface static {
                        
                        
                        
                    }
                }
                interface ModuleDescriptor$Requires$Modifier extends _javatypes.java.lang.Enum<_javatypes.java.lang.module.ModuleDescriptor$Requires$Modifier> {
                    
                    
                }
                namespace ModuleDescriptor$Requires$Modifier {
                    interface static {
                        
                        readonly TRANSITIVE: _javatypes.java.lang.module.ModuleDescriptor$Requires$Modifier;
                        readonly STATIC: _javatypes.java.lang.module.ModuleDescriptor$Requires$Modifier;
                        readonly SYNTHETIC: _javatypes.java.lang.module.ModuleDescriptor$Requires$Modifier;
                        readonly MANDATED: _javatypes.java.lang.module.ModuleDescriptor$Requires$Modifier;
                        
                        values(): _javatypes.java.lang.module.ModuleDescriptor$Requires$Modifier[];
                        valueOf(arg0: string): _javatypes.java.lang.module.ModuleDescriptor$Requires$Modifier;
                        
                    }
                }
                interface ModuleDescriptor$Opens$Modifier extends _javatypes.java.lang.Enum<_javatypes.java.lang.module.ModuleDescriptor$Opens$Modifier> {
                    
                    
                }
                namespace ModuleDescriptor$Opens$Modifier {
                    interface static {
                        
                        readonly SYNTHETIC: _javatypes.java.lang.module.ModuleDescriptor$Opens$Modifier;
                        readonly MANDATED: _javatypes.java.lang.module.ModuleDescriptor$Opens$Modifier;
                        
                        values(): _javatypes.java.lang.module.ModuleDescriptor$Opens$Modifier[];
                        valueOf(arg0: string): _javatypes.java.lang.module.ModuleDescriptor$Opens$Modifier;
                        
                    }
                }
                interface ModuleDescriptor$Exports$Modifier extends _javatypes.java.lang.Enum<_javatypes.java.lang.module.ModuleDescriptor$Exports$Modifier> {
                    
                    
                }
                namespace ModuleDescriptor$Exports$Modifier {
                    interface static {
                        
                        readonly SYNTHETIC: _javatypes.java.lang.module.ModuleDescriptor$Exports$Modifier;
                        readonly MANDATED: _javatypes.java.lang.module.ModuleDescriptor$Exports$Modifier;
                        
                        values(): _javatypes.java.lang.module.ModuleDescriptor$Exports$Modifier[];
                        valueOf(arg0: string): _javatypes.java.lang.module.ModuleDescriptor$Exports$Modifier;
                        
                    }
                }
                interface Configuration extends any {
                    
                    resolve(arg0: _javatypes.java.lang.module.ModuleFinder, arg1: _javatypes.java.lang.module.ModuleFinder, arg2: _javatypes.java.util.Collection<string>): _javatypes.java.lang.module.Configuration;
                    resolveAndBind(arg0: _javatypes.java.lang.module.ModuleFinder, arg1: _javatypes.java.lang.module.ModuleFinder, arg2: _javatypes.java.util.Collection<string>): _javatypes.java.lang.module.Configuration;
                    parents(): _javatypes.java.util.List<_javatypes.java.lang.module.Configuration>;
                    modules(): _javatypes.java.util.Set<_javatypes.java.lang.module.ResolvedModule>;
                    findModule(arg0: string): _javatypes.java.util.Optional<_javatypes.java.lang.module.ResolvedModule>;
                    toString(): string;
                    
                }
                namespace Configuration {
                    interface static {
                        
                        
                        resolve(arg0: _javatypes.java.lang.module.ModuleFinder, arg1: _javatypes.java.util.List<_javatypes.java.lang.module.Configuration>, arg2: _javatypes.java.lang.module.ModuleFinder, arg3: _javatypes.java.util.Collection<string>): _javatypes.java.lang.module.Configuration;
                        resolveAndBind(arg0: _javatypes.java.lang.module.ModuleFinder, arg1: _javatypes.java.util.List<_javatypes.java.lang.module.Configuration>, arg2: _javatypes.java.lang.module.ModuleFinder, arg3: _javatypes.java.util.Collection<string>): _javatypes.java.lang.module.Configuration;
                        empty(): _javatypes.java.lang.module.Configuration;
                        
                    }
                }
                interface ModuleFinder extends _javatypes.java.lang.Interface {
                    
                    find(arg0: string): _javatypes.java.util.Optional<_javatypes.java.lang.module.ModuleReference>;
                    findAll(): _javatypes.java.util.Set<_javatypes.java.lang.module.ModuleReference>;
                    
                }
                namespace ModuleFinder {
                    interface static {
                        
                        
                        ofSystem(): _javatypes.java.lang.module.ModuleFinder;
                        of(arg0: _javatypes.java.nio.file.Path[]): _javatypes.java.lang.module.ModuleFinder;
                        compose(arg0: _javatypes.java.lang.module.ModuleFinder[]): _javatypes.java.lang.module.ModuleFinder;
                        
                    }
                }
                interface ResolvedModule extends any {
                    
                    configuration(): _javatypes.java.lang.module.Configuration;
                    reference(): _javatypes.java.lang.module.ModuleReference;
                    name(): string;
                    reads(): _javatypes.java.util.Set<_javatypes.java.lang.module.ResolvedModule>;
                    hashCode(): number;
                    equals(arg0: any): boolean;
                    toString(): string;
                    
                }
                namespace ResolvedModule {
                    interface static {
                        
                        
                        
                    }
                }
                interface ModuleReference extends any {
                    
                    descriptor(): _javatypes.java.lang.module.ModuleDescriptor;
                    location(): _javatypes.java.util.Optional<_javatypes.java.net.URI>;
                    open(): _javatypes.java.lang.module.ModuleReader;
                    
                }
                namespace ModuleReference {
                    interface static {
                        
                        
                        
                    }
                }
                interface ModuleReader extends _javatypes.java.lang.Interface, _javatypes.java.io.Closeable {
                    
                    find(arg0: string): _javatypes.java.util.Optional<_javatypes.java.net.URI>;
                    open(arg0: string): _javatypes.java.util.Optional<_javatypes.java.io.InputStream>;
                    read(arg0: string): _javatypes.java.util.Optional<_javatypes.java.nio.ByteBuffer>;
                    release(arg0: _javatypes.java.nio.ByteBuffer): void;
                    list(): _javatypes.java.util.stream.Stream<string>;
                    close(): void;
                    
                }
                namespace ModuleReader {
                    interface static {
                        
                        
                        
                    }
                }
            }
        }
    
        namespace awt {
        
            interface Image extends any {
                
                getWidth(arg0: _javatypes.java.awt.image.ImageObserver): number;
                getHeight(arg0: _javatypes.java.awt.image.ImageObserver): number;
                getSource(): _javatypes.java.awt.image.ImageProducer;
                getGraphics(): _javatypes.java.awt.Graphics;
                getProperty(arg0: string, arg1: _javatypes.java.awt.image.ImageObserver): any;
                getScaledInstance(arg0: number, arg1: number, arg2: number): _javatypes.java.awt.Image;
                flush(): void;
                getCapabilities(arg0: _javatypes.java.awt.GraphicsConfiguration): _javatypes.java.awt.ImageCapabilities;
                setAccelerationPriority(arg0: number): void;
                getAccelerationPriority(): number;
                
            }
            namespace Image {
                interface static {
                    
                    readonly UndefinedProperty: any;
                    readonly SCALE_DEFAULT: number;
                    readonly SCALE_FAST: number;
                    readonly SCALE_SMOOTH: number;
                    readonly SCALE_REPLICATE: number;
                    readonly SCALE_AREA_AVERAGING: number;
                    
                    
                }
            }
            interface Rectangle extends _javatypes.java.awt.geom.Rectangle2D, _javatypes.java.awt.Shape, _javatypes.java.io.Serializable {
                x: number;
                y: number;
                width: number;
                height: number;
                
                getX(): number;
                getY(): number;
                getWidth(): number;
                getHeight(): number;
                getBounds(): _javatypes.java.awt.Rectangle;
                getBounds2D(): _javatypes.java.awt.geom.Rectangle2D;
                setBounds(arg0: _javatypes.java.awt.Rectangle): void;
                setBounds(arg0: number, arg1: number, arg2: number, arg3: number): void;
                setRect(arg0: number, arg1: number, arg2: number, arg3: number): void;
                reshape(arg0: number, arg1: number, arg2: number, arg3: number): void;
                getLocation(): _javatypes.java.awt.Point;
                setLocation(arg0: _javatypes.java.awt.Point): void;
                setLocation(arg0: number, arg1: number): void;
                move(arg0: number, arg1: number): void;
                translate(arg0: number, arg1: number): void;
                getSize(): _javatypes.java.awt.Dimension;
                setSize(arg0: _javatypes.java.awt.Dimension): void;
                setSize(arg0: number, arg1: number): void;
                resize(arg0: number, arg1: number): void;
                contains(arg0: _javatypes.java.awt.Point): boolean;
                contains(arg0: number, arg1: number): boolean;
                contains(arg0: _javatypes.java.awt.Rectangle): boolean;
                contains(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                inside(arg0: number, arg1: number): boolean;
                intersects(arg0: _javatypes.java.awt.Rectangle): boolean;
                intersection(arg0: _javatypes.java.awt.Rectangle): _javatypes.java.awt.Rectangle;
                union(arg0: _javatypes.java.awt.Rectangle): _javatypes.java.awt.Rectangle;
                add(arg0: number, arg1: number): void;
                add(arg0: _javatypes.java.awt.Point): void;
                add(arg0: _javatypes.java.awt.Rectangle): void;
                grow(arg0: number, arg1: number): void;
                isEmpty(): boolean;
                outcode(arg0: number, arg1: number): number;
                createIntersection(arg0: _javatypes.java.awt.geom.Rectangle2D): _javatypes.java.awt.geom.Rectangle2D;
                createUnion(arg0: _javatypes.java.awt.geom.Rectangle2D): _javatypes.java.awt.geom.Rectangle2D;
                equals(arg0: any): boolean;
                toString(): string;
                
            }
            namespace Rectangle {
                interface static {
                    new (): _javatypes.java.awt.Rectangle;
                    new (arg0: _javatypes.java.awt.Rectangle): _javatypes.java.awt.Rectangle;
                    new (arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.java.awt.Rectangle;
                    new (arg0: number, arg1: number): _javatypes.java.awt.Rectangle;
                    new (arg0: _javatypes.java.awt.Point, arg1: _javatypes.java.awt.Dimension): _javatypes.java.awt.Rectangle;
                    new (arg0: _javatypes.java.awt.Point): _javatypes.java.awt.Rectangle;
                    new (arg0: _javatypes.java.awt.Dimension): _javatypes.java.awt.Rectangle;
                    
                    
                    
                }
            }
            interface Transparency extends _javatypes.java.lang.Interface {
                
                getTransparency(): number;
                
            }
            namespace Transparency {
                interface static {
                    
                    readonly OPAQUE: number;
                    readonly BITMASK: number;
                    readonly TRANSLUCENT: number;
                    
                    
                }
            }
            interface ImageCapabilities extends any, _javatypes.java.lang.Cloneable {
                
                isAccelerated(): boolean;
                isTrueVolatile(): boolean;
                clone(): any;
                
            }
            namespace ImageCapabilities {
                interface static {
                    new (arg0: boolean): _javatypes.java.awt.ImageCapabilities;
                    
                    
                    
                }
            }
            interface Shape extends _javatypes.java.lang.Interface {
                
                getBounds(): _javatypes.java.awt.Rectangle;
                getBounds2D(): _javatypes.java.awt.geom.Rectangle2D;
                contains(arg0: number, arg1: number): boolean;
                contains(arg0: _javatypes.java.awt.geom.Point2D): boolean;
                intersects(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                intersects(arg0: _javatypes.java.awt.geom.Rectangle2D): boolean;
                contains(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                contains(arg0: _javatypes.java.awt.geom.Rectangle2D): boolean;
                getPathIterator(arg0: _javatypes.java.awt.geom.AffineTransform): _javatypes.java.awt.geom.PathIterator;
                getPathIterator(arg0: _javatypes.java.awt.geom.AffineTransform, arg1: number): _javatypes.java.awt.geom.PathIterator;
                
            }
            namespace Shape {
                interface static {
                    
                    
                    
                }
            }
            interface Graphics extends any {
                
                create(): _javatypes.java.awt.Graphics;
                create(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.java.awt.Graphics;
                translate(arg0: number, arg1: number): void;
                getColor(): _javatypes.java.awt.Color;
                setColor(arg0: _javatypes.java.awt.Color): void;
                setPaintMode(): void;
                setXORMode(arg0: _javatypes.java.awt.Color): void;
                getFont(): _javatypes.java.awt.Font;
                setFont(arg0: _javatypes.java.awt.Font): void;
                getFontMetrics(): _javatypes.java.awt.FontMetrics;
                getFontMetrics(arg0: _javatypes.java.awt.Font): _javatypes.java.awt.FontMetrics;
                getClipBounds(): _javatypes.java.awt.Rectangle;
                clipRect(arg0: number, arg1: number, arg2: number, arg3: number): void;
                setClip(arg0: number, arg1: number, arg2: number, arg3: number): void;
                getClip(): _javatypes.java.awt.Shape;
                setClip(arg0: _javatypes.java.awt.Shape): void;
                copyArea(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
                drawLine(arg0: number, arg1: number, arg2: number, arg3: number): void;
                fillRect(arg0: number, arg1: number, arg2: number, arg3: number): void;
                drawRect(arg0: number, arg1: number, arg2: number, arg3: number): void;
                clearRect(arg0: number, arg1: number, arg2: number, arg3: number): void;
                drawRoundRect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
                fillRoundRect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
                draw3DRect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): void;
                fill3DRect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): void;
                drawOval(arg0: number, arg1: number, arg2: number, arg3: number): void;
                fillOval(arg0: number, arg1: number, arg2: number, arg3: number): void;
                drawArc(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
                fillArc(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
                drawPolyline(arg0: number[], arg1: number[], arg2: number): void;
                drawPolygon(arg0: number[], arg1: number[], arg2: number): void;
                drawPolygon(arg0: _javatypes.java.awt.Polygon): void;
                fillPolygon(arg0: number[], arg1: number[], arg2: number): void;
                fillPolygon(arg0: _javatypes.java.awt.Polygon): void;
                drawString(arg0: string, arg1: number, arg2: number): void;
                drawString(arg0: _javatypes.java.text.AttributedCharacterIterator, arg1: number, arg2: number): void;
                drawChars(arg0: number[], arg1: number, arg2: number, arg3: number, arg4: number): void;
                drawBytes(arg0: number[], arg1: number, arg2: number, arg3: number, arg4: number): void;
                drawImage(arg0: _javatypes.java.awt.Image, arg1: number, arg2: number, arg3: _javatypes.java.awt.image.ImageObserver): boolean;
                drawImage(arg0: _javatypes.java.awt.Image, arg1: number, arg2: number, arg3: number, arg4: number, arg5: _javatypes.java.awt.image.ImageObserver): boolean;
                drawImage(arg0: _javatypes.java.awt.Image, arg1: number, arg2: number, arg3: _javatypes.java.awt.Color, arg4: _javatypes.java.awt.image.ImageObserver): boolean;
                drawImage(arg0: _javatypes.java.awt.Image, arg1: number, arg2: number, arg3: number, arg4: number, arg5: _javatypes.java.awt.Color, arg6: _javatypes.java.awt.image.ImageObserver): boolean;
                drawImage(arg0: _javatypes.java.awt.Image, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.java.awt.image.ImageObserver): boolean;
                drawImage(arg0: _javatypes.java.awt.Image, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.java.awt.Color, arg10: _javatypes.java.awt.image.ImageObserver): boolean;
                dispose(): void;
                finalize(): void;
                toString(): string;
                getClipRect(): _javatypes.java.awt.Rectangle;
                hitClip(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                getClipBounds(arg0: _javatypes.java.awt.Rectangle): _javatypes.java.awt.Rectangle;
                
            }
            namespace Graphics {
                interface static {
                    
                    
                    
                }
            }
            interface Point extends _javatypes.java.awt.geom.Point2D, _javatypes.java.io.Serializable {
                x: number;
                y: number;
                
                getX(): number;
                getY(): number;
                getLocation(): _javatypes.java.awt.Point;
                setLocation(arg0: _javatypes.java.awt.Point): void;
                setLocation(arg0: number, arg1: number): void;
                setLocation(arg0: number, arg1: number): void;
                move(arg0: number, arg1: number): void;
                translate(arg0: number, arg1: number): void;
                equals(arg0: any): boolean;
                toString(): string;
                
            }
            namespace Point {
                interface static {
                    new (): _javatypes.java.awt.Point;
                    new (arg0: _javatypes.java.awt.Point): _javatypes.java.awt.Point;
                    new (arg0: number, arg1: number): _javatypes.java.awt.Point;
                    
                    
                    
                }
            }
            interface GraphicsConfiguration extends any {
                
                getDevice(): _javatypes.java.awt.GraphicsDevice;
                createCompatibleImage(arg0: number, arg1: number): _javatypes.java.awt.image.BufferedImage;
                createCompatibleImage(arg0: number, arg1: number, arg2: number): _javatypes.java.awt.image.BufferedImage;
                createCompatibleVolatileImage(arg0: number, arg1: number): _javatypes.java.awt.image.VolatileImage;
                createCompatibleVolatileImage(arg0: number, arg1: number, arg2: number): _javatypes.java.awt.image.VolatileImage;
                createCompatibleVolatileImage(arg0: number, arg1: number, arg2: _javatypes.java.awt.ImageCapabilities): _javatypes.java.awt.image.VolatileImage;
                createCompatibleVolatileImage(arg0: number, arg1: number, arg2: _javatypes.java.awt.ImageCapabilities, arg3: number): _javatypes.java.awt.image.VolatileImage;
                getColorModel(): _javatypes.java.awt.image.ColorModel;
                getColorModel(arg0: number): _javatypes.java.awt.image.ColorModel;
                getDefaultTransform(): _javatypes.java.awt.geom.AffineTransform;
                getNormalizingTransform(): _javatypes.java.awt.geom.AffineTransform;
                getBounds(): _javatypes.java.awt.Rectangle;
                getBufferCapabilities(): _javatypes.java.awt.BufferCapabilities;
                getImageCapabilities(): _javatypes.java.awt.ImageCapabilities;
                isTranslucencyCapable(): boolean;
                
            }
            namespace GraphicsConfiguration {
                interface static {
                    
                    
                    
                }
            }
            interface Dimension extends _javatypes.java.awt.geom.Dimension2D, _javatypes.java.io.Serializable {
                width: number;
                height: number;
                
                getWidth(): number;
                getHeight(): number;
                setSize(arg0: number, arg1: number): void;
                getSize(): _javatypes.java.awt.Dimension;
                setSize(arg0: _javatypes.java.awt.Dimension): void;
                setSize(arg0: number, arg1: number): void;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace Dimension {
                interface static {
                    new (): _javatypes.java.awt.Dimension;
                    new (arg0: _javatypes.java.awt.Dimension): _javatypes.java.awt.Dimension;
                    new (arg0: number, arg1: number): _javatypes.java.awt.Dimension;
                    
                    
                    
                }
            }
            interface Graphics2D extends _javatypes.java.awt.Graphics {
                
                draw3DRect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): void;
                fill3DRect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): void;
                draw(arg0: _javatypes.java.awt.Shape): void;
                drawImage(arg0: _javatypes.java.awt.Image, arg1: _javatypes.java.awt.geom.AffineTransform, arg2: _javatypes.java.awt.image.ImageObserver): boolean;
                drawImage(arg0: _javatypes.java.awt.image.BufferedImage, arg1: _javatypes.java.awt.image.BufferedImageOp, arg2: number, arg3: number): void;
                drawRenderedImage(arg0: _javatypes.java.awt.image.RenderedImage, arg1: _javatypes.java.awt.geom.AffineTransform): void;
                drawRenderableImage(arg0: _javatypes.java.awt.image.renderable.RenderableImage, arg1: _javatypes.java.awt.geom.AffineTransform): void;
                drawString(arg0: string, arg1: number, arg2: number): void;
                drawString(arg0: string, arg1: number, arg2: number): void;
                drawString(arg0: _javatypes.java.text.AttributedCharacterIterator, arg1: number, arg2: number): void;
                drawString(arg0: _javatypes.java.text.AttributedCharacterIterator, arg1: number, arg2: number): void;
                drawGlyphVector(arg0: _javatypes.java.awt.font.GlyphVector, arg1: number, arg2: number): void;
                fill(arg0: _javatypes.java.awt.Shape): void;
                hit(arg0: _javatypes.java.awt.Rectangle, arg1: _javatypes.java.awt.Shape, arg2: boolean): boolean;
                getDeviceConfiguration(): _javatypes.java.awt.GraphicsConfiguration;
                setComposite(arg0: _javatypes.java.awt.Composite): void;
                setPaint(arg0: _javatypes.java.awt.Paint): void;
                setStroke(arg0: _javatypes.java.awt.Stroke): void;
                setRenderingHint(arg0: _javatypes.java.awt.RenderingHints$Key, arg1: any): void;
                getRenderingHint(arg0: _javatypes.java.awt.RenderingHints$Key): any;
                setRenderingHints(arg0: _javatypes.java.util.Map<any, any>): void;
                addRenderingHints(arg0: _javatypes.java.util.Map<any, any>): void;
                getRenderingHints(): _javatypes.java.awt.RenderingHints;
                translate(arg0: number, arg1: number): void;
                translate(arg0: number, arg1: number): void;
                rotate(arg0: number): void;
                rotate(arg0: number, arg1: number, arg2: number): void;
                scale(arg0: number, arg1: number): void;
                shear(arg0: number, arg1: number): void;
                transform(arg0: _javatypes.java.awt.geom.AffineTransform): void;
                setTransform(arg0: _javatypes.java.awt.geom.AffineTransform): void;
                getTransform(): _javatypes.java.awt.geom.AffineTransform;
                getPaint(): _javatypes.java.awt.Paint;
                getComposite(): _javatypes.java.awt.Composite;
                setBackground(arg0: _javatypes.java.awt.Color): void;
                getBackground(): _javatypes.java.awt.Color;
                getStroke(): _javatypes.java.awt.Stroke;
                clip(arg0: _javatypes.java.awt.Shape): void;
                getFontRenderContext(): _javatypes.java.awt.font.FontRenderContext;
                
            }
            namespace Graphics2D {
                interface static {
                    
                    
                    
                }
            }
            interface Polygon extends any, _javatypes.java.awt.Shape, _javatypes.java.io.Serializable {
                npoints: number;
                xpoints: number[];
                ypoints: number[];
                
                reset(): void;
                invalidate(): void;
                translate(arg0: number, arg1: number): void;
                addPoint(arg0: number, arg1: number): void;
                getBounds(): _javatypes.java.awt.Rectangle;
                getBoundingBox(): _javatypes.java.awt.Rectangle;
                contains(arg0: _javatypes.java.awt.Point): boolean;
                contains(arg0: number, arg1: number): boolean;
                inside(arg0: number, arg1: number): boolean;
                getBounds2D(): _javatypes.java.awt.geom.Rectangle2D;
                contains(arg0: number, arg1: number): boolean;
                contains(arg0: _javatypes.java.awt.geom.Point2D): boolean;
                intersects(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                intersects(arg0: _javatypes.java.awt.geom.Rectangle2D): boolean;
                contains(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                contains(arg0: _javatypes.java.awt.geom.Rectangle2D): boolean;
                getPathIterator(arg0: _javatypes.java.awt.geom.AffineTransform): _javatypes.java.awt.geom.PathIterator;
                getPathIterator(arg0: _javatypes.java.awt.geom.AffineTransform, arg1: number): _javatypes.java.awt.geom.PathIterator;
                
            }
            namespace Polygon {
                interface static {
                    new (): _javatypes.java.awt.Polygon;
                    new (arg0: number[], arg1: number[], arg2: number): _javatypes.java.awt.Polygon;
                    
                    
                    
                }
            }
            interface GraphicsDevice extends any {
                
                getType(): number;
                getIDstring(): string;
                getConfigurations(): _javatypes.java.awt.GraphicsConfiguration[];
                getDefaultConfiguration(): _javatypes.java.awt.GraphicsConfiguration;
                getBestConfiguration(arg0: _javatypes.java.awt.GraphicsConfigTemplate): _javatypes.java.awt.GraphicsConfiguration;
                isFullScreenSupported(): boolean;
                setFullScreenWindow(arg0: _javatypes.java.awt.Window): void;
                getFullScreenWindow(): _javatypes.java.awt.Window;
                isDisplayChangeSupported(): boolean;
                setDisplayMode(arg0: _javatypes.java.awt.DisplayMode): void;
                getDisplayMode(): _javatypes.java.awt.DisplayMode;
                getDisplayModes(): _javatypes.java.awt.DisplayMode[];
                getAvailableAcceleratedMemory(): number;
                isWindowTranslucencySupported(arg0: _javatypes.java.awt.GraphicsDevice$WindowTranslucency): boolean;
                
            }
            namespace GraphicsDevice {
                interface static {
                    
                    readonly TYPE_RASTER_SCREEN: number;
                    readonly TYPE_PRINTER: number;
                    readonly TYPE_IMAGE_BUFFER: number;
                    
                    
                }
            }
            interface Color extends any, _javatypes.java.awt.Paint, _javatypes.java.io.Serializable {
                
                getRed(): number;
                getGreen(): number;
                getBlue(): number;
                getAlpha(): number;
                getRGB(): number;
                brighter(): _javatypes.java.awt.Color;
                darker(): _javatypes.java.awt.Color;
                hashCode(): number;
                equals(arg0: any): boolean;
                toString(): string;
                getRGBComponents(arg0: number[]): number[];
                getRGBColorComponents(arg0: number[]): number[];
                getComponents(arg0: number[]): number[];
                getColorComponents(arg0: number[]): number[];
                getComponents(arg0: _javatypes.java.awt.color.ColorSpace, arg1: number[]): number[];
                getColorComponents(arg0: _javatypes.java.awt.color.ColorSpace, arg1: number[]): number[];
                getColorSpace(): _javatypes.java.awt.color.ColorSpace;
                createContext(arg0: _javatypes.java.awt.image.ColorModel, arg1: _javatypes.java.awt.Rectangle, arg2: _javatypes.java.awt.geom.Rectangle2D, arg3: _javatypes.java.awt.geom.AffineTransform, arg4: _javatypes.java.awt.RenderingHints): _javatypes.java.awt.PaintContext;
                getTransparency(): number;
                
            }
            namespace Color {
                interface static {
                    new (arg0: number, arg1: number, arg2: number): _javatypes.java.awt.Color;
                    new (arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.java.awt.Color;
                    new (arg0: number): _javatypes.java.awt.Color;
                    new (arg0: number, arg1: boolean): _javatypes.java.awt.Color;
                    new (arg0: number, arg1: number, arg2: number): _javatypes.java.awt.Color;
                    new (arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.java.awt.Color;
                    new (arg0: _javatypes.java.awt.color.ColorSpace, arg1: number[], arg2: number): _javatypes.java.awt.Color;
                    
                    readonly white: _javatypes.java.awt.Color;
                    readonly WHITE: _javatypes.java.awt.Color;
                    readonly lightGray: _javatypes.java.awt.Color;
                    readonly LIGHT_GRAY: _javatypes.java.awt.Color;
                    readonly gray: _javatypes.java.awt.Color;
                    readonly GRAY: _javatypes.java.awt.Color;
                    readonly darkGray: _javatypes.java.awt.Color;
                    readonly DARK_GRAY: _javatypes.java.awt.Color;
                    readonly black: _javatypes.java.awt.Color;
                    readonly BLACK: _javatypes.java.awt.Color;
                    readonly red: _javatypes.java.awt.Color;
                    readonly RED: _javatypes.java.awt.Color;
                    readonly pink: _javatypes.java.awt.Color;
                    readonly PINK: _javatypes.java.awt.Color;
                    readonly orange: _javatypes.java.awt.Color;
                    readonly ORANGE: _javatypes.java.awt.Color;
                    readonly yellow: _javatypes.java.awt.Color;
                    readonly YELLOW: _javatypes.java.awt.Color;
                    readonly green: _javatypes.java.awt.Color;
                    readonly GREEN: _javatypes.java.awt.Color;
                    readonly magenta: _javatypes.java.awt.Color;
                    readonly MAGENTA: _javatypes.java.awt.Color;
                    readonly cyan: _javatypes.java.awt.Color;
                    readonly CYAN: _javatypes.java.awt.Color;
                    readonly blue: _javatypes.java.awt.Color;
                    readonly BLUE: _javatypes.java.awt.Color;
                    
                    decode(arg0: string): _javatypes.java.awt.Color;
                    getColor(arg0: string): _javatypes.java.awt.Color;
                    getColor(arg0: string, arg1: _javatypes.java.awt.Color): _javatypes.java.awt.Color;
                    getColor(arg0: string, arg1: number): _javatypes.java.awt.Color;
                    HSBtoRGB(arg0: number, arg1: number, arg2: number): number;
                    RGBtoHSB(arg0: number, arg1: number, arg2: number, arg3: number[]): number[];
                    getHSBColor(arg0: number, arg1: number, arg2: number): _javatypes.java.awt.Color;
                    
                }
            }
            interface Font extends any, _javatypes.java.io.Serializable {
                
                getTransform(): _javatypes.java.awt.geom.AffineTransform;
                getFamily(): string;
                getFamily(arg0: _javatypes.java.util.Locale): string;
                getPSName(): string;
                getName(): string;
                getFontName(): string;
                getFontName(arg0: _javatypes.java.util.Locale): string;
                getStyle(): number;
                getSize(): number;
                getSize2D(): number;
                isPlain(): boolean;
                isBold(): boolean;
                isItalic(): boolean;
                isTransformed(): boolean;
                hasLayoutAttributes(): boolean;
                hashCode(): number;
                equals(arg0: any): boolean;
                toString(): string;
                getNumGlyphs(): number;
                getMissingGlyphCode(): number;
                getBaselineFor(arg0: number): number;
                getAttributes(): _javatypes.java.util.Map<_javatypes.java.awt.font.TextAttribute, any>;
                getAvailableAttributes(): _javatypes.java.text.AttributedCharacterIterator$Attribute[];
                deriveFont(arg0: number, arg1: number): _javatypes.java.awt.Font;
                deriveFont(arg0: number, arg1: _javatypes.java.awt.geom.AffineTransform): _javatypes.java.awt.Font;
                deriveFont(arg0: number): _javatypes.java.awt.Font;
                deriveFont(arg0: _javatypes.java.awt.geom.AffineTransform): _javatypes.java.awt.Font;
                deriveFont(arg0: number): _javatypes.java.awt.Font;
                deriveFont(arg0: _javatypes.java.util.Map<any, any>): _javatypes.java.awt.Font;
                canDisplay(arg0: number): boolean;
                canDisplay(arg0: number): boolean;
                canDisplayUpTo(arg0: string): number;
                canDisplayUpTo(arg0: number[], arg1: number, arg2: number): number;
                canDisplayUpTo(arg0: _javatypes.java.text.CharacterIterator, arg1: number, arg2: number): number;
                getItalicAngle(): number;
                hasUniformLineMetrics(): boolean;
                getLineMetrics(arg0: string, arg1: _javatypes.java.awt.font.FontRenderContext): _javatypes.java.awt.font.LineMetrics;
                getLineMetrics(arg0: string, arg1: number, arg2: number, arg3: _javatypes.java.awt.font.FontRenderContext): _javatypes.java.awt.font.LineMetrics;
                getLineMetrics(arg0: number[], arg1: number, arg2: number, arg3: _javatypes.java.awt.font.FontRenderContext): _javatypes.java.awt.font.LineMetrics;
                getLineMetrics(arg0: _javatypes.java.text.CharacterIterator, arg1: number, arg2: number, arg3: _javatypes.java.awt.font.FontRenderContext): _javatypes.java.awt.font.LineMetrics;
                getStringBounds(arg0: string, arg1: _javatypes.java.awt.font.FontRenderContext): _javatypes.java.awt.geom.Rectangle2D;
                getStringBounds(arg0: string, arg1: number, arg2: number, arg3: _javatypes.java.awt.font.FontRenderContext): _javatypes.java.awt.geom.Rectangle2D;
                getStringBounds(arg0: number[], arg1: number, arg2: number, arg3: _javatypes.java.awt.font.FontRenderContext): _javatypes.java.awt.geom.Rectangle2D;
                getStringBounds(arg0: _javatypes.java.text.CharacterIterator, arg1: number, arg2: number, arg3: _javatypes.java.awt.font.FontRenderContext): _javatypes.java.awt.geom.Rectangle2D;
                getMaxCharBounds(arg0: _javatypes.java.awt.font.FontRenderContext): _javatypes.java.awt.geom.Rectangle2D;
                createGlyphVector(arg0: _javatypes.java.awt.font.FontRenderContext, arg1: string): _javatypes.java.awt.font.GlyphVector;
                createGlyphVector(arg0: _javatypes.java.awt.font.FontRenderContext, arg1: number[]): _javatypes.java.awt.font.GlyphVector;
                createGlyphVector(arg0: _javatypes.java.awt.font.FontRenderContext, arg1: _javatypes.java.text.CharacterIterator): _javatypes.java.awt.font.GlyphVector;
                createGlyphVector(arg0: _javatypes.java.awt.font.FontRenderContext, arg1: number[]): _javatypes.java.awt.font.GlyphVector;
                layoutGlyphVector(arg0: _javatypes.java.awt.font.FontRenderContext, arg1: number[], arg2: number, arg3: number, arg4: number): _javatypes.java.awt.font.GlyphVector;
                
            }
            namespace Font {
                interface static {
                    new (arg0: string, arg1: number, arg2: number): _javatypes.java.awt.Font;
                    new (arg0: _javatypes.java.util.Map<any, any>): _javatypes.java.awt.Font;
                    
                    readonly DIALOG: string;
                    readonly DIALOG_INPUT: string;
                    readonly SANS_SERIF: string;
                    readonly SERIF: string;
                    readonly MONOSPACED: string;
                    readonly PLAIN: number;
                    readonly BOLD: number;
                    readonly ITALIC: number;
                    readonly ROMAN_BASELINE: number;
                    readonly CENTER_BASELINE: number;
                    readonly HANGING_BASELINE: number;
                    readonly TRUETYPE_FONT: number;
                    readonly TYPE1_FONT: number;
                    readonly LAYOUT_LEFT_TO_RIGHT: number;
                    readonly LAYOUT_RIGHT_TO_LEFT: number;
                    readonly LAYOUT_NO_START_CONTEXT: number;
                    readonly LAYOUT_NO_LIMIT_CONTEXT: number;
                    
                    textRequiresLayout(arg0: number[], arg1: number, arg2: number): boolean;
                    getFont(arg0: _javatypes.java.util.Map<any, any>): _javatypes.java.awt.Font;
                    createFonts(arg0: _javatypes.java.io.InputStream): _javatypes.java.awt.Font[];
                    createFonts(arg0: _javatypes.java.io.File): _javatypes.java.awt.Font[];
                    createFont(arg0: number, arg1: _javatypes.java.io.InputStream): _javatypes.java.awt.Font;
                    createFont(arg0: number, arg1: _javatypes.java.io.File): _javatypes.java.awt.Font;
                    getFont(arg0: string): _javatypes.java.awt.Font;
                    decode(arg0: string): _javatypes.java.awt.Font;
                    getFont(arg0: string, arg1: _javatypes.java.awt.Font): _javatypes.java.awt.Font;
                    
                }
            }
            interface Stroke extends _javatypes.java.lang.Interface {
                
                createStrokedShape(arg0: _javatypes.java.awt.Shape): _javatypes.java.awt.Shape;
                
            }
            namespace Stroke {
                interface static {
                    
                    
                    
                }
            }
            interface RenderingHints$Key extends any {
                
                isCompatibleValue(arg0: any): boolean;
                hashCode(): number;
                equals(arg0: any): boolean;
                
            }
            namespace RenderingHints$Key {
                interface static {
                    
                    
                    
                }
            }
            interface RenderingHints extends any, _javatypes.java.util.Map<any, any>, _javatypes.java.lang.Cloneable {
                
                size(): number;
                isEmpty(): boolean;
                containsKey(arg0: any): boolean;
                containsValue(arg0: any): boolean;
                get(arg0: any): any;
                put(arg0: any, arg1: any): any;
                add(arg0: _javatypes.java.awt.RenderingHints): void;
                clear(): void;
                remove(arg0: any): any;
                putAll(arg0: _javatypes.java.util.Map<any, any>): void;
                keySet(): _javatypes.java.util.Set<any>;
                values(): _javatypes.java.util.Collection<any>;
                entrySet(): _javatypes.java.util.Set<_javatypes.java.util.Map$Entry<any, any>>;
                equals(arg0: any): boolean;
                hashCode(): number;
                clone(): any;
                toString(): string;
                
            }
            namespace RenderingHints {
                interface static {
                    new (arg0: _javatypes.java.util.Map<_javatypes.java.awt.RenderingHints$Key, any>): _javatypes.java.awt.RenderingHints;
                    new (arg0: _javatypes.java.awt.RenderingHints$Key, arg1: any): _javatypes.java.awt.RenderingHints;
                    
                    readonly KEY_ANTIALIASING: _javatypes.java.awt.RenderingHints$Key;
                    readonly VALUE_ANTIALIAS_ON: any;
                    readonly VALUE_ANTIALIAS_OFF: any;
                    readonly VALUE_ANTIALIAS_DEFAULT: any;
                    readonly KEY_RENDERING: _javatypes.java.awt.RenderingHints$Key;
                    readonly VALUE_RENDER_SPEED: any;
                    readonly VALUE_RENDER_QUALITY: any;
                    readonly VALUE_RENDER_DEFAULT: any;
                    readonly KEY_DITHERING: _javatypes.java.awt.RenderingHints$Key;
                    readonly VALUE_DITHER_DISABLE: any;
                    readonly VALUE_DITHER_ENABLE: any;
                    readonly VALUE_DITHER_DEFAULT: any;
                    readonly KEY_TEXT_ANTIALIASING: _javatypes.java.awt.RenderingHints$Key;
                    readonly VALUE_TEXT_ANTIALIAS_ON: any;
                    readonly VALUE_TEXT_ANTIALIAS_OFF: any;
                    readonly VALUE_TEXT_ANTIALIAS_DEFAULT: any;
                    readonly VALUE_TEXT_ANTIALIAS_GASP: any;
                    readonly VALUE_TEXT_ANTIALIAS_LCD_HRGB: any;
                    readonly VALUE_TEXT_ANTIALIAS_LCD_HBGR: any;
                    readonly VALUE_TEXT_ANTIALIAS_LCD_VRGB: any;
                    readonly VALUE_TEXT_ANTIALIAS_LCD_VBGR: any;
                    readonly KEY_TEXT_LCD_CONTRAST: _javatypes.java.awt.RenderingHints$Key;
                    readonly KEY_FRACTIONALMETRICS: _javatypes.java.awt.RenderingHints$Key;
                    readonly VALUE_FRACTIONALMETRICS_OFF: any;
                    readonly VALUE_FRACTIONALMETRICS_ON: any;
                    readonly VALUE_FRACTIONALMETRICS_DEFAULT: any;
                    readonly KEY_INTERPOLATION: _javatypes.java.awt.RenderingHints$Key;
                    readonly VALUE_INTERPOLATION_NEAREST_NEIGHBOR: any;
                    readonly VALUE_INTERPOLATION_BILINEAR: any;
                    readonly VALUE_INTERPOLATION_BICUBIC: any;
                    readonly KEY_ALPHA_INTERPOLATION: _javatypes.java.awt.RenderingHints$Key;
                    readonly VALUE_ALPHA_INTERPOLATION_SPEED: any;
                    readonly VALUE_ALPHA_INTERPOLATION_QUALITY: any;
                    readonly VALUE_ALPHA_INTERPOLATION_DEFAULT: any;
                    readonly KEY_COLOR_RENDERING: _javatypes.java.awt.RenderingHints$Key;
                    readonly VALUE_COLOR_RENDER_SPEED: any;
                    readonly VALUE_COLOR_RENDER_QUALITY: any;
                    readonly VALUE_COLOR_RENDER_DEFAULT: any;
                    readonly KEY_STROKE_CONTROL: _javatypes.java.awt.RenderingHints$Key;
                    readonly VALUE_STROKE_DEFAULT: any;
                    readonly VALUE_STROKE_NORMALIZE: any;
                    readonly VALUE_STROKE_PURE: any;
                    readonly KEY_RESOLUTION_VARIANT: _javatypes.java.awt.RenderingHints$Key;
                    readonly VALUE_RESOLUTION_VARIANT_DEFAULT: any;
                    readonly VALUE_RESOLUTION_VARIANT_BASE: any;
                    readonly VALUE_RESOLUTION_VARIANT_SIZE_FIT: any;
                    readonly VALUE_RESOLUTION_VARIANT_DPI_FIT: any;
                    
                    
                }
            }
            interface FontMetrics extends any, _javatypes.java.io.Serializable {
                
                getFont(): _javatypes.java.awt.Font;
                getFontRenderContext(): _javatypes.java.awt.font.FontRenderContext;
                getLeading(): number;
                getAscent(): number;
                getDescent(): number;
                getHeight(): number;
                getMaxAscent(): number;
                getMaxDescent(): number;
                getMaxDecent(): number;
                getMaxAdvance(): number;
                charWidth(arg0: number): number;
                charWidth(arg0: number): number;
                stringWidth(arg0: string): number;
                charsWidth(arg0: number[], arg1: number, arg2: number): number;
                bytesWidth(arg0: number[], arg1: number, arg2: number): number;
                getWidths(): number[];
                hasUniformLineMetrics(): boolean;
                getLineMetrics(arg0: string, arg1: _javatypes.java.awt.Graphics): _javatypes.java.awt.font.LineMetrics;
                getLineMetrics(arg0: string, arg1: number, arg2: number, arg3: _javatypes.java.awt.Graphics): _javatypes.java.awt.font.LineMetrics;
                getLineMetrics(arg0: number[], arg1: number, arg2: number, arg3: _javatypes.java.awt.Graphics): _javatypes.java.awt.font.LineMetrics;
                getLineMetrics(arg0: _javatypes.java.text.CharacterIterator, arg1: number, arg2: number, arg3: _javatypes.java.awt.Graphics): _javatypes.java.awt.font.LineMetrics;
                getStringBounds(arg0: string, arg1: _javatypes.java.awt.Graphics): _javatypes.java.awt.geom.Rectangle2D;
                getStringBounds(arg0: string, arg1: number, arg2: number, arg3: _javatypes.java.awt.Graphics): _javatypes.java.awt.geom.Rectangle2D;
                getStringBounds(arg0: number[], arg1: number, arg2: number, arg3: _javatypes.java.awt.Graphics): _javatypes.java.awt.geom.Rectangle2D;
                getStringBounds(arg0: _javatypes.java.text.CharacterIterator, arg1: number, arg2: number, arg3: _javatypes.java.awt.Graphics): _javatypes.java.awt.geom.Rectangle2D;
                getMaxCharBounds(arg0: _javatypes.java.awt.Graphics): _javatypes.java.awt.geom.Rectangle2D;
                toString(): string;
                
            }
            namespace FontMetrics {
                interface static {
                    
                    
                    
                }
            }
            interface Paint extends _javatypes.java.lang.Interface, _javatypes.java.awt.Transparency {
                
                createContext(arg0: _javatypes.java.awt.image.ColorModel, arg1: _javatypes.java.awt.Rectangle, arg2: _javatypes.java.awt.geom.Rectangle2D, arg3: _javatypes.java.awt.geom.AffineTransform, arg4: _javatypes.java.awt.RenderingHints): _javatypes.java.awt.PaintContext;
                
            }
            namespace Paint {
                interface static {
                    
                    
                    
                }
            }
            interface Composite extends _javatypes.java.lang.Interface {
                
                createContext(arg0: _javatypes.java.awt.image.ColorModel, arg1: _javatypes.java.awt.image.ColorModel, arg2: _javatypes.java.awt.RenderingHints): _javatypes.java.awt.CompositeContext;
                
            }
            namespace Composite {
                interface static {
                    
                    
                    
                }
            }
            interface BufferCapabilities extends any, _javatypes.java.lang.Cloneable {
                
                getFrontBufferCapabilities(): _javatypes.java.awt.ImageCapabilities;
                getBackBufferCapabilities(): _javatypes.java.awt.ImageCapabilities;
                isPageFlipping(): boolean;
                getFlipContents(): _javatypes.java.awt.BufferCapabilities$FlipContents;
                isFullScreenRequired(): boolean;
                isMultiBufferAvailable(): boolean;
                clone(): any;
                
            }
            namespace BufferCapabilities {
                interface static {
                    new (arg0: _javatypes.java.awt.ImageCapabilities, arg1: _javatypes.java.awt.ImageCapabilities, arg2: _javatypes.java.awt.BufferCapabilities$FlipContents): _javatypes.java.awt.BufferCapabilities;
                    
                    
                    
                }
            }
            interface BufferCapabilities$FlipContents extends _javatypes.java.awt.AttributeValue {
                
                
            }
            namespace BufferCapabilities$FlipContents {
                interface static {
                    
                    readonly UNDEFINED: _javatypes.java.awt.BufferCapabilities$FlipContents;
                    readonly BACKGROUND: _javatypes.java.awt.BufferCapabilities$FlipContents;
                    readonly PRIOR: _javatypes.java.awt.BufferCapabilities$FlipContents;
                    readonly COPIED: _javatypes.java.awt.BufferCapabilities$FlipContents;
                    
                    
                }
            }
            interface CompositeContext extends _javatypes.java.lang.Interface {
                
                dispose(): void;
                compose(arg0: _javatypes.java.awt.image.Raster, arg1: _javatypes.java.awt.image.Raster, arg2: _javatypes.java.awt.image.WritableRaster): void;
                
            }
            namespace CompositeContext {
                interface static {
                    
                    
                    
                }
            }
            interface Window extends _javatypes.java.awt.Container, _javatypes.javax.accessibility.Accessible {
                
                getIconImages(): _javatypes.java.util.List<_javatypes.java.awt.Image>;
                setIconImages(arg0: _javatypes.java.util.List<any>): void;
                setIconImage(arg0: _javatypes.java.awt.Image): void;
                addNotify(): void;
                removeNotify(): void;
                pack(): void;
                setMinimumSize(arg0: _javatypes.java.awt.Dimension): void;
                setSize(arg0: _javatypes.java.awt.Dimension): void;
                setSize(arg0: number, arg1: number): void;
                setLocation(arg0: number, arg1: number): void;
                setLocation(arg0: _javatypes.java.awt.Point): void;
                reshape(arg0: number, arg1: number, arg2: number, arg3: number): void;
                setVisible(arg0: boolean): void;
                show(): void;
                hide(): void;
                dispose(): void;
                toFront(): void;
                toBack(): void;
                getToolkit(): _javatypes.java.awt.Toolkit;
                getWarningString(): string;
                getLocale(): _javatypes.java.util.Locale;
                getInputContext(): _javatypes.java.awt.im.InputContext;
                setCursor(arg0: _javatypes.java.awt.Cursor): void;
                getOwner(): _javatypes.java.awt.Window;
                getOwnedWindows(): _javatypes.java.awt.Window[];
                setModalExclusionType(arg0: _javatypes.java.awt.Dialog$ModalExclusionType): void;
                getModalExclusionType(): _javatypes.java.awt.Dialog$ModalExclusionType;
                addWindowListener(arg0: _javatypes.java.awt.event.WindowListener): void;
                addWindowStateListener(arg0: _javatypes.java.awt.event.WindowStateListener): void;
                addWindowFocusListener(arg0: _javatypes.java.awt.event.WindowFocusListener): void;
                removeWindowListener(arg0: _javatypes.java.awt.event.WindowListener): void;
                removeWindowStateListener(arg0: _javatypes.java.awt.event.WindowStateListener): void;
                removeWindowFocusListener(arg0: _javatypes.java.awt.event.WindowFocusListener): void;
                getWindowListeners(): _javatypes.java.awt.event.WindowListener[];
                getWindowFocusListeners(): _javatypes.java.awt.event.WindowFocusListener[];
                getWindowStateListeners(): _javatypes.java.awt.event.WindowStateListener[];
                getListeners<T>(arg0: _javatypes.java.lang.Class<T>): T[];
                setAlwaysOnTop(arg0: boolean): void;
                isAlwaysOnTopSupported(): boolean;
                isAlwaysOnTop(): boolean;
                getFocusOwner(): _javatypes.java.awt.Component;
                getMostRecentFocusOwner(): _javatypes.java.awt.Component;
                isActive(): boolean;
                isFocused(): boolean;
                getFocusTraversalKeys(arg0: number): _javatypes.java.util.Set<_javatypes.java.awt.AWTKeyStroke>;
                setFocusCycleRoot(arg0: boolean): void;
                isFocusCycleRoot(): boolean;
                getFocusCycleRootAncestor(): _javatypes.java.awt.Container;
                isFocusableWindow(): boolean;
                getFocusableWindowState(): boolean;
                setFocusableWindowState(arg0: boolean): void;
                setAutoRequestFocus(arg0: boolean): void;
                isAutoRequestFocus(): boolean;
                addPropertyChangeListener(arg0: _javatypes.java.beans.PropertyChangeListener): void;
                addPropertyChangeListener(arg0: string, arg1: _javatypes.java.beans.PropertyChangeListener): void;
                isValidateRoot(): boolean;
                postEvent(arg0: _javatypes.java.awt.Event): boolean;
                isShowing(): boolean;
                applyResourceBundle(arg0: _javatypes.java.util.ResourceBundle): void;
                applyResourceBundle(arg0: string): void;
                setType(arg0: _javatypes.java.awt.Window$Type): void;
                getType(): _javatypes.java.awt.Window$Type;
                getAccessibleContext(): _javatypes.javax.accessibility.AccessibleContext;
                setLocationRelativeTo(arg0: _javatypes.java.awt.Component): void;
                createBufferStrategy(arg0: number): void;
                createBufferStrategy(arg0: number, arg1: _javatypes.java.awt.BufferCapabilities): void;
                getBufferStrategy(): _javatypes.java.awt.image.BufferStrategy;
                setLocationByPlatform(arg0: boolean): void;
                isLocationByPlatform(): boolean;
                setBounds(arg0: number, arg1: number, arg2: number, arg3: number): void;
                setBounds(arg0: _javatypes.java.awt.Rectangle): void;
                getOpacity(): number;
                setOpacity(arg0: number): void;
                getShape(): _javatypes.java.awt.Shape;
                setShape(arg0: _javatypes.java.awt.Shape): void;
                getBackground(): _javatypes.java.awt.Color;
                setBackground(arg0: _javatypes.java.awt.Color): void;
                isOpaque(): boolean;
                paint(arg0: _javatypes.java.awt.Graphics): void;
                
            }
            namespace Window {
                interface static {
                    new (arg0: _javatypes.java.awt.Frame): _javatypes.java.awt.Window;
                    new (arg0: _javatypes.java.awt.Window): _javatypes.java.awt.Window;
                    new (arg0: _javatypes.java.awt.Window, arg1: _javatypes.java.awt.GraphicsConfiguration): _javatypes.java.awt.Window;
                    
                    
                    getWindows(): _javatypes.java.awt.Window[];
                    getOwnerlessWindows(): _javatypes.java.awt.Window[];
                    
                }
            }
            interface GraphicsConfigTemplate extends any, _javatypes.java.io.Serializable {
                
                getBestConfiguration(arg0: _javatypes.java.awt.GraphicsConfiguration[]): _javatypes.java.awt.GraphicsConfiguration;
                isGraphicsConfigSupported(arg0: _javatypes.java.awt.GraphicsConfiguration): boolean;
                
            }
            namespace GraphicsConfigTemplate {
                interface static {
                    new (): _javatypes.java.awt.GraphicsConfigTemplate;
                    
                    readonly REQUIRED: number;
                    readonly PREFERRED: number;
                    readonly UNNECESSARY: number;
                    
                    
                }
            }
            interface GraphicsDevice$WindowTranslucency extends _javatypes.java.lang.Enum<_javatypes.java.awt.GraphicsDevice$WindowTranslucency> {
                
                
            }
            namespace GraphicsDevice$WindowTranslucency {
                interface static {
                    
                    readonly PERPIXEL_TRANSPARENT: _javatypes.java.awt.GraphicsDevice$WindowTranslucency;
                    readonly TRANSLUCENT: _javatypes.java.awt.GraphicsDevice$WindowTranslucency;
                    readonly PERPIXEL_TRANSLUCENT: _javatypes.java.awt.GraphicsDevice$WindowTranslucency;
                    
                    values(): _javatypes.java.awt.GraphicsDevice$WindowTranslucency[];
                    valueOf(arg0: string): _javatypes.java.awt.GraphicsDevice$WindowTranslucency;
                    
                }
            }
            interface PaintContext extends _javatypes.java.lang.Interface {
                
                dispose(): void;
                getColorModel(): _javatypes.java.awt.image.ColorModel;
                getRaster(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.java.awt.image.Raster;
                
            }
            namespace PaintContext {
                interface static {
                    
                    
                    
                }
            }
            interface DisplayMode extends any {
                
                getHeight(): number;
                getWidth(): number;
                getBitDepth(): number;
                getRefreshRate(): number;
                equals(arg0: _javatypes.java.awt.DisplayMode): boolean;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace DisplayMode {
                interface static {
                    new (arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.java.awt.DisplayMode;
                    
                    readonly BIT_DEPTH_MULTI: number;
                    readonly REFRESH_RATE_UNKNOWN: number;
                    
                    
                }
            }
            interface AWTKeyStroke extends any, _javatypes.java.io.Serializable {
                
                getKeyChar(): number;
                getKeyCode(): number;
                getModifiers(): number;
                isOnKeyRelease(): boolean;
                getKeyEventType(): number;
                hashCode(): number;
                equals(arg0: any): boolean;
                toString(): string;
                
            }
            namespace AWTKeyStroke {
                interface static {
                    
                    
                    getAWTKeyStroke(arg0: number): _javatypes.java.awt.AWTKeyStroke;
                    getAWTKeyStroke(arg0: number, arg1: number): _javatypes.java.awt.AWTKeyStroke;
                    getAWTKeyStroke(arg0: number, arg1: number, arg2: boolean): _javatypes.java.awt.AWTKeyStroke;
                    getAWTKeyStroke(arg0: number, arg1: number): _javatypes.java.awt.AWTKeyStroke;
                    getAWTKeyStrokeForEvent(arg0: _javatypes.java.awt.event.KeyEvent): _javatypes.java.awt.AWTKeyStroke;
                    getAWTKeyStroke(arg0: string): _javatypes.java.awt.AWTKeyStroke;
                    
                }
            }
            interface Window$Type extends _javatypes.java.lang.Enum<_javatypes.java.awt.Window$Type> {
                
                
            }
            namespace Window$Type {
                interface static {
                    
                    readonly NORMAL: _javatypes.java.awt.Window$Type;
                    readonly UTILITY: _javatypes.java.awt.Window$Type;
                    readonly POPUP: _javatypes.java.awt.Window$Type;
                    
                    values(): _javatypes.java.awt.Window$Type[];
                    valueOf(arg0: string): _javatypes.java.awt.Window$Type;
                    
                }
            }
            interface Dialog$ModalExclusionType extends _javatypes.java.lang.Enum<_javatypes.java.awt.Dialog$ModalExclusionType> {
                
                
            }
            namespace Dialog$ModalExclusionType {
                interface static {
                    
                    readonly NO_EXCLUDE: _javatypes.java.awt.Dialog$ModalExclusionType;
                    readonly APPLICATION_EXCLUDE: _javatypes.java.awt.Dialog$ModalExclusionType;
                    readonly TOOLKIT_EXCLUDE: _javatypes.java.awt.Dialog$ModalExclusionType;
                    
                    values(): _javatypes.java.awt.Dialog$ModalExclusionType[];
                    valueOf(arg0: string): _javatypes.java.awt.Dialog$ModalExclusionType;
                    
                }
            }
            interface Frame extends _javatypes.java.awt.Window, _javatypes.java.awt.MenuContainer {
                
                addNotify(): void;
                getTitle(): string;
                setTitle(arg0: string): void;
                getIconImage(): _javatypes.java.awt.Image;
                setIconImage(arg0: _javatypes.java.awt.Image): void;
                getMenuBar(): _javatypes.java.awt.MenuBar;
                setMenuBar(arg0: _javatypes.java.awt.MenuBar): void;
                isResizable(): boolean;
                setResizable(arg0: boolean): void;
                setState(arg0: number): void;
                setExtendedState(arg0: number): void;
                getState(): number;
                getExtendedState(): number;
                setMaximizedBounds(arg0: _javatypes.java.awt.Rectangle): void;
                getMaximizedBounds(): _javatypes.java.awt.Rectangle;
                setUndecorated(arg0: boolean): void;
                isUndecorated(): boolean;
                setOpacity(arg0: number): void;
                setShape(arg0: _javatypes.java.awt.Shape): void;
                setBackground(arg0: _javatypes.java.awt.Color): void;
                remove(arg0: _javatypes.java.awt.MenuComponent): void;
                removeNotify(): void;
                setCursor(arg0: number): void;
                getCursorType(): number;
                getAccessibleContext(): _javatypes.javax.accessibility.AccessibleContext;
                
            }
            namespace Frame {
                interface static {
                    new (): _javatypes.java.awt.Frame;
                    new (arg0: _javatypes.java.awt.GraphicsConfiguration): _javatypes.java.awt.Frame;
                    new (arg0: string): _javatypes.java.awt.Frame;
                    new (arg0: string, arg1: _javatypes.java.awt.GraphicsConfiguration): _javatypes.java.awt.Frame;
                    
                    readonly DEFAULT_CURSOR: number;
                    readonly CROSSHAIR_CURSOR: number;
                    readonly TEXT_CURSOR: number;
                    readonly WAIT_CURSOR: number;
                    readonly SW_RESIZE_CURSOR: number;
                    readonly SE_RESIZE_CURSOR: number;
                    readonly NW_RESIZE_CURSOR: number;
                    readonly NE_RESIZE_CURSOR: number;
                    readonly N_RESIZE_CURSOR: number;
                    readonly S_RESIZE_CURSOR: number;
                    readonly W_RESIZE_CURSOR: number;
                    readonly E_RESIZE_CURSOR: number;
                    readonly HAND_CURSOR: number;
                    readonly MOVE_CURSOR: number;
                    readonly NORMAL: number;
                    readonly ICONIFIED: number;
                    readonly MAXIMIZED_HORIZ: number;
                    readonly MAXIMIZED_VERT: number;
                    readonly MAXIMIZED_BOTH: number;
                    
                    getFrames(): _javatypes.java.awt.Frame[];
                    
                }
            }
            interface AWTEvent extends _javatypes.java.util.EventObject {
                
                setSource(arg0: any): void;
                getID(): number;
                toString(): string;
                paramString(): string;
                
            }
            namespace AWTEvent {
                interface static {
                    new (arg0: _javatypes.java.awt.Event): _javatypes.java.awt.AWTEvent;
                    new (arg0: any, arg1: number): _javatypes.java.awt.AWTEvent;
                    
                    readonly COMPONENT_EVENT_MASK: number;
                    readonly CONTAINER_EVENT_MASK: number;
                    readonly FOCUS_EVENT_MASK: number;
                    readonly KEY_EVENT_MASK: number;
                    readonly MOUSE_EVENT_MASK: number;
                    readonly MOUSE_MOTION_EVENT_MASK: number;
                    readonly WINDOW_EVENT_MASK: number;
                    readonly ACTION_EVENT_MASK: number;
                    readonly ADJUSTMENT_EVENT_MASK: number;
                    readonly ITEM_EVENT_MASK: number;
                    readonly TEXT_EVENT_MASK: number;
                    readonly INPUT_METHOD_EVENT_MASK: number;
                    readonly PAINT_EVENT_MASK: number;
                    readonly INVOCATION_EVENT_MASK: number;
                    readonly HIERARCHY_EVENT_MASK: number;
                    readonly HIERARCHY_BOUNDS_EVENT_MASK: number;
                    readonly MOUSE_WHEEL_EVENT_MASK: number;
                    readonly WINDOW_STATE_EVENT_MASK: number;
                    readonly WINDOW_FOCUS_EVENT_MASK: number;
                    readonly RESERVED_ID_MAX: number;
                    
                    
                }
            }
            interface Toolkit extends any {
                
                setDynamicLayout(arg0: boolean): void;
                isDynamicLayoutActive(): boolean;
                getScreenSize(): _javatypes.java.awt.Dimension;
                getScreenResolution(): number;
                getScreenInsets(arg0: _javatypes.java.awt.GraphicsConfiguration): _javatypes.java.awt.Insets;
                getColorModel(): _javatypes.java.awt.image.ColorModel;
                getFontList(): string[];
                getFontMetrics(arg0: _javatypes.java.awt.Font): _javatypes.java.awt.FontMetrics;
                sync(): void;
                getImage(arg0: string): _javatypes.java.awt.Image;
                getImage(arg0: _javatypes.java.net.URL): _javatypes.java.awt.Image;
                createImage(arg0: string): _javatypes.java.awt.Image;
                createImage(arg0: _javatypes.java.net.URL): _javatypes.java.awt.Image;
                prepareImage(arg0: _javatypes.java.awt.Image, arg1: number, arg2: number, arg3: _javatypes.java.awt.image.ImageObserver): boolean;
                checkImage(arg0: _javatypes.java.awt.Image, arg1: number, arg2: number, arg3: _javatypes.java.awt.image.ImageObserver): number;
                createImage(arg0: _javatypes.java.awt.image.ImageProducer): _javatypes.java.awt.Image;
                createImage(arg0: number[]): _javatypes.java.awt.Image;
                createImage(arg0: number[], arg1: number, arg2: number): _javatypes.java.awt.Image;
                getPrintJob(arg0: _javatypes.java.awt.Frame, arg1: string, arg2: _javatypes.java.util.Properties): _javatypes.java.awt.PrintJob;
                getPrintJob(arg0: _javatypes.java.awt.Frame, arg1: string, arg2: _javatypes.java.awt.JobAttributes, arg3: _javatypes.java.awt.PageAttributes): _javatypes.java.awt.PrintJob;
                beep(): void;
                getSystemClipboard(): _javatypes.java.awt.datatransfer.Clipboard;
                getSystemSelection(): _javatypes.java.awt.datatransfer.Clipboard;
                getMenuShortcutKeyMask(): number;
                getMenuShortcutKeyMaskEx(): number;
                getLockingKeyState(arg0: number): boolean;
                setLockingKeyState(arg0: number, arg1: boolean): void;
                createCustomCursor(arg0: _javatypes.java.awt.Image, arg1: _javatypes.java.awt.Point, arg2: string): _javatypes.java.awt.Cursor;
                getBestCursorSize(arg0: number, arg1: number): _javatypes.java.awt.Dimension;
                getMaximumCursorColors(): number;
                isFrameStateSupported(arg0: number): boolean;
                getSystemEventQueue(): _javatypes.java.awt.EventQueue;
                createDragGestureRecognizer<T>(arg0: _javatypes.java.lang.Class<T>, arg1: _javatypes.java.awt.dnd.DragSource, arg2: _javatypes.java.awt.Component, arg3: number, arg4: _javatypes.java.awt.dnd.DragGestureListener): T;
                getDesktopProperty(arg0: string): any;
                addPropertyChangeListener(arg0: string, arg1: _javatypes.java.beans.PropertyChangeListener): void;
                removePropertyChangeListener(arg0: string, arg1: _javatypes.java.beans.PropertyChangeListener): void;
                getPropertyChangeListeners(): _javatypes.java.beans.PropertyChangeListener[];
                getPropertyChangeListeners(arg0: string): _javatypes.java.beans.PropertyChangeListener[];
                isAlwaysOnTopSupported(): boolean;
                isModalityTypeSupported(arg0: _javatypes.java.awt.Dialog$ModalityType): boolean;
                isModalExclusionTypeSupported(arg0: _javatypes.java.awt.Dialog$ModalExclusionType): boolean;
                addAWTEventListener(arg0: _javatypes.java.awt.event.AWTEventListener, arg1: number): void;
                removeAWTEventListener(arg0: _javatypes.java.awt.event.AWTEventListener): void;
                getAWTEventListeners(): _javatypes.java.awt.event.AWTEventListener[];
                getAWTEventListeners(arg0: number): _javatypes.java.awt.event.AWTEventListener[];
                mapInputMethodHighlight(arg0: _javatypes.java.awt.im.InputMethodHighlight): _javatypes.java.util.Map<_javatypes.java.awt.font.TextAttribute, any>;
                areExtraMouseButtonsEnabled(): boolean;
                
            }
            namespace Toolkit {
                interface static {
                    
                    
                    getDefaultToolkit(): _javatypes.java.awt.Toolkit;
                    getProperty(arg0: string, arg1: string): string;
                    
                }
            }
            interface Cursor extends any, _javatypes.java.io.Serializable {
                
                getType(): number;
                getName(): string;
                toString(): string;
                
            }
            namespace Cursor {
                interface static {
                    new (arg0: number): _javatypes.java.awt.Cursor;
                    
                    readonly DEFAULT_CURSOR: number;
                    readonly CROSSHAIR_CURSOR: number;
                    readonly TEXT_CURSOR: number;
                    readonly WAIT_CURSOR: number;
                    readonly SW_RESIZE_CURSOR: number;
                    readonly SE_RESIZE_CURSOR: number;
                    readonly NW_RESIZE_CURSOR: number;
                    readonly NE_RESIZE_CURSOR: number;
                    readonly N_RESIZE_CURSOR: number;
                    readonly S_RESIZE_CURSOR: number;
                    readonly W_RESIZE_CURSOR: number;
                    readonly E_RESIZE_CURSOR: number;
                    readonly HAND_CURSOR: number;
                    readonly MOVE_CURSOR: number;
                    readonly CUSTOM_CURSOR: number;
                    
                    getPredefinedCursor(arg0: number): _javatypes.java.awt.Cursor;
                    getSystemCustomCursor(arg0: string): _javatypes.java.awt.Cursor;
                    getDefaultCursor(): _javatypes.java.awt.Cursor;
                    
                }
            }
            interface Event extends any, _javatypes.java.io.Serializable {
                target: any;
                when: number;
                id: number;
                x: number;
                y: number;
                key: number;
                modifiers: number;
                clickCount: number;
                arg: any;
                evt: _javatypes.java.awt.Event;
                
                translate(arg0: number, arg1: number): void;
                shiftDown(): boolean;
                controlDown(): boolean;
                metaDown(): boolean;
                toString(): string;
                
            }
            namespace Event {
                interface static {
                    new (arg0: any, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: any): _javatypes.java.awt.Event;
                    new (arg0: any, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): _javatypes.java.awt.Event;
                    new (arg0: any, arg1: number, arg2: any): _javatypes.java.awt.Event;
                    
                    readonly SHIFT_MASK: number;
                    readonly CTRL_MASK: number;
                    readonly META_MASK: number;
                    readonly ALT_MASK: number;
                    readonly HOME: number;
                    readonly END: number;
                    readonly PGUP: number;
                    readonly PGDN: number;
                    readonly UP: number;
                    readonly DOWN: number;
                    readonly LEFT: number;
                    readonly RIGHT: number;
                    readonly F1: number;
                    readonly F2: number;
                    readonly F3: number;
                    readonly F4: number;
                    readonly F5: number;
                    readonly F6: number;
                    readonly F7: number;
                    readonly F8: number;
                    readonly F9: number;
                    readonly F10: number;
                    readonly F11: number;
                    readonly F12: number;
                    readonly PRINT_SCREEN: number;
                    readonly SCROLL_LOCK: number;
                    readonly CAPS_LOCK: number;
                    readonly NUM_LOCK: number;
                    readonly PAUSE: number;
                    readonly INSERT: number;
                    readonly ENTER: number;
                    readonly BACK_SPACE: number;
                    readonly TAB: number;
                    readonly ESCAPE: number;
                    readonly DELETE: number;
                    readonly WINDOW_DESTROY: number;
                    readonly WINDOW_EXPOSE: number;
                    readonly WINDOW_ICONIFY: number;
                    readonly WINDOW_DEICONIFY: number;
                    readonly WINDOW_MOVED: number;
                    readonly KEY_PRESS: number;
                    readonly KEY_RELEASE: number;
                    readonly KEY_ACTION: number;
                    readonly KEY_ACTION_RELEASE: number;
                    readonly MOUSE_DOWN: number;
                    readonly MOUSE_UP: number;
                    readonly MOUSE_MOVE: number;
                    readonly MOUSE_ENTER: number;
                    readonly MOUSE_EXIT: number;
                    readonly MOUSE_DRAG: number;
                    readonly SCROLL_LINE_UP: number;
                    readonly SCROLL_LINE_DOWN: number;
                    readonly SCROLL_PAGE_UP: number;
                    readonly SCROLL_PAGE_DOWN: number;
                    readonly SCROLL_ABSOLUTE: number;
                    readonly SCROLL_BEGIN: number;
                    readonly SCROLL_END: number;
                    readonly LIST_SELECT: number;
                    readonly LIST_DESELECT: number;
                    readonly ACTION_EVENT: number;
                    readonly LOAD_FILE: number;
                    readonly SAVE_FILE: number;
                    readonly GOT_FOCUS: number;
                    readonly LOST_FOCUS: number;
                    
                    
                }
            }
            interface Component extends any, _javatypes.java.awt.image.ImageObserver, _javatypes.java.awt.MenuContainer, _javatypes.java.io.Serializable {
                
                getName(): string;
                setName(arg0: string): void;
                getParent(): _javatypes.java.awt.Container;
                setDropTarget(arg0: _javatypes.java.awt.dnd.DropTarget): void;
                getDropTarget(): _javatypes.java.awt.dnd.DropTarget;
                getGraphicsConfiguration(): _javatypes.java.awt.GraphicsConfiguration;
                getTreeLock(): any;
                getToolkit(): _javatypes.java.awt.Toolkit;
                isValid(): boolean;
                isDisplayable(): boolean;
                isVisible(): boolean;
                getMousePosition(): _javatypes.java.awt.Point;
                isShowing(): boolean;
                isEnabled(): boolean;
                setEnabled(arg0: boolean): void;
                enable(): void;
                enable(arg0: boolean): void;
                disable(): void;
                isDoubleBuffered(): boolean;
                enableInputMethods(arg0: boolean): void;
                setVisible(arg0: boolean): void;
                show(): void;
                show(arg0: boolean): void;
                hide(): void;
                getForeground(): _javatypes.java.awt.Color;
                setForeground(arg0: _javatypes.java.awt.Color): void;
                isForegroundSet(): boolean;
                getBackground(): _javatypes.java.awt.Color;
                setBackground(arg0: _javatypes.java.awt.Color): void;
                isBackgroundSet(): boolean;
                getFont(): _javatypes.java.awt.Font;
                setFont(arg0: _javatypes.java.awt.Font): void;
                isFontSet(): boolean;
                getLocale(): _javatypes.java.util.Locale;
                setLocale(arg0: _javatypes.java.util.Locale): void;
                getColorModel(): _javatypes.java.awt.image.ColorModel;
                getLocation(): _javatypes.java.awt.Point;
                getLocationOnScreen(): _javatypes.java.awt.Point;
                location(): _javatypes.java.awt.Point;
                setLocation(arg0: number, arg1: number): void;
                move(arg0: number, arg1: number): void;
                setLocation(arg0: _javatypes.java.awt.Point): void;
                getSize(): _javatypes.java.awt.Dimension;
                size(): _javatypes.java.awt.Dimension;
                setSize(arg0: number, arg1: number): void;
                resize(arg0: number, arg1: number): void;
                setSize(arg0: _javatypes.java.awt.Dimension): void;
                resize(arg0: _javatypes.java.awt.Dimension): void;
                getBounds(): _javatypes.java.awt.Rectangle;
                bounds(): _javatypes.java.awt.Rectangle;
                setBounds(arg0: number, arg1: number, arg2: number, arg3: number): void;
                reshape(arg0: number, arg1: number, arg2: number, arg3: number): void;
                setBounds(arg0: _javatypes.java.awt.Rectangle): void;
                getX(): number;
                getY(): number;
                getWidth(): number;
                getHeight(): number;
                getBounds(arg0: _javatypes.java.awt.Rectangle): _javatypes.java.awt.Rectangle;
                getSize(arg0: _javatypes.java.awt.Dimension): _javatypes.java.awt.Dimension;
                getLocation(arg0: _javatypes.java.awt.Point): _javatypes.java.awt.Point;
                isOpaque(): boolean;
                isLightweight(): boolean;
                setPreferredSize(arg0: _javatypes.java.awt.Dimension): void;
                isPreferredSizeSet(): boolean;
                getPreferredSize(): _javatypes.java.awt.Dimension;
                preferredSize(): _javatypes.java.awt.Dimension;
                setMinimumSize(arg0: _javatypes.java.awt.Dimension): void;
                isMinimumSizeSet(): boolean;
                getMinimumSize(): _javatypes.java.awt.Dimension;
                minimumSize(): _javatypes.java.awt.Dimension;
                setMaximumSize(arg0: _javatypes.java.awt.Dimension): void;
                isMaximumSizeSet(): boolean;
                getMaximumSize(): _javatypes.java.awt.Dimension;
                getAlignmentX(): number;
                getAlignmentY(): number;
                getBaseline(arg0: number, arg1: number): number;
                getBaselineResizeBehavior(): _javatypes.java.awt.Component$BaselineResizeBehavior;
                doLayout(): void;
                layout(): void;
                validate(): void;
                invalidate(): void;
                revalidate(): void;
                getGraphics(): _javatypes.java.awt.Graphics;
                getFontMetrics(arg0: _javatypes.java.awt.Font): _javatypes.java.awt.FontMetrics;
                setCursor(arg0: _javatypes.java.awt.Cursor): void;
                getCursor(): _javatypes.java.awt.Cursor;
                isCursorSet(): boolean;
                paint(arg0: _javatypes.java.awt.Graphics): void;
                update(arg0: _javatypes.java.awt.Graphics): void;
                paintAll(arg0: _javatypes.java.awt.Graphics): void;
                repaint(): void;
                repaint(arg0: number): void;
                repaint(arg0: number, arg1: number, arg2: number, arg3: number): void;
                repaint(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
                print(arg0: _javatypes.java.awt.Graphics): void;
                printAll(arg0: _javatypes.java.awt.Graphics): void;
                imageUpdate(arg0: _javatypes.java.awt.Image, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
                createImage(arg0: _javatypes.java.awt.image.ImageProducer): _javatypes.java.awt.Image;
                createImage(arg0: number, arg1: number): _javatypes.java.awt.Image;
                createVolatileImage(arg0: number, arg1: number): _javatypes.java.awt.image.VolatileImage;
                createVolatileImage(arg0: number, arg1: number, arg2: _javatypes.java.awt.ImageCapabilities): _javatypes.java.awt.image.VolatileImage;
                prepareImage(arg0: _javatypes.java.awt.Image, arg1: _javatypes.java.awt.image.ImageObserver): boolean;
                prepareImage(arg0: _javatypes.java.awt.Image, arg1: number, arg2: number, arg3: _javatypes.java.awt.image.ImageObserver): boolean;
                checkImage(arg0: _javatypes.java.awt.Image, arg1: _javatypes.java.awt.image.ImageObserver): number;
                checkImage(arg0: _javatypes.java.awt.Image, arg1: number, arg2: number, arg3: _javatypes.java.awt.image.ImageObserver): number;
                setIgnoreRepaint(arg0: boolean): void;
                getIgnoreRepaint(): boolean;
                contains(arg0: number, arg1: number): boolean;
                inside(arg0: number, arg1: number): boolean;
                contains(arg0: _javatypes.java.awt.Point): boolean;
                getComponentAt(arg0: number, arg1: number): _javatypes.java.awt.Component;
                locate(arg0: number, arg1: number): _javatypes.java.awt.Component;
                getComponentAt(arg0: _javatypes.java.awt.Point): _javatypes.java.awt.Component;
                deliverEvent(arg0: _javatypes.java.awt.Event): void;
                dispatchEvent(arg0: _javatypes.java.awt.AWTEvent): void;
                postEvent(arg0: _javatypes.java.awt.Event): boolean;
                addComponentListener(arg0: _javatypes.java.awt.event.ComponentListener): void;
                removeComponentListener(arg0: _javatypes.java.awt.event.ComponentListener): void;
                getComponentListeners(): _javatypes.java.awt.event.ComponentListener[];
                addFocusListener(arg0: _javatypes.java.awt.event.FocusListener): void;
                removeFocusListener(arg0: _javatypes.java.awt.event.FocusListener): void;
                getFocusListeners(): _javatypes.java.awt.event.FocusListener[];
                addHierarchyListener(arg0: _javatypes.java.awt.event.HierarchyListener): void;
                removeHierarchyListener(arg0: _javatypes.java.awt.event.HierarchyListener): void;
                getHierarchyListeners(): _javatypes.java.awt.event.HierarchyListener[];
                addHierarchyBoundsListener(arg0: _javatypes.java.awt.event.HierarchyBoundsListener): void;
                removeHierarchyBoundsListener(arg0: _javatypes.java.awt.event.HierarchyBoundsListener): void;
                getHierarchyBoundsListeners(): _javatypes.java.awt.event.HierarchyBoundsListener[];
                addKeyListener(arg0: _javatypes.java.awt.event.KeyListener): void;
                removeKeyListener(arg0: _javatypes.java.awt.event.KeyListener): void;
                getKeyListeners(): _javatypes.java.awt.event.KeyListener[];
                addMouseListener(arg0: _javatypes.java.awt.event.MouseListener): void;
                removeMouseListener(arg0: _javatypes.java.awt.event.MouseListener): void;
                getMouseListeners(): _javatypes.java.awt.event.MouseListener[];
                addMouseMotionListener(arg0: _javatypes.java.awt.event.MouseMotionListener): void;
                removeMouseMotionListener(arg0: _javatypes.java.awt.event.MouseMotionListener): void;
                getMouseMotionListeners(): _javatypes.java.awt.event.MouseMotionListener[];
                addMouseWheelListener(arg0: _javatypes.java.awt.event.MouseWheelListener): void;
                removeMouseWheelListener(arg0: _javatypes.java.awt.event.MouseWheelListener): void;
                getMouseWheelListeners(): _javatypes.java.awt.event.MouseWheelListener[];
                addInputMethodListener(arg0: _javatypes.java.awt.event.InputMethodListener): void;
                removeInputMethodListener(arg0: _javatypes.java.awt.event.InputMethodListener): void;
                getInputMethodListeners(): _javatypes.java.awt.event.InputMethodListener[];
                getListeners<T>(arg0: _javatypes.java.lang.Class<T>): T[];
                getInputMethodRequests(): _javatypes.java.awt.im.InputMethodRequests;
                getInputContext(): _javatypes.java.awt.im.InputContext;
                handleEvent(arg0: _javatypes.java.awt.Event): boolean;
                mouseDown(arg0: _javatypes.java.awt.Event, arg1: number, arg2: number): boolean;
                mouseDrag(arg0: _javatypes.java.awt.Event, arg1: number, arg2: number): boolean;
                mouseUp(arg0: _javatypes.java.awt.Event, arg1: number, arg2: number): boolean;
                mouseMove(arg0: _javatypes.java.awt.Event, arg1: number, arg2: number): boolean;
                mouseEnter(arg0: _javatypes.java.awt.Event, arg1: number, arg2: number): boolean;
                mouseExit(arg0: _javatypes.java.awt.Event, arg1: number, arg2: number): boolean;
                keyDown(arg0: _javatypes.java.awt.Event, arg1: number): boolean;
                keyUp(arg0: _javatypes.java.awt.Event, arg1: number): boolean;
                action(arg0: _javatypes.java.awt.Event, arg1: any): boolean;
                addNotify(): void;
                removeNotify(): void;
                gotFocus(arg0: _javatypes.java.awt.Event, arg1: any): boolean;
                lostFocus(arg0: _javatypes.java.awt.Event, arg1: any): boolean;
                isFocusTraversable(): boolean;
                isFocusable(): boolean;
                setFocusable(arg0: boolean): void;
                setFocusTraversalKeys(arg0: number, arg1: _javatypes.java.util.Set<any>): void;
                getFocusTraversalKeys(arg0: number): _javatypes.java.util.Set<_javatypes.java.awt.AWTKeyStroke>;
                areFocusTraversalKeysSet(arg0: number): boolean;
                setFocusTraversalKeysEnabled(arg0: boolean): void;
                getFocusTraversalKeysEnabled(): boolean;
                requestFocus(): void;
                requestFocus(arg0: _javatypes.java.awt.event.FocusEvent$Cause): void;
                requestFocusInWindow(): boolean;
                requestFocusInWindow(arg0: _javatypes.java.awt.event.FocusEvent$Cause): boolean;
                getFocusCycleRootAncestor(): _javatypes.java.awt.Container;
                isFocusCycleRoot(arg0: _javatypes.java.awt.Container): boolean;
                transferFocus(): void;
                nextFocus(): void;
                transferFocusBackward(): void;
                transferFocusUpCycle(): void;
                hasFocus(): boolean;
                isFocusOwner(): boolean;
                add(arg0: _javatypes.java.awt.PopupMenu): void;
                remove(arg0: _javatypes.java.awt.MenuComponent): void;
                toString(): string;
                list(): void;
                list(arg0: _javatypes.java.io.PrintStream): void;
                list(arg0: _javatypes.java.io.PrintStream, arg1: number): void;
                list(arg0: _javatypes.java.io.PrintWriter): void;
                list(arg0: _javatypes.java.io.PrintWriter, arg1: number): void;
                addPropertyChangeListener(arg0: _javatypes.java.beans.PropertyChangeListener): void;
                removePropertyChangeListener(arg0: _javatypes.java.beans.PropertyChangeListener): void;
                getPropertyChangeListeners(): _javatypes.java.beans.PropertyChangeListener[];
                addPropertyChangeListener(arg0: string, arg1: _javatypes.java.beans.PropertyChangeListener): void;
                removePropertyChangeListener(arg0: string, arg1: _javatypes.java.beans.PropertyChangeListener): void;
                getPropertyChangeListeners(arg0: string): _javatypes.java.beans.PropertyChangeListener[];
                firePropertyChange(arg0: string, arg1: number, arg2: number): void;
                firePropertyChange(arg0: string, arg1: number, arg2: number): void;
                firePropertyChange(arg0: string, arg1: number, arg2: number): void;
                firePropertyChange(arg0: string, arg1: number, arg2: number): void;
                firePropertyChange(arg0: string, arg1: number, arg2: number): void;
                firePropertyChange(arg0: string, arg1: number, arg2: number): void;
                setComponentOrientation(arg0: _javatypes.java.awt.ComponentOrientation): void;
                getComponentOrientation(): _javatypes.java.awt.ComponentOrientation;
                applyComponentOrientation(arg0: _javatypes.java.awt.ComponentOrientation): void;
                getAccessibleContext(): _javatypes.javax.accessibility.AccessibleContext;
                setMixingCutoutShape(arg0: _javatypes.java.awt.Shape): void;
                
            }
            namespace Component {
                interface static {
                    
                    readonly TOP_ALIGNMENT: number;
                    readonly CENTER_ALIGNMENT: number;
                    readonly BOTTOM_ALIGNMENT: number;
                    readonly LEFT_ALIGNMENT: number;
                    readonly RIGHT_ALIGNMENT: number;
                    
                    
                }
            }
            interface Container extends _javatypes.java.awt.Component {
                
                getComponentCount(): number;
                countComponents(): number;
                getComponent(arg0: number): _javatypes.java.awt.Component;
                getComponents(): _javatypes.java.awt.Component[];
                getInsets(): _javatypes.java.awt.Insets;
                insets(): _javatypes.java.awt.Insets;
                add(arg0: _javatypes.java.awt.Component): _javatypes.java.awt.Component;
                add(arg0: string, arg1: _javatypes.java.awt.Component): _javatypes.java.awt.Component;
                add(arg0: _javatypes.java.awt.Component, arg1: number): _javatypes.java.awt.Component;
                setComponentZOrder(arg0: _javatypes.java.awt.Component, arg1: number): void;
                getComponentZOrder(arg0: _javatypes.java.awt.Component): number;
                add(arg0: _javatypes.java.awt.Component, arg1: any): void;
                add(arg0: _javatypes.java.awt.Component, arg1: any, arg2: number): void;
                remove(arg0: number): void;
                remove(arg0: _javatypes.java.awt.Component): void;
                removeAll(): void;
                getLayout(): _javatypes.java.awt.LayoutManager;
                setLayout(arg0: _javatypes.java.awt.LayoutManager): void;
                doLayout(): void;
                layout(): void;
                isValidateRoot(): boolean;
                invalidate(): void;
                validate(): void;
                setFont(arg0: _javatypes.java.awt.Font): void;
                getPreferredSize(): _javatypes.java.awt.Dimension;
                preferredSize(): _javatypes.java.awt.Dimension;
                getMinimumSize(): _javatypes.java.awt.Dimension;
                minimumSize(): _javatypes.java.awt.Dimension;
                getMaximumSize(): _javatypes.java.awt.Dimension;
                getAlignmentX(): number;
                getAlignmentY(): number;
                paint(arg0: _javatypes.java.awt.Graphics): void;
                update(arg0: _javatypes.java.awt.Graphics): void;
                print(arg0: _javatypes.java.awt.Graphics): void;
                paintComponents(arg0: _javatypes.java.awt.Graphics): void;
                printComponents(arg0: _javatypes.java.awt.Graphics): void;
                addContainerListener(arg0: _javatypes.java.awt.event.ContainerListener): void;
                removeContainerListener(arg0: _javatypes.java.awt.event.ContainerListener): void;
                getContainerListeners(): _javatypes.java.awt.event.ContainerListener[];
                getListeners<T>(arg0: _javatypes.java.lang.Class<T>): T[];
                deliverEvent(arg0: _javatypes.java.awt.Event): void;
                getComponentAt(arg0: number, arg1: number): _javatypes.java.awt.Component;
                locate(arg0: number, arg1: number): _javatypes.java.awt.Component;
                getComponentAt(arg0: _javatypes.java.awt.Point): _javatypes.java.awt.Component;
                getMousePosition(arg0: boolean): _javatypes.java.awt.Point;
                findComponentAt(arg0: number, arg1: number): _javatypes.java.awt.Component;
                findComponentAt(arg0: _javatypes.java.awt.Point): _javatypes.java.awt.Component;
                addNotify(): void;
                removeNotify(): void;
                isAncestorOf(arg0: _javatypes.java.awt.Component): boolean;
                list(arg0: _javatypes.java.io.PrintStream, arg1: number): void;
                list(arg0: _javatypes.java.io.PrintWriter, arg1: number): void;
                setFocusTraversalKeys(arg0: number, arg1: _javatypes.java.util.Set<any>): void;
                getFocusTraversalKeys(arg0: number): _javatypes.java.util.Set<_javatypes.java.awt.AWTKeyStroke>;
                areFocusTraversalKeysSet(arg0: number): boolean;
                isFocusCycleRoot(arg0: _javatypes.java.awt.Container): boolean;
                setFocusTraversalPolicy(arg0: _javatypes.java.awt.FocusTraversalPolicy): void;
                getFocusTraversalPolicy(): _javatypes.java.awt.FocusTraversalPolicy;
                isFocusTraversalPolicySet(): boolean;
                setFocusCycleRoot(arg0: boolean): void;
                isFocusCycleRoot(): boolean;
                setFocusTraversalPolicyProvider(arg0: boolean): void;
                isFocusTraversalPolicyProvider(): boolean;
                transferFocusDownCycle(): void;
                applyComponentOrientation(arg0: _javatypes.java.awt.ComponentOrientation): void;
                addPropertyChangeListener(arg0: _javatypes.java.beans.PropertyChangeListener): void;
                addPropertyChangeListener(arg0: string, arg1: _javatypes.java.beans.PropertyChangeListener): void;
                
            }
            namespace Container {
                interface static {
                    new (): _javatypes.java.awt.Container;
                    
                    
                    
                }
            }
            interface AttributeValue extends any {
                
                hashCode(): number;
                toString(): string;
                
            }
            namespace AttributeValue {
                interface static {
                    
                    
                    
                }
            }
            interface Insets extends any, _javatypes.java.lang.Cloneable, _javatypes.java.io.Serializable {
                top: number;
                left: number;
                bottom: number;
                right: number;
                
                set(arg0: number, arg1: number, arg2: number, arg3: number): void;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                clone(): any;
                
            }
            namespace Insets {
                interface static {
                    new (arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.java.awt.Insets;
                    
                    
                    
                }
            }
            interface JobAttributes extends any, _javatypes.java.lang.Cloneable {
                
                clone(): any;
                set(arg0: _javatypes.java.awt.JobAttributes): void;
                getCopies(): number;
                setCopies(arg0: number): void;
                setCopiesToDefault(): void;
                getDefaultSelection(): _javatypes.java.awt.JobAttributes$DefaultSelectionType;
                setDefaultSelection(arg0: _javatypes.java.awt.JobAttributes$DefaultSelectionType): void;
                getDestination(): _javatypes.java.awt.JobAttributes$DestinationType;
                setDestination(arg0: _javatypes.java.awt.JobAttributes$DestinationType): void;
                getDialog(): _javatypes.java.awt.JobAttributes$DialogType;
                setDialog(arg0: _javatypes.java.awt.JobAttributes$DialogType): void;
                getFileName(): string;
                setFileName(arg0: string): void;
                getFromPage(): number;
                setFromPage(arg0: number): void;
                getMaxPage(): number;
                setMaxPage(arg0: number): void;
                getMinPage(): number;
                setMinPage(arg0: number): void;
                getMultipleDocumentHandling(): _javatypes.java.awt.JobAttributes$MultipleDocumentHandlingType;
                setMultipleDocumentHandling(arg0: _javatypes.java.awt.JobAttributes$MultipleDocumentHandlingType): void;
                setMultipleDocumentHandlingToDefault(): void;
                getPageRanges(): number[][];
                setPageRanges(arg0: number[][]): void;
                getPrinter(): string;
                setPrinter(arg0: string): void;
                getSides(): _javatypes.java.awt.JobAttributes$SidesType;
                setSides(arg0: _javatypes.java.awt.JobAttributes$SidesType): void;
                setSidesToDefault(): void;
                getToPage(): number;
                setToPage(arg0: number): void;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace JobAttributes {
                interface static {
                    new (): _javatypes.java.awt.JobAttributes;
                    new (arg0: _javatypes.java.awt.JobAttributes): _javatypes.java.awt.JobAttributes;
                    new (arg0: number, arg1: _javatypes.java.awt.JobAttributes$DefaultSelectionType, arg2: _javatypes.java.awt.JobAttributes$DestinationType, arg3: _javatypes.java.awt.JobAttributes$DialogType, arg4: string, arg5: number, arg6: number, arg7: _javatypes.java.awt.JobAttributes$MultipleDocumentHandlingType, arg8: number[][], arg9: string, arg10: _javatypes.java.awt.JobAttributes$SidesType): _javatypes.java.awt.JobAttributes;
                    
                    
                    
                }
            }
            interface Dialog$ModalityType extends _javatypes.java.lang.Enum<_javatypes.java.awt.Dialog$ModalityType> {
                
                
            }
            namespace Dialog$ModalityType {
                interface static {
                    
                    readonly MODELESS: _javatypes.java.awt.Dialog$ModalityType;
                    readonly DOCUMENT_MODAL: _javatypes.java.awt.Dialog$ModalityType;
                    readonly APPLICATION_MODAL: _javatypes.java.awt.Dialog$ModalityType;
                    readonly TOOLKIT_MODAL: _javatypes.java.awt.Dialog$ModalityType;
                    
                    values(): _javatypes.java.awt.Dialog$ModalityType[];
                    valueOf(arg0: string): _javatypes.java.awt.Dialog$ModalityType;
                    
                }
            }
            interface EventQueue extends any {
                
                postEvent(arg0: _javatypes.java.awt.AWTEvent): void;
                getNextEvent(): _javatypes.java.awt.AWTEvent;
                peekEvent(): _javatypes.java.awt.AWTEvent;
                peekEvent(arg0: number): _javatypes.java.awt.AWTEvent;
                push(arg0: _javatypes.java.awt.EventQueue): void;
                createSecondaryLoop(): _javatypes.java.awt.SecondaryLoop;
                
            }
            namespace EventQueue {
                interface static {
                    new (): _javatypes.java.awt.EventQueue;
                    
                    
                    getMostRecentEventTime(): number;
                    getCurrentEvent(): _javatypes.java.awt.AWTEvent;
                    isDispatchThread(): boolean;
                    invokeLater(arg0: _javatypes.java.lang.Runnable): void;
                    invokeAndWait(arg0: _javatypes.java.lang.Runnable): void;
                    
                }
            }
            interface MenuContainer extends _javatypes.java.lang.Interface {
                
                getFont(): _javatypes.java.awt.Font;
                remove(arg0: _javatypes.java.awt.MenuComponent): void;
                postEvent(arg0: _javatypes.java.awt.Event): boolean;
                
            }
            namespace MenuContainer {
                interface static {
                    
                    
                    
                }
            }
            interface MenuBar extends _javatypes.java.awt.MenuComponent, _javatypes.java.awt.MenuContainer, _javatypes.javax.accessibility.Accessible {
                
                addNotify(): void;
                removeNotify(): void;
                getHelpMenu(): _javatypes.java.awt.Menu;
                setHelpMenu(arg0: _javatypes.java.awt.Menu): void;
                add(arg0: _javatypes.java.awt.Menu): _javatypes.java.awt.Menu;
                remove(arg0: number): void;
                remove(arg0: _javatypes.java.awt.MenuComponent): void;
                getMenuCount(): number;
                countMenus(): number;
                getMenu(arg0: number): _javatypes.java.awt.Menu;
                shortcuts(): _javatypes.java.util.Enumeration<_javatypes.java.awt.MenuShortcut>;
                getShortcutMenuItem(arg0: _javatypes.java.awt.MenuShortcut): _javatypes.java.awt.MenuItem;
                deleteShortcut(arg0: _javatypes.java.awt.MenuShortcut): void;
                getAccessibleContext(): _javatypes.javax.accessibility.AccessibleContext;
                
            }
            namespace MenuBar {
                interface static {
                    new (): _javatypes.java.awt.MenuBar;
                    
                    
                    
                }
            }
            interface LayoutManager extends _javatypes.java.lang.Interface {
                
                addLayoutComponent(arg0: string, arg1: _javatypes.java.awt.Component): void;
                removeLayoutComponent(arg0: _javatypes.java.awt.Component): void;
                preferredLayoutSize(arg0: _javatypes.java.awt.Container): _javatypes.java.awt.Dimension;
                minimumLayoutSize(arg0: _javatypes.java.awt.Container): _javatypes.java.awt.Dimension;
                layoutContainer(arg0: _javatypes.java.awt.Container): void;
                
            }
            namespace LayoutManager {
                interface static {
                    
                    
                    
                }
            }
            interface MenuComponent extends any, _javatypes.java.io.Serializable {
                
                getName(): string;
                setName(arg0: string): void;
                getParent(): _javatypes.java.awt.MenuContainer;
                getFont(): _javatypes.java.awt.Font;
                setFont(arg0: _javatypes.java.awt.Font): void;
                removeNotify(): void;
                postEvent(arg0: _javatypes.java.awt.Event): boolean;
                dispatchEvent(arg0: _javatypes.java.awt.AWTEvent): void;
                toString(): string;
                getAccessibleContext(): _javatypes.javax.accessibility.AccessibleContext;
                
            }
            namespace MenuComponent {
                interface static {
                    new (): _javatypes.java.awt.MenuComponent;
                    
                    
                    
                }
            }
            interface PopupMenu extends _javatypes.java.awt.Menu {
                
                getParent(): _javatypes.java.awt.MenuContainer;
                addNotify(): void;
                show(arg0: _javatypes.java.awt.Component, arg1: number, arg2: number): void;
                getAccessibleContext(): _javatypes.javax.accessibility.AccessibleContext;
                
            }
            namespace PopupMenu {
                interface static {
                    new (): _javatypes.java.awt.PopupMenu;
                    new (arg0: string): _javatypes.java.awt.PopupMenu;
                    
                    
                    
                }
            }
            interface FocusTraversalPolicy extends any {
                
                getComponentAfter(arg0: _javatypes.java.awt.Container, arg1: _javatypes.java.awt.Component): _javatypes.java.awt.Component;
                getComponentBefore(arg0: _javatypes.java.awt.Container, arg1: _javatypes.java.awt.Component): _javatypes.java.awt.Component;
                getFirstComponent(arg0: _javatypes.java.awt.Container): _javatypes.java.awt.Component;
                getLastComponent(arg0: _javatypes.java.awt.Container): _javatypes.java.awt.Component;
                getDefaultComponent(arg0: _javatypes.java.awt.Container): _javatypes.java.awt.Component;
                getInitialComponent(arg0: _javatypes.java.awt.Window): _javatypes.java.awt.Component;
                
            }
            namespace FocusTraversalPolicy {
                interface static {
                    
                    
                    
                }
            }
            interface PageAttributes extends any, _javatypes.java.lang.Cloneable {
                
                clone(): any;
                set(arg0: _javatypes.java.awt.PageAttributes): void;
                getColor(): _javatypes.java.awt.PageAttributes$ColorType;
                setColor(arg0: _javatypes.java.awt.PageAttributes$ColorType): void;
                getMedia(): _javatypes.java.awt.PageAttributes$MediaType;
                setMedia(arg0: _javatypes.java.awt.PageAttributes$MediaType): void;
                setMediaToDefault(): void;
                getOrientationRequested(): _javatypes.java.awt.PageAttributes$OrientationRequestedType;
                setOrientationRequested(arg0: _javatypes.java.awt.PageAttributes$OrientationRequestedType): void;
                setOrientationRequested(arg0: number): void;
                setOrientationRequestedToDefault(): void;
                getOrigin(): _javatypes.java.awt.PageAttributes$OriginType;
                setOrigin(arg0: _javatypes.java.awt.PageAttributes$OriginType): void;
                getPrintQuality(): _javatypes.java.awt.PageAttributes$PrintQualityType;
                setPrintQuality(arg0: _javatypes.java.awt.PageAttributes$PrintQualityType): void;
                setPrintQuality(arg0: number): void;
                setPrintQualityToDefault(): void;
                getPrinterResolution(): number[];
                setPrinterResolution(arg0: number[]): void;
                setPrinterResolution(arg0: number): void;
                setPrinterResolutionToDefault(): void;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace PageAttributes {
                interface static {
                    new (): _javatypes.java.awt.PageAttributes;
                    new (arg0: _javatypes.java.awt.PageAttributes): _javatypes.java.awt.PageAttributes;
                    new (arg0: _javatypes.java.awt.PageAttributes$ColorType, arg1: _javatypes.java.awt.PageAttributes$MediaType, arg2: _javatypes.java.awt.PageAttributes$OrientationRequestedType, arg3: _javatypes.java.awt.PageAttributes$OriginType, arg4: _javatypes.java.awt.PageAttributes$PrintQualityType, arg5: number[]): _javatypes.java.awt.PageAttributes;
                    
                    
                    
                }
            }
            interface Component$BaselineResizeBehavior extends _javatypes.java.lang.Enum<_javatypes.java.awt.Component$BaselineResizeBehavior> {
                
                
            }
            namespace Component$BaselineResizeBehavior {
                interface static {
                    
                    readonly CONSTANT_ASCENT: _javatypes.java.awt.Component$BaselineResizeBehavior;
                    readonly CONSTANT_DESCENT: _javatypes.java.awt.Component$BaselineResizeBehavior;
                    readonly CENTER_OFFSET: _javatypes.java.awt.Component$BaselineResizeBehavior;
                    readonly OTHER: _javatypes.java.awt.Component$BaselineResizeBehavior;
                    
                    values(): _javatypes.java.awt.Component$BaselineResizeBehavior[];
                    valueOf(arg0: string): _javatypes.java.awt.Component$BaselineResizeBehavior;
                    
                }
            }
            interface ComponentOrientation extends any, _javatypes.java.io.Serializable {
                
                isHorizontal(): boolean;
                isLeftToRight(): boolean;
                
            }
            namespace ComponentOrientation {
                interface static {
                    
                    readonly LEFT_TO_RIGHT: _javatypes.java.awt.ComponentOrientation;
                    readonly RIGHT_TO_LEFT: _javatypes.java.awt.ComponentOrientation;
                    readonly UNKNOWN: _javatypes.java.awt.ComponentOrientation;
                    
                    getOrientation(arg0: _javatypes.java.util.Locale): _javatypes.java.awt.ComponentOrientation;
                    getOrientation(arg0: _javatypes.java.util.ResourceBundle): _javatypes.java.awt.ComponentOrientation;
                    
                }
            }
            interface PrintJob extends any {
                
                getGraphics(): _javatypes.java.awt.Graphics;
                getPageDimension(): _javatypes.java.awt.Dimension;
                getPageResolution(): number;
                lastPageFirst(): boolean;
                end(): void;
                finalize(): void;
                
            }
            namespace PrintJob {
                interface static {
                    
                    
                    
                }
            }
            interface JobAttributes$DefaultSelectionType extends _javatypes.java.awt.AttributeValue {
                
                
            }
            namespace JobAttributes$DefaultSelectionType {
                interface static {
                    
                    readonly ALL: _javatypes.java.awt.JobAttributes$DefaultSelectionType;
                    readonly RANGE: _javatypes.java.awt.JobAttributes$DefaultSelectionType;
                    readonly SELECTION: _javatypes.java.awt.JobAttributes$DefaultSelectionType;
                    
                    
                }
            }
            interface Menu extends _javatypes.java.awt.MenuItem, _javatypes.java.awt.MenuContainer, _javatypes.javax.accessibility.Accessible {
                
                addNotify(): void;
                removeNotify(): void;
                isTearOff(): boolean;
                getItemCount(): number;
                countItems(): number;
                getItem(arg0: number): _javatypes.java.awt.MenuItem;
                add(arg0: _javatypes.java.awt.MenuItem): _javatypes.java.awt.MenuItem;
                add(arg0: string): void;
                insert(arg0: _javatypes.java.awt.MenuItem, arg1: number): void;
                insert(arg0: string, arg1: number): void;
                addSeparator(): void;
                insertSeparator(arg0: number): void;
                remove(arg0: number): void;
                remove(arg0: _javatypes.java.awt.MenuComponent): void;
                removeAll(): void;
                paramString(): string;
                getAccessibleContext(): _javatypes.javax.accessibility.AccessibleContext;
                
            }
            namespace Menu {
                interface static {
                    new (): _javatypes.java.awt.Menu;
                    new (arg0: string): _javatypes.java.awt.Menu;
                    new (arg0: string, arg1: boolean): _javatypes.java.awt.Menu;
                    
                    
                    
                }
            }
            interface SecondaryLoop extends _javatypes.java.lang.Interface {
                
                enter(): boolean;
                exit(): boolean;
                
            }
            namespace SecondaryLoop {
                interface static {
                    
                    
                    
                }
            }
            interface PageAttributes$MediaType extends _javatypes.java.awt.AttributeValue {
                
                
            }
            namespace PageAttributes$MediaType {
                interface static {
                    
                    readonly ISO_4A0: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_2A0: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_A0: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_A1: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_A2: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_A3: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_A4: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_A5: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_A6: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_A7: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_A8: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_A9: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_A10: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_B0: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_B1: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_B2: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_B3: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_B4: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_B5: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_B6: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_B7: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_B8: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_B9: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_B10: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly JIS_B0: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly JIS_B1: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly JIS_B2: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly JIS_B3: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly JIS_B4: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly JIS_B5: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly JIS_B6: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly JIS_B7: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly JIS_B8: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly JIS_B9: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly JIS_B10: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_C0: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_C1: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_C2: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_C3: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_C4: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_C5: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_C6: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_C7: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_C8: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_C9: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_C10: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_DESIGNATED_LONG: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly EXECUTIVE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly FOLIO: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly INVOICE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly LEDGER: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly NA_LETTER: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly NA_LEGAL: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly QUARTO: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly A: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly B: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly C: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly D: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly E: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly NA_10X15_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly NA_10X14_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly NA_10X13_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly NA_9X12_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly NA_9X11_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly NA_7X9_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly NA_6X9_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly NA_NUMBER_9_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly NA_NUMBER_10_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly NA_NUMBER_11_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly NA_NUMBER_12_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly NA_NUMBER_14_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly INVITE_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ITALY_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly MONARCH_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly PERSONAL_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly A0: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly A1: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly A2: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly A3: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly A4: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly A5: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly A6: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly A7: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly A8: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly A9: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly A10: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly B0: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly B1: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly B2: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly B3: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly B4: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_B4_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly B5: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_B5_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly B6: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly B7: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly B8: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly B9: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly B10: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly C0: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_C0_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly C1: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_C1_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly C2: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_C2_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly C3: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_C3_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly C4: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_C4_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly C5: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_C5_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly C6: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_C6_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly C7: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_C7_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly C8: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_C8_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly C9: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_C9_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly C10: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_C10_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ISO_DESIGNATED_LONG_ENVELOPE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly STATEMENT: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly TABLOID: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly LETTER: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly NOTE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly LEGAL: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ENV_10X15: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ENV_10X14: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ENV_10X13: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ENV_9X12: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ENV_9X11: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ENV_7X9: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ENV_6X9: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ENV_9: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ENV_10: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ENV_11: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ENV_12: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ENV_14: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ENV_INVITE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ENV_ITALY: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ENV_MONARCH: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ENV_PERSONAL: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly INVITE: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly ITALY: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly MONARCH: _javatypes.java.awt.PageAttributes$MediaType;
                    readonly PERSONAL: _javatypes.java.awt.PageAttributes$MediaType;
                    
                    
                }
            }
            interface JobAttributes$DialogType extends _javatypes.java.awt.AttributeValue {
                
                
            }
            namespace JobAttributes$DialogType {
                interface static {
                    
                    readonly COMMON: _javatypes.java.awt.JobAttributes$DialogType;
                    readonly NATIVE: _javatypes.java.awt.JobAttributes$DialogType;
                    readonly NONE: _javatypes.java.awt.JobAttributes$DialogType;
                    
                    
                }
            }
            interface PageAttributes$OrientationRequestedType extends _javatypes.java.awt.AttributeValue {
                
                
            }
            namespace PageAttributes$OrientationRequestedType {
                interface static {
                    
                    readonly PORTRAIT: _javatypes.java.awt.PageAttributes$OrientationRequestedType;
                    readonly LANDSCAPE: _javatypes.java.awt.PageAttributes$OrientationRequestedType;
                    
                    
                }
            }
            interface PageAttributes$ColorType extends _javatypes.java.awt.AttributeValue {
                
                
            }
            namespace PageAttributes$ColorType {
                interface static {
                    
                    readonly COLOR: _javatypes.java.awt.PageAttributes$ColorType;
                    readonly MONOCHROME: _javatypes.java.awt.PageAttributes$ColorType;
                    
                    
                }
            }
            interface JobAttributes$SidesType extends _javatypes.java.awt.AttributeValue {
                
                
            }
            namespace JobAttributes$SidesType {
                interface static {
                    
                    readonly ONE_SIDED: _javatypes.java.awt.JobAttributes$SidesType;
                    readonly TWO_SIDED_LONG_EDGE: _javatypes.java.awt.JobAttributes$SidesType;
                    readonly TWO_SIDED_SHORT_EDGE: _javatypes.java.awt.JobAttributes$SidesType;
                    
                    
                }
            }
            interface MenuShortcut extends any, _javatypes.java.io.Serializable {
                
                getKey(): number;
                usesShiftModifier(): boolean;
                equals(arg0: _javatypes.java.awt.MenuShortcut): boolean;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace MenuShortcut {
                interface static {
                    new (arg0: number): _javatypes.java.awt.MenuShortcut;
                    new (arg0: number, arg1: boolean): _javatypes.java.awt.MenuShortcut;
                    
                    
                    
                }
            }
            interface MenuItem extends _javatypes.java.awt.MenuComponent, _javatypes.javax.accessibility.Accessible {
                
                addNotify(): void;
                getLabel(): string;
                setLabel(arg0: string): void;
                isEnabled(): boolean;
                setEnabled(arg0: boolean): void;
                enable(): void;
                enable(arg0: boolean): void;
                disable(): void;
                getShortcut(): _javatypes.java.awt.MenuShortcut;
                setShortcut(arg0: _javatypes.java.awt.MenuShortcut): void;
                deleteShortcut(): void;
                setActionCommand(arg0: string): void;
                getActionCommand(): string;
                addActionListener(arg0: _javatypes.java.awt.event.ActionListener): void;
                removeActionListener(arg0: _javatypes.java.awt.event.ActionListener): void;
                getActionListeners(): _javatypes.java.awt.event.ActionListener[];
                getListeners<T>(arg0: _javatypes.java.lang.Class<T>): T[];
                paramString(): string;
                getAccessibleContext(): _javatypes.javax.accessibility.AccessibleContext;
                
            }
            namespace MenuItem {
                interface static {
                    new (): _javatypes.java.awt.MenuItem;
                    new (arg0: string): _javatypes.java.awt.MenuItem;
                    new (arg0: string, arg1: _javatypes.java.awt.MenuShortcut): _javatypes.java.awt.MenuItem;
                    
                    
                    
                }
            }
            interface JobAttributes$DestinationType extends _javatypes.java.awt.AttributeValue {
                
                
            }
            namespace JobAttributes$DestinationType {
                interface static {
                    
                    readonly FILE: _javatypes.java.awt.JobAttributes$DestinationType;
                    readonly PRINTER: _javatypes.java.awt.JobAttributes$DestinationType;
                    
                    
                }
            }
            interface PageAttributes$PrintQualityType extends _javatypes.java.awt.AttributeValue {
                
                
            }
            namespace PageAttributes$PrintQualityType {
                interface static {
                    
                    readonly HIGH: _javatypes.java.awt.PageAttributes$PrintQualityType;
                    readonly NORMAL: _javatypes.java.awt.PageAttributes$PrintQualityType;
                    readonly DRAFT: _javatypes.java.awt.PageAttributes$PrintQualityType;
                    
                    
                }
            }
            interface PageAttributes$OriginType extends _javatypes.java.awt.AttributeValue {
                
                
            }
            namespace PageAttributes$OriginType {
                interface static {
                    
                    readonly PHYSICAL: _javatypes.java.awt.PageAttributes$OriginType;
                    readonly PRINTABLE: _javatypes.java.awt.PageAttributes$OriginType;
                    
                    
                }
            }
            interface JobAttributes$MultipleDocumentHandlingType extends _javatypes.java.awt.AttributeValue {
                
                
            }
            namespace JobAttributes$MultipleDocumentHandlingType {
                interface static {
                    
                    readonly SEPARATE_DOCUMENTS_COLLATED_COPIES: _javatypes.java.awt.JobAttributes$MultipleDocumentHandlingType;
                    readonly SEPARATE_DOCUMENTS_UNCOLLATED_COPIES: _javatypes.java.awt.JobAttributes$MultipleDocumentHandlingType;
                    
                    
                }
            }
        
            namespace image {
            
                interface BufferedImage extends _javatypes.java.awt.Image, _javatypes.java.awt.image.WritableRenderedImage, _javatypes.java.awt.Transparency {
                    
                    getType(): number;
                    getColorModel(): _javatypes.java.awt.image.ColorModel;
                    getRaster(): _javatypes.java.awt.image.WritableRaster;
                    getAlphaRaster(): _javatypes.java.awt.image.WritableRaster;
                    getRGB(arg0: number, arg1: number): number;
                    getRGB(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: number, arg6: number): number[];
                    setRGB(arg0: number, arg1: number, arg2: number): void;
                    setRGB(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: number, arg6: number): void;
                    getWidth(): number;
                    getHeight(): number;
                    getWidth(arg0: _javatypes.java.awt.image.ImageObserver): number;
                    getHeight(arg0: _javatypes.java.awt.image.ImageObserver): number;
                    getSource(): _javatypes.java.awt.image.ImageProducer;
                    getProperty(arg0: string, arg1: _javatypes.java.awt.image.ImageObserver): any;
                    getProperty(arg0: string): any;
                    getGraphics(): _javatypes.java.awt.Graphics;
                    createGraphics(): _javatypes.java.awt.Graphics2D;
                    getSubimage(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.java.awt.image.BufferedImage;
                    isAlphaPremultiplied(): boolean;
                    coerceData(arg0: boolean): void;
                    toString(): string;
                    getSources(): _javatypes.java.util.Vector<_javatypes.java.awt.image.RenderedImage>;
                    getPropertyNames(): string[];
                    getMinX(): number;
                    getMinY(): number;
                    getSampleModel(): _javatypes.java.awt.image.SampleModel;
                    getNumXTiles(): number;
                    getNumYTiles(): number;
                    getMinTileX(): number;
                    getMinTileY(): number;
                    getTileWidth(): number;
                    getTileHeight(): number;
                    getTileGridXOffset(): number;
                    getTileGridYOffset(): number;
                    getTile(arg0: number, arg1: number): _javatypes.java.awt.image.Raster;
                    getData(): _javatypes.java.awt.image.Raster;
                    getData(arg0: _javatypes.java.awt.Rectangle): _javatypes.java.awt.image.Raster;
                    copyData(arg0: _javatypes.java.awt.image.WritableRaster): _javatypes.java.awt.image.WritableRaster;
                    setData(arg0: _javatypes.java.awt.image.Raster): void;
                    addTileObserver(arg0: _javatypes.java.awt.image.TileObserver): void;
                    removeTileObserver(arg0: _javatypes.java.awt.image.TileObserver): void;
                    isTileWritable(arg0: number, arg1: number): boolean;
                    getWritableTileIndices(): _javatypes.java.awt.Point[];
                    hasTileWriters(): boolean;
                    getWritableTile(arg0: number, arg1: number): _javatypes.java.awt.image.WritableRaster;
                    releaseWritableTile(arg0: number, arg1: number): void;
                    getTransparency(): number;
                    
                }
                namespace BufferedImage {
                    interface static {
                        new (arg0: number, arg1: number, arg2: number): _javatypes.java.awt.image.BufferedImage;
                        new (arg0: number, arg1: number, arg2: number, arg3: _javatypes.java.awt.image.IndexColorModel): _javatypes.java.awt.image.BufferedImage;
                        new (arg0: _javatypes.java.awt.image.ColorModel, arg1: _javatypes.java.awt.image.WritableRaster, arg2: boolean, arg3: _javatypes.java.util.Hashtable<any, any>): _javatypes.java.awt.image.BufferedImage;
                        
                        readonly TYPE_CUSTOM: number;
                        readonly TYPE_INT_RGB: number;
                        readonly TYPE_INT_ARGB: number;
                        readonly TYPE_INT_ARGB_PRE: number;
                        readonly TYPE_INT_BGR: number;
                        readonly TYPE_3BYTE_BGR: number;
                        readonly TYPE_4BYTE_ABGR: number;
                        readonly TYPE_4BYTE_ABGR_PRE: number;
                        readonly TYPE_USHORT_565_RGB: number;
                        readonly TYPE_USHORT_555_RGB: number;
                        readonly TYPE_BYTE_GRAY: number;
                        readonly TYPE_USHORT_GRAY: number;
                        readonly TYPE_BYTE_BINARY: number;
                        readonly TYPE_BYTE_INDEXED: number;
                        
                        
                    }
                }
                interface ImageProducer extends _javatypes.java.lang.Interface {
                    
                    addConsumer(arg0: _javatypes.java.awt.image.ImageConsumer): void;
                    isConsumer(arg0: _javatypes.java.awt.image.ImageConsumer): boolean;
                    removeConsumer(arg0: _javatypes.java.awt.image.ImageConsumer): void;
                    startProduction(arg0: _javatypes.java.awt.image.ImageConsumer): void;
                    requestTopDownLeftRightResend(arg0: _javatypes.java.awt.image.ImageConsumer): void;
                    
                }
                namespace ImageProducer {
                    interface static {
                        
                        
                        
                    }
                }
                interface ImageObserver extends _javatypes.java.lang.Interface {
                    
                    imageUpdate(arg0: _javatypes.java.awt.Image, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
                    
                }
                namespace ImageObserver {
                    interface static {
                        
                        readonly WIDTH: number;
                        readonly HEIGHT: number;
                        readonly PROPERTIES: number;
                        readonly SOMEBITS: number;
                        readonly FRAMEBITS: number;
                        readonly ALLBITS: number;
                        readonly ERROR: number;
                        readonly ABORT: number;
                        
                        
                    }
                }
                interface ColorModel extends any, _javatypes.java.awt.Transparency {
                    
                    hasAlpha(): boolean;
                    isAlphaPremultiplied(): boolean;
                    getTransferType(): number;
                    getPixelSize(): number;
                    getComponentSize(arg0: number): number;
                    getComponentSize(): number[];
                    getTransparency(): number;
                    getNumComponents(): number;
                    getNumColorComponents(): number;
                    getRed(arg0: number): number;
                    getGreen(arg0: number): number;
                    getBlue(arg0: number): number;
                    getAlpha(arg0: number): number;
                    getRGB(arg0: number): number;
                    getRed(arg0: any): number;
                    getGreen(arg0: any): number;
                    getBlue(arg0: any): number;
                    getAlpha(arg0: any): number;
                    getRGB(arg0: any): number;
                    getDataElements(arg0: number, arg1: any): any;
                    getComponents(arg0: number, arg1: number[], arg2: number): number[];
                    getComponents(arg0: any, arg1: number[], arg2: number): number[];
                    getUnnormalizedComponents(arg0: number[], arg1: number, arg2: number[], arg3: number): number[];
                    getNormalizedComponents(arg0: number[], arg1: number, arg2: number[], arg3: number): number[];
                    getDataElement(arg0: number[], arg1: number): number;
                    getDataElements(arg0: number[], arg1: number, arg2: any): any;
                    getDataElement(arg0: number[], arg1: number): number;
                    getDataElements(arg0: number[], arg1: number, arg2: any): any;
                    getNormalizedComponents(arg0: any, arg1: number[], arg2: number): number[];
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    getColorSpace(): _javatypes.java.awt.color.ColorSpace;
                    coerceData(arg0: _javatypes.java.awt.image.WritableRaster, arg1: boolean): _javatypes.java.awt.image.ColorModel;
                    isCompatibleRaster(arg0: _javatypes.java.awt.image.Raster): boolean;
                    createCompatibleWritableRaster(arg0: number, arg1: number): _javatypes.java.awt.image.WritableRaster;
                    createCompatibleSampleModel(arg0: number, arg1: number): _javatypes.java.awt.image.SampleModel;
                    isCompatibleSampleModel(arg0: _javatypes.java.awt.image.SampleModel): boolean;
                    finalize(): void;
                    getAlphaRaster(arg0: _javatypes.java.awt.image.WritableRaster): _javatypes.java.awt.image.WritableRaster;
                    toString(): string;
                    
                }
                namespace ColorModel {
                    interface static {
                        new (arg0: number): _javatypes.java.awt.image.ColorModel;
                        
                        
                        getRGBdefault(): _javatypes.java.awt.image.ColorModel;
                        
                    }
                }
                interface ImageConsumer extends _javatypes.java.lang.Interface {
                    
                    setDimensions(arg0: number, arg1: number): void;
                    setProperties(arg0: _javatypes.java.util.Hashtable<any, any>): void;
                    setColorModel(arg0: _javatypes.java.awt.image.ColorModel): void;
                    setHints(arg0: number): void;
                    setPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.java.awt.image.ColorModel, arg5: number[], arg6: number, arg7: number): void;
                    setPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.java.awt.image.ColorModel, arg5: number[], arg6: number, arg7: number): void;
                    imageComplete(arg0: number): void;
                    
                }
                namespace ImageConsumer {
                    interface static {
                        
                        readonly RANDOMPIXELORDER: number;
                        readonly TOPDOWNLEFTRIGHT: number;
                        readonly COMPLETESCANLINES: number;
                        readonly SINGLEPASS: number;
                        readonly SINGLEFRAME: number;
                        readonly IMAGEERROR: number;
                        readonly SINGLEFRAMEDONE: number;
                        readonly STATICIMAGEDONE: number;
                        readonly IMAGEABORTED: number;
                        
                        
                    }
                }
                interface IndexColorModel extends _javatypes.java.awt.image.ColorModel {
                    
                    getTransparency(): number;
                    getComponentSize(): number[];
                    getMapSize(): number;
                    getTransparentPixel(): number;
                    getReds(arg0: number[]): void;
                    getGreens(arg0: number[]): void;
                    getBlues(arg0: number[]): void;
                    getAlphas(arg0: number[]): void;
                    getRGBs(arg0: number[]): void;
                    getRed(arg0: number): number;
                    getGreen(arg0: number): number;
                    getBlue(arg0: number): number;
                    getAlpha(arg0: number): number;
                    getRGB(arg0: number): number;
                    getDataElements(arg0: number, arg1: any): any;
                    getComponents(arg0: number, arg1: number[], arg2: number): number[];
                    getComponents(arg0: any, arg1: number[], arg2: number): number[];
                    getDataElement(arg0: number[], arg1: number): number;
                    getDataElements(arg0: number[], arg1: number, arg2: any): any;
                    createCompatibleWritableRaster(arg0: number, arg1: number): _javatypes.java.awt.image.WritableRaster;
                    isCompatibleRaster(arg0: _javatypes.java.awt.image.Raster): boolean;
                    createCompatibleSampleModel(arg0: number, arg1: number): _javatypes.java.awt.image.SampleModel;
                    isCompatibleSampleModel(arg0: _javatypes.java.awt.image.SampleModel): boolean;
                    convertToIntDiscrete(arg0: _javatypes.java.awt.image.Raster, arg1: boolean): _javatypes.java.awt.image.BufferedImage;
                    isValid(arg0: number): boolean;
                    isValid(): boolean;
                    getValidPixels(): _javatypes.java.math.BigInteger;
                    finalize(): void;
                    toString(): string;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    
                }
                namespace IndexColorModel {
                    interface static {
                        new (arg0: number, arg1: number, arg2: number[], arg3: number[], arg4: number[]): _javatypes.java.awt.image.IndexColorModel;
                        new (arg0: number, arg1: number, arg2: number[], arg3: number[], arg4: number[], arg5: number): _javatypes.java.awt.image.IndexColorModel;
                        new (arg0: number, arg1: number, arg2: number[], arg3: number[], arg4: number[], arg5: number[]): _javatypes.java.awt.image.IndexColorModel;
                        new (arg0: number, arg1: number, arg2: number[], arg3: number, arg4: boolean): _javatypes.java.awt.image.IndexColorModel;
                        new (arg0: number, arg1: number, arg2: number[], arg3: number, arg4: boolean, arg5: number): _javatypes.java.awt.image.IndexColorModel;
                        new (arg0: number, arg1: number, arg2: number[], arg3: number, arg4: boolean, arg5: number, arg6: number): _javatypes.java.awt.image.IndexColorModel;
                        new (arg0: number, arg1: number, arg2: number[], arg3: number, arg4: number, arg5: _javatypes.java.math.BigInteger): _javatypes.java.awt.image.IndexColorModel;
                        
                        
                        
                    }
                }
                interface RenderedImage extends _javatypes.java.lang.Interface {
                    
                    getSources(): _javatypes.java.util.Vector<_javatypes.java.awt.image.RenderedImage>;
                    getProperty(arg0: string): any;
                    getPropertyNames(): string[];
                    getColorModel(): _javatypes.java.awt.image.ColorModel;
                    getSampleModel(): _javatypes.java.awt.image.SampleModel;
                    getWidth(): number;
                    getHeight(): number;
                    getMinX(): number;
                    getMinY(): number;
                    getNumXTiles(): number;
                    getNumYTiles(): number;
                    getMinTileX(): number;
                    getMinTileY(): number;
                    getTileWidth(): number;
                    getTileHeight(): number;
                    getTileGridXOffset(): number;
                    getTileGridYOffset(): number;
                    getTile(arg0: number, arg1: number): _javatypes.java.awt.image.Raster;
                    getData(): _javatypes.java.awt.image.Raster;
                    getData(arg0: _javatypes.java.awt.Rectangle): _javatypes.java.awt.image.Raster;
                    copyData(arg0: _javatypes.java.awt.image.WritableRaster): _javatypes.java.awt.image.WritableRaster;
                    
                }
                namespace RenderedImage {
                    interface static {
                        
                        
                        
                    }
                }
                interface WritableRenderedImage extends _javatypes.java.lang.Interface, _javatypes.java.awt.image.RenderedImage {
                    
                    addTileObserver(arg0: _javatypes.java.awt.image.TileObserver): void;
                    removeTileObserver(arg0: _javatypes.java.awt.image.TileObserver): void;
                    getWritableTile(arg0: number, arg1: number): _javatypes.java.awt.image.WritableRaster;
                    releaseWritableTile(arg0: number, arg1: number): void;
                    isTileWritable(arg0: number, arg1: number): boolean;
                    getWritableTileIndices(): _javatypes.java.awt.Point[];
                    hasTileWriters(): boolean;
                    setData(arg0: _javatypes.java.awt.image.Raster): void;
                    
                }
                namespace WritableRenderedImage {
                    interface static {
                        
                        
                        
                    }
                }
                interface TileObserver extends _javatypes.java.lang.Interface {
                    
                    tileUpdate(arg0: _javatypes.java.awt.image.WritableRenderedImage, arg1: number, arg2: number, arg3: boolean): void;
                    
                }
                namespace TileObserver {
                    interface static {
                        
                        
                        
                    }
                }
                interface Raster extends any {
                    
                    getParent(): _javatypes.java.awt.image.Raster;
                    getSampleModelTranslateX(): number;
                    getSampleModelTranslateY(): number;
                    createCompatibleWritableRaster(): _javatypes.java.awt.image.WritableRaster;
                    createCompatibleWritableRaster(arg0: number, arg1: number): _javatypes.java.awt.image.WritableRaster;
                    createCompatibleWritableRaster(arg0: _javatypes.java.awt.Rectangle): _javatypes.java.awt.image.WritableRaster;
                    createCompatibleWritableRaster(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.java.awt.image.WritableRaster;
                    createTranslatedChild(arg0: number, arg1: number): _javatypes.java.awt.image.Raster;
                    createChild(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number[]): _javatypes.java.awt.image.Raster;
                    getBounds(): _javatypes.java.awt.Rectangle;
                    getMinX(): number;
                    getMinY(): number;
                    getWidth(): number;
                    getHeight(): number;
                    getNumBands(): number;
                    getNumDataElements(): number;
                    getTransferType(): number;
                    getDataBuffer(): _javatypes.java.awt.image.DataBuffer;
                    getSampleModel(): _javatypes.java.awt.image.SampleModel;
                    getDataElements(arg0: number, arg1: number, arg2: any): any;
                    getDataElements(arg0: number, arg1: number, arg2: number, arg3: number, arg4: any): any;
                    getPixel(arg0: number, arg1: number, arg2: number[]): number[];
                    getPixel(arg0: number, arg1: number, arg2: number[]): number[];
                    getPixel(arg0: number, arg1: number, arg2: number[]): number[];
                    getPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[]): number[];
                    getPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[]): number[];
                    getPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[]): number[];
                    getSample(arg0: number, arg1: number, arg2: number): number;
                    getSampleFloat(arg0: number, arg1: number, arg2: number): number;
                    getSampleDouble(arg0: number, arg1: number, arg2: number): number;
                    getSamples(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[]): number[];
                    getSamples(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[]): number[];
                    getSamples(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[]): number[];
                    
                }
                namespace Raster {
                    interface static {
                        
                        
                        createInterleavedRaster(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.java.awt.Point): _javatypes.java.awt.image.WritableRaster;
                        createInterleavedRaster(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[], arg6: _javatypes.java.awt.Point): _javatypes.java.awt.image.WritableRaster;
                        createBandedRaster(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.java.awt.Point): _javatypes.java.awt.image.WritableRaster;
                        createBandedRaster(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: number[], arg6: _javatypes.java.awt.Point): _javatypes.java.awt.image.WritableRaster;
                        createPackedRaster(arg0: number, arg1: number, arg2: number, arg3: number[], arg4: _javatypes.java.awt.Point): _javatypes.java.awt.image.WritableRaster;
                        createPackedRaster(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: _javatypes.java.awt.Point): _javatypes.java.awt.image.WritableRaster;
                        createInterleavedRaster(arg0: _javatypes.java.awt.image.DataBuffer, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[], arg6: _javatypes.java.awt.Point): _javatypes.java.awt.image.WritableRaster;
                        createBandedRaster(arg0: _javatypes.java.awt.image.DataBuffer, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: number[], arg6: _javatypes.java.awt.Point): _javatypes.java.awt.image.WritableRaster;
                        createPackedRaster(arg0: _javatypes.java.awt.image.DataBuffer, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: _javatypes.java.awt.Point): _javatypes.java.awt.image.WritableRaster;
                        createPackedRaster(arg0: _javatypes.java.awt.image.DataBuffer, arg1: number, arg2: number, arg3: number, arg4: _javatypes.java.awt.Point): _javatypes.java.awt.image.WritableRaster;
                        createRaster(arg0: _javatypes.java.awt.image.SampleModel, arg1: _javatypes.java.awt.image.DataBuffer, arg2: _javatypes.java.awt.Point): _javatypes.java.awt.image.Raster;
                        createWritableRaster(arg0: _javatypes.java.awt.image.SampleModel, arg1: _javatypes.java.awt.Point): _javatypes.java.awt.image.WritableRaster;
                        createWritableRaster(arg0: _javatypes.java.awt.image.SampleModel, arg1: _javatypes.java.awt.image.DataBuffer, arg2: _javatypes.java.awt.Point): _javatypes.java.awt.image.WritableRaster;
                        
                    }
                }
                interface WritableRaster extends _javatypes.java.awt.image.Raster {
                    
                    getWritableParent(): _javatypes.java.awt.image.WritableRaster;
                    createWritableTranslatedChild(arg0: number, arg1: number): _javatypes.java.awt.image.WritableRaster;
                    createWritableChild(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number[]): _javatypes.java.awt.image.WritableRaster;
                    setDataElements(arg0: number, arg1: number, arg2: any): void;
                    setDataElements(arg0: number, arg1: number, arg2: _javatypes.java.awt.image.Raster): void;
                    setDataElements(arg0: number, arg1: number, arg2: number, arg3: number, arg4: any): void;
                    setRect(arg0: _javatypes.java.awt.image.Raster): void;
                    setRect(arg0: number, arg1: number, arg2: _javatypes.java.awt.image.Raster): void;
                    setPixel(arg0: number, arg1: number, arg2: number[]): void;
                    setPixel(arg0: number, arg1: number, arg2: number[]): void;
                    setPixel(arg0: number, arg1: number, arg2: number[]): void;
                    setPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[]): void;
                    setPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[]): void;
                    setPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[]): void;
                    setSample(arg0: number, arg1: number, arg2: number, arg3: number): void;
                    setSample(arg0: number, arg1: number, arg2: number, arg3: number): void;
                    setSample(arg0: number, arg1: number, arg2: number, arg3: number): void;
                    setSamples(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[]): void;
                    setSamples(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[]): void;
                    setSamples(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[]): void;
                    
                }
                namespace WritableRaster {
                    interface static {
                        
                        
                        
                    }
                }
                interface SampleModel extends any {
                    
                    getWidth(): number;
                    getHeight(): number;
                    getNumBands(): number;
                    getNumDataElements(): number;
                    getDataType(): number;
                    getTransferType(): number;
                    getPixel(arg0: number, arg1: number, arg2: number[], arg3: _javatypes.java.awt.image.DataBuffer): number[];
                    getDataElements(arg0: number, arg1: number, arg2: any, arg3: _javatypes.java.awt.image.DataBuffer): any;
                    getDataElements(arg0: number, arg1: number, arg2: number, arg3: number, arg4: any, arg5: _javatypes.java.awt.image.DataBuffer): any;
                    setDataElements(arg0: number, arg1: number, arg2: any, arg3: _javatypes.java.awt.image.DataBuffer): void;
                    setDataElements(arg0: number, arg1: number, arg2: number, arg3: number, arg4: any, arg5: _javatypes.java.awt.image.DataBuffer): void;
                    getPixel(arg0: number, arg1: number, arg2: number[], arg3: _javatypes.java.awt.image.DataBuffer): number[];
                    getPixel(arg0: number, arg1: number, arg2: number[], arg3: _javatypes.java.awt.image.DataBuffer): number[];
                    getPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: _javatypes.java.awt.image.DataBuffer): number[];
                    getPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: _javatypes.java.awt.image.DataBuffer): number[];
                    getPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: _javatypes.java.awt.image.DataBuffer): number[];
                    getSample(arg0: number, arg1: number, arg2: number, arg3: _javatypes.java.awt.image.DataBuffer): number;
                    getSampleFloat(arg0: number, arg1: number, arg2: number, arg3: _javatypes.java.awt.image.DataBuffer): number;
                    getSampleDouble(arg0: number, arg1: number, arg2: number, arg3: _javatypes.java.awt.image.DataBuffer): number;
                    getSamples(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[], arg6: _javatypes.java.awt.image.DataBuffer): number[];
                    getSamples(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[], arg6: _javatypes.java.awt.image.DataBuffer): number[];
                    getSamples(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[], arg6: _javatypes.java.awt.image.DataBuffer): number[];
                    setPixel(arg0: number, arg1: number, arg2: number[], arg3: _javatypes.java.awt.image.DataBuffer): void;
                    setPixel(arg0: number, arg1: number, arg2: number[], arg3: _javatypes.java.awt.image.DataBuffer): void;
                    setPixel(arg0: number, arg1: number, arg2: number[], arg3: _javatypes.java.awt.image.DataBuffer): void;
                    setPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: _javatypes.java.awt.image.DataBuffer): void;
                    setPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: _javatypes.java.awt.image.DataBuffer): void;
                    setPixels(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: _javatypes.java.awt.image.DataBuffer): void;
                    setSample(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.java.awt.image.DataBuffer): void;
                    setSample(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.java.awt.image.DataBuffer): void;
                    setSample(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.java.awt.image.DataBuffer): void;
                    setSamples(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[], arg6: _javatypes.java.awt.image.DataBuffer): void;
                    setSamples(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[], arg6: _javatypes.java.awt.image.DataBuffer): void;
                    setSamples(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number[], arg6: _javatypes.java.awt.image.DataBuffer): void;
                    createCompatibleSampleModel(arg0: number, arg1: number): _javatypes.java.awt.image.SampleModel;
                    createSubsetSampleModel(arg0: number[]): _javatypes.java.awt.image.SampleModel;
                    createDataBuffer(): _javatypes.java.awt.image.DataBuffer;
                    getSampleSize(): number[];
                    getSampleSize(arg0: number): number;
                    
                }
                namespace SampleModel {
                    interface static {
                        new (arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.java.awt.image.SampleModel;
                        
                        
                        
                    }
                }
                interface DataBuffer extends any {
                    
                    getDataType(): number;
                    getSize(): number;
                    getOffset(): number;
                    getOffsets(): number[];
                    getNumBanks(): number;
                    getElem(arg0: number): number;
                    getElem(arg0: number, arg1: number): number;
                    setElem(arg0: number, arg1: number): void;
                    setElem(arg0: number, arg1: number, arg2: number): void;
                    getElemFloat(arg0: number): number;
                    getElemFloat(arg0: number, arg1: number): number;
                    setElemFloat(arg0: number, arg1: number): void;
                    setElemFloat(arg0: number, arg1: number, arg2: number): void;
                    getElemDouble(arg0: number): number;
                    getElemDouble(arg0: number, arg1: number): number;
                    setElemDouble(arg0: number, arg1: number): void;
                    setElemDouble(arg0: number, arg1: number, arg2: number): void;
                    
                }
                namespace DataBuffer {
                    interface static {
                        
                        readonly TYPE_BYTE: number;
                        readonly TYPE_USHORT: number;
                        readonly TYPE_SHORT: number;
                        readonly TYPE_INT: number;
                        readonly TYPE_FLOAT: number;
                        readonly TYPE_DOUBLE: number;
                        readonly TYPE_UNDEFINED: number;
                        
                        getDataTypeSize(arg0: number): number;
                        
                    }
                }
                interface VolatileImage extends _javatypes.java.awt.Image, _javatypes.java.awt.Transparency {
                    
                    getSnapshot(): _javatypes.java.awt.image.BufferedImage;
                    getWidth(): number;
                    getHeight(): number;
                    getSource(): _javatypes.java.awt.image.ImageProducer;
                    getGraphics(): _javatypes.java.awt.Graphics;
                    createGraphics(): _javatypes.java.awt.Graphics2D;
                    validate(arg0: _javatypes.java.awt.GraphicsConfiguration): number;
                    contentsLost(): boolean;
                    getCapabilities(): _javatypes.java.awt.ImageCapabilities;
                    getTransparency(): number;
                    
                }
                namespace VolatileImage {
                    interface static {
                        
                        readonly IMAGE_OK: number;
                        readonly IMAGE_RESTORED: number;
                        readonly IMAGE_INCOMPATIBLE: number;
                        
                        
                    }
                }
                interface BufferedImageOp extends _javatypes.java.lang.Interface {
                    
                    filter(arg0: _javatypes.java.awt.image.BufferedImage, arg1: _javatypes.java.awt.image.BufferedImage): _javatypes.java.awt.image.BufferedImage;
                    getBounds2D(arg0: _javatypes.java.awt.image.BufferedImage): _javatypes.java.awt.geom.Rectangle2D;
                    createCompatibleDestImage(arg0: _javatypes.java.awt.image.BufferedImage, arg1: _javatypes.java.awt.image.ColorModel): _javatypes.java.awt.image.BufferedImage;
                    getPoint2D(arg0: _javatypes.java.awt.geom.Point2D, arg1: _javatypes.java.awt.geom.Point2D): _javatypes.java.awt.geom.Point2D;
                    getRenderingHints(): _javatypes.java.awt.RenderingHints;
                    
                }
                namespace BufferedImageOp {
                    interface static {
                        
                        
                        
                    }
                }
                interface BufferStrategy extends any {
                    
                    getCapabilities(): _javatypes.java.awt.BufferCapabilities;
                    getDrawGraphics(): _javatypes.java.awt.Graphics;
                    contentsLost(): boolean;
                    contentsRestored(): boolean;
                    show(): void;
                    dispose(): void;
                    
                }
                namespace BufferStrategy {
                    interface static {
                        
                        
                        
                    }
                }
            
                namespace renderable {
                
                    interface RenderableImage extends _javatypes.java.lang.Interface {
                        
                        getSources(): _javatypes.java.util.Vector<_javatypes.java.awt.image.renderable.RenderableImage>;
                        getProperty(arg0: string): any;
                        getPropertyNames(): string[];
                        isDynamic(): boolean;
                        getWidth(): number;
                        getHeight(): number;
                        getMinX(): number;
                        getMinY(): number;
                        createScaledRendering(arg0: number, arg1: number, arg2: _javatypes.java.awt.RenderingHints): _javatypes.java.awt.image.RenderedImage;
                        createDefaultRendering(): _javatypes.java.awt.image.RenderedImage;
                        createRendering(arg0: _javatypes.java.awt.image.renderable.RenderContext): _javatypes.java.awt.image.RenderedImage;
                        
                    }
                    namespace RenderableImage {
                        interface static {
                            
                            readonly HINTS_OBSERVED: string;
                            
                            
                        }
                    }
                    interface RenderContext extends any, _javatypes.java.lang.Cloneable {
                        
                        getRenderingHints(): _javatypes.java.awt.RenderingHints;
                        setRenderingHints(arg0: _javatypes.java.awt.RenderingHints): void;
                        setTransform(arg0: _javatypes.java.awt.geom.AffineTransform): void;
                        preConcatenateTransform(arg0: _javatypes.java.awt.geom.AffineTransform): void;
                        preConcetenateTransform(arg0: _javatypes.java.awt.geom.AffineTransform): void;
                        concatenateTransform(arg0: _javatypes.java.awt.geom.AffineTransform): void;
                        concetenateTransform(arg0: _javatypes.java.awt.geom.AffineTransform): void;
                        getTransform(): _javatypes.java.awt.geom.AffineTransform;
                        setAreaOfInterest(arg0: _javatypes.java.awt.Shape): void;
                        getAreaOfInterest(): _javatypes.java.awt.Shape;
                        clone(): any;
                        
                    }
                    namespace RenderContext {
                        interface static {
                            new (arg0: _javatypes.java.awt.geom.AffineTransform, arg1: _javatypes.java.awt.Shape, arg2: _javatypes.java.awt.RenderingHints): _javatypes.java.awt.image.renderable.RenderContext;
                            new (arg0: _javatypes.java.awt.geom.AffineTransform): _javatypes.java.awt.image.renderable.RenderContext;
                            new (arg0: _javatypes.java.awt.geom.AffineTransform, arg1: _javatypes.java.awt.RenderingHints): _javatypes.java.awt.image.renderable.RenderContext;
                            new (arg0: _javatypes.java.awt.geom.AffineTransform, arg1: _javatypes.java.awt.Shape): _javatypes.java.awt.image.renderable.RenderContext;
                            
                            
                            
                        }
                    }
                }
            }
        
            namespace geom {
            
                interface Rectangle2D extends _javatypes.java.awt.geom.RectangularShape {
                    
                    setRect(arg0: number, arg1: number, arg2: number, arg3: number): void;
                    setRect(arg0: _javatypes.java.awt.geom.Rectangle2D): void;
                    intersectsLine(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                    intersectsLine(arg0: _javatypes.java.awt.geom.Line2D): boolean;
                    outcode(arg0: number, arg1: number): number;
                    outcode(arg0: _javatypes.java.awt.geom.Point2D): number;
                    setFrame(arg0: number, arg1: number, arg2: number, arg3: number): void;
                    getBounds2D(): _javatypes.java.awt.geom.Rectangle2D;
                    contains(arg0: number, arg1: number): boolean;
                    intersects(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                    contains(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                    createIntersection(arg0: _javatypes.java.awt.geom.Rectangle2D): _javatypes.java.awt.geom.Rectangle2D;
                    createUnion(arg0: _javatypes.java.awt.geom.Rectangle2D): _javatypes.java.awt.geom.Rectangle2D;
                    add(arg0: number, arg1: number): void;
                    add(arg0: _javatypes.java.awt.geom.Point2D): void;
                    add(arg0: _javatypes.java.awt.geom.Rectangle2D): void;
                    getPathIterator(arg0: _javatypes.java.awt.geom.AffineTransform): _javatypes.java.awt.geom.PathIterator;
                    getPathIterator(arg0: _javatypes.java.awt.geom.AffineTransform, arg1: number): _javatypes.java.awt.geom.PathIterator;
                    hashCode(): number;
                    equals(arg0: any): boolean;
                    
                }
                namespace Rectangle2D {
                    interface static {
                        
                        readonly OUT_LEFT: number;
                        readonly OUT_TOP: number;
                        readonly OUT_RIGHT: number;
                        readonly OUT_BOTTOM: number;
                        
                        intersect(arg0: _javatypes.java.awt.geom.Rectangle2D, arg1: _javatypes.java.awt.geom.Rectangle2D, arg2: _javatypes.java.awt.geom.Rectangle2D): void;
                        union(arg0: _javatypes.java.awt.geom.Rectangle2D, arg1: _javatypes.java.awt.geom.Rectangle2D, arg2: _javatypes.java.awt.geom.Rectangle2D): void;
                        
                    }
                }
                interface Line2D extends any, _javatypes.java.awt.Shape, _javatypes.java.lang.Cloneable {
                    
                    getX1(): number;
                    getY1(): number;
                    getP1(): _javatypes.java.awt.geom.Point2D;
                    getX2(): number;
                    getY2(): number;
                    getP2(): _javatypes.java.awt.geom.Point2D;
                    setLine(arg0: number, arg1: number, arg2: number, arg3: number): void;
                    setLine(arg0: _javatypes.java.awt.geom.Point2D, arg1: _javatypes.java.awt.geom.Point2D): void;
                    setLine(arg0: _javatypes.java.awt.geom.Line2D): void;
                    relativeCCW(arg0: number, arg1: number): number;
                    relativeCCW(arg0: _javatypes.java.awt.geom.Point2D): number;
                    intersectsLine(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                    intersectsLine(arg0: _javatypes.java.awt.geom.Line2D): boolean;
                    ptSegDistSq(arg0: number, arg1: number): number;
                    ptSegDistSq(arg0: _javatypes.java.awt.geom.Point2D): number;
                    ptSegDist(arg0: number, arg1: number): number;
                    ptSegDist(arg0: _javatypes.java.awt.geom.Point2D): number;
                    ptLineDistSq(arg0: number, arg1: number): number;
                    ptLineDistSq(arg0: _javatypes.java.awt.geom.Point2D): number;
                    ptLineDist(arg0: number, arg1: number): number;
                    ptLineDist(arg0: _javatypes.java.awt.geom.Point2D): number;
                    contains(arg0: number, arg1: number): boolean;
                    contains(arg0: _javatypes.java.awt.geom.Point2D): boolean;
                    intersects(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                    intersects(arg0: _javatypes.java.awt.geom.Rectangle2D): boolean;
                    contains(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                    contains(arg0: _javatypes.java.awt.geom.Rectangle2D): boolean;
                    getBounds(): _javatypes.java.awt.Rectangle;
                    getPathIterator(arg0: _javatypes.java.awt.geom.AffineTransform): _javatypes.java.awt.geom.PathIterator;
                    getPathIterator(arg0: _javatypes.java.awt.geom.AffineTransform, arg1: number): _javatypes.java.awt.geom.PathIterator;
                    clone(): any;
                    
                }
                namespace Line2D {
                    interface static {
                        
                        
                        relativeCCW(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
                        linesIntersect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): boolean;
                        ptSegDistSq(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
                        ptSegDist(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
                        ptLineDistSq(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
                        ptLineDist(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
                        
                    }
                }
                interface AffineTransform extends any, _javatypes.java.lang.Cloneable, _javatypes.java.io.Serializable {
                    
                    getType(): number;
                    getDeterminant(): number;
                    getMatrix(arg0: number[]): void;
                    getScaleX(): number;
                    getScaleY(): number;
                    getShearX(): number;
                    getShearY(): number;
                    getTranslateX(): number;
                    getTranslateY(): number;
                    translate(arg0: number, arg1: number): void;
                    rotate(arg0: number): void;
                    rotate(arg0: number, arg1: number, arg2: number): void;
                    rotate(arg0: number, arg1: number): void;
                    rotate(arg0: number, arg1: number, arg2: number, arg3: number): void;
                    quadrantRotate(arg0: number): void;
                    quadrantRotate(arg0: number, arg1: number, arg2: number): void;
                    scale(arg0: number, arg1: number): void;
                    shear(arg0: number, arg1: number): void;
                    setToIdentity(): void;
                    setToTranslation(arg0: number, arg1: number): void;
                    setToRotation(arg0: number): void;
                    setToRotation(arg0: number, arg1: number, arg2: number): void;
                    setToRotation(arg0: number, arg1: number): void;
                    setToRotation(arg0: number, arg1: number, arg2: number, arg3: number): void;
                    setToQuadrantRotation(arg0: number): void;
                    setToQuadrantRotation(arg0: number, arg1: number, arg2: number): void;
                    setToScale(arg0: number, arg1: number): void;
                    setToShear(arg0: number, arg1: number): void;
                    setTransform(arg0: _javatypes.java.awt.geom.AffineTransform): void;
                    setTransform(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): void;
                    concatenate(arg0: _javatypes.java.awt.geom.AffineTransform): void;
                    preConcatenate(arg0: _javatypes.java.awt.geom.AffineTransform): void;
                    createInverse(): _javatypes.java.awt.geom.AffineTransform;
                    invert(): void;
                    transform(arg0: _javatypes.java.awt.geom.Point2D, arg1: _javatypes.java.awt.geom.Point2D): _javatypes.java.awt.geom.Point2D;
                    transform(arg0: _javatypes.java.awt.geom.Point2D[], arg1: number, arg2: _javatypes.java.awt.geom.Point2D[], arg3: number, arg4: number): void;
                    transform(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
                    transform(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
                    transform(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
                    transform(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
                    inverseTransform(arg0: _javatypes.java.awt.geom.Point2D, arg1: _javatypes.java.awt.geom.Point2D): _javatypes.java.awt.geom.Point2D;
                    inverseTransform(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
                    deltaTransform(arg0: _javatypes.java.awt.geom.Point2D, arg1: _javatypes.java.awt.geom.Point2D): _javatypes.java.awt.geom.Point2D;
                    deltaTransform(arg0: number[], arg1: number, arg2: number[], arg3: number, arg4: number): void;
                    createTransformedShape(arg0: _javatypes.java.awt.Shape): _javatypes.java.awt.Shape;
                    toString(): string;
                    isIdentity(): boolean;
                    clone(): any;
                    hashCode(): number;
                    equals(arg0: any): boolean;
                    
                }
                namespace AffineTransform {
                    interface static {
                        new (): _javatypes.java.awt.geom.AffineTransform;
                        new (arg0: _javatypes.java.awt.geom.AffineTransform): _javatypes.java.awt.geom.AffineTransform;
                        new (arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.java.awt.geom.AffineTransform;
                        new (arg0: number[]): _javatypes.java.awt.geom.AffineTransform;
                        new (arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.java.awt.geom.AffineTransform;
                        new (arg0: number[]): _javatypes.java.awt.geom.AffineTransform;
                        
                        readonly TYPE_IDENTITY: number;
                        readonly TYPE_TRANSLATION: number;
                        readonly TYPE_UNIFORM_SCALE: number;
                        readonly TYPE_GENERAL_SCALE: number;
                        readonly TYPE_MASK_SCALE: number;
                        readonly TYPE_FLIP: number;
                        readonly TYPE_QUADRANT_ROTATION: number;
                        readonly TYPE_GENERAL_ROTATION: number;
                        readonly TYPE_MASK_ROTATION: number;
                        readonly TYPE_GENERAL_TRANSFORM: number;
                        
                        getTranslateInstance(arg0: number, arg1: number): _javatypes.java.awt.geom.AffineTransform;
                        getRotateInstance(arg0: number): _javatypes.java.awt.geom.AffineTransform;
                        getRotateInstance(arg0: number, arg1: number, arg2: number): _javatypes.java.awt.geom.AffineTransform;
                        getRotateInstance(arg0: number, arg1: number): _javatypes.java.awt.geom.AffineTransform;
                        getRotateInstance(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.java.awt.geom.AffineTransform;
                        getQuadrantRotateInstance(arg0: number): _javatypes.java.awt.geom.AffineTransform;
                        getQuadrantRotateInstance(arg0: number, arg1: number, arg2: number): _javatypes.java.awt.geom.AffineTransform;
                        getScaleInstance(arg0: number, arg1: number): _javatypes.java.awt.geom.AffineTransform;
                        getShearInstance(arg0: number, arg1: number): _javatypes.java.awt.geom.AffineTransform;
                        
                    }
                }
                interface RectangularShape extends any, _javatypes.java.awt.Shape, _javatypes.java.lang.Cloneable {
                    
                    getX(): number;
                    getY(): number;
                    getWidth(): number;
                    getHeight(): number;
                    getMinX(): number;
                    getMinY(): number;
                    getMaxX(): number;
                    getMaxY(): number;
                    getCenterX(): number;
                    getCenterY(): number;
                    getFrame(): _javatypes.java.awt.geom.Rectangle2D;
                    isEmpty(): boolean;
                    setFrame(arg0: number, arg1: number, arg2: number, arg3: number): void;
                    setFrame(arg0: _javatypes.java.awt.geom.Point2D, arg1: _javatypes.java.awt.geom.Dimension2D): void;
                    setFrame(arg0: _javatypes.java.awt.geom.Rectangle2D): void;
                    setFrameFromDiagonal(arg0: number, arg1: number, arg2: number, arg3: number): void;
                    setFrameFromDiagonal(arg0: _javatypes.java.awt.geom.Point2D, arg1: _javatypes.java.awt.geom.Point2D): void;
                    setFrameFromCenter(arg0: number, arg1: number, arg2: number, arg3: number): void;
                    setFrameFromCenter(arg0: _javatypes.java.awt.geom.Point2D, arg1: _javatypes.java.awt.geom.Point2D): void;
                    contains(arg0: _javatypes.java.awt.geom.Point2D): boolean;
                    intersects(arg0: _javatypes.java.awt.geom.Rectangle2D): boolean;
                    contains(arg0: _javatypes.java.awt.geom.Rectangle2D): boolean;
                    getBounds(): _javatypes.java.awt.Rectangle;
                    getPathIterator(arg0: _javatypes.java.awt.geom.AffineTransform, arg1: number): _javatypes.java.awt.geom.PathIterator;
                    clone(): any;
                    
                }
                namespace RectangularShape {
                    interface static {
                        
                        
                        
                    }
                }
                interface PathIterator extends _javatypes.java.lang.Interface {
                    
                    getWindingRule(): number;
                    isDone(): boolean;
                    next(): void;
                    currentSegment(arg0: number[]): number;
                    currentSegment(arg0: number[]): number;
                    
                }
                namespace PathIterator {
                    interface static {
                        
                        readonly WIND_EVEN_ODD: number;
                        readonly WIND_NON_ZERO: number;
                        readonly SEG_MOVETO: number;
                        readonly SEG_LINETO: number;
                        readonly SEG_QUADTO: number;
                        readonly SEG_CUBICTO: number;
                        readonly SEG_CLOSE: number;
                        
                        
                    }
                }
                interface Point2D extends any, _javatypes.java.lang.Cloneable {
                    
                    getX(): number;
                    getY(): number;
                    setLocation(arg0: number, arg1: number): void;
                    setLocation(arg0: _javatypes.java.awt.geom.Point2D): void;
                    distanceSq(arg0: number, arg1: number): number;
                    distanceSq(arg0: _javatypes.java.awt.geom.Point2D): number;
                    distance(arg0: number, arg1: number): number;
                    distance(arg0: _javatypes.java.awt.geom.Point2D): number;
                    clone(): any;
                    hashCode(): number;
                    equals(arg0: any): boolean;
                    
                }
                namespace Point2D {
                    interface static {
                        
                        
                        distanceSq(arg0: number, arg1: number, arg2: number, arg3: number): number;
                        distance(arg0: number, arg1: number, arg2: number, arg3: number): number;
                        
                    }
                }
                interface Dimension2D extends any, _javatypes.java.lang.Cloneable {
                    
                    getWidth(): number;
                    getHeight(): number;
                    setSize(arg0: number, arg1: number): void;
                    setSize(arg0: _javatypes.java.awt.geom.Dimension2D): void;
                    clone(): any;
                    
                }
                namespace Dimension2D {
                    interface static {
                        
                        
                        
                    }
                }
            }
        
            namespace color {
            
                interface ColorSpace extends any, _javatypes.java.io.Serializable {
                    
                    isCS_sRGB(): boolean;
                    toRGB(arg0: number[]): number[];
                    fromRGB(arg0: number[]): number[];
                    toCIEXYZ(arg0: number[]): number[];
                    fromCIEXYZ(arg0: number[]): number[];
                    getType(): number;
                    getNumComponents(): number;
                    getName(arg0: number): string;
                    getMinValue(arg0: number): number;
                    getMaxValue(arg0: number): number;
                    
                }
                namespace ColorSpace {
                    interface static {
                        
                        readonly TYPE_XYZ: number;
                        readonly TYPE_Lab: number;
                        readonly TYPE_Luv: number;
                        readonly TYPE_YCbCr: number;
                        readonly TYPE_Yxy: number;
                        readonly TYPE_RGB: number;
                        readonly TYPE_GRAY: number;
                        readonly TYPE_HSV: number;
                        readonly TYPE_HLS: number;
                        readonly TYPE_CMYK: number;
                        readonly TYPE_CMY: number;
                        readonly TYPE_2CLR: number;
                        readonly TYPE_3CLR: number;
                        readonly TYPE_4CLR: number;
                        readonly TYPE_5CLR: number;
                        readonly TYPE_6CLR: number;
                        readonly TYPE_7CLR: number;
                        readonly TYPE_8CLR: number;
                        readonly TYPE_9CLR: number;
                        readonly TYPE_ACLR: number;
                        readonly TYPE_BCLR: number;
                        readonly TYPE_CCLR: number;
                        readonly TYPE_DCLR: number;
                        readonly TYPE_ECLR: number;
                        readonly TYPE_FCLR: number;
                        readonly CS_sRGB: number;
                        readonly CS_LINEAR_RGB: number;
                        readonly CS_CIEXYZ: number;
                        readonly CS_PYCC: number;
                        readonly CS_GRAY: number;
                        
                        getInstance(arg0: number): _javatypes.java.awt.color.ColorSpace;
                        
                    }
                }
            }
        
            namespace font {
            
                interface GlyphVector extends any, _javatypes.java.lang.Cloneable {
                    
                    getFont(): _javatypes.java.awt.Font;
                    getFontRenderContext(): _javatypes.java.awt.font.FontRenderContext;
                    performDefaultLayout(): void;
                    getNumGlyphs(): number;
                    getGlyphCode(arg0: number): number;
                    getGlyphCodes(arg0: number, arg1: number, arg2: number[]): number[];
                    getGlyphCharIndex(arg0: number): number;
                    getGlyphCharIndices(arg0: number, arg1: number, arg2: number[]): number[];
                    getLogicalBounds(): _javatypes.java.awt.geom.Rectangle2D;
                    getVisualBounds(): _javatypes.java.awt.geom.Rectangle2D;
                    getPixelBounds(arg0: _javatypes.java.awt.font.FontRenderContext, arg1: number, arg2: number): _javatypes.java.awt.Rectangle;
                    getOutline(): _javatypes.java.awt.Shape;
                    getOutline(arg0: number, arg1: number): _javatypes.java.awt.Shape;
                    getGlyphOutline(arg0: number): _javatypes.java.awt.Shape;
                    getGlyphOutline(arg0: number, arg1: number, arg2: number): _javatypes.java.awt.Shape;
                    getGlyphPosition(arg0: number): _javatypes.java.awt.geom.Point2D;
                    setGlyphPosition(arg0: number, arg1: _javatypes.java.awt.geom.Point2D): void;
                    getGlyphTransform(arg0: number): _javatypes.java.awt.geom.AffineTransform;
                    setGlyphTransform(arg0: number, arg1: _javatypes.java.awt.geom.AffineTransform): void;
                    getLayoutFlags(): number;
                    getGlyphPositions(arg0: number, arg1: number, arg2: number[]): number[];
                    getGlyphLogicalBounds(arg0: number): _javatypes.java.awt.Shape;
                    getGlyphVisualBounds(arg0: number): _javatypes.java.awt.Shape;
                    getGlyphPixelBounds(arg0: number, arg1: _javatypes.java.awt.font.FontRenderContext, arg2: number, arg3: number): _javatypes.java.awt.Rectangle;
                    getGlyphMetrics(arg0: number): _javatypes.java.awt.font.GlyphMetrics;
                    getGlyphJustificationInfo(arg0: number): _javatypes.java.awt.font.GlyphJustificationInfo;
                    equals(arg0: _javatypes.java.awt.font.GlyphVector): boolean;
                    
                }
                namespace GlyphVector {
                    interface static {
                        
                        readonly FLAG_HAS_TRANSFORMS: number;
                        readonly FLAG_HAS_POSITION_ADJUSTMENTS: number;
                        readonly FLAG_RUN_RTL: number;
                        readonly FLAG_COMPLEX_GLYPHS: number;
                        readonly FLAG_MASK: number;
                        
                        
                    }
                }
                interface FontRenderContext extends any {
                    
                    isTransformed(): boolean;
                    getTransformType(): number;
                    getTransform(): _javatypes.java.awt.geom.AffineTransform;
                    isAntiAliased(): boolean;
                    usesFractionalMetrics(): boolean;
                    getAntiAliasingHint(): any;
                    getFractionalMetricsHint(): any;
                    equals(arg0: any): boolean;
                    equals(arg0: _javatypes.java.awt.font.FontRenderContext): boolean;
                    hashCode(): number;
                    
                }
                namespace FontRenderContext {
                    interface static {
                        new (arg0: _javatypes.java.awt.geom.AffineTransform, arg1: boolean, arg2: boolean): _javatypes.java.awt.font.FontRenderContext;
                        new (arg0: _javatypes.java.awt.geom.AffineTransform, arg1: any, arg2: any): _javatypes.java.awt.font.FontRenderContext;
                        
                        
                        
                    }
                }
                interface GlyphMetrics extends any {
                    
                    getAdvance(): number;
                    getAdvanceX(): number;
                    getAdvanceY(): number;
                    getBounds2D(): _javatypes.java.awt.geom.Rectangle2D;
                    getLSB(): number;
                    getRSB(): number;
                    getType(): number;
                    isStandard(): boolean;
                    isLigature(): boolean;
                    isCombining(): boolean;
                    isComponent(): boolean;
                    isWhitespace(): boolean;
                    
                }
                namespace GlyphMetrics {
                    interface static {
                        new (arg0: number, arg1: _javatypes.java.awt.geom.Rectangle2D, arg2: number): _javatypes.java.awt.font.GlyphMetrics;
                        new (arg0: boolean, arg1: number, arg2: number, arg3: _javatypes.java.awt.geom.Rectangle2D, arg4: number): _javatypes.java.awt.font.GlyphMetrics;
                        
                        readonly STANDARD: number;
                        readonly LIGATURE: number;
                        readonly COMBINING: number;
                        readonly COMPONENT: number;
                        readonly WHITESPACE: number;
                        
                        
                    }
                }
                interface GlyphJustificationInfo extends any {
                    readonly weight: number;
                    readonly growPriority: number;
                    readonly growAbsorb: boolean;
                    readonly growLeftLimit: number;
                    readonly growRightLimit: number;
                    readonly shrinkPriority: number;
                    readonly shrinkAbsorb: boolean;
                    readonly shrinkLeftLimit: number;
                    readonly shrinkRightLimit: number;
                    
                    
                }
                namespace GlyphJustificationInfo {
                    interface static {
                        new (arg0: number, arg1: boolean, arg2: number, arg3: number, arg4: number, arg5: boolean, arg6: number, arg7: number, arg8: number): _javatypes.java.awt.font.GlyphJustificationInfo;
                        
                        readonly PRIORITY_KASHIDA: number;
                        readonly PRIORITY_WHITESPACE: number;
                        readonly PRIORITY_INTERCHAR: number;
                        readonly PRIORITY_NONE: number;
                        
                        
                    }
                }
                interface LineMetrics extends any {
                    
                    getNumChars(): number;
                    getAscent(): number;
                    getDescent(): number;
                    getLeading(): number;
                    getHeight(): number;
                    getBaselineIndex(): number;
                    getBaselineOffsets(): number[];
                    getStrikethroughOffset(): number;
                    getStrikethroughThickness(): number;
                    getUnderlineOffset(): number;
                    getUnderlineThickness(): number;
                    
                }
                namespace LineMetrics {
                    interface static {
                        
                        
                        
                    }
                }
                interface TextAttribute extends _javatypes.java.text.AttributedCharacterIterator$Attribute {
                    
                    
                }
                namespace TextAttribute {
                    interface static {
                        
                        readonly FAMILY: _javatypes.java.awt.font.TextAttribute;
                        readonly WEIGHT: _javatypes.java.awt.font.TextAttribute;
                        readonly WEIGHT_EXTRA_LIGHT: number;
                        readonly WEIGHT_LIGHT: number;
                        readonly WEIGHT_DEMILIGHT: number;
                        readonly WEIGHT_REGULAR: number;
                        readonly WEIGHT_SEMIBOLD: number;
                        readonly WEIGHT_MEDIUM: number;
                        readonly WEIGHT_DEMIBOLD: number;
                        readonly WEIGHT_BOLD: number;
                        readonly WEIGHT_HEAVY: number;
                        readonly WEIGHT_EXTRABOLD: number;
                        readonly WEIGHT_ULTRABOLD: number;
                        readonly WIDTH: _javatypes.java.awt.font.TextAttribute;
                        readonly WIDTH_CONDENSED: number;
                        readonly WIDTH_SEMI_CONDENSED: number;
                        readonly WIDTH_REGULAR: number;
                        readonly WIDTH_SEMI_EXTENDED: number;
                        readonly WIDTH_EXTENDED: number;
                        readonly POSTURE: _javatypes.java.awt.font.TextAttribute;
                        readonly POSTURE_REGULAR: number;
                        readonly POSTURE_OBLIQUE: number;
                        readonly SIZE: _javatypes.java.awt.font.TextAttribute;
                        readonly TRANSFORM: _javatypes.java.awt.font.TextAttribute;
                        readonly SUPERSCRIPT: _javatypes.java.awt.font.TextAttribute;
                        readonly SUPERSCRIPT_SUPER: number;
                        readonly SUPERSCRIPT_SUB: number;
                        readonly FONT: _javatypes.java.awt.font.TextAttribute;
                        readonly CHAR_REPLACEMENT: _javatypes.java.awt.font.TextAttribute;
                        readonly FOREGROUND: _javatypes.java.awt.font.TextAttribute;
                        readonly BACKGROUND: _javatypes.java.awt.font.TextAttribute;
                        readonly UNDERLINE: _javatypes.java.awt.font.TextAttribute;
                        readonly UNDERLINE_ON: number;
                        readonly STRIKETHROUGH: _javatypes.java.awt.font.TextAttribute;
                        readonly STRIKETHROUGH_ON: boolean;
                        readonly RUN_DIRECTION: _javatypes.java.awt.font.TextAttribute;
                        readonly RUN_DIRECTION_LTR: boolean;
                        readonly RUN_DIRECTION_RTL: boolean;
                        readonly BIDI_EMBEDDING: _javatypes.java.awt.font.TextAttribute;
                        readonly JUSTIFICATION: _javatypes.java.awt.font.TextAttribute;
                        readonly JUSTIFICATION_FULL: number;
                        readonly JUSTIFICATION_NONE: number;
                        readonly INPUT_METHOD_HIGHLIGHT: _javatypes.java.awt.font.TextAttribute;
                        readonly INPUT_METHOD_UNDERLINE: _javatypes.java.awt.font.TextAttribute;
                        readonly UNDERLINE_LOW_ONE_PIXEL: number;
                        readonly UNDERLINE_LOW_TWO_PIXEL: number;
                        readonly UNDERLINE_LOW_DOTTED: number;
                        readonly UNDERLINE_LOW_GRAY: number;
                        readonly UNDERLINE_LOW_DASHED: number;
                        readonly SWAP_COLORS: _javatypes.java.awt.font.TextAttribute;
                        readonly SWAP_COLORS_ON: boolean;
                        readonly NUMERIC_SHAPING: _javatypes.java.awt.font.TextAttribute;
                        readonly KERNING: _javatypes.java.awt.font.TextAttribute;
                        readonly KERNING_ON: number;
                        readonly LIGATURES: _javatypes.java.awt.font.TextAttribute;
                        readonly LIGATURES_ON: number;
                        readonly TRACKING: _javatypes.java.awt.font.TextAttribute;
                        readonly TRACKING_TIGHT: number;
                        readonly TRACKING_LOOSE: number;
                        
                        
                    }
                }
                interface TextHitInfo extends any {
                    
                    getCharIndex(): number;
                    isLeadingEdge(): boolean;
                    getInsertionIndex(): number;
                    hashCode(): number;
                    equals(arg0: any): boolean;
                    equals(arg0: _javatypes.java.awt.font.TextHitInfo): boolean;
                    toString(): string;
                    getOtherHit(): _javatypes.java.awt.font.TextHitInfo;
                    getOffsetHit(arg0: number): _javatypes.java.awt.font.TextHitInfo;
                    
                }
                namespace TextHitInfo {
                    interface static {
                        
                        
                        leading(arg0: number): _javatypes.java.awt.font.TextHitInfo;
                        trailing(arg0: number): _javatypes.java.awt.font.TextHitInfo;
                        beforeOffset(arg0: number): _javatypes.java.awt.font.TextHitInfo;
                        afterOffset(arg0: number): _javatypes.java.awt.font.TextHitInfo;
                        
                    }
                }
            }
        
            namespace im {
            
                interface InputContext extends any {
                    
                    selectInputMethod(arg0: _javatypes.java.util.Locale): boolean;
                    getLocale(): _javatypes.java.util.Locale;
                    setCharacterSubsets(arg0: _javatypes.java.lang.Character$Subset[]): void;
                    setCompositionEnabled(arg0: boolean): void;
                    isCompositionEnabled(): boolean;
                    reconvert(): void;
                    dispatchEvent(arg0: _javatypes.java.awt.AWTEvent): void;
                    removeNotify(arg0: _javatypes.java.awt.Component): void;
                    endComposition(): void;
                    dispose(): void;
                    getInputMethodControlObject(): any;
                    
                }
                namespace InputContext {
                    interface static {
                        
                        
                        getInstance(): _javatypes.java.awt.im.InputContext;
                        
                    }
                }
                interface InputMethodHighlight extends any {
                    
                    isSelected(): boolean;
                    getState(): number;
                    getVariation(): number;
                    getStyle(): _javatypes.java.util.Map<_javatypes.java.awt.font.TextAttribute, any>;
                    
                }
                namespace InputMethodHighlight {
                    interface static {
                        new (arg0: boolean, arg1: number): _javatypes.java.awt.im.InputMethodHighlight;
                        new (arg0: boolean, arg1: number, arg2: number): _javatypes.java.awt.im.InputMethodHighlight;
                        new (arg0: boolean, arg1: number, arg2: number, arg3: _javatypes.java.util.Map<_javatypes.java.awt.font.TextAttribute, any>): _javatypes.java.awt.im.InputMethodHighlight;
                        
                        readonly RAW_TEXT: number;
                        readonly CONVERTED_TEXT: number;
                        readonly UNSELECTED_RAW_TEXT_HIGHLIGHT: _javatypes.java.awt.im.InputMethodHighlight;
                        readonly SELECTED_RAW_TEXT_HIGHLIGHT: _javatypes.java.awt.im.InputMethodHighlight;
                        readonly UNSELECTED_CONVERTED_TEXT_HIGHLIGHT: _javatypes.java.awt.im.InputMethodHighlight;
                        readonly SELECTED_CONVERTED_TEXT_HIGHLIGHT: _javatypes.java.awt.im.InputMethodHighlight;
                        
                        
                    }
                }
                interface InputMethodRequests extends _javatypes.java.lang.Interface {
                    
                    getTextLocation(arg0: _javatypes.java.awt.font.TextHitInfo): _javatypes.java.awt.Rectangle;
                    getLocationOffset(arg0: number, arg1: number): _javatypes.java.awt.font.TextHitInfo;
                    getInsertPositionOffset(): number;
                    getCommittedText(arg0: number, arg1: number, arg2: _javatypes.java.text.AttributedCharacterIterator$Attribute[]): _javatypes.java.text.AttributedCharacterIterator;
                    getCommittedTextLength(): number;
                    cancelLatestCommittedText(arg0: _javatypes.java.text.AttributedCharacterIterator$Attribute[]): _javatypes.java.text.AttributedCharacterIterator;
                    getSelectedText(arg0: _javatypes.java.text.AttributedCharacterIterator$Attribute[]): _javatypes.java.text.AttributedCharacterIterator;
                    
                }
                namespace InputMethodRequests {
                    interface static {
                        
                        
                        
                    }
                }
            }
        
            namespace event {
            
                interface WindowStateListener extends _javatypes.java.lang.Interface, _javatypes.java.util.EventListener {
                    
                    windowStateChanged(arg0: _javatypes.java.awt.event.WindowEvent): void;
                    
                }
                namespace WindowStateListener {
                    interface static {
                        
                        
                        
                    }
                }
                interface WindowListener extends _javatypes.java.lang.Interface, _javatypes.java.util.EventListener {
                    
                    windowOpened(arg0: _javatypes.java.awt.event.WindowEvent): void;
                    windowClosing(arg0: _javatypes.java.awt.event.WindowEvent): void;
                    windowClosed(arg0: _javatypes.java.awt.event.WindowEvent): void;
                    windowIconified(arg0: _javatypes.java.awt.event.WindowEvent): void;
                    windowDeiconified(arg0: _javatypes.java.awt.event.WindowEvent): void;
                    windowActivated(arg0: _javatypes.java.awt.event.WindowEvent): void;
                    windowDeactivated(arg0: _javatypes.java.awt.event.WindowEvent): void;
                    
                }
                namespace WindowListener {
                    interface static {
                        
                        
                        
                    }
                }
                interface WindowFocusListener extends _javatypes.java.lang.Interface, _javatypes.java.util.EventListener {
                    
                    windowGainedFocus(arg0: _javatypes.java.awt.event.WindowEvent): void;
                    windowLostFocus(arg0: _javatypes.java.awt.event.WindowEvent): void;
                    
                }
                namespace WindowFocusListener {
                    interface static {
                        
                        
                        
                    }
                }
                interface WindowEvent extends _javatypes.java.awt.event.ComponentEvent {
                    
                    getWindow(): _javatypes.java.awt.Window;
                    getOppositeWindow(): _javatypes.java.awt.Window;
                    getOldState(): number;
                    getNewState(): number;
                    paramString(): string;
                    
                }
                namespace WindowEvent {
                    interface static {
                        new (arg0: _javatypes.java.awt.Window, arg1: number, arg2: _javatypes.java.awt.Window, arg3: number, arg4: number): _javatypes.java.awt.event.WindowEvent;
                        new (arg0: _javatypes.java.awt.Window, arg1: number, arg2: _javatypes.java.awt.Window): _javatypes.java.awt.event.WindowEvent;
                        new (arg0: _javatypes.java.awt.Window, arg1: number, arg2: number, arg3: number): _javatypes.java.awt.event.WindowEvent;
                        new (arg0: _javatypes.java.awt.Window, arg1: number): _javatypes.java.awt.event.WindowEvent;
                        
                        readonly WINDOW_FIRST: number;
                        readonly WINDOW_OPENED: number;
                        readonly WINDOW_CLOSING: number;
                        readonly WINDOW_CLOSED: number;
                        readonly WINDOW_ICONIFIED: number;
                        readonly WINDOW_DEICONIFIED: number;
                        readonly WINDOW_ACTIVATED: number;
                        readonly WINDOW_DEACTIVATED: number;
                        readonly WINDOW_GAINED_FOCUS: number;
                        readonly WINDOW_LOST_FOCUS: number;
                        readonly WINDOW_STATE_CHANGED: number;
                        readonly WINDOW_LAST: number;
                        
                        
                    }
                }
                interface ComponentEvent extends _javatypes.java.awt.AWTEvent {
                    
                    getComponent(): _javatypes.java.awt.Component;
                    paramString(): string;
                    
                }
                namespace ComponentEvent {
                    interface static {
                        new (arg0: _javatypes.java.awt.Component, arg1: number): _javatypes.java.awt.event.ComponentEvent;
                        
                        readonly COMPONENT_FIRST: number;
                        readonly COMPONENT_LAST: number;
                        readonly COMPONENT_MOVED: number;
                        readonly COMPONENT_RESIZED: number;
                        readonly COMPONENT_SHOWN: number;
                        readonly COMPONENT_HIDDEN: number;
                        
                        
                    }
                }
                interface FocusEvent$Cause extends _javatypes.java.lang.Enum<_javatypes.java.awt.event.FocusEvent$Cause> {
                    
                    
                }
                namespace FocusEvent$Cause {
                    interface static {
                        
                        readonly UNKNOWN: _javatypes.java.awt.event.FocusEvent$Cause;
                        readonly MOUSE_EVENT: _javatypes.java.awt.event.FocusEvent$Cause;
                        readonly TRAVERSAL: _javatypes.java.awt.event.FocusEvent$Cause;
                        readonly TRAVERSAL_UP: _javatypes.java.awt.event.FocusEvent$Cause;
                        readonly TRAVERSAL_DOWN: _javatypes.java.awt.event.FocusEvent$Cause;
                        readonly TRAVERSAL_FORWARD: _javatypes.java.awt.event.FocusEvent$Cause;
                        readonly TRAVERSAL_BACKWARD: _javatypes.java.awt.event.FocusEvent$Cause;
                        readonly ROLLBACK: _javatypes.java.awt.event.FocusEvent$Cause;
                        readonly UNEXPECTED: _javatypes.java.awt.event.FocusEvent$Cause;
                        readonly ACTIVATION: _javatypes.java.awt.event.FocusEvent$Cause;
                        readonly CLEAR_GLOBAL_FOCUS_OWNER: _javatypes.java.awt.event.FocusEvent$Cause;
                        
                        values(): _javatypes.java.awt.event.FocusEvent$Cause[];
                        valueOf(arg0: string): _javatypes.java.awt.event.FocusEvent$Cause;
                        
                    }
                }
                interface KeyEvent extends _javatypes.java.awt.event.InputEvent {
                    
                    getKeyCode(): number;
                    setKeyCode(arg0: number): void;
                    getKeyChar(): number;
                    setKeyChar(arg0: number): void;
                    setModifiers(arg0: number): void;
                    getKeyLocation(): number;
                    isActionKey(): boolean;
                    paramString(): string;
                    getExtendedKeyCode(): number;
                    
                }
                namespace KeyEvent {
                    interface static {
                        new (arg0: _javatypes.java.awt.Component, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): _javatypes.java.awt.event.KeyEvent;
                        new (arg0: _javatypes.java.awt.Component, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.java.awt.event.KeyEvent;
                        new (arg0: _javatypes.java.awt.Component, arg1: number, arg2: number, arg3: number, arg4: number): _javatypes.java.awt.event.KeyEvent;
                        
                        readonly KEY_FIRST: number;
                        readonly KEY_LAST: number;
                        readonly KEY_TYPED: number;
                        readonly KEY_PRESSED: number;
                        readonly KEY_RELEASED: number;
                        readonly VK_ENTER: number;
                        readonly VK_BACK_SPACE: number;
                        readonly VK_TAB: number;
                        readonly VK_CANCEL: number;
                        readonly VK_CLEAR: number;
                        readonly VK_SHIFT: number;
                        readonly VK_CONTROL: number;
                        readonly VK_ALT: number;
                        readonly VK_PAUSE: number;
                        readonly VK_CAPS_LOCK: number;
                        readonly VK_ESCAPE: number;
                        readonly VK_SPACE: number;
                        readonly VK_PAGE_UP: number;
                        readonly VK_PAGE_DOWN: number;
                        readonly VK_END: number;
                        readonly VK_HOME: number;
                        readonly VK_LEFT: number;
                        readonly VK_UP: number;
                        readonly VK_RIGHT: number;
                        readonly VK_DOWN: number;
                        readonly VK_COMMA: number;
                        readonly VK_MINUS: number;
                        readonly VK_PERIOD: number;
                        readonly VK_SLASH: number;
                        readonly VK_0: number;
                        readonly VK_1: number;
                        readonly VK_2: number;
                        readonly VK_3: number;
                        readonly VK_4: number;
                        readonly VK_5: number;
                        readonly VK_6: number;
                        readonly VK_7: number;
                        readonly VK_8: number;
                        readonly VK_9: number;
                        readonly VK_SEMICOLON: number;
                        readonly VK_EQUALS: number;
                        readonly VK_A: number;
                        readonly VK_B: number;
                        readonly VK_C: number;
                        readonly VK_D: number;
                        readonly VK_E: number;
                        readonly VK_F: number;
                        readonly VK_G: number;
                        readonly VK_H: number;
                        readonly VK_I: number;
                        readonly VK_J: number;
                        readonly VK_K: number;
                        readonly VK_L: number;
                        readonly VK_M: number;
                        readonly VK_N: number;
                        readonly VK_O: number;
                        readonly VK_P: number;
                        readonly VK_Q: number;
                        readonly VK_R: number;
                        readonly VK_S: number;
                        readonly VK_T: number;
                        readonly VK_U: number;
                        readonly VK_V: number;
                        readonly VK_W: number;
                        readonly VK_X: number;
                        readonly VK_Y: number;
                        readonly VK_Z: number;
                        readonly VK_OPEN_BRACKET: number;
                        readonly VK_BACK_SLASH: number;
                        readonly VK_CLOSE_BRACKET: number;
                        readonly VK_NUMPAD0: number;
                        readonly VK_NUMPAD1: number;
                        readonly VK_NUMPAD2: number;
                        readonly VK_NUMPAD3: number;
                        readonly VK_NUMPAD4: number;
                        readonly VK_NUMPAD5: number;
                        readonly VK_NUMPAD6: number;
                        readonly VK_NUMPAD7: number;
                        readonly VK_NUMPAD8: number;
                        readonly VK_NUMPAD9: number;
                        readonly VK_MULTIPLY: number;
                        readonly VK_ADD: number;
                        readonly VK_SEPARATER: number;
                        readonly VK_SEPARATOR: number;
                        readonly VK_SUBTRACT: number;
                        readonly VK_DECIMAL: number;
                        readonly VK_DIVIDE: number;
                        readonly VK_DELETE: number;
                        readonly VK_NUM_LOCK: number;
                        readonly VK_SCROLL_LOCK: number;
                        readonly VK_F1: number;
                        readonly VK_F2: number;
                        readonly VK_F3: number;
                        readonly VK_F4: number;
                        readonly VK_F5: number;
                        readonly VK_F6: number;
                        readonly VK_F7: number;
                        readonly VK_F8: number;
                        readonly VK_F9: number;
                        readonly VK_F10: number;
                        readonly VK_F11: number;
                        readonly VK_F12: number;
                        readonly VK_F13: number;
                        readonly VK_F14: number;
                        readonly VK_F15: number;
                        readonly VK_F16: number;
                        readonly VK_F17: number;
                        readonly VK_F18: number;
                        readonly VK_F19: number;
                        readonly VK_F20: number;
                        readonly VK_F21: number;
                        readonly VK_F22: number;
                        readonly VK_F23: number;
                        readonly VK_F24: number;
                        readonly VK_PRINTSCREEN: number;
                        readonly VK_INSERT: number;
                        readonly VK_HELP: number;
                        readonly VK_META: number;
                        readonly VK_BACK_QUOTE: number;
                        readonly VK_QUOTE: number;
                        readonly VK_KP_UP: number;
                        readonly VK_KP_DOWN: number;
                        readonly VK_KP_LEFT: number;
                        readonly VK_KP_RIGHT: number;
                        readonly VK_DEAD_GRAVE: number;
                        readonly VK_DEAD_ACUTE: number;
                        readonly VK_DEAD_CIRCUMFLEX: number;
                        readonly VK_DEAD_TILDE: number;
                        readonly VK_DEAD_MACRON: number;
                        readonly VK_DEAD_BREVE: number;
                        readonly VK_DEAD_ABOVEDOT: number;
                        readonly VK_DEAD_DIAERESIS: number;
                        readonly VK_DEAD_ABOVERING: number;
                        readonly VK_DEAD_DOUBLEACUTE: number;
                        readonly VK_DEAD_CARON: number;
                        readonly VK_DEAD_CEDILLA: number;
                        readonly VK_DEAD_OGONEK: number;
                        readonly VK_DEAD_IOTA: number;
                        readonly VK_DEAD_VOICED_SOUND: number;
                        readonly VK_DEAD_SEMIVOICED_SOUND: number;
                        readonly VK_AMPERSAND: number;
                        readonly VK_ASTERISK: number;
                        readonly VK_QUOTEDBL: number;
                        readonly VK_LESS: number;
                        readonly VK_GREATER: number;
                        readonly VK_BRACELEFT: number;
                        readonly VK_BRACERIGHT: number;
                        readonly VK_AT: number;
                        readonly VK_COLON: number;
                        readonly VK_CIRCUMFLEX: number;
                        readonly VK_DOLLAR: number;
                        readonly VK_EURO_SIGN: number;
                        readonly VK_EXCLAMATION_MARK: number;
                        readonly VK_INVERTED_EXCLAMATION_MARK: number;
                        readonly VK_LEFT_PARENTHESIS: number;
                        readonly VK_NUMBER_SIGN: number;
                        readonly VK_PLUS: number;
                        readonly VK_RIGHT_PARENTHESIS: number;
                        readonly VK_UNDERSCORE: number;
                        readonly VK_WINDOWS: number;
                        readonly VK_CONTEXT_MENU: number;
                        readonly VK_FINAL: number;
                        readonly VK_CONVERT: number;
                        readonly VK_NONCONVERT: number;
                        readonly VK_ACCEPT: number;
                        readonly VK_MODECHANGE: number;
                        readonly VK_KANA: number;
                        readonly VK_KANJI: number;
                        readonly VK_ALPHANUMERIC: number;
                        readonly VK_KATAKANA: number;
                        readonly VK_HIRAGANA: number;
                        readonly VK_FULL_WIDTH: number;
                        readonly VK_HALF_WIDTH: number;
                        readonly VK_ROMAN_CHARACTERS: number;
                        readonly VK_ALL_CANDIDATES: number;
                        readonly VK_PREVIOUS_CANDIDATE: number;
                        readonly VK_CODE_INPUT: number;
                        readonly VK_JAPANESE_KATAKANA: number;
                        readonly VK_JAPANESE_HIRAGANA: number;
                        readonly VK_JAPANESE_ROMAN: number;
                        readonly VK_KANA_LOCK: number;
                        readonly VK_INPUT_METHOD_ON_OFF: number;
                        readonly VK_CUT: number;
                        readonly VK_COPY: number;
                        readonly VK_PASTE: number;
                        readonly VK_UNDO: number;
                        readonly VK_AGAIN: number;
                        readonly VK_FIND: number;
                        readonly VK_PROPS: number;
                        readonly VK_STOP: number;
                        readonly VK_COMPOSE: number;
                        readonly VK_ALT_GRAPH: number;
                        readonly VK_BEGIN: number;
                        readonly VK_UNDEFINED: number;
                        readonly CHAR_UNDEFINED: number;
                        readonly KEY_LOCATION_UNKNOWN: number;
                        readonly KEY_LOCATION_STANDARD: number;
                        readonly KEY_LOCATION_LEFT: number;
                        readonly KEY_LOCATION_RIGHT: number;
                        readonly KEY_LOCATION_NUMPAD: number;
                        
                        getKeyText(arg0: number): string;
                        getKeyModifiersText(arg0: number): string;
                        getExtendedKeyCodeForChar(arg0: number): number;
                        
                    }
                }
                interface MouseMotionListener extends _javatypes.java.lang.Interface, _javatypes.java.util.EventListener {
                    
                    mouseDragged(arg0: _javatypes.java.awt.event.MouseEvent): void;
                    mouseMoved(arg0: _javatypes.java.awt.event.MouseEvent): void;
                    
                }
                namespace MouseMotionListener {
                    interface static {
                        
                        
                        
                    }
                }
                interface HierarchyBoundsListener extends _javatypes.java.lang.Interface, _javatypes.java.util.EventListener {
                    
                    ancestorMoved(arg0: _javatypes.java.awt.event.HierarchyEvent): void;
                    ancestorResized(arg0: _javatypes.java.awt.event.HierarchyEvent): void;
                    
                }
                namespace HierarchyBoundsListener {
                    interface static {
                        
                        
                        
                    }
                }
                interface HierarchyListener extends _javatypes.java.lang.Interface, _javatypes.java.util.EventListener {
                    
                    hierarchyChanged(arg0: _javatypes.java.awt.event.HierarchyEvent): void;
                    
                }
                namespace HierarchyListener {
                    interface static {
                        
                        
                        
                    }
                }
                interface MouseWheelListener extends _javatypes.java.lang.Interface, _javatypes.java.util.EventListener {
                    
                    mouseWheelMoved(arg0: _javatypes.java.awt.event.MouseWheelEvent): void;
                    
                }
                namespace MouseWheelListener {
                    interface static {
                        
                        
                        
                    }
                }
                interface InputEvent extends _javatypes.java.awt.event.ComponentEvent {
                    
                    isShiftDown(): boolean;
                    isControlDown(): boolean;
                    isMetaDown(): boolean;
                    isAltDown(): boolean;
                    isAltGraphDown(): boolean;
                    getWhen(): number;
                    getModifiers(): number;
                    getModifiersEx(): number;
                    consume(): void;
                    isConsumed(): boolean;
                    
                }
                namespace InputEvent {
                    interface static {
                        
                        readonly SHIFT_MASK: number;
                        readonly CTRL_MASK: number;
                        readonly META_MASK: number;
                        readonly ALT_MASK: number;
                        readonly ALT_GRAPH_MASK: number;
                        readonly BUTTON1_MASK: number;
                        readonly BUTTON2_MASK: number;
                        readonly BUTTON3_MASK: number;
                        readonly SHIFT_DOWN_MASK: number;
                        readonly CTRL_DOWN_MASK: number;
                        readonly META_DOWN_MASK: number;
                        readonly ALT_DOWN_MASK: number;
                        readonly BUTTON1_DOWN_MASK: number;
                        readonly BUTTON2_DOWN_MASK: number;
                        readonly BUTTON3_DOWN_MASK: number;
                        readonly ALT_GRAPH_DOWN_MASK: number;
                        
                        getMaskForButton(arg0: number): number;
                        getModifiersExText(arg0: number): string;
                        
                    }
                }
                interface ComponentListener extends _javatypes.java.lang.Interface, _javatypes.java.util.EventListener {
                    
                    componentResized(arg0: _javatypes.java.awt.event.ComponentEvent): void;
                    componentMoved(arg0: _javatypes.java.awt.event.ComponentEvent): void;
                    componentShown(arg0: _javatypes.java.awt.event.ComponentEvent): void;
                    componentHidden(arg0: _javatypes.java.awt.event.ComponentEvent): void;
                    
                }
                namespace ComponentListener {
                    interface static {
                        
                        
                        
                    }
                }
                interface MouseListener extends _javatypes.java.lang.Interface, _javatypes.java.util.EventListener {
                    
                    mouseClicked(arg0: _javatypes.java.awt.event.MouseEvent): void;
                    mousePressed(arg0: _javatypes.java.awt.event.MouseEvent): void;
                    mouseReleased(arg0: _javatypes.java.awt.event.MouseEvent): void;
                    mouseEntered(arg0: _javatypes.java.awt.event.MouseEvent): void;
                    mouseExited(arg0: _javatypes.java.awt.event.MouseEvent): void;
                    
                }
                namespace MouseListener {
                    interface static {
                        
                        
                        
                    }
                }
                interface AWTEventListener extends _javatypes.java.lang.Interface, _javatypes.java.util.EventListener {
                    
                    eventDispatched(arg0: _javatypes.java.awt.AWTEvent): void;
                    
                }
                namespace AWTEventListener {
                    interface static {
                        
                        
                        
                    }
                }
                interface FocusListener extends _javatypes.java.lang.Interface, _javatypes.java.util.EventListener {
                    
                    focusGained(arg0: _javatypes.java.awt.event.FocusEvent): void;
                    focusLost(arg0: _javatypes.java.awt.event.FocusEvent): void;
                    
                }
                namespace FocusListener {
                    interface static {
                        
                        
                        
                    }
                }
                interface ContainerListener extends _javatypes.java.lang.Interface, _javatypes.java.util.EventListener {
                    
                    componentAdded(arg0: _javatypes.java.awt.event.ContainerEvent): void;
                    componentRemoved(arg0: _javatypes.java.awt.event.ContainerEvent): void;
                    
                }
                namespace ContainerListener {
                    interface static {
                        
                        
                        
                    }
                }
                interface InputMethodListener extends _javatypes.java.lang.Interface, _javatypes.java.util.EventListener {
                    
                    inputMethodTextChanged(arg0: _javatypes.java.awt.event.InputMethodEvent): void;
                    caretPositionChanged(arg0: _javatypes.java.awt.event.InputMethodEvent): void;
                    
                }
                namespace InputMethodListener {
                    interface static {
                        
                        
                        
                    }
                }
                interface KeyListener extends _javatypes.java.lang.Interface, _javatypes.java.util.EventListener {
                    
                    keyTyped(arg0: _javatypes.java.awt.event.KeyEvent): void;
                    keyPressed(arg0: _javatypes.java.awt.event.KeyEvent): void;
                    keyReleased(arg0: _javatypes.java.awt.event.KeyEvent): void;
                    
                }
                namespace KeyListener {
                    interface static {
                        
                        
                        
                    }
                }
                interface MouseWheelEvent extends _javatypes.java.awt.event.MouseEvent {
                    
                    getScrollType(): number;
                    getScrollAmount(): number;
                    getWheelRotation(): number;
                    getPreciseWheelRotation(): number;
                    getUnitsToScroll(): number;
                    paramString(): string;
                    
                }
                namespace MouseWheelEvent {
                    interface static {
                        new (arg0: _javatypes.java.awt.Component, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: boolean, arg8: number, arg9: number, arg10: number): _javatypes.java.awt.event.MouseWheelEvent;
                        new (arg0: _javatypes.java.awt.Component, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: boolean, arg10: number, arg11: number, arg12: number): _javatypes.java.awt.event.MouseWheelEvent;
                        new (arg0: _javatypes.java.awt.Component, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: boolean, arg10: number, arg11: number, arg12: number, arg13: number): _javatypes.java.awt.event.MouseWheelEvent;
                        
                        readonly WHEEL_UNIT_SCROLL: number;
                        readonly WHEEL_BLOCK_SCROLL: number;
                        
                        
                    }
                }
                interface FocusEvent extends _javatypes.java.awt.event.ComponentEvent {
                    
                    isTemporary(): boolean;
                    getOppositeComponent(): _javatypes.java.awt.Component;
                    paramString(): string;
                    getCause(): _javatypes.java.awt.event.FocusEvent$Cause;
                    
                }
                namespace FocusEvent {
                    interface static {
                        new (arg0: _javatypes.java.awt.Component, arg1: number, arg2: boolean, arg3: _javatypes.java.awt.Component): _javatypes.java.awt.event.FocusEvent;
                        new (arg0: _javatypes.java.awt.Component, arg1: number, arg2: boolean, arg3: _javatypes.java.awt.Component, arg4: _javatypes.java.awt.event.FocusEvent$Cause): _javatypes.java.awt.event.FocusEvent;
                        new (arg0: _javatypes.java.awt.Component, arg1: number, arg2: boolean): _javatypes.java.awt.event.FocusEvent;
                        new (arg0: _javatypes.java.awt.Component, arg1: number): _javatypes.java.awt.event.FocusEvent;
                        
                        readonly FOCUS_FIRST: number;
                        readonly FOCUS_LAST: number;
                        readonly FOCUS_GAINED: number;
                        readonly FOCUS_LOST: number;
                        
                        
                    }
                }
                interface InputMethodEvent extends _javatypes.java.awt.AWTEvent {
                    
                    getText(): _javatypes.java.text.AttributedCharacterIterator;
                    getCommittedCharacterCount(): number;
                    getCaret(): _javatypes.java.awt.font.TextHitInfo;
                    getVisiblePosition(): _javatypes.java.awt.font.TextHitInfo;
                    consume(): void;
                    isConsumed(): boolean;
                    getWhen(): number;
                    paramString(): string;
                    
                }
                namespace InputMethodEvent {
                    interface static {
                        new (arg0: _javatypes.java.awt.Component, arg1: number, arg2: number, arg3: _javatypes.java.text.AttributedCharacterIterator, arg4: number, arg5: _javatypes.java.awt.font.TextHitInfo, arg6: _javatypes.java.awt.font.TextHitInfo): _javatypes.java.awt.event.InputMethodEvent;
                        new (arg0: _javatypes.java.awt.Component, arg1: number, arg2: _javatypes.java.text.AttributedCharacterIterator, arg3: number, arg4: _javatypes.java.awt.font.TextHitInfo, arg5: _javatypes.java.awt.font.TextHitInfo): _javatypes.java.awt.event.InputMethodEvent;
                        new (arg0: _javatypes.java.awt.Component, arg1: number, arg2: _javatypes.java.awt.font.TextHitInfo, arg3: _javatypes.java.awt.font.TextHitInfo): _javatypes.java.awt.event.InputMethodEvent;
                        
                        readonly INPUT_METHOD_FIRST: number;
                        readonly INPUT_METHOD_TEXT_CHANGED: number;
                        readonly CARET_POSITION_CHANGED: number;
                        readonly INPUT_METHOD_LAST: number;
                        
                        
                    }
                }
                interface MouseEvent extends _javatypes.java.awt.event.InputEvent {
                    
                    getLocationOnScreen(): _javatypes.java.awt.Point;
                    getXOnScreen(): number;
                    getYOnScreen(): number;
                    getModifiersEx(): number;
                    getX(): number;
                    getY(): number;
                    getPoint(): _javatypes.java.awt.Point;
                    translatePoint(arg0: number, arg1: number): void;
                    getClickCount(): number;
                    getButton(): number;
                    isPopupTrigger(): boolean;
                    paramString(): string;
                    
                }
                namespace MouseEvent {
                    interface static {
                        new (arg0: _javatypes.java.awt.Component, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: boolean, arg8: number): _javatypes.java.awt.event.MouseEvent;
                        new (arg0: _javatypes.java.awt.Component, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: boolean): _javatypes.java.awt.event.MouseEvent;
                        new (arg0: _javatypes.java.awt.Component, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: boolean, arg10: number): _javatypes.java.awt.event.MouseEvent;
                        
                        readonly MOUSE_FIRST: number;
                        readonly MOUSE_LAST: number;
                        readonly MOUSE_CLICKED: number;
                        readonly MOUSE_PRESSED: number;
                        readonly MOUSE_RELEASED: number;
                        readonly MOUSE_MOVED: number;
                        readonly MOUSE_ENTERED: number;
                        readonly MOUSE_EXITED: number;
                        readonly MOUSE_DRAGGED: number;
                        readonly MOUSE_WHEEL: number;
                        readonly NOBUTTON: number;
                        readonly BUTTON1: number;
                        readonly BUTTON2: number;
                        readonly BUTTON3: number;
                        
                        getMouseModifiersText(arg0: number): string;
                        
                    }
                }
                interface ContainerEvent extends _javatypes.java.awt.event.ComponentEvent {
                    
                    getContainer(): _javatypes.java.awt.Container;
                    getChild(): _javatypes.java.awt.Component;
                    paramString(): string;
                    
                }
                namespace ContainerEvent {
                    interface static {
                        new (arg0: _javatypes.java.awt.Component, arg1: number, arg2: _javatypes.java.awt.Component): _javatypes.java.awt.event.ContainerEvent;
                        
                        readonly CONTAINER_FIRST: number;
                        readonly CONTAINER_LAST: number;
                        readonly COMPONENT_ADDED: number;
                        readonly COMPONENT_REMOVED: number;
                        
                        
                    }
                }
                interface HierarchyEvent extends _javatypes.java.awt.AWTEvent {
                    
                    getComponent(): _javatypes.java.awt.Component;
                    getChanged(): _javatypes.java.awt.Component;
                    getChangedParent(): _javatypes.java.awt.Container;
                    getChangeFlags(): number;
                    paramString(): string;
                    
                }
                namespace HierarchyEvent {
                    interface static {
                        new (arg0: _javatypes.java.awt.Component, arg1: number, arg2: _javatypes.java.awt.Component, arg3: _javatypes.java.awt.Container): _javatypes.java.awt.event.HierarchyEvent;
                        new (arg0: _javatypes.java.awt.Component, arg1: number, arg2: _javatypes.java.awt.Component, arg3: _javatypes.java.awt.Container, arg4: number): _javatypes.java.awt.event.HierarchyEvent;
                        
                        readonly HIERARCHY_FIRST: number;
                        readonly HIERARCHY_CHANGED: number;
                        readonly ANCESTOR_MOVED: number;
                        readonly ANCESTOR_RESIZED: number;
                        readonly HIERARCHY_LAST: number;
                        readonly PARENT_CHANGED: number;
                        readonly DISPLAYABILITY_CHANGED: number;
                        readonly SHOWING_CHANGED: number;
                        
                        
                    }
                }
                interface ActionListener extends _javatypes.java.lang.Interface, _javatypes.java.util.EventListener {
                    
                    actionPerformed(arg0: _javatypes.java.awt.event.ActionEvent): void;
                    
                }
                namespace ActionListener {
                    interface static {
                        
                        
                        
                    }
                }
                interface ActionEvent extends _javatypes.java.awt.AWTEvent {
                    
                    getActionCommand(): string;
                    getWhen(): number;
                    getModifiers(): number;
                    paramString(): string;
                    
                }
                namespace ActionEvent {
                    interface static {
                        new (arg0: any, arg1: number, arg2: string): _javatypes.java.awt.event.ActionEvent;
                        new (arg0: any, arg1: number, arg2: string, arg3: number): _javatypes.java.awt.event.ActionEvent;
                        new (arg0: any, arg1: number, arg2: string, arg3: number, arg4: number): _javatypes.java.awt.event.ActionEvent;
                        
                        readonly SHIFT_MASK: number;
                        readonly CTRL_MASK: number;
                        readonly META_MASK: number;
                        readonly ALT_MASK: number;
                        readonly ACTION_FIRST: number;
                        readonly ACTION_LAST: number;
                        readonly ACTION_PERFORMED: number;
                        
                        
                    }
                }
            }
        
            namespace datatransfer {
            
                interface Clipboard extends any {
                    
                    getName(): string;
                    setContents(arg0: _javatypes.java.awt.datatransfer.Transferable, arg1: _javatypes.java.awt.datatransfer.ClipboardOwner): void;
                    getContents(arg0: any): _javatypes.java.awt.datatransfer.Transferable;
                    getAvailableDataFlavors(): _javatypes.java.awt.datatransfer.DataFlavor[];
                    isDataFlavorAvailable(arg0: _javatypes.java.awt.datatransfer.DataFlavor): boolean;
                    getData(arg0: _javatypes.java.awt.datatransfer.DataFlavor): any;
                    addFlavorListener(arg0: _javatypes.java.awt.datatransfer.FlavorListener): void;
                    removeFlavorListener(arg0: _javatypes.java.awt.datatransfer.FlavorListener): void;
                    getFlavorListeners(): _javatypes.java.awt.datatransfer.FlavorListener[];
                    
                }
                namespace Clipboard {
                    interface static {
                        new (arg0: string): _javatypes.java.awt.datatransfer.Clipboard;
                        
                        
                        
                    }
                }
                interface ClipboardOwner extends _javatypes.java.lang.Interface {
                    
                    lostOwnership(arg0: _javatypes.java.awt.datatransfer.Clipboard, arg1: _javatypes.java.awt.datatransfer.Transferable): void;
                    
                }
                namespace ClipboardOwner {
                    interface static {
                        
                        
                        
                    }
                }
                interface FlavorListener extends _javatypes.java.lang.Interface, _javatypes.java.util.EventListener {
                    
                    flavorsChanged(arg0: _javatypes.java.awt.datatransfer.FlavorEvent): void;
                    
                }
                namespace FlavorListener {
                    interface static {
                        
                        
                        
                    }
                }
                interface Transferable extends _javatypes.java.lang.Interface {
                    
                    getTransferDataFlavors(): _javatypes.java.awt.datatransfer.DataFlavor[];
                    isDataFlavorSupported(arg0: _javatypes.java.awt.datatransfer.DataFlavor): boolean;
                    getTransferData(arg0: _javatypes.java.awt.datatransfer.DataFlavor): any;
                    
                }
                namespace Transferable {
                    interface static {
                        
                        
                        
                    }
                }
                interface DataFlavor extends any, _javatypes.java.io.Externalizable, _javatypes.java.lang.Cloneable {
                    
                    toString(): string;
                    getReaderForText(arg0: _javatypes.java.awt.datatransfer.Transferable): _javatypes.java.io.Reader;
                    getMimeType(): string;
                    getRepresentationClass(): _javatypes.java.lang.Class<any>;
                    getHumanPresentableName(): string;
                    getPrimaryType(): string;
                    getSubType(): string;
                    getParameter(arg0: string): string;
                    setHumanPresentableName(arg0: string): void;
                    equals(arg0: any): boolean;
                    equals(arg0: _javatypes.java.awt.datatransfer.DataFlavor): boolean;
                    equals(arg0: string): boolean;
                    hashCode(): number;
                    match(arg0: _javatypes.java.awt.datatransfer.DataFlavor): boolean;
                    isMimeTypeEqual(arg0: string): boolean;
                    isMimeTypeEqual(arg0: _javatypes.java.awt.datatransfer.DataFlavor): boolean;
                    isMimeTypeSerializedObject(): boolean;
                    getDefaultRepresentationClass(): _javatypes.java.lang.Class<any>;
                    getDefaultRepresentationClassAsString(): string;
                    isRepresentationClassInputStream(): boolean;
                    isRepresentationClassReader(): boolean;
                    isRepresentationClassCharBuffer(): boolean;
                    isRepresentationClassByteBuffer(): boolean;
                    isRepresentationClassSerializable(): boolean;
                    isRepresentationClassRemote(): boolean;
                    isFlavorSerializedObjectType(): boolean;
                    isFlavorRemoteObjectType(): boolean;
                    isFlavorJavaFileListType(): boolean;
                    isFlavorTextType(): boolean;
                    writeExternal(arg0: _javatypes.java.io.ObjectOutput): void;
                    readExternal(arg0: _javatypes.java.io.ObjectInput): void;
                    clone(): any;
                    
                }
                namespace DataFlavor {
                    interface static {
                        new (): _javatypes.java.awt.datatransfer.DataFlavor;
                        new (arg0: _javatypes.java.lang.Class<any>, arg1: string): _javatypes.java.awt.datatransfer.DataFlavor;
                        new (arg0: string, arg1: string): _javatypes.java.awt.datatransfer.DataFlavor;
                        new (arg0: string, arg1: string, arg2: _javatypes.java.lang.ClassLoader): _javatypes.java.awt.datatransfer.DataFlavor;
                        new (arg0: string): _javatypes.java.awt.datatransfer.DataFlavor;
                        
                        readonly stringFlavor: _javatypes.java.awt.datatransfer.DataFlavor;
                        readonly imageFlavor: _javatypes.java.awt.datatransfer.DataFlavor;
                        readonly plainTextFlavor: _javatypes.java.awt.datatransfer.DataFlavor;
                        readonly javaSerializedObjectMimeType: string;
                        readonly javaFileListFlavor: _javatypes.java.awt.datatransfer.DataFlavor;
                        readonly javaJVMLocalObjectMimeType: string;
                        readonly javaRemoteObjectMimeType: string;
                        readonly selectionHtmlFlavor: _javatypes.java.awt.datatransfer.DataFlavor;
                        readonly fragmentHtmlFlavor: _javatypes.java.awt.datatransfer.DataFlavor;
                        readonly allHtmlFlavor: _javatypes.java.awt.datatransfer.DataFlavor;
                        
                        getTextPlainUnicodeFlavor(): _javatypes.java.awt.datatransfer.DataFlavor;
                        selectBestTextFlavor(arg0: _javatypes.java.awt.datatransfer.DataFlavor[]): _javatypes.java.awt.datatransfer.DataFlavor;
                        
                    }
                }
                interface FlavorEvent extends _javatypes.java.util.EventObject {
                    
                    
                }
                namespace FlavorEvent {
                    interface static {
                        new (arg0: _javatypes.java.awt.datatransfer.Clipboard): _javatypes.java.awt.datatransfer.FlavorEvent;
                        
                        
                        
                    }
                }
                interface FlavorMap extends _javatypes.java.lang.Interface {
                    
                    getNativesForFlavors(arg0: _javatypes.java.awt.datatransfer.DataFlavor[]): _javatypes.java.util.Map<_javatypes.java.awt.datatransfer.DataFlavor, string>;
                    getFlavorsForNatives(arg0: string[]): _javatypes.java.util.Map<string, _javatypes.java.awt.datatransfer.DataFlavor>;
                    
                }
                namespace FlavorMap {
                    interface static {
                        
                        
                        
                    }
                }
            }
        
            namespace dnd {
            
                interface DragGestureListener extends _javatypes.java.lang.Interface, _javatypes.java.util.EventListener {
                    
                    dragGestureRecognized(arg0: _javatypes.java.awt.dnd.DragGestureEvent): void;
                    
                }
                namespace DragGestureListener {
                    interface static {
                        
                        
                        
                    }
                }
                interface DragSource extends any, _javatypes.java.io.Serializable {
                    
                    startDrag(arg0: _javatypes.java.awt.dnd.DragGestureEvent, arg1: _javatypes.java.awt.Cursor, arg2: _javatypes.java.awt.Image, arg3: _javatypes.java.awt.Point, arg4: _javatypes.java.awt.datatransfer.Transferable, arg5: _javatypes.java.awt.dnd.DragSourceListener, arg6: _javatypes.java.awt.datatransfer.FlavorMap): void;
                    startDrag(arg0: _javatypes.java.awt.dnd.DragGestureEvent, arg1: _javatypes.java.awt.Cursor, arg2: _javatypes.java.awt.datatransfer.Transferable, arg3: _javatypes.java.awt.dnd.DragSourceListener, arg4: _javatypes.java.awt.datatransfer.FlavorMap): void;
                    startDrag(arg0: _javatypes.java.awt.dnd.DragGestureEvent, arg1: _javatypes.java.awt.Cursor, arg2: _javatypes.java.awt.Image, arg3: _javatypes.java.awt.Point, arg4: _javatypes.java.awt.datatransfer.Transferable, arg5: _javatypes.java.awt.dnd.DragSourceListener): void;
                    startDrag(arg0: _javatypes.java.awt.dnd.DragGestureEvent, arg1: _javatypes.java.awt.Cursor, arg2: _javatypes.java.awt.datatransfer.Transferable, arg3: _javatypes.java.awt.dnd.DragSourceListener): void;
                    getFlavorMap(): _javatypes.java.awt.datatransfer.FlavorMap;
                    createDragGestureRecognizer<T>(arg0: _javatypes.java.lang.Class<T>, arg1: _javatypes.java.awt.Component, arg2: number, arg3: _javatypes.java.awt.dnd.DragGestureListener): T;
                    createDefaultDragGestureRecognizer(arg0: _javatypes.java.awt.Component, arg1: number, arg2: _javatypes.java.awt.dnd.DragGestureListener): _javatypes.java.awt.dnd.DragGestureRecognizer;
                    addDragSourceListener(arg0: _javatypes.java.awt.dnd.DragSourceListener): void;
                    removeDragSourceListener(arg0: _javatypes.java.awt.dnd.DragSourceListener): void;
                    getDragSourceListeners(): _javatypes.java.awt.dnd.DragSourceListener[];
                    addDragSourceMotionListener(arg0: _javatypes.java.awt.dnd.DragSourceMotionListener): void;
                    removeDragSourceMotionListener(arg0: _javatypes.java.awt.dnd.DragSourceMotionListener): void;
                    getDragSourceMotionListeners(): _javatypes.java.awt.dnd.DragSourceMotionListener[];
                    getListeners<T>(arg0: _javatypes.java.lang.Class<T>): T[];
                    
                }
                namespace DragSource {
                    interface static {
                        new (): _javatypes.java.awt.dnd.DragSource;
                        
                        readonly DefaultCopyDrop: _javatypes.java.awt.Cursor;
                        readonly DefaultMoveDrop: _javatypes.java.awt.Cursor;
                        readonly DefaultLinkDrop: _javatypes.java.awt.Cursor;
                        readonly DefaultCopyNoDrop: _javatypes.java.awt.Cursor;
                        readonly DefaultMoveNoDrop: _javatypes.java.awt.Cursor;
                        readonly DefaultLinkNoDrop: _javatypes.java.awt.Cursor;
                        
                        getDefaultDragSource(): _javatypes.java.awt.dnd.DragSource;
                        isDragImageSupported(): boolean;
                        getDragThreshold(): number;
                        
                    }
                }
                interface DropTarget extends any, _javatypes.java.awt.dnd.DropTargetListener, _javatypes.java.io.Serializable {
                    
                    setComponent(arg0: _javatypes.java.awt.Component): void;
                    getComponent(): _javatypes.java.awt.Component;
                    setDefaultActions(arg0: number): void;
                    getDefaultActions(): number;
                    setActive(arg0: boolean): void;
                    isActive(): boolean;
                    addDropTargetListener(arg0: _javatypes.java.awt.dnd.DropTargetListener): void;
                    removeDropTargetListener(arg0: _javatypes.java.awt.dnd.DropTargetListener): void;
                    dragEnter(arg0: _javatypes.java.awt.dnd.DropTargetDragEvent): void;
                    dragOver(arg0: _javatypes.java.awt.dnd.DropTargetDragEvent): void;
                    dropActionChanged(arg0: _javatypes.java.awt.dnd.DropTargetDragEvent): void;
                    dragExit(arg0: _javatypes.java.awt.dnd.DropTargetEvent): void;
                    drop(arg0: _javatypes.java.awt.dnd.DropTargetDropEvent): void;
                    getFlavorMap(): _javatypes.java.awt.datatransfer.FlavorMap;
                    setFlavorMap(arg0: _javatypes.java.awt.datatransfer.FlavorMap): void;
                    addNotify(): void;
                    removeNotify(): void;
                    getDropTargetContext(): _javatypes.java.awt.dnd.DropTargetContext;
                    
                }
                namespace DropTarget {
                    interface static {
                        new (arg0: _javatypes.java.awt.Component, arg1: number, arg2: _javatypes.java.awt.dnd.DropTargetListener, arg3: boolean, arg4: _javatypes.java.awt.datatransfer.FlavorMap): _javatypes.java.awt.dnd.DropTarget;
                        new (arg0: _javatypes.java.awt.Component, arg1: number, arg2: _javatypes.java.awt.dnd.DropTargetListener, arg3: boolean): _javatypes.java.awt.dnd.DropTarget;
                        new (): _javatypes.java.awt.dnd.DropTarget;
                        new (arg0: _javatypes.java.awt.Component, arg1: _javatypes.java.awt.dnd.DropTargetListener): _javatypes.java.awt.dnd.DropTarget;
                        new (arg0: _javatypes.java.awt.Component, arg1: number, arg2: _javatypes.java.awt.dnd.DropTargetListener): _javatypes.java.awt.dnd.DropTarget;
                        
                        
                        
                    }
                }
                interface DragGestureEvent extends _javatypes.java.util.EventObject {
                    
                    getSourceAsDragGestureRecognizer(): _javatypes.java.awt.dnd.DragGestureRecognizer;
                    getComponent(): _javatypes.java.awt.Component;
                    getDragSource(): _javatypes.java.awt.dnd.DragSource;
                    getDragOrigin(): _javatypes.java.awt.Point;
                    iterator(): _javatypes.java.util.Iterator<_javatypes.java.awt.event.InputEvent>;
                    toArray(): any[];
                    toArray(arg0: any[]): any[];
                    getDragAction(): number;
                    getTriggerEvent(): _javatypes.java.awt.event.InputEvent;
                    startDrag(arg0: _javatypes.java.awt.Cursor, arg1: _javatypes.java.awt.datatransfer.Transferable): void;
                    startDrag(arg0: _javatypes.java.awt.Cursor, arg1: _javatypes.java.awt.datatransfer.Transferable, arg2: _javatypes.java.awt.dnd.DragSourceListener): void;
                    startDrag(arg0: _javatypes.java.awt.Cursor, arg1: _javatypes.java.awt.Image, arg2: _javatypes.java.awt.Point, arg3: _javatypes.java.awt.datatransfer.Transferable, arg4: _javatypes.java.awt.dnd.DragSourceListener): void;
                    
                }
                namespace DragGestureEvent {
                    interface static {
                        new (arg0: _javatypes.java.awt.dnd.DragGestureRecognizer, arg1: number, arg2: _javatypes.java.awt.Point, arg3: _javatypes.java.util.List<any>): _javatypes.java.awt.dnd.DragGestureEvent;
                        
                        
                        
                    }
                }
                interface DragSourceMotionListener extends _javatypes.java.lang.Interface, _javatypes.java.util.EventListener {
                    
                    dragMouseMoved(arg0: _javatypes.java.awt.dnd.DragSourceDragEvent): void;
                    
                }
                namespace DragSourceMotionListener {
                    interface static {
                        
                        
                        
                    }
                }
                interface DropTargetContext extends any, _javatypes.java.io.Serializable {
                    
                    getDropTarget(): _javatypes.java.awt.dnd.DropTarget;
                    getComponent(): _javatypes.java.awt.Component;
                    dropComplete(arg0: boolean): void;
                    
                }
                namespace DropTargetContext {
                    interface static {
                        
                        
                        
                    }
                }
                interface DragSourceListener extends _javatypes.java.lang.Interface, _javatypes.java.util.EventListener {
                    
                    dragEnter(arg0: _javatypes.java.awt.dnd.DragSourceDragEvent): void;
                    dragOver(arg0: _javatypes.java.awt.dnd.DragSourceDragEvent): void;
                    dropActionChanged(arg0: _javatypes.java.awt.dnd.DragSourceDragEvent): void;
                    dragExit(arg0: _javatypes.java.awt.dnd.DragSourceEvent): void;
                    dragDropEnd(arg0: _javatypes.java.awt.dnd.DragSourceDropEvent): void;
                    
                }
                namespace DragSourceListener {
                    interface static {
                        
                        
                        
                    }
                }
                interface DropTargetDragEvent extends _javatypes.java.awt.dnd.DropTargetEvent {
                    
                    getLocation(): _javatypes.java.awt.Point;
                    getCurrentDataFlavors(): _javatypes.java.awt.datatransfer.DataFlavor[];
                    getCurrentDataFlavorsAsList(): _javatypes.java.util.List<_javatypes.java.awt.datatransfer.DataFlavor>;
                    isDataFlavorSupported(arg0: _javatypes.java.awt.datatransfer.DataFlavor): boolean;
                    getSourceActions(): number;
                    getDropAction(): number;
                    getTransferable(): _javatypes.java.awt.datatransfer.Transferable;
                    acceptDrag(arg0: number): void;
                    rejectDrag(): void;
                    
                }
                namespace DropTargetDragEvent {
                    interface static {
                        new (arg0: _javatypes.java.awt.dnd.DropTargetContext, arg1: _javatypes.java.awt.Point, arg2: number, arg3: number): _javatypes.java.awt.dnd.DropTargetDragEvent;
                        
                        
                        
                    }
                }
                interface DropTargetDropEvent extends _javatypes.java.awt.dnd.DropTargetEvent {
                    
                    getLocation(): _javatypes.java.awt.Point;
                    getCurrentDataFlavors(): _javatypes.java.awt.datatransfer.DataFlavor[];
                    getCurrentDataFlavorsAsList(): _javatypes.java.util.List<_javatypes.java.awt.datatransfer.DataFlavor>;
                    isDataFlavorSupported(arg0: _javatypes.java.awt.datatransfer.DataFlavor): boolean;
                    getSourceActions(): number;
                    getDropAction(): number;
                    getTransferable(): _javatypes.java.awt.datatransfer.Transferable;
                    acceptDrop(arg0: number): void;
                    rejectDrop(): void;
                    dropComplete(arg0: boolean): void;
                    isLocalTransfer(): boolean;
                    
                }
                namespace DropTargetDropEvent {
                    interface static {
                        new (arg0: _javatypes.java.awt.dnd.DropTargetContext, arg1: _javatypes.java.awt.Point, arg2: number, arg3: number): _javatypes.java.awt.dnd.DropTargetDropEvent;
                        new (arg0: _javatypes.java.awt.dnd.DropTargetContext, arg1: _javatypes.java.awt.Point, arg2: number, arg3: number, arg4: boolean): _javatypes.java.awt.dnd.DropTargetDropEvent;
                        
                        
                        
                    }
                }
                interface DragGestureRecognizer extends any, _javatypes.java.io.Serializable {
                    
                    getDragSource(): _javatypes.java.awt.dnd.DragSource;
                    getComponent(): _javatypes.java.awt.Component;
                    setComponent(arg0: _javatypes.java.awt.Component): void;
                    getSourceActions(): number;
                    setSourceActions(arg0: number): void;
                    getTriggerEvent(): _javatypes.java.awt.event.InputEvent;
                    resetRecognizer(): void;
                    addDragGestureListener(arg0: _javatypes.java.awt.dnd.DragGestureListener): void;
                    removeDragGestureListener(arg0: _javatypes.java.awt.dnd.DragGestureListener): void;
                    
                }
                namespace DragGestureRecognizer {
                    interface static {
                        
                        
                        
                    }
                }
                interface DropTargetEvent extends _javatypes.java.util.EventObject {
                    
                    getDropTargetContext(): _javatypes.java.awt.dnd.DropTargetContext;
                    
                }
                namespace DropTargetEvent {
                    interface static {
                        new (arg0: _javatypes.java.awt.dnd.DropTargetContext): _javatypes.java.awt.dnd.DropTargetEvent;
                        
                        
                        
                    }
                }
                interface DropTargetListener extends _javatypes.java.lang.Interface, _javatypes.java.util.EventListener {
                    
                    dragEnter(arg0: _javatypes.java.awt.dnd.DropTargetDragEvent): void;
                    dragOver(arg0: _javatypes.java.awt.dnd.DropTargetDragEvent): void;
                    dropActionChanged(arg0: _javatypes.java.awt.dnd.DropTargetDragEvent): void;
                    dragExit(arg0: _javatypes.java.awt.dnd.DropTargetEvent): void;
                    drop(arg0: _javatypes.java.awt.dnd.DropTargetDropEvent): void;
                    
                }
                namespace DropTargetListener {
                    interface static {
                        
                        
                        
                    }
                }
                interface DragSourceEvent extends _javatypes.java.util.EventObject {
                    
                    getDragSourceContext(): _javatypes.java.awt.dnd.DragSourceContext;
                    getLocation(): _javatypes.java.awt.Point;
                    getX(): number;
                    getY(): number;
                    
                }
                namespace DragSourceEvent {
                    interface static {
                        new (arg0: _javatypes.java.awt.dnd.DragSourceContext): _javatypes.java.awt.dnd.DragSourceEvent;
                        new (arg0: _javatypes.java.awt.dnd.DragSourceContext, arg1: number, arg2: number): _javatypes.java.awt.dnd.DragSourceEvent;
                        
                        
                        
                    }
                }
                interface DragSourceDropEvent extends _javatypes.java.awt.dnd.DragSourceEvent {
                    
                    getDropSuccess(): boolean;
                    getDropAction(): number;
                    
                }
                namespace DragSourceDropEvent {
                    interface static {
                        new (arg0: _javatypes.java.awt.dnd.DragSourceContext, arg1: number, arg2: boolean): _javatypes.java.awt.dnd.DragSourceDropEvent;
                        new (arg0: _javatypes.java.awt.dnd.DragSourceContext, arg1: number, arg2: boolean, arg3: number, arg4: number): _javatypes.java.awt.dnd.DragSourceDropEvent;
                        new (arg0: _javatypes.java.awt.dnd.DragSourceContext): _javatypes.java.awt.dnd.DragSourceDropEvent;
                        
                        
                        
                    }
                }
                interface DragSourceDragEvent extends _javatypes.java.awt.dnd.DragSourceEvent {
                    
                    getTargetActions(): number;
                    getGestureModifiers(): number;
                    getGestureModifiersEx(): number;
                    getUserAction(): number;
                    getDropAction(): number;
                    
                }
                namespace DragSourceDragEvent {
                    interface static {
                        new (arg0: _javatypes.java.awt.dnd.DragSourceContext, arg1: number, arg2: number, arg3: number): _javatypes.java.awt.dnd.DragSourceDragEvent;
                        new (arg0: _javatypes.java.awt.dnd.DragSourceContext, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.java.awt.dnd.DragSourceDragEvent;
                        
                        
                        
                    }
                }
                interface DragSourceContext extends any, _javatypes.java.awt.dnd.DragSourceListener, _javatypes.java.awt.dnd.DragSourceMotionListener, _javatypes.java.io.Serializable {
                    
                    getDragSource(): _javatypes.java.awt.dnd.DragSource;
                    getComponent(): _javatypes.java.awt.Component;
                    getTrigger(): _javatypes.java.awt.dnd.DragGestureEvent;
                    getSourceActions(): number;
                    setCursor(arg0: _javatypes.java.awt.Cursor): void;
                    getCursor(): _javatypes.java.awt.Cursor;
                    addDragSourceListener(arg0: _javatypes.java.awt.dnd.DragSourceListener): void;
                    removeDragSourceListener(arg0: _javatypes.java.awt.dnd.DragSourceListener): void;
                    transferablesFlavorsChanged(): void;
                    dragEnter(arg0: _javatypes.java.awt.dnd.DragSourceDragEvent): void;
                    dragOver(arg0: _javatypes.java.awt.dnd.DragSourceDragEvent): void;
                    dragExit(arg0: _javatypes.java.awt.dnd.DragSourceEvent): void;
                    dropActionChanged(arg0: _javatypes.java.awt.dnd.DragSourceDragEvent): void;
                    dragDropEnd(arg0: _javatypes.java.awt.dnd.DragSourceDropEvent): void;
                    dragMouseMoved(arg0: _javatypes.java.awt.dnd.DragSourceDragEvent): void;
                    getTransferable(): _javatypes.java.awt.datatransfer.Transferable;
                    
                }
                namespace DragSourceContext {
                    interface static {
                        new (arg0: _javatypes.java.awt.dnd.DragGestureEvent, arg1: _javatypes.java.awt.Cursor, arg2: _javatypes.java.awt.Image, arg3: _javatypes.java.awt.Point, arg4: _javatypes.java.awt.datatransfer.Transferable, arg5: _javatypes.java.awt.dnd.DragSourceListener): _javatypes.java.awt.dnd.DragSourceContext;
                        
                        
                        
                    }
                }
            }
        }
    
        namespace time {
        
            interface Instant extends any, _javatypes.java.time.temporal.Temporal, _javatypes.java.time.temporal.TemporalAdjuster, _javatypes.java.lang.Comparable<_javatypes.java.time.Instant>, _javatypes.java.io.Serializable {
                
                isSupported(arg0: _javatypes.java.time.temporal.TemporalField): boolean;
                isSupported(arg0: _javatypes.java.time.temporal.TemporalUnit): boolean;
                range(arg0: _javatypes.java.time.temporal.TemporalField): _javatypes.java.time.temporal.ValueRange;
                get(arg0: _javatypes.java.time.temporal.TemporalField): number;
                getLong(arg0: _javatypes.java.time.temporal.TemporalField): number;
                getEpochSecond(): number;
                getNano(): number;
                with(arg0: _javatypes.java.time.temporal.TemporalAdjuster): _javatypes.java.time.Instant;
                with(arg0: _javatypes.java.time.temporal.TemporalField, arg1: number): _javatypes.java.time.Instant;
                truncatedTo(arg0: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.Instant;
                plus(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.Instant;
                plus(arg0: number, arg1: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.Instant;
                plusSeconds(arg0: number): _javatypes.java.time.Instant;
                plusMillis(arg0: number): _javatypes.java.time.Instant;
                plusNanos(arg0: number): _javatypes.java.time.Instant;
                minus(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.Instant;
                minus(arg0: number, arg1: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.Instant;
                minusSeconds(arg0: number): _javatypes.java.time.Instant;
                minusMillis(arg0: number): _javatypes.java.time.Instant;
                minusNanos(arg0: number): _javatypes.java.time.Instant;
                query<R>(arg0: _javatypes.java.time.temporal.TemporalQuery<R>): R;
                adjustInto(arg0: _javatypes.java.time.temporal.Temporal): _javatypes.java.time.temporal.Temporal;
                until(arg0: _javatypes.java.time.temporal.Temporal, arg1: _javatypes.java.time.temporal.TemporalUnit): number;
                atOffset(arg0: _javatypes.java.time.ZoneOffset): _javatypes.java.time.OffsetDateTime;
                atZone(arg0: _javatypes.java.time.ZoneId): _javatypes.java.time.ZonedDateTime;
                toEpochMilli(): number;
                compareTo(arg0: _javatypes.java.time.Instant): number;
                isAfter(arg0: _javatypes.java.time.Instant): boolean;
                isBefore(arg0: _javatypes.java.time.Instant): boolean;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace Instant {
                interface static {
                    
                    readonly EPOCH: _javatypes.java.time.Instant;
                    readonly MIN: _javatypes.java.time.Instant;
                    readonly MAX: _javatypes.java.time.Instant;
                    
                    now(): _javatypes.java.time.Instant;
                    now(arg0: _javatypes.java.time.Clock): _javatypes.java.time.Instant;
                    ofEpochSecond(arg0: number): _javatypes.java.time.Instant;
                    ofEpochSecond(arg0: number, arg1: number): _javatypes.java.time.Instant;
                    ofEpochMilli(arg0: number): _javatypes.java.time.Instant;
                    from(arg0: _javatypes.java.time.temporal.TemporalAccessor): _javatypes.java.time.Instant;
                    parse(arg0: _javatypes.java.lang.CharSequence): _javatypes.java.time.Instant;
                    
                }
            }
            interface ZonedDateTime extends any, _javatypes.java.time.temporal.Temporal, _javatypes.java.time.chrono.ChronoZonedDateTime<_javatypes.java.time.LocalDate>, _javatypes.java.io.Serializable {
                
                isSupported(arg0: _javatypes.java.time.temporal.TemporalField): boolean;
                isSupported(arg0: _javatypes.java.time.temporal.TemporalUnit): boolean;
                range(arg0: _javatypes.java.time.temporal.TemporalField): _javatypes.java.time.temporal.ValueRange;
                get(arg0: _javatypes.java.time.temporal.TemporalField): number;
                getLong(arg0: _javatypes.java.time.temporal.TemporalField): number;
                getOffset(): _javatypes.java.time.ZoneOffset;
                withEarlierOffsetAtOverlap(): _javatypes.java.time.ZonedDateTime;
                withLaterOffsetAtOverlap(): _javatypes.java.time.ZonedDateTime;
                getZone(): _javatypes.java.time.ZoneId;
                withZoneSameLocal(arg0: _javatypes.java.time.ZoneId): _javatypes.java.time.ZonedDateTime;
                withZoneSameInstant(arg0: _javatypes.java.time.ZoneId): _javatypes.java.time.ZonedDateTime;
                withFixedOffsetZone(): _javatypes.java.time.ZonedDateTime;
                toLocalDateTime(): _javatypes.java.time.LocalDateTime;
                toLocalDate(): _javatypes.java.time.LocalDate;
                getYear(): number;
                getMonthValue(): number;
                getMonth(): _javatypes.java.time.Month;
                getDayOfMonth(): number;
                getDayOfYear(): number;
                getDayOfWeek(): _javatypes.java.time.DayOfWeek;
                toLocalTime(): _javatypes.java.time.LocalTime;
                getHour(): number;
                getMinute(): number;
                getSecond(): number;
                getNano(): number;
                with(arg0: _javatypes.java.time.temporal.TemporalAdjuster): _javatypes.java.time.ZonedDateTime;
                with(arg0: _javatypes.java.time.temporal.TemporalField, arg1: number): _javatypes.java.time.ZonedDateTime;
                withYear(arg0: number): _javatypes.java.time.ZonedDateTime;
                withMonth(arg0: number): _javatypes.java.time.ZonedDateTime;
                withDayOfMonth(arg0: number): _javatypes.java.time.ZonedDateTime;
                withDayOfYear(arg0: number): _javatypes.java.time.ZonedDateTime;
                withHour(arg0: number): _javatypes.java.time.ZonedDateTime;
                withMinute(arg0: number): _javatypes.java.time.ZonedDateTime;
                withSecond(arg0: number): _javatypes.java.time.ZonedDateTime;
                withNano(arg0: number): _javatypes.java.time.ZonedDateTime;
                truncatedTo(arg0: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.ZonedDateTime;
                plus(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.ZonedDateTime;
                plus(arg0: number, arg1: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.ZonedDateTime;
                plusYears(arg0: number): _javatypes.java.time.ZonedDateTime;
                plusMonths(arg0: number): _javatypes.java.time.ZonedDateTime;
                plusWeeks(arg0: number): _javatypes.java.time.ZonedDateTime;
                plusDays(arg0: number): _javatypes.java.time.ZonedDateTime;
                plusHours(arg0: number): _javatypes.java.time.ZonedDateTime;
                plusMinutes(arg0: number): _javatypes.java.time.ZonedDateTime;
                plusSeconds(arg0: number): _javatypes.java.time.ZonedDateTime;
                plusNanos(arg0: number): _javatypes.java.time.ZonedDateTime;
                minus(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.ZonedDateTime;
                minus(arg0: number, arg1: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.ZonedDateTime;
                minusYears(arg0: number): _javatypes.java.time.ZonedDateTime;
                minusMonths(arg0: number): _javatypes.java.time.ZonedDateTime;
                minusWeeks(arg0: number): _javatypes.java.time.ZonedDateTime;
                minusDays(arg0: number): _javatypes.java.time.ZonedDateTime;
                minusHours(arg0: number): _javatypes.java.time.ZonedDateTime;
                minusMinutes(arg0: number): _javatypes.java.time.ZonedDateTime;
                minusSeconds(arg0: number): _javatypes.java.time.ZonedDateTime;
                minusNanos(arg0: number): _javatypes.java.time.ZonedDateTime;
                query<R>(arg0: _javatypes.java.time.temporal.TemporalQuery<R>): R;
                until(arg0: _javatypes.java.time.temporal.Temporal, arg1: _javatypes.java.time.temporal.TemporalUnit): number;
                format(arg0: _javatypes.java.time.format.DateTimeFormatter): string;
                toOffsetDateTime(): _javatypes.java.time.OffsetDateTime;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace ZonedDateTime {
                interface static {
                    
                    
                    now(): _javatypes.java.time.ZonedDateTime;
                    now(arg0: _javatypes.java.time.ZoneId): _javatypes.java.time.ZonedDateTime;
                    now(arg0: _javatypes.java.time.Clock): _javatypes.java.time.ZonedDateTime;
                    of(arg0: _javatypes.java.time.LocalDate, arg1: _javatypes.java.time.LocalTime, arg2: _javatypes.java.time.ZoneId): _javatypes.java.time.ZonedDateTime;
                    of(arg0: _javatypes.java.time.LocalDateTime, arg1: _javatypes.java.time.ZoneId): _javatypes.java.time.ZonedDateTime;
                    of(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: _javatypes.java.time.ZoneId): _javatypes.java.time.ZonedDateTime;
                    ofLocal(arg0: _javatypes.java.time.LocalDateTime, arg1: _javatypes.java.time.ZoneId, arg2: _javatypes.java.time.ZoneOffset): _javatypes.java.time.ZonedDateTime;
                    ofInstant(arg0: _javatypes.java.time.Instant, arg1: _javatypes.java.time.ZoneId): _javatypes.java.time.ZonedDateTime;
                    ofInstant(arg0: _javatypes.java.time.LocalDateTime, arg1: _javatypes.java.time.ZoneOffset, arg2: _javatypes.java.time.ZoneId): _javatypes.java.time.ZonedDateTime;
                    ofStrict(arg0: _javatypes.java.time.LocalDateTime, arg1: _javatypes.java.time.ZoneOffset, arg2: _javatypes.java.time.ZoneId): _javatypes.java.time.ZonedDateTime;
                    from(arg0: _javatypes.java.time.temporal.TemporalAccessor): _javatypes.java.time.ZonedDateTime;
                    parse(arg0: _javatypes.java.lang.CharSequence): _javatypes.java.time.ZonedDateTime;
                    parse(arg0: _javatypes.java.lang.CharSequence, arg1: _javatypes.java.time.format.DateTimeFormatter): _javatypes.java.time.ZonedDateTime;
                    
                }
            }
            interface ZoneId extends any, _javatypes.java.io.Serializable {
                
                getId(): string;
                getDisplayName(arg0: _javatypes.java.time.format.TextStyle, arg1: _javatypes.java.util.Locale): string;
                getRules(): _javatypes.java.time.zone.ZoneRules;
                normalized(): _javatypes.java.time.ZoneId;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace ZoneId {
                interface static {
                    
                    readonly SHORT_IDS: _javatypes.java.util.Map<string, string>;
                    
                    systemDefault(): _javatypes.java.time.ZoneId;
                    getAvailableZoneIds(): _javatypes.java.util.Set<string>;
                    of(arg0: string, arg1: _javatypes.java.util.Map<string, string>): _javatypes.java.time.ZoneId;
                    of(arg0: string): _javatypes.java.time.ZoneId;
                    ofOffset(arg0: string, arg1: _javatypes.java.time.ZoneOffset): _javatypes.java.time.ZoneId;
                    from(arg0: _javatypes.java.time.temporal.TemporalAccessor): _javatypes.java.time.ZoneId;
                    
                }
            }
            interface ZoneOffset extends _javatypes.java.time.ZoneId, _javatypes.java.time.temporal.TemporalAccessor, _javatypes.java.time.temporal.TemporalAdjuster, _javatypes.java.lang.Comparable<_javatypes.java.time.ZoneOffset>, _javatypes.java.io.Serializable {
                
                getTotalSeconds(): number;
                getId(): string;
                getRules(): _javatypes.java.time.zone.ZoneRules;
                isSupported(arg0: _javatypes.java.time.temporal.TemporalField): boolean;
                range(arg0: _javatypes.java.time.temporal.TemporalField): _javatypes.java.time.temporal.ValueRange;
                get(arg0: _javatypes.java.time.temporal.TemporalField): number;
                getLong(arg0: _javatypes.java.time.temporal.TemporalField): number;
                query<R>(arg0: _javatypes.java.time.temporal.TemporalQuery<R>): R;
                adjustInto(arg0: _javatypes.java.time.temporal.Temporal): _javatypes.java.time.temporal.Temporal;
                compareTo(arg0: _javatypes.java.time.ZoneOffset): number;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace ZoneOffset {
                interface static {
                    
                    readonly UTC: _javatypes.java.time.ZoneOffset;
                    readonly MIN: _javatypes.java.time.ZoneOffset;
                    readonly MAX: _javatypes.java.time.ZoneOffset;
                    
                    of(arg0: string): _javatypes.java.time.ZoneOffset;
                    ofHours(arg0: number): _javatypes.java.time.ZoneOffset;
                    ofHoursMinutes(arg0: number, arg1: number): _javatypes.java.time.ZoneOffset;
                    ofHoursMinutesSeconds(arg0: number, arg1: number, arg2: number): _javatypes.java.time.ZoneOffset;
                    from(arg0: _javatypes.java.time.temporal.TemporalAccessor): _javatypes.java.time.ZoneOffset;
                    ofTotalSeconds(arg0: number): _javatypes.java.time.ZoneOffset;
                    
                }
            }
            interface Duration extends any, _javatypes.java.time.temporal.TemporalAmount, _javatypes.java.lang.Comparable<_javatypes.java.time.Duration>, _javatypes.java.io.Serializable {
                
                get(arg0: _javatypes.java.time.temporal.TemporalUnit): number;
                getUnits(): _javatypes.java.util.List<_javatypes.java.time.temporal.TemporalUnit>;
                isZero(): boolean;
                isNegative(): boolean;
                getSeconds(): number;
                getNano(): number;
                withSeconds(arg0: number): _javatypes.java.time.Duration;
                withNanos(arg0: number): _javatypes.java.time.Duration;
                plus(arg0: _javatypes.java.time.Duration): _javatypes.java.time.Duration;
                plus(arg0: number, arg1: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.Duration;
                plusDays(arg0: number): _javatypes.java.time.Duration;
                plusHours(arg0: number): _javatypes.java.time.Duration;
                plusMinutes(arg0: number): _javatypes.java.time.Duration;
                plusSeconds(arg0: number): _javatypes.java.time.Duration;
                plusMillis(arg0: number): _javatypes.java.time.Duration;
                plusNanos(arg0: number): _javatypes.java.time.Duration;
                minus(arg0: _javatypes.java.time.Duration): _javatypes.java.time.Duration;
                minus(arg0: number, arg1: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.Duration;
                minusDays(arg0: number): _javatypes.java.time.Duration;
                minusHours(arg0: number): _javatypes.java.time.Duration;
                minusMinutes(arg0: number): _javatypes.java.time.Duration;
                minusSeconds(arg0: number): _javatypes.java.time.Duration;
                minusMillis(arg0: number): _javatypes.java.time.Duration;
                minusNanos(arg0: number): _javatypes.java.time.Duration;
                multipliedBy(arg0: number): _javatypes.java.time.Duration;
                dividedBy(arg0: number): _javatypes.java.time.Duration;
                dividedBy(arg0: _javatypes.java.time.Duration): number;
                negated(): _javatypes.java.time.Duration;
                abs(): _javatypes.java.time.Duration;
                addTo(arg0: _javatypes.java.time.temporal.Temporal): _javatypes.java.time.temporal.Temporal;
                subtractFrom(arg0: _javatypes.java.time.temporal.Temporal): _javatypes.java.time.temporal.Temporal;
                toDays(): number;
                toHours(): number;
                toMinutes(): number;
                toSeconds(): number;
                toMillis(): number;
                toNanos(): number;
                toDaysPart(): number;
                toHoursPart(): number;
                toMinutesPart(): number;
                toSecondsPart(): number;
                toMillisPart(): number;
                toNanosPart(): number;
                truncatedTo(arg0: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.Duration;
                compareTo(arg0: _javatypes.java.time.Duration): number;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace Duration {
                interface static {
                    
                    readonly ZERO: _javatypes.java.time.Duration;
                    
                    ofDays(arg0: number): _javatypes.java.time.Duration;
                    ofHours(arg0: number): _javatypes.java.time.Duration;
                    ofMinutes(arg0: number): _javatypes.java.time.Duration;
                    ofSeconds(arg0: number): _javatypes.java.time.Duration;
                    ofSeconds(arg0: number, arg1: number): _javatypes.java.time.Duration;
                    ofMillis(arg0: number): _javatypes.java.time.Duration;
                    ofNanos(arg0: number): _javatypes.java.time.Duration;
                    of(arg0: number, arg1: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.Duration;
                    from(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.Duration;
                    parse(arg0: _javatypes.java.lang.CharSequence): _javatypes.java.time.Duration;
                    between(arg0: _javatypes.java.time.temporal.Temporal, arg1: _javatypes.java.time.temporal.Temporal): _javatypes.java.time.Duration;
                    
                }
            }
            interface Clock extends any, _javatypes.java.time.InstantSource {
                
                getZone(): _javatypes.java.time.ZoneId;
                withZone(arg0: _javatypes.java.time.ZoneId): _javatypes.java.time.Clock;
                millis(): number;
                instant(): _javatypes.java.time.Instant;
                equals(arg0: any): boolean;
                hashCode(): number;
                
            }
            namespace Clock {
                interface static {
                    
                    
                    systemUTC(): _javatypes.java.time.Clock;
                    systemDefaultZone(): _javatypes.java.time.Clock;
                    system(arg0: _javatypes.java.time.ZoneId): _javatypes.java.time.Clock;
                    tickMillis(arg0: _javatypes.java.time.ZoneId): _javatypes.java.time.Clock;
                    tickSeconds(arg0: _javatypes.java.time.ZoneId): _javatypes.java.time.Clock;
                    tickMinutes(arg0: _javatypes.java.time.ZoneId): _javatypes.java.time.Clock;
                    tick(arg0: _javatypes.java.time.Clock, arg1: _javatypes.java.time.Duration): _javatypes.java.time.Clock;
                    fixed(arg0: _javatypes.java.time.Instant, arg1: _javatypes.java.time.ZoneId): _javatypes.java.time.Clock;
                    offset(arg0: _javatypes.java.time.Clock, arg1: _javatypes.java.time.Duration): _javatypes.java.time.Clock;
                    
                }
            }
            interface OffsetDateTime extends any, _javatypes.java.time.temporal.Temporal, _javatypes.java.time.temporal.TemporalAdjuster, _javatypes.java.lang.Comparable<_javatypes.java.time.OffsetDateTime>, _javatypes.java.io.Serializable {
                
                isSupported(arg0: _javatypes.java.time.temporal.TemporalField): boolean;
                isSupported(arg0: _javatypes.java.time.temporal.TemporalUnit): boolean;
                range(arg0: _javatypes.java.time.temporal.TemporalField): _javatypes.java.time.temporal.ValueRange;
                get(arg0: _javatypes.java.time.temporal.TemporalField): number;
                getLong(arg0: _javatypes.java.time.temporal.TemporalField): number;
                getOffset(): _javatypes.java.time.ZoneOffset;
                withOffsetSameLocal(arg0: _javatypes.java.time.ZoneOffset): _javatypes.java.time.OffsetDateTime;
                withOffsetSameInstant(arg0: _javatypes.java.time.ZoneOffset): _javatypes.java.time.OffsetDateTime;
                toLocalDateTime(): _javatypes.java.time.LocalDateTime;
                toLocalDate(): _javatypes.java.time.LocalDate;
                getYear(): number;
                getMonthValue(): number;
                getMonth(): _javatypes.java.time.Month;
                getDayOfMonth(): number;
                getDayOfYear(): number;
                getDayOfWeek(): _javatypes.java.time.DayOfWeek;
                toLocalTime(): _javatypes.java.time.LocalTime;
                getHour(): number;
                getMinute(): number;
                getSecond(): number;
                getNano(): number;
                with(arg0: _javatypes.java.time.temporal.TemporalAdjuster): _javatypes.java.time.OffsetDateTime;
                with(arg0: _javatypes.java.time.temporal.TemporalField, arg1: number): _javatypes.java.time.OffsetDateTime;
                withYear(arg0: number): _javatypes.java.time.OffsetDateTime;
                withMonth(arg0: number): _javatypes.java.time.OffsetDateTime;
                withDayOfMonth(arg0: number): _javatypes.java.time.OffsetDateTime;
                withDayOfYear(arg0: number): _javatypes.java.time.OffsetDateTime;
                withHour(arg0: number): _javatypes.java.time.OffsetDateTime;
                withMinute(arg0: number): _javatypes.java.time.OffsetDateTime;
                withSecond(arg0: number): _javatypes.java.time.OffsetDateTime;
                withNano(arg0: number): _javatypes.java.time.OffsetDateTime;
                truncatedTo(arg0: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.OffsetDateTime;
                plus(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.OffsetDateTime;
                plus(arg0: number, arg1: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.OffsetDateTime;
                plusYears(arg0: number): _javatypes.java.time.OffsetDateTime;
                plusMonths(arg0: number): _javatypes.java.time.OffsetDateTime;
                plusWeeks(arg0: number): _javatypes.java.time.OffsetDateTime;
                plusDays(arg0: number): _javatypes.java.time.OffsetDateTime;
                plusHours(arg0: number): _javatypes.java.time.OffsetDateTime;
                plusMinutes(arg0: number): _javatypes.java.time.OffsetDateTime;
                plusSeconds(arg0: number): _javatypes.java.time.OffsetDateTime;
                plusNanos(arg0: number): _javatypes.java.time.OffsetDateTime;
                minus(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.OffsetDateTime;
                minus(arg0: number, arg1: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.OffsetDateTime;
                minusYears(arg0: number): _javatypes.java.time.OffsetDateTime;
                minusMonths(arg0: number): _javatypes.java.time.OffsetDateTime;
                minusWeeks(arg0: number): _javatypes.java.time.OffsetDateTime;
                minusDays(arg0: number): _javatypes.java.time.OffsetDateTime;
                minusHours(arg0: number): _javatypes.java.time.OffsetDateTime;
                minusMinutes(arg0: number): _javatypes.java.time.OffsetDateTime;
                minusSeconds(arg0: number): _javatypes.java.time.OffsetDateTime;
                minusNanos(arg0: number): _javatypes.java.time.OffsetDateTime;
                query<R>(arg0: _javatypes.java.time.temporal.TemporalQuery<R>): R;
                adjustInto(arg0: _javatypes.java.time.temporal.Temporal): _javatypes.java.time.temporal.Temporal;
                until(arg0: _javatypes.java.time.temporal.Temporal, arg1: _javatypes.java.time.temporal.TemporalUnit): number;
                format(arg0: _javatypes.java.time.format.DateTimeFormatter): string;
                atZoneSameInstant(arg0: _javatypes.java.time.ZoneId): _javatypes.java.time.ZonedDateTime;
                atZoneSimilarLocal(arg0: _javatypes.java.time.ZoneId): _javatypes.java.time.ZonedDateTime;
                toOffsetTime(): _javatypes.java.time.OffsetTime;
                toZonedDateTime(): _javatypes.java.time.ZonedDateTime;
                toInstant(): _javatypes.java.time.Instant;
                toEpochSecond(): number;
                compareTo(arg0: _javatypes.java.time.OffsetDateTime): number;
                isAfter(arg0: _javatypes.java.time.OffsetDateTime): boolean;
                isBefore(arg0: _javatypes.java.time.OffsetDateTime): boolean;
                isEqual(arg0: _javatypes.java.time.OffsetDateTime): boolean;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace OffsetDateTime {
                interface static {
                    
                    readonly MIN: _javatypes.java.time.OffsetDateTime;
                    readonly MAX: _javatypes.java.time.OffsetDateTime;
                    
                    timeLineOrder(): _javatypes.java.util.Comparator<_javatypes.java.time.OffsetDateTime>;
                    now(): _javatypes.java.time.OffsetDateTime;
                    now(arg0: _javatypes.java.time.ZoneId): _javatypes.java.time.OffsetDateTime;
                    now(arg0: _javatypes.java.time.Clock): _javatypes.java.time.OffsetDateTime;
                    of(arg0: _javatypes.java.time.LocalDate, arg1: _javatypes.java.time.LocalTime, arg2: _javatypes.java.time.ZoneOffset): _javatypes.java.time.OffsetDateTime;
                    of(arg0: _javatypes.java.time.LocalDateTime, arg1: _javatypes.java.time.ZoneOffset): _javatypes.java.time.OffsetDateTime;
                    of(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: _javatypes.java.time.ZoneOffset): _javatypes.java.time.OffsetDateTime;
                    ofInstant(arg0: _javatypes.java.time.Instant, arg1: _javatypes.java.time.ZoneId): _javatypes.java.time.OffsetDateTime;
                    from(arg0: _javatypes.java.time.temporal.TemporalAccessor): _javatypes.java.time.OffsetDateTime;
                    parse(arg0: _javatypes.java.lang.CharSequence): _javatypes.java.time.OffsetDateTime;
                    parse(arg0: _javatypes.java.lang.CharSequence, arg1: _javatypes.java.time.format.DateTimeFormatter): _javatypes.java.time.OffsetDateTime;
                    
                }
            }
            interface Month extends _javatypes.java.lang.Enum<_javatypes.java.time.Month>, _javatypes.java.time.temporal.TemporalAccessor, _javatypes.java.time.temporal.TemporalAdjuster {
                
                getValue(): number;
                getDisplayName(arg0: _javatypes.java.time.format.TextStyle, arg1: _javatypes.java.util.Locale): string;
                isSupported(arg0: _javatypes.java.time.temporal.TemporalField): boolean;
                range(arg0: _javatypes.java.time.temporal.TemporalField): _javatypes.java.time.temporal.ValueRange;
                get(arg0: _javatypes.java.time.temporal.TemporalField): number;
                getLong(arg0: _javatypes.java.time.temporal.TemporalField): number;
                plus(arg0: number): _javatypes.java.time.Month;
                minus(arg0: number): _javatypes.java.time.Month;
                length(arg0: boolean): number;
                minLength(): number;
                maxLength(): number;
                firstDayOfYear(arg0: boolean): number;
                firstMonthOfQuarter(): _javatypes.java.time.Month;
                query<R>(arg0: _javatypes.java.time.temporal.TemporalQuery<R>): R;
                adjustInto(arg0: _javatypes.java.time.temporal.Temporal): _javatypes.java.time.temporal.Temporal;
                
            }
            namespace Month {
                interface static {
                    
                    readonly JANUARY: _javatypes.java.time.Month;
                    readonly FEBRUARY: _javatypes.java.time.Month;
                    readonly MARCH: _javatypes.java.time.Month;
                    readonly APRIL: _javatypes.java.time.Month;
                    readonly MAY: _javatypes.java.time.Month;
                    readonly JUNE: _javatypes.java.time.Month;
                    readonly JULY: _javatypes.java.time.Month;
                    readonly AUGUST: _javatypes.java.time.Month;
                    readonly SEPTEMBER: _javatypes.java.time.Month;
                    readonly OCTOBER: _javatypes.java.time.Month;
                    readonly NOVEMBER: _javatypes.java.time.Month;
                    readonly DECEMBER: _javatypes.java.time.Month;
                    
                    values(): _javatypes.java.time.Month[];
                    valueOf(arg0: string): _javatypes.java.time.Month;
                    of(arg0: number): _javatypes.java.time.Month;
                    from(arg0: _javatypes.java.time.temporal.TemporalAccessor): _javatypes.java.time.Month;
                    
                }
            }
            interface InstantSource extends _javatypes.java.lang.Interface {
                
                instant(): _javatypes.java.time.Instant;
                millis(): number;
                withZone(arg0: _javatypes.java.time.ZoneId): _javatypes.java.time.Clock;
                
            }
            namespace InstantSource {
                interface static {
                    
                    
                    system(): _javatypes.java.time.InstantSource;
                    tick(arg0: _javatypes.java.time.InstantSource, arg1: _javatypes.java.time.Duration): _javatypes.java.time.InstantSource;
                    fixed(arg0: _javatypes.java.time.Instant): _javatypes.java.time.InstantSource;
                    offset(arg0: _javatypes.java.time.InstantSource, arg1: _javatypes.java.time.Duration): _javatypes.java.time.InstantSource;
                    
                }
            }
            interface LocalTime extends any, _javatypes.java.time.temporal.Temporal, _javatypes.java.time.temporal.TemporalAdjuster, _javatypes.java.lang.Comparable<_javatypes.java.time.LocalTime>, _javatypes.java.io.Serializable {
                
                isSupported(arg0: _javatypes.java.time.temporal.TemporalField): boolean;
                isSupported(arg0: _javatypes.java.time.temporal.TemporalUnit): boolean;
                range(arg0: _javatypes.java.time.temporal.TemporalField): _javatypes.java.time.temporal.ValueRange;
                get(arg0: _javatypes.java.time.temporal.TemporalField): number;
                getLong(arg0: _javatypes.java.time.temporal.TemporalField): number;
                getHour(): number;
                getMinute(): number;
                getSecond(): number;
                getNano(): number;
                with(arg0: _javatypes.java.time.temporal.TemporalAdjuster): _javatypes.java.time.LocalTime;
                with(arg0: _javatypes.java.time.temporal.TemporalField, arg1: number): _javatypes.java.time.LocalTime;
                withHour(arg0: number): _javatypes.java.time.LocalTime;
                withMinute(arg0: number): _javatypes.java.time.LocalTime;
                withSecond(arg0: number): _javatypes.java.time.LocalTime;
                withNano(arg0: number): _javatypes.java.time.LocalTime;
                truncatedTo(arg0: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.LocalTime;
                plus(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.LocalTime;
                plus(arg0: number, arg1: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.LocalTime;
                plusHours(arg0: number): _javatypes.java.time.LocalTime;
                plusMinutes(arg0: number): _javatypes.java.time.LocalTime;
                plusSeconds(arg0: number): _javatypes.java.time.LocalTime;
                plusNanos(arg0: number): _javatypes.java.time.LocalTime;
                minus(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.LocalTime;
                minus(arg0: number, arg1: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.LocalTime;
                minusHours(arg0: number): _javatypes.java.time.LocalTime;
                minusMinutes(arg0: number): _javatypes.java.time.LocalTime;
                minusSeconds(arg0: number): _javatypes.java.time.LocalTime;
                minusNanos(arg0: number): _javatypes.java.time.LocalTime;
                query<R>(arg0: _javatypes.java.time.temporal.TemporalQuery<R>): R;
                adjustInto(arg0: _javatypes.java.time.temporal.Temporal): _javatypes.java.time.temporal.Temporal;
                until(arg0: _javatypes.java.time.temporal.Temporal, arg1: _javatypes.java.time.temporal.TemporalUnit): number;
                format(arg0: _javatypes.java.time.format.DateTimeFormatter): string;
                atDate(arg0: _javatypes.java.time.LocalDate): _javatypes.java.time.LocalDateTime;
                atOffset(arg0: _javatypes.java.time.ZoneOffset): _javatypes.java.time.OffsetTime;
                toSecondOfDay(): number;
                toNanoOfDay(): number;
                toEpochSecond(arg0: _javatypes.java.time.LocalDate, arg1: _javatypes.java.time.ZoneOffset): number;
                compareTo(arg0: _javatypes.java.time.LocalTime): number;
                isAfter(arg0: _javatypes.java.time.LocalTime): boolean;
                isBefore(arg0: _javatypes.java.time.LocalTime): boolean;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace LocalTime {
                interface static {
                    
                    readonly MIN: _javatypes.java.time.LocalTime;
                    readonly MAX: _javatypes.java.time.LocalTime;
                    readonly MIDNIGHT: _javatypes.java.time.LocalTime;
                    readonly NOON: _javatypes.java.time.LocalTime;
                    
                    now(): _javatypes.java.time.LocalTime;
                    now(arg0: _javatypes.java.time.ZoneId): _javatypes.java.time.LocalTime;
                    now(arg0: _javatypes.java.time.Clock): _javatypes.java.time.LocalTime;
                    of(arg0: number, arg1: number): _javatypes.java.time.LocalTime;
                    of(arg0: number, arg1: number, arg2: number): _javatypes.java.time.LocalTime;
                    of(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.java.time.LocalTime;
                    ofInstant(arg0: _javatypes.java.time.Instant, arg1: _javatypes.java.time.ZoneId): _javatypes.java.time.LocalTime;
                    ofSecondOfDay(arg0: number): _javatypes.java.time.LocalTime;
                    ofNanoOfDay(arg0: number): _javatypes.java.time.LocalTime;
                    from(arg0: _javatypes.java.time.temporal.TemporalAccessor): _javatypes.java.time.LocalTime;
                    parse(arg0: _javatypes.java.lang.CharSequence): _javatypes.java.time.LocalTime;
                    parse(arg0: _javatypes.java.lang.CharSequence, arg1: _javatypes.java.time.format.DateTimeFormatter): _javatypes.java.time.LocalTime;
                    
                }
            }
            interface LocalDate extends any, _javatypes.java.time.temporal.Temporal, _javatypes.java.time.temporal.TemporalAdjuster, _javatypes.java.time.chrono.ChronoLocalDate, _javatypes.java.io.Serializable {
                
                isSupported(arg0: _javatypes.java.time.temporal.TemporalField): boolean;
                isSupported(arg0: _javatypes.java.time.temporal.TemporalUnit): boolean;
                range(arg0: _javatypes.java.time.temporal.TemporalField): _javatypes.java.time.temporal.ValueRange;
                get(arg0: _javatypes.java.time.temporal.TemporalField): number;
                getLong(arg0: _javatypes.java.time.temporal.TemporalField): number;
                getChronology(): _javatypes.java.time.chrono.IsoChronology;
                getEra(): _javatypes.java.time.chrono.IsoEra;
                getYear(): number;
                getMonthValue(): number;
                getMonth(): _javatypes.java.time.Month;
                getDayOfMonth(): number;
                getDayOfYear(): number;
                getDayOfWeek(): _javatypes.java.time.DayOfWeek;
                isLeapYear(): boolean;
                lengthOfMonth(): number;
                lengthOfYear(): number;
                with(arg0: _javatypes.java.time.temporal.TemporalAdjuster): _javatypes.java.time.LocalDate;
                with(arg0: _javatypes.java.time.temporal.TemporalField, arg1: number): _javatypes.java.time.LocalDate;
                withYear(arg0: number): _javatypes.java.time.LocalDate;
                withMonth(arg0: number): _javatypes.java.time.LocalDate;
                withDayOfMonth(arg0: number): _javatypes.java.time.LocalDate;
                withDayOfYear(arg0: number): _javatypes.java.time.LocalDate;
                plus(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.LocalDate;
                plus(arg0: number, arg1: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.LocalDate;
                plusYears(arg0: number): _javatypes.java.time.LocalDate;
                plusMonths(arg0: number): _javatypes.java.time.LocalDate;
                plusWeeks(arg0: number): _javatypes.java.time.LocalDate;
                plusDays(arg0: number): _javatypes.java.time.LocalDate;
                minus(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.LocalDate;
                minus(arg0: number, arg1: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.LocalDate;
                minusYears(arg0: number): _javatypes.java.time.LocalDate;
                minusMonths(arg0: number): _javatypes.java.time.LocalDate;
                minusWeeks(arg0: number): _javatypes.java.time.LocalDate;
                minusDays(arg0: number): _javatypes.java.time.LocalDate;
                query<R>(arg0: _javatypes.java.time.temporal.TemporalQuery<R>): R;
                adjustInto(arg0: _javatypes.java.time.temporal.Temporal): _javatypes.java.time.temporal.Temporal;
                until(arg0: _javatypes.java.time.temporal.Temporal, arg1: _javatypes.java.time.temporal.TemporalUnit): number;
                until(arg0: _javatypes.java.time.chrono.ChronoLocalDate): _javatypes.java.time.Period;
                datesUntil(arg0: _javatypes.java.time.LocalDate): _javatypes.java.util.stream.Stream<_javatypes.java.time.LocalDate>;
                datesUntil(arg0: _javatypes.java.time.LocalDate, arg1: _javatypes.java.time.Period): _javatypes.java.util.stream.Stream<_javatypes.java.time.LocalDate>;
                format(arg0: _javatypes.java.time.format.DateTimeFormatter): string;
                atTime(arg0: _javatypes.java.time.LocalTime): _javatypes.java.time.LocalDateTime;
                atTime(arg0: number, arg1: number): _javatypes.java.time.LocalDateTime;
                atTime(arg0: number, arg1: number, arg2: number): _javatypes.java.time.LocalDateTime;
                atTime(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.java.time.LocalDateTime;
                atTime(arg0: _javatypes.java.time.OffsetTime): _javatypes.java.time.OffsetDateTime;
                atStartOfDay(): _javatypes.java.time.LocalDateTime;
                atStartOfDay(arg0: _javatypes.java.time.ZoneId): _javatypes.java.time.ZonedDateTime;
                toEpochDay(): number;
                toEpochSecond(arg0: _javatypes.java.time.LocalTime, arg1: _javatypes.java.time.ZoneOffset): number;
                compareTo(arg0: _javatypes.java.time.chrono.ChronoLocalDate): number;
                isAfter(arg0: _javatypes.java.time.chrono.ChronoLocalDate): boolean;
                isBefore(arg0: _javatypes.java.time.chrono.ChronoLocalDate): boolean;
                isEqual(arg0: _javatypes.java.time.chrono.ChronoLocalDate): boolean;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace LocalDate {
                interface static {
                    
                    readonly MIN: _javatypes.java.time.LocalDate;
                    readonly MAX: _javatypes.java.time.LocalDate;
                    readonly EPOCH: _javatypes.java.time.LocalDate;
                    
                    now(): _javatypes.java.time.LocalDate;
                    now(arg0: _javatypes.java.time.ZoneId): _javatypes.java.time.LocalDate;
                    now(arg0: _javatypes.java.time.Clock): _javatypes.java.time.LocalDate;
                    of(arg0: number, arg1: _javatypes.java.time.Month, arg2: number): _javatypes.java.time.LocalDate;
                    of(arg0: number, arg1: number, arg2: number): _javatypes.java.time.LocalDate;
                    ofYearDay(arg0: number, arg1: number): _javatypes.java.time.LocalDate;
                    ofInstant(arg0: _javatypes.java.time.Instant, arg1: _javatypes.java.time.ZoneId): _javatypes.java.time.LocalDate;
                    ofEpochDay(arg0: number): _javatypes.java.time.LocalDate;
                    from(arg0: _javatypes.java.time.temporal.TemporalAccessor): _javatypes.java.time.LocalDate;
                    parse(arg0: _javatypes.java.lang.CharSequence): _javatypes.java.time.LocalDate;
                    parse(arg0: _javatypes.java.lang.CharSequence, arg1: _javatypes.java.time.format.DateTimeFormatter): _javatypes.java.time.LocalDate;
                    
                }
            }
            interface LocalDateTime extends any, _javatypes.java.time.temporal.Temporal, _javatypes.java.time.temporal.TemporalAdjuster, _javatypes.java.time.chrono.ChronoLocalDateTime<_javatypes.java.time.LocalDate>, _javatypes.java.io.Serializable {
                
                isSupported(arg0: _javatypes.java.time.temporal.TemporalField): boolean;
                isSupported(arg0: _javatypes.java.time.temporal.TemporalUnit): boolean;
                range(arg0: _javatypes.java.time.temporal.TemporalField): _javatypes.java.time.temporal.ValueRange;
                get(arg0: _javatypes.java.time.temporal.TemporalField): number;
                getLong(arg0: _javatypes.java.time.temporal.TemporalField): number;
                toLocalDate(): _javatypes.java.time.LocalDate;
                getYear(): number;
                getMonthValue(): number;
                getMonth(): _javatypes.java.time.Month;
                getDayOfMonth(): number;
                getDayOfYear(): number;
                getDayOfWeek(): _javatypes.java.time.DayOfWeek;
                toLocalTime(): _javatypes.java.time.LocalTime;
                getHour(): number;
                getMinute(): number;
                getSecond(): number;
                getNano(): number;
                with(arg0: _javatypes.java.time.temporal.TemporalAdjuster): _javatypes.java.time.LocalDateTime;
                with(arg0: _javatypes.java.time.temporal.TemporalField, arg1: number): _javatypes.java.time.LocalDateTime;
                withYear(arg0: number): _javatypes.java.time.LocalDateTime;
                withMonth(arg0: number): _javatypes.java.time.LocalDateTime;
                withDayOfMonth(arg0: number): _javatypes.java.time.LocalDateTime;
                withDayOfYear(arg0: number): _javatypes.java.time.LocalDateTime;
                withHour(arg0: number): _javatypes.java.time.LocalDateTime;
                withMinute(arg0: number): _javatypes.java.time.LocalDateTime;
                withSecond(arg0: number): _javatypes.java.time.LocalDateTime;
                withNano(arg0: number): _javatypes.java.time.LocalDateTime;
                truncatedTo(arg0: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.LocalDateTime;
                plus(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.LocalDateTime;
                plus(arg0: number, arg1: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.LocalDateTime;
                plusYears(arg0: number): _javatypes.java.time.LocalDateTime;
                plusMonths(arg0: number): _javatypes.java.time.LocalDateTime;
                plusWeeks(arg0: number): _javatypes.java.time.LocalDateTime;
                plusDays(arg0: number): _javatypes.java.time.LocalDateTime;
                plusHours(arg0: number): _javatypes.java.time.LocalDateTime;
                plusMinutes(arg0: number): _javatypes.java.time.LocalDateTime;
                plusSeconds(arg0: number): _javatypes.java.time.LocalDateTime;
                plusNanos(arg0: number): _javatypes.java.time.LocalDateTime;
                minus(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.LocalDateTime;
                minus(arg0: number, arg1: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.LocalDateTime;
                minusYears(arg0: number): _javatypes.java.time.LocalDateTime;
                minusMonths(arg0: number): _javatypes.java.time.LocalDateTime;
                minusWeeks(arg0: number): _javatypes.java.time.LocalDateTime;
                minusDays(arg0: number): _javatypes.java.time.LocalDateTime;
                minusHours(arg0: number): _javatypes.java.time.LocalDateTime;
                minusMinutes(arg0: number): _javatypes.java.time.LocalDateTime;
                minusSeconds(arg0: number): _javatypes.java.time.LocalDateTime;
                minusNanos(arg0: number): _javatypes.java.time.LocalDateTime;
                query<R>(arg0: _javatypes.java.time.temporal.TemporalQuery<R>): R;
                adjustInto(arg0: _javatypes.java.time.temporal.Temporal): _javatypes.java.time.temporal.Temporal;
                until(arg0: _javatypes.java.time.temporal.Temporal, arg1: _javatypes.java.time.temporal.TemporalUnit): number;
                format(arg0: _javatypes.java.time.format.DateTimeFormatter): string;
                atOffset(arg0: _javatypes.java.time.ZoneOffset): _javatypes.java.time.OffsetDateTime;
                atZone(arg0: _javatypes.java.time.ZoneId): _javatypes.java.time.ZonedDateTime;
                compareTo(arg0: _javatypes.java.time.chrono.ChronoLocalDateTime<any>): number;
                isAfter(arg0: _javatypes.java.time.chrono.ChronoLocalDateTime<any>): boolean;
                isBefore(arg0: _javatypes.java.time.chrono.ChronoLocalDateTime<any>): boolean;
                isEqual(arg0: _javatypes.java.time.chrono.ChronoLocalDateTime<any>): boolean;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace LocalDateTime {
                interface static {
                    
                    readonly MIN: _javatypes.java.time.LocalDateTime;
                    readonly MAX: _javatypes.java.time.LocalDateTime;
                    
                    now(): _javatypes.java.time.LocalDateTime;
                    now(arg0: _javatypes.java.time.ZoneId): _javatypes.java.time.LocalDateTime;
                    now(arg0: _javatypes.java.time.Clock): _javatypes.java.time.LocalDateTime;
                    of(arg0: number, arg1: _javatypes.java.time.Month, arg2: number, arg3: number, arg4: number): _javatypes.java.time.LocalDateTime;
                    of(arg0: number, arg1: _javatypes.java.time.Month, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.java.time.LocalDateTime;
                    of(arg0: number, arg1: _javatypes.java.time.Month, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): _javatypes.java.time.LocalDateTime;
                    of(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): _javatypes.java.time.LocalDateTime;
                    of(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.java.time.LocalDateTime;
                    of(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): _javatypes.java.time.LocalDateTime;
                    of(arg0: _javatypes.java.time.LocalDate, arg1: _javatypes.java.time.LocalTime): _javatypes.java.time.LocalDateTime;
                    ofInstant(arg0: _javatypes.java.time.Instant, arg1: _javatypes.java.time.ZoneId): _javatypes.java.time.LocalDateTime;
                    ofEpochSecond(arg0: number, arg1: number, arg2: _javatypes.java.time.ZoneOffset): _javatypes.java.time.LocalDateTime;
                    from(arg0: _javatypes.java.time.temporal.TemporalAccessor): _javatypes.java.time.LocalDateTime;
                    parse(arg0: _javatypes.java.lang.CharSequence): _javatypes.java.time.LocalDateTime;
                    parse(arg0: _javatypes.java.lang.CharSequence, arg1: _javatypes.java.time.format.DateTimeFormatter): _javatypes.java.time.LocalDateTime;
                    
                }
            }
            interface Period extends any, _javatypes.java.time.chrono.ChronoPeriod, _javatypes.java.io.Serializable {
                
                get(arg0: _javatypes.java.time.temporal.TemporalUnit): number;
                getUnits(): _javatypes.java.util.List<_javatypes.java.time.temporal.TemporalUnit>;
                getChronology(): _javatypes.java.time.chrono.IsoChronology;
                isZero(): boolean;
                isNegative(): boolean;
                getYears(): number;
                getMonths(): number;
                getDays(): number;
                withYears(arg0: number): _javatypes.java.time.Period;
                withMonths(arg0: number): _javatypes.java.time.Period;
                withDays(arg0: number): _javatypes.java.time.Period;
                plus(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.Period;
                plusYears(arg0: number): _javatypes.java.time.Period;
                plusMonths(arg0: number): _javatypes.java.time.Period;
                plusDays(arg0: number): _javatypes.java.time.Period;
                minus(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.Period;
                minusYears(arg0: number): _javatypes.java.time.Period;
                minusMonths(arg0: number): _javatypes.java.time.Period;
                minusDays(arg0: number): _javatypes.java.time.Period;
                multipliedBy(arg0: number): _javatypes.java.time.Period;
                negated(): _javatypes.java.time.Period;
                normalized(): _javatypes.java.time.Period;
                toTotalMonths(): number;
                addTo(arg0: _javatypes.java.time.temporal.Temporal): _javatypes.java.time.temporal.Temporal;
                subtractFrom(arg0: _javatypes.java.time.temporal.Temporal): _javatypes.java.time.temporal.Temporal;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace Period {
                interface static {
                    
                    readonly ZERO: _javatypes.java.time.Period;
                    
                    ofYears(arg0: number): _javatypes.java.time.Period;
                    ofMonths(arg0: number): _javatypes.java.time.Period;
                    ofWeeks(arg0: number): _javatypes.java.time.Period;
                    ofDays(arg0: number): _javatypes.java.time.Period;
                    of(arg0: number, arg1: number, arg2: number): _javatypes.java.time.Period;
                    from(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.Period;
                    parse(arg0: _javatypes.java.lang.CharSequence): _javatypes.java.time.Period;
                    between(arg0: _javatypes.java.time.LocalDate, arg1: _javatypes.java.time.LocalDate): _javatypes.java.time.Period;
                    
                }
            }
            interface OffsetTime extends any, _javatypes.java.time.temporal.Temporal, _javatypes.java.time.temporal.TemporalAdjuster, _javatypes.java.lang.Comparable<_javatypes.java.time.OffsetTime>, _javatypes.java.io.Serializable {
                
                isSupported(arg0: _javatypes.java.time.temporal.TemporalField): boolean;
                isSupported(arg0: _javatypes.java.time.temporal.TemporalUnit): boolean;
                range(arg0: _javatypes.java.time.temporal.TemporalField): _javatypes.java.time.temporal.ValueRange;
                get(arg0: _javatypes.java.time.temporal.TemporalField): number;
                getLong(arg0: _javatypes.java.time.temporal.TemporalField): number;
                getOffset(): _javatypes.java.time.ZoneOffset;
                withOffsetSameLocal(arg0: _javatypes.java.time.ZoneOffset): _javatypes.java.time.OffsetTime;
                withOffsetSameInstant(arg0: _javatypes.java.time.ZoneOffset): _javatypes.java.time.OffsetTime;
                toLocalTime(): _javatypes.java.time.LocalTime;
                getHour(): number;
                getMinute(): number;
                getSecond(): number;
                getNano(): number;
                with(arg0: _javatypes.java.time.temporal.TemporalAdjuster): _javatypes.java.time.OffsetTime;
                with(arg0: _javatypes.java.time.temporal.TemporalField, arg1: number): _javatypes.java.time.OffsetTime;
                withHour(arg0: number): _javatypes.java.time.OffsetTime;
                withMinute(arg0: number): _javatypes.java.time.OffsetTime;
                withSecond(arg0: number): _javatypes.java.time.OffsetTime;
                withNano(arg0: number): _javatypes.java.time.OffsetTime;
                truncatedTo(arg0: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.OffsetTime;
                plus(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.OffsetTime;
                plus(arg0: number, arg1: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.OffsetTime;
                plusHours(arg0: number): _javatypes.java.time.OffsetTime;
                plusMinutes(arg0: number): _javatypes.java.time.OffsetTime;
                plusSeconds(arg0: number): _javatypes.java.time.OffsetTime;
                plusNanos(arg0: number): _javatypes.java.time.OffsetTime;
                minus(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.OffsetTime;
                minus(arg0: number, arg1: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.OffsetTime;
                minusHours(arg0: number): _javatypes.java.time.OffsetTime;
                minusMinutes(arg0: number): _javatypes.java.time.OffsetTime;
                minusSeconds(arg0: number): _javatypes.java.time.OffsetTime;
                minusNanos(arg0: number): _javatypes.java.time.OffsetTime;
                query<R>(arg0: _javatypes.java.time.temporal.TemporalQuery<R>): R;
                adjustInto(arg0: _javatypes.java.time.temporal.Temporal): _javatypes.java.time.temporal.Temporal;
                until(arg0: _javatypes.java.time.temporal.Temporal, arg1: _javatypes.java.time.temporal.TemporalUnit): number;
                format(arg0: _javatypes.java.time.format.DateTimeFormatter): string;
                atDate(arg0: _javatypes.java.time.LocalDate): _javatypes.java.time.OffsetDateTime;
                toEpochSecond(arg0: _javatypes.java.time.LocalDate): number;
                compareTo(arg0: _javatypes.java.time.OffsetTime): number;
                isAfter(arg0: _javatypes.java.time.OffsetTime): boolean;
                isBefore(arg0: _javatypes.java.time.OffsetTime): boolean;
                isEqual(arg0: _javatypes.java.time.OffsetTime): boolean;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace OffsetTime {
                interface static {
                    
                    readonly MIN: _javatypes.java.time.OffsetTime;
                    readonly MAX: _javatypes.java.time.OffsetTime;
                    
                    now(): _javatypes.java.time.OffsetTime;
                    now(arg0: _javatypes.java.time.ZoneId): _javatypes.java.time.OffsetTime;
                    now(arg0: _javatypes.java.time.Clock): _javatypes.java.time.OffsetTime;
                    of(arg0: _javatypes.java.time.LocalTime, arg1: _javatypes.java.time.ZoneOffset): _javatypes.java.time.OffsetTime;
                    of(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.java.time.ZoneOffset): _javatypes.java.time.OffsetTime;
                    ofInstant(arg0: _javatypes.java.time.Instant, arg1: _javatypes.java.time.ZoneId): _javatypes.java.time.OffsetTime;
                    from(arg0: _javatypes.java.time.temporal.TemporalAccessor): _javatypes.java.time.OffsetTime;
                    parse(arg0: _javatypes.java.lang.CharSequence): _javatypes.java.time.OffsetTime;
                    parse(arg0: _javatypes.java.lang.CharSequence, arg1: _javatypes.java.time.format.DateTimeFormatter): _javatypes.java.time.OffsetTime;
                    
                }
            }
            interface DayOfWeek extends _javatypes.java.lang.Enum<_javatypes.java.time.DayOfWeek>, _javatypes.java.time.temporal.TemporalAccessor, _javatypes.java.time.temporal.TemporalAdjuster {
                
                getValue(): number;
                getDisplayName(arg0: _javatypes.java.time.format.TextStyle, arg1: _javatypes.java.util.Locale): string;
                isSupported(arg0: _javatypes.java.time.temporal.TemporalField): boolean;
                range(arg0: _javatypes.java.time.temporal.TemporalField): _javatypes.java.time.temporal.ValueRange;
                get(arg0: _javatypes.java.time.temporal.TemporalField): number;
                getLong(arg0: _javatypes.java.time.temporal.TemporalField): number;
                plus(arg0: number): _javatypes.java.time.DayOfWeek;
                minus(arg0: number): _javatypes.java.time.DayOfWeek;
                query<R>(arg0: _javatypes.java.time.temporal.TemporalQuery<R>): R;
                adjustInto(arg0: _javatypes.java.time.temporal.Temporal): _javatypes.java.time.temporal.Temporal;
                
            }
            namespace DayOfWeek {
                interface static {
                    
                    readonly MONDAY: _javatypes.java.time.DayOfWeek;
                    readonly TUESDAY: _javatypes.java.time.DayOfWeek;
                    readonly WEDNESDAY: _javatypes.java.time.DayOfWeek;
                    readonly THURSDAY: _javatypes.java.time.DayOfWeek;
                    readonly FRIDAY: _javatypes.java.time.DayOfWeek;
                    readonly SATURDAY: _javatypes.java.time.DayOfWeek;
                    readonly SUNDAY: _javatypes.java.time.DayOfWeek;
                    
                    values(): _javatypes.java.time.DayOfWeek[];
                    valueOf(arg0: string): _javatypes.java.time.DayOfWeek;
                    of(arg0: number): _javatypes.java.time.DayOfWeek;
                    from(arg0: _javatypes.java.time.temporal.TemporalAccessor): _javatypes.java.time.DayOfWeek;
                    
                }
            }
        
            namespace temporal {
            
                interface TemporalAccessor extends _javatypes.java.lang.Interface {
                    
                    isSupported(arg0: _javatypes.java.time.temporal.TemporalField): boolean;
                    range(arg0: _javatypes.java.time.temporal.TemporalField): _javatypes.java.time.temporal.ValueRange;
                    get(arg0: _javatypes.java.time.temporal.TemporalField): number;
                    getLong(arg0: _javatypes.java.time.temporal.TemporalField): number;
                    query<R>(arg0: _javatypes.java.time.temporal.TemporalQuery<R>): R;
                    
                }
                namespace TemporalAccessor {
                    interface static {
                        
                        
                        
                    }
                }
                interface TemporalField extends _javatypes.java.lang.Interface {
                    
                    getDisplayName(arg0: _javatypes.java.util.Locale): string;
                    getBaseUnit(): _javatypes.java.time.temporal.TemporalUnit;
                    getRangeUnit(): _javatypes.java.time.temporal.TemporalUnit;
                    range(): _javatypes.java.time.temporal.ValueRange;
                    isDateBased(): boolean;
                    isTimeBased(): boolean;
                    isSupportedBy(arg0: _javatypes.java.time.temporal.TemporalAccessor): boolean;
                    rangeRefinedBy(arg0: _javatypes.java.time.temporal.TemporalAccessor): _javatypes.java.time.temporal.ValueRange;
                    getFrom(arg0: _javatypes.java.time.temporal.TemporalAccessor): number;
                    adjustInto<R>(arg0: R, arg1: number): R;
                    resolve(arg0: _javatypes.java.util.Map<_javatypes.java.time.temporal.TemporalField, number>, arg1: _javatypes.java.time.temporal.TemporalAccessor, arg2: _javatypes.java.time.format.ResolverStyle): _javatypes.java.time.temporal.TemporalAccessor;
                    toString(): string;
                    
                }
                namespace TemporalField {
                    interface static {
                        
                        
                        
                    }
                }
                interface TemporalAdjuster extends _javatypes.java.lang.Interface {
                    
                    adjustInto(arg0: _javatypes.java.time.temporal.Temporal): _javatypes.java.time.temporal.Temporal;
                    
                }
                namespace TemporalAdjuster {
                    interface static {
                        
                        
                        
                    }
                }
                interface TemporalAmount extends _javatypes.java.lang.Interface {
                    
                    get(arg0: _javatypes.java.time.temporal.TemporalUnit): number;
                    getUnits(): _javatypes.java.util.List<_javatypes.java.time.temporal.TemporalUnit>;
                    addTo(arg0: _javatypes.java.time.temporal.Temporal): _javatypes.java.time.temporal.Temporal;
                    subtractFrom(arg0: _javatypes.java.time.temporal.Temporal): _javatypes.java.time.temporal.Temporal;
                    
                }
                namespace TemporalAmount {
                    interface static {
                        
                        
                        
                    }
                }
                interface Temporal extends _javatypes.java.lang.Interface, _javatypes.java.time.temporal.TemporalAccessor {
                    
                    isSupported(arg0: _javatypes.java.time.temporal.TemporalUnit): boolean;
                    with(arg0: _javatypes.java.time.temporal.TemporalAdjuster): _javatypes.java.time.temporal.Temporal;
                    with(arg0: _javatypes.java.time.temporal.TemporalField, arg1: number): _javatypes.java.time.temporal.Temporal;
                    plus(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.temporal.Temporal;
                    plus(arg0: number, arg1: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.temporal.Temporal;
                    minus(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.temporal.Temporal;
                    minus(arg0: number, arg1: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.temporal.Temporal;
                    until(arg0: _javatypes.java.time.temporal.Temporal, arg1: _javatypes.java.time.temporal.TemporalUnit): number;
                    
                }
                namespace Temporal {
                    interface static {
                        
                        
                        
                    }
                }
                interface TemporalUnit extends _javatypes.java.lang.Interface {
                    
                    getDuration(): _javatypes.java.time.Duration;
                    isDurationEstimated(): boolean;
                    isDateBased(): boolean;
                    isTimeBased(): boolean;
                    isSupportedBy(arg0: _javatypes.java.time.temporal.Temporal): boolean;
                    addTo<R>(arg0: R, arg1: number): R;
                    between(arg0: _javatypes.java.time.temporal.Temporal, arg1: _javatypes.java.time.temporal.Temporal): number;
                    toString(): string;
                    
                }
                namespace TemporalUnit {
                    interface static {
                        
                        
                        
                    }
                }
                interface TemporalQuery<R> extends _javatypes.java.lang.Interface {
                    
                    queryFrom(arg0: _javatypes.java.time.temporal.TemporalAccessor): R;
                    
                }
                namespace TemporalQuery {
                    interface static {
                        
                        
                        
                    }
                }
                interface ValueRange extends any, _javatypes.java.io.Serializable {
                    
                    isFixed(): boolean;
                    getMinimum(): number;
                    getLargestMinimum(): number;
                    getSmallestMaximum(): number;
                    getMaximum(): number;
                    isIntValue(): boolean;
                    isValidValue(arg0: number): boolean;
                    isValidIntValue(arg0: number): boolean;
                    checkValidValue(arg0: number, arg1: _javatypes.java.time.temporal.TemporalField): number;
                    checkValidIntValue(arg0: number, arg1: _javatypes.java.time.temporal.TemporalField): number;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    toString(): string;
                    
                }
                namespace ValueRange {
                    interface static {
                        
                        
                        of(arg0: number, arg1: number): _javatypes.java.time.temporal.ValueRange;
                        of(arg0: number, arg1: number, arg2: number): _javatypes.java.time.temporal.ValueRange;
                        of(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.java.time.temporal.ValueRange;
                        
                    }
                }
                interface ChronoField extends _javatypes.java.lang.Enum<_javatypes.java.time.temporal.ChronoField>, _javatypes.java.time.temporal.TemporalField {
                    
                    getDisplayName(arg0: _javatypes.java.util.Locale): string;
                    getBaseUnit(): _javatypes.java.time.temporal.TemporalUnit;
                    getRangeUnit(): _javatypes.java.time.temporal.TemporalUnit;
                    range(): _javatypes.java.time.temporal.ValueRange;
                    isDateBased(): boolean;
                    isTimeBased(): boolean;
                    checkValidValue(arg0: number): number;
                    checkValidIntValue(arg0: number): number;
                    isSupportedBy(arg0: _javatypes.java.time.temporal.TemporalAccessor): boolean;
                    rangeRefinedBy(arg0: _javatypes.java.time.temporal.TemporalAccessor): _javatypes.java.time.temporal.ValueRange;
                    getFrom(arg0: _javatypes.java.time.temporal.TemporalAccessor): number;
                    adjustInto<R>(arg0: R, arg1: number): R;
                    toString(): string;
                    
                }
                namespace ChronoField {
                    interface static {
                        
                        readonly NANO_OF_SECOND: _javatypes.java.time.temporal.ChronoField;
                        readonly NANO_OF_DAY: _javatypes.java.time.temporal.ChronoField;
                        readonly MICRO_OF_SECOND: _javatypes.java.time.temporal.ChronoField;
                        readonly MICRO_OF_DAY: _javatypes.java.time.temporal.ChronoField;
                        readonly MILLI_OF_SECOND: _javatypes.java.time.temporal.ChronoField;
                        readonly MILLI_OF_DAY: _javatypes.java.time.temporal.ChronoField;
                        readonly SECOND_OF_MINUTE: _javatypes.java.time.temporal.ChronoField;
                        readonly SECOND_OF_DAY: _javatypes.java.time.temporal.ChronoField;
                        readonly MINUTE_OF_HOUR: _javatypes.java.time.temporal.ChronoField;
                        readonly MINUTE_OF_DAY: _javatypes.java.time.temporal.ChronoField;
                        readonly HOUR_OF_AMPM: _javatypes.java.time.temporal.ChronoField;
                        readonly CLOCK_HOUR_OF_AMPM: _javatypes.java.time.temporal.ChronoField;
                        readonly HOUR_OF_DAY: _javatypes.java.time.temporal.ChronoField;
                        readonly CLOCK_HOUR_OF_DAY: _javatypes.java.time.temporal.ChronoField;
                        readonly AMPM_OF_DAY: _javatypes.java.time.temporal.ChronoField;
                        readonly DAY_OF_WEEK: _javatypes.java.time.temporal.ChronoField;
                        readonly ALIGNED_DAY_OF_WEEK_IN_MONTH: _javatypes.java.time.temporal.ChronoField;
                        readonly ALIGNED_DAY_OF_WEEK_IN_YEAR: _javatypes.java.time.temporal.ChronoField;
                        readonly DAY_OF_MONTH: _javatypes.java.time.temporal.ChronoField;
                        readonly DAY_OF_YEAR: _javatypes.java.time.temporal.ChronoField;
                        readonly EPOCH_DAY: _javatypes.java.time.temporal.ChronoField;
                        readonly ALIGNED_WEEK_OF_MONTH: _javatypes.java.time.temporal.ChronoField;
                        readonly ALIGNED_WEEK_OF_YEAR: _javatypes.java.time.temporal.ChronoField;
                        readonly MONTH_OF_YEAR: _javatypes.java.time.temporal.ChronoField;
                        readonly PROLEPTIC_MONTH: _javatypes.java.time.temporal.ChronoField;
                        readonly YEAR_OF_ERA: _javatypes.java.time.temporal.ChronoField;
                        readonly YEAR: _javatypes.java.time.temporal.ChronoField;
                        readonly ERA: _javatypes.java.time.temporal.ChronoField;
                        readonly INSTANT_SECONDS: _javatypes.java.time.temporal.ChronoField;
                        readonly OFFSET_SECONDS: _javatypes.java.time.temporal.ChronoField;
                        
                        values(): _javatypes.java.time.temporal.ChronoField[];
                        valueOf(arg0: string): _javatypes.java.time.temporal.ChronoField;
                        
                    }
                }
                interface ChronoUnit extends _javatypes.java.lang.Enum<_javatypes.java.time.temporal.ChronoUnit>, _javatypes.java.time.temporal.TemporalUnit {
                    
                    getDuration(): _javatypes.java.time.Duration;
                    isDurationEstimated(): boolean;
                    isDateBased(): boolean;
                    isTimeBased(): boolean;
                    isSupportedBy(arg0: _javatypes.java.time.temporal.Temporal): boolean;
                    addTo<R>(arg0: R, arg1: number): R;
                    between(arg0: _javatypes.java.time.temporal.Temporal, arg1: _javatypes.java.time.temporal.Temporal): number;
                    toString(): string;
                    
                }
                namespace ChronoUnit {
                    interface static {
                        
                        readonly NANOS: _javatypes.java.time.temporal.ChronoUnit;
                        readonly MICROS: _javatypes.java.time.temporal.ChronoUnit;
                        readonly MILLIS: _javatypes.java.time.temporal.ChronoUnit;
                        readonly SECONDS: _javatypes.java.time.temporal.ChronoUnit;
                        readonly MINUTES: _javatypes.java.time.temporal.ChronoUnit;
                        readonly HOURS: _javatypes.java.time.temporal.ChronoUnit;
                        readonly HALF_DAYS: _javatypes.java.time.temporal.ChronoUnit;
                        readonly DAYS: _javatypes.java.time.temporal.ChronoUnit;
                        readonly WEEKS: _javatypes.java.time.temporal.ChronoUnit;
                        readonly MONTHS: _javatypes.java.time.temporal.ChronoUnit;
                        readonly YEARS: _javatypes.java.time.temporal.ChronoUnit;
                        readonly DECADES: _javatypes.java.time.temporal.ChronoUnit;
                        readonly CENTURIES: _javatypes.java.time.temporal.ChronoUnit;
                        readonly MILLENNIA: _javatypes.java.time.temporal.ChronoUnit;
                        readonly ERAS: _javatypes.java.time.temporal.ChronoUnit;
                        readonly FOREVER: _javatypes.java.time.temporal.ChronoUnit;
                        
                        values(): _javatypes.java.time.temporal.ChronoUnit[];
                        valueOf(arg0: string): _javatypes.java.time.temporal.ChronoUnit;
                        
                    }
                }
            }
        
            namespace format {
            
                interface ResolverStyle extends _javatypes.java.lang.Enum<_javatypes.java.time.format.ResolverStyle> {
                    
                    
                }
                namespace ResolverStyle {
                    interface static {
                        
                        readonly STRICT: _javatypes.java.time.format.ResolverStyle;
                        readonly SMART: _javatypes.java.time.format.ResolverStyle;
                        readonly LENIENT: _javatypes.java.time.format.ResolverStyle;
                        
                        values(): _javatypes.java.time.format.ResolverStyle[];
                        valueOf(arg0: string): _javatypes.java.time.format.ResolverStyle;
                        
                    }
                }
                interface TextStyle extends _javatypes.java.lang.Enum<_javatypes.java.time.format.TextStyle> {
                    
                    isStandalone(): boolean;
                    asStandalone(): _javatypes.java.time.format.TextStyle;
                    asNormal(): _javatypes.java.time.format.TextStyle;
                    
                }
                namespace TextStyle {
                    interface static {
                        
                        readonly FULL: _javatypes.java.time.format.TextStyle;
                        readonly FULL_STANDALONE: _javatypes.java.time.format.TextStyle;
                        readonly SHORT: _javatypes.java.time.format.TextStyle;
                        readonly SHORT_STANDALONE: _javatypes.java.time.format.TextStyle;
                        readonly NARROW: _javatypes.java.time.format.TextStyle;
                        readonly NARROW_STANDALONE: _javatypes.java.time.format.TextStyle;
                        
                        values(): _javatypes.java.time.format.TextStyle[];
                        valueOf(arg0: string): _javatypes.java.time.format.TextStyle;
                        
                    }
                }
                interface DateTimeFormatter extends any {
                    
                    getLocale(): _javatypes.java.util.Locale;
                    withLocale(arg0: _javatypes.java.util.Locale): _javatypes.java.time.format.DateTimeFormatter;
                    localizedBy(arg0: _javatypes.java.util.Locale): _javatypes.java.time.format.DateTimeFormatter;
                    getDecimalStyle(): _javatypes.java.time.format.DecimalStyle;
                    withDecimalStyle(arg0: _javatypes.java.time.format.DecimalStyle): _javatypes.java.time.format.DateTimeFormatter;
                    getChronology(): _javatypes.java.time.chrono.Chronology;
                    withChronology(arg0: _javatypes.java.time.chrono.Chronology): _javatypes.java.time.format.DateTimeFormatter;
                    getZone(): _javatypes.java.time.ZoneId;
                    withZone(arg0: _javatypes.java.time.ZoneId): _javatypes.java.time.format.DateTimeFormatter;
                    getResolverStyle(): _javatypes.java.time.format.ResolverStyle;
                    withResolverStyle(arg0: _javatypes.java.time.format.ResolverStyle): _javatypes.java.time.format.DateTimeFormatter;
                    getResolverFields(): _javatypes.java.util.Set<_javatypes.java.time.temporal.TemporalField>;
                    withResolverFields(arg0: _javatypes.java.time.temporal.TemporalField[]): _javatypes.java.time.format.DateTimeFormatter;
                    withResolverFields(arg0: _javatypes.java.util.Set<_javatypes.java.time.temporal.TemporalField>): _javatypes.java.time.format.DateTimeFormatter;
                    format(arg0: _javatypes.java.time.temporal.TemporalAccessor): string;
                    formatTo(arg0: _javatypes.java.time.temporal.TemporalAccessor, arg1: _javatypes.java.lang.Appendable): void;
                    parse(arg0: _javatypes.java.lang.CharSequence): _javatypes.java.time.temporal.TemporalAccessor;
                    parse(arg0: _javatypes.java.lang.CharSequence, arg1: _javatypes.java.text.ParsePosition): _javatypes.java.time.temporal.TemporalAccessor;
                    parse<T>(arg0: _javatypes.java.lang.CharSequence, arg1: _javatypes.java.time.temporal.TemporalQuery<T>): T;
                    parseBest(arg0: _javatypes.java.lang.CharSequence, arg1: _javatypes.java.time.temporal.TemporalQuery<any>[]): _javatypes.java.time.temporal.TemporalAccessor;
                    parseUnresolved(arg0: _javatypes.java.lang.CharSequence, arg1: _javatypes.java.text.ParsePosition): _javatypes.java.time.temporal.TemporalAccessor;
                    toFormat(): _javatypes.java.text.Format;
                    toFormat(arg0: _javatypes.java.time.temporal.TemporalQuery<any>): _javatypes.java.text.Format;
                    toString(): string;
                    
                }
                namespace DateTimeFormatter {
                    interface static {
                        
                        readonly ISO_LOCAL_DATE: _javatypes.java.time.format.DateTimeFormatter;
                        readonly ISO_OFFSET_DATE: _javatypes.java.time.format.DateTimeFormatter;
                        readonly ISO_DATE: _javatypes.java.time.format.DateTimeFormatter;
                        readonly ISO_LOCAL_TIME: _javatypes.java.time.format.DateTimeFormatter;
                        readonly ISO_OFFSET_TIME: _javatypes.java.time.format.DateTimeFormatter;
                        readonly ISO_TIME: _javatypes.java.time.format.DateTimeFormatter;
                        readonly ISO_LOCAL_DATE_TIME: _javatypes.java.time.format.DateTimeFormatter;
                        readonly ISO_OFFSET_DATE_TIME: _javatypes.java.time.format.DateTimeFormatter;
                        readonly ISO_ZONED_DATE_TIME: _javatypes.java.time.format.DateTimeFormatter;
                        readonly ISO_DATE_TIME: _javatypes.java.time.format.DateTimeFormatter;
                        readonly ISO_ORDINAL_DATE: _javatypes.java.time.format.DateTimeFormatter;
                        readonly ISO_WEEK_DATE: _javatypes.java.time.format.DateTimeFormatter;
                        readonly ISO_INSTANT: _javatypes.java.time.format.DateTimeFormatter;
                        readonly BASIC_ISO_DATE: _javatypes.java.time.format.DateTimeFormatter;
                        readonly RFC_1123_DATE_TIME: _javatypes.java.time.format.DateTimeFormatter;
                        
                        ofPattern(arg0: string): _javatypes.java.time.format.DateTimeFormatter;
                        ofPattern(arg0: string, arg1: _javatypes.java.util.Locale): _javatypes.java.time.format.DateTimeFormatter;
                        ofLocalizedDate(arg0: _javatypes.java.time.format.FormatStyle): _javatypes.java.time.format.DateTimeFormatter;
                        ofLocalizedTime(arg0: _javatypes.java.time.format.FormatStyle): _javatypes.java.time.format.DateTimeFormatter;
                        ofLocalizedDateTime(arg0: _javatypes.java.time.format.FormatStyle): _javatypes.java.time.format.DateTimeFormatter;
                        ofLocalizedDateTime(arg0: _javatypes.java.time.format.FormatStyle, arg1: _javatypes.java.time.format.FormatStyle): _javatypes.java.time.format.DateTimeFormatter;
                        parsedExcessDays(): _javatypes.java.time.temporal.TemporalQuery<_javatypes.java.time.Period>;
                        parsedLeapSecond(): _javatypes.java.time.temporal.TemporalQuery<boolean>;
                        
                    }
                }
                interface DecimalStyle extends any {
                    
                    getZeroDigit(): number;
                    withZeroDigit(arg0: number): _javatypes.java.time.format.DecimalStyle;
                    getPositiveSign(): number;
                    withPositiveSign(arg0: number): _javatypes.java.time.format.DecimalStyle;
                    getNegativeSign(): number;
                    withNegativeSign(arg0: number): _javatypes.java.time.format.DecimalStyle;
                    getDecimalSeparator(): number;
                    withDecimalSeparator(arg0: number): _javatypes.java.time.format.DecimalStyle;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    toString(): string;
                    
                }
                namespace DecimalStyle {
                    interface static {
                        
                        readonly STANDARD: _javatypes.java.time.format.DecimalStyle;
                        
                        getAvailableLocales(): _javatypes.java.util.Set<_javatypes.java.util.Locale>;
                        ofDefaultLocale(): _javatypes.java.time.format.DecimalStyle;
                        of(arg0: _javatypes.java.util.Locale): _javatypes.java.time.format.DecimalStyle;
                        
                    }
                }
                interface FormatStyle extends _javatypes.java.lang.Enum<_javatypes.java.time.format.FormatStyle> {
                    
                    
                }
                namespace FormatStyle {
                    interface static {
                        
                        readonly FULL: _javatypes.java.time.format.FormatStyle;
                        readonly LONG: _javatypes.java.time.format.FormatStyle;
                        readonly MEDIUM: _javatypes.java.time.format.FormatStyle;
                        readonly SHORT: _javatypes.java.time.format.FormatStyle;
                        
                        values(): _javatypes.java.time.format.FormatStyle[];
                        valueOf(arg0: string): _javatypes.java.time.format.FormatStyle;
                        
                    }
                }
            }
        
            namespace chrono {
            
                interface ChronoZonedDateTime<D> extends _javatypes.java.lang.Interface, _javatypes.java.time.temporal.Temporal, _javatypes.java.lang.Comparable<_javatypes.java.time.chrono.ChronoZonedDateTime<any>> {
                    
                    range(arg0: _javatypes.java.time.temporal.TemporalField): _javatypes.java.time.temporal.ValueRange;
                    get(arg0: _javatypes.java.time.temporal.TemporalField): number;
                    getLong(arg0: _javatypes.java.time.temporal.TemporalField): number;
                    toLocalDate(): D;
                    toLocalTime(): _javatypes.java.time.LocalTime;
                    toLocalDateTime(): _javatypes.java.time.chrono.ChronoLocalDateTime<D>;
                    getChronology(): _javatypes.java.time.chrono.Chronology;
                    getOffset(): _javatypes.java.time.ZoneOffset;
                    getZone(): _javatypes.java.time.ZoneId;
                    withEarlierOffsetAtOverlap(): _javatypes.java.time.chrono.ChronoZonedDateTime<D>;
                    withLaterOffsetAtOverlap(): _javatypes.java.time.chrono.ChronoZonedDateTime<D>;
                    withZoneSameLocal(arg0: _javatypes.java.time.ZoneId): _javatypes.java.time.chrono.ChronoZonedDateTime<D>;
                    withZoneSameInstant(arg0: _javatypes.java.time.ZoneId): _javatypes.java.time.chrono.ChronoZonedDateTime<D>;
                    isSupported(arg0: _javatypes.java.time.temporal.TemporalField): boolean;
                    isSupported(arg0: _javatypes.java.time.temporal.TemporalUnit): boolean;
                    with(arg0: _javatypes.java.time.temporal.TemporalAdjuster): _javatypes.java.time.chrono.ChronoZonedDateTime<D>;
                    with(arg0: _javatypes.java.time.temporal.TemporalField, arg1: number): _javatypes.java.time.chrono.ChronoZonedDateTime<D>;
                    plus(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.chrono.ChronoZonedDateTime<D>;
                    plus(arg0: number, arg1: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.chrono.ChronoZonedDateTime<D>;
                    minus(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.chrono.ChronoZonedDateTime<D>;
                    minus(arg0: number, arg1: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.chrono.ChronoZonedDateTime<D>;
                    query<R>(arg0: _javatypes.java.time.temporal.TemporalQuery<R>): R;
                    format(arg0: _javatypes.java.time.format.DateTimeFormatter): string;
                    toInstant(): _javatypes.java.time.Instant;
                    toEpochSecond(): number;
                    compareTo(arg0: _javatypes.java.time.chrono.ChronoZonedDateTime<any>): number;
                    isBefore(arg0: _javatypes.java.time.chrono.ChronoZonedDateTime<any>): boolean;
                    isAfter(arg0: _javatypes.java.time.chrono.ChronoZonedDateTime<any>): boolean;
                    isEqual(arg0: _javatypes.java.time.chrono.ChronoZonedDateTime<any>): boolean;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    toString(): string;
                    
                }
                namespace ChronoZonedDateTime {
                    interface static {
                        
                        
                        timeLineOrder(): _javatypes.java.util.Comparator<_javatypes.java.time.chrono.ChronoZonedDateTime<any>>;
                        from(arg0: _javatypes.java.time.temporal.TemporalAccessor): _javatypes.java.time.chrono.ChronoZonedDateTime<any>;
                        
                    }
                }
                interface Chronology extends _javatypes.java.lang.Interface, _javatypes.java.lang.Comparable<_javatypes.java.time.chrono.Chronology> {
                    
                    getId(): string;
                    getCalendarType(): string;
                    date(arg0: _javatypes.java.time.chrono.Era, arg1: number, arg2: number, arg3: number): _javatypes.java.time.chrono.ChronoLocalDate;
                    date(arg0: number, arg1: number, arg2: number): _javatypes.java.time.chrono.ChronoLocalDate;
                    dateYearDay(arg0: _javatypes.java.time.chrono.Era, arg1: number, arg2: number): _javatypes.java.time.chrono.ChronoLocalDate;
                    dateYearDay(arg0: number, arg1: number): _javatypes.java.time.chrono.ChronoLocalDate;
                    dateEpochDay(arg0: number): _javatypes.java.time.chrono.ChronoLocalDate;
                    dateNow(): _javatypes.java.time.chrono.ChronoLocalDate;
                    dateNow(arg0: _javatypes.java.time.ZoneId): _javatypes.java.time.chrono.ChronoLocalDate;
                    dateNow(arg0: _javatypes.java.time.Clock): _javatypes.java.time.chrono.ChronoLocalDate;
                    date(arg0: _javatypes.java.time.temporal.TemporalAccessor): _javatypes.java.time.chrono.ChronoLocalDate;
                    localDateTime(arg0: _javatypes.java.time.temporal.TemporalAccessor): _javatypes.java.time.chrono.ChronoLocalDateTime<any>;
                    zonedDateTime(arg0: _javatypes.java.time.temporal.TemporalAccessor): _javatypes.java.time.chrono.ChronoZonedDateTime<any>;
                    zonedDateTime(arg0: _javatypes.java.time.Instant, arg1: _javatypes.java.time.ZoneId): _javatypes.java.time.chrono.ChronoZonedDateTime<any>;
                    isLeapYear(arg0: number): boolean;
                    prolepticYear(arg0: _javatypes.java.time.chrono.Era, arg1: number): number;
                    eraOf(arg0: number): _javatypes.java.time.chrono.Era;
                    eras(): _javatypes.java.util.List<_javatypes.java.time.chrono.Era>;
                    range(arg0: _javatypes.java.time.temporal.ChronoField): _javatypes.java.time.temporal.ValueRange;
                    getDisplayName(arg0: _javatypes.java.time.format.TextStyle, arg1: _javatypes.java.util.Locale): string;
                    resolveDate(arg0: _javatypes.java.util.Map<_javatypes.java.time.temporal.TemporalField, number>, arg1: _javatypes.java.time.format.ResolverStyle): _javatypes.java.time.chrono.ChronoLocalDate;
                    period(arg0: number, arg1: number, arg2: number): _javatypes.java.time.chrono.ChronoPeriod;
                    epochSecond(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.java.time.ZoneOffset): number;
                    epochSecond(arg0: _javatypes.java.time.chrono.Era, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: _javatypes.java.time.ZoneOffset): number;
                    compareTo(arg0: _javatypes.java.time.chrono.Chronology): number;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    toString(): string;
                    
                }
                namespace Chronology {
                    interface static {
                        
                        
                        from(arg0: _javatypes.java.time.temporal.TemporalAccessor): _javatypes.java.time.chrono.Chronology;
                        ofLocale(arg0: _javatypes.java.util.Locale): _javatypes.java.time.chrono.Chronology;
                        of(arg0: string): _javatypes.java.time.chrono.Chronology;
                        getAvailableChronologies(): _javatypes.java.util.Set<_javatypes.java.time.chrono.Chronology>;
                        
                    }
                }
                interface Era extends _javatypes.java.lang.Interface, _javatypes.java.time.temporal.TemporalAccessor, _javatypes.java.time.temporal.TemporalAdjuster {
                    
                    getValue(): number;
                    isSupported(arg0: _javatypes.java.time.temporal.TemporalField): boolean;
                    range(arg0: _javatypes.java.time.temporal.TemporalField): _javatypes.java.time.temporal.ValueRange;
                    get(arg0: _javatypes.java.time.temporal.TemporalField): number;
                    getLong(arg0: _javatypes.java.time.temporal.TemporalField): number;
                    query<R>(arg0: _javatypes.java.time.temporal.TemporalQuery<R>): R;
                    adjustInto(arg0: _javatypes.java.time.temporal.Temporal): _javatypes.java.time.temporal.Temporal;
                    getDisplayName(arg0: _javatypes.java.time.format.TextStyle, arg1: _javatypes.java.util.Locale): string;
                    
                }
                namespace Era {
                    interface static {
                        
                        
                        
                    }
                }
                interface ChronoPeriod extends _javatypes.java.lang.Interface, _javatypes.java.time.temporal.TemporalAmount {
                    
                    get(arg0: _javatypes.java.time.temporal.TemporalUnit): number;
                    getUnits(): _javatypes.java.util.List<_javatypes.java.time.temporal.TemporalUnit>;
                    getChronology(): _javatypes.java.time.chrono.Chronology;
                    isZero(): boolean;
                    isNegative(): boolean;
                    plus(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.chrono.ChronoPeriod;
                    minus(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.chrono.ChronoPeriod;
                    multipliedBy(arg0: number): _javatypes.java.time.chrono.ChronoPeriod;
                    negated(): _javatypes.java.time.chrono.ChronoPeriod;
                    normalized(): _javatypes.java.time.chrono.ChronoPeriod;
                    addTo(arg0: _javatypes.java.time.temporal.Temporal): _javatypes.java.time.temporal.Temporal;
                    subtractFrom(arg0: _javatypes.java.time.temporal.Temporal): _javatypes.java.time.temporal.Temporal;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    toString(): string;
                    
                }
                namespace ChronoPeriod {
                    interface static {
                        
                        
                        between(arg0: _javatypes.java.time.chrono.ChronoLocalDate, arg1: _javatypes.java.time.chrono.ChronoLocalDate): _javatypes.java.time.chrono.ChronoPeriod;
                        
                    }
                }
                interface ChronoLocalDateTime<D> extends _javatypes.java.lang.Interface, _javatypes.java.time.temporal.Temporal, _javatypes.java.time.temporal.TemporalAdjuster, _javatypes.java.lang.Comparable<_javatypes.java.time.chrono.ChronoLocalDateTime<any>> {
                    
                    getChronology(): _javatypes.java.time.chrono.Chronology;
                    toLocalDate(): D;
                    toLocalTime(): _javatypes.java.time.LocalTime;
                    isSupported(arg0: _javatypes.java.time.temporal.TemporalField): boolean;
                    isSupported(arg0: _javatypes.java.time.temporal.TemporalUnit): boolean;
                    with(arg0: _javatypes.java.time.temporal.TemporalAdjuster): _javatypes.java.time.chrono.ChronoLocalDateTime<D>;
                    with(arg0: _javatypes.java.time.temporal.TemporalField, arg1: number): _javatypes.java.time.chrono.ChronoLocalDateTime<D>;
                    plus(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.chrono.ChronoLocalDateTime<D>;
                    plus(arg0: number, arg1: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.chrono.ChronoLocalDateTime<D>;
                    minus(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.chrono.ChronoLocalDateTime<D>;
                    minus(arg0: number, arg1: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.chrono.ChronoLocalDateTime<D>;
                    query<R>(arg0: _javatypes.java.time.temporal.TemporalQuery<R>): R;
                    adjustInto(arg0: _javatypes.java.time.temporal.Temporal): _javatypes.java.time.temporal.Temporal;
                    format(arg0: _javatypes.java.time.format.DateTimeFormatter): string;
                    atZone(arg0: _javatypes.java.time.ZoneId): _javatypes.java.time.chrono.ChronoZonedDateTime<D>;
                    toInstant(arg0: _javatypes.java.time.ZoneOffset): _javatypes.java.time.Instant;
                    toEpochSecond(arg0: _javatypes.java.time.ZoneOffset): number;
                    compareTo(arg0: _javatypes.java.time.chrono.ChronoLocalDateTime<any>): number;
                    isAfter(arg0: _javatypes.java.time.chrono.ChronoLocalDateTime<any>): boolean;
                    isBefore(arg0: _javatypes.java.time.chrono.ChronoLocalDateTime<any>): boolean;
                    isEqual(arg0: _javatypes.java.time.chrono.ChronoLocalDateTime<any>): boolean;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    toString(): string;
                    
                }
                namespace ChronoLocalDateTime {
                    interface static {
                        
                        
                        timeLineOrder(): _javatypes.java.util.Comparator<_javatypes.java.time.chrono.ChronoLocalDateTime<any>>;
                        from(arg0: _javatypes.java.time.temporal.TemporalAccessor): _javatypes.java.time.chrono.ChronoLocalDateTime<any>;
                        
                    }
                }
                interface ChronoLocalDate extends _javatypes.java.lang.Interface, _javatypes.java.time.temporal.Temporal, _javatypes.java.time.temporal.TemporalAdjuster, _javatypes.java.lang.Comparable<_javatypes.java.time.chrono.ChronoLocalDate> {
                    
                    getChronology(): _javatypes.java.time.chrono.Chronology;
                    getEra(): _javatypes.java.time.chrono.Era;
                    isLeapYear(): boolean;
                    lengthOfMonth(): number;
                    lengthOfYear(): number;
                    isSupported(arg0: _javatypes.java.time.temporal.TemporalField): boolean;
                    isSupported(arg0: _javatypes.java.time.temporal.TemporalUnit): boolean;
                    with(arg0: _javatypes.java.time.temporal.TemporalAdjuster): _javatypes.java.time.chrono.ChronoLocalDate;
                    with(arg0: _javatypes.java.time.temporal.TemporalField, arg1: number): _javatypes.java.time.chrono.ChronoLocalDate;
                    plus(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.chrono.ChronoLocalDate;
                    plus(arg0: number, arg1: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.chrono.ChronoLocalDate;
                    minus(arg0: _javatypes.java.time.temporal.TemporalAmount): _javatypes.java.time.chrono.ChronoLocalDate;
                    minus(arg0: number, arg1: _javatypes.java.time.temporal.TemporalUnit): _javatypes.java.time.chrono.ChronoLocalDate;
                    query<R>(arg0: _javatypes.java.time.temporal.TemporalQuery<R>): R;
                    adjustInto(arg0: _javatypes.java.time.temporal.Temporal): _javatypes.java.time.temporal.Temporal;
                    until(arg0: _javatypes.java.time.temporal.Temporal, arg1: _javatypes.java.time.temporal.TemporalUnit): number;
                    until(arg0: _javatypes.java.time.chrono.ChronoLocalDate): _javatypes.java.time.chrono.ChronoPeriod;
                    format(arg0: _javatypes.java.time.format.DateTimeFormatter): string;
                    atTime(arg0: _javatypes.java.time.LocalTime): _javatypes.java.time.chrono.ChronoLocalDateTime<any>;
                    toEpochDay(): number;
                    compareTo(arg0: _javatypes.java.time.chrono.ChronoLocalDate): number;
                    isAfter(arg0: _javatypes.java.time.chrono.ChronoLocalDate): boolean;
                    isBefore(arg0: _javatypes.java.time.chrono.ChronoLocalDate): boolean;
                    isEqual(arg0: _javatypes.java.time.chrono.ChronoLocalDate): boolean;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    toString(): string;
                    
                }
                namespace ChronoLocalDate {
                    interface static {
                        
                        
                        timeLineOrder(): _javatypes.java.util.Comparator<_javatypes.java.time.chrono.ChronoLocalDate>;
                        from(arg0: _javatypes.java.time.temporal.TemporalAccessor): _javatypes.java.time.chrono.ChronoLocalDate;
                        
                    }
                }
                interface IsoChronology extends _javatypes.java.time.chrono.AbstractChronology, _javatypes.java.io.Serializable {
                    
                    getId(): string;
                    getCalendarType(): string;
                    date(arg0: _javatypes.java.time.chrono.Era, arg1: number, arg2: number, arg3: number): _javatypes.java.time.LocalDate;
                    date(arg0: number, arg1: number, arg2: number): _javatypes.java.time.LocalDate;
                    dateYearDay(arg0: _javatypes.java.time.chrono.Era, arg1: number, arg2: number): _javatypes.java.time.LocalDate;
                    dateYearDay(arg0: number, arg1: number): _javatypes.java.time.LocalDate;
                    dateEpochDay(arg0: number): _javatypes.java.time.LocalDate;
                    date(arg0: _javatypes.java.time.temporal.TemporalAccessor): _javatypes.java.time.LocalDate;
                    epochSecond(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.java.time.ZoneOffset): number;
                    localDateTime(arg0: _javatypes.java.time.temporal.TemporalAccessor): _javatypes.java.time.LocalDateTime;
                    zonedDateTime(arg0: _javatypes.java.time.temporal.TemporalAccessor): _javatypes.java.time.ZonedDateTime;
                    zonedDateTime(arg0: _javatypes.java.time.Instant, arg1: _javatypes.java.time.ZoneId): _javatypes.java.time.ZonedDateTime;
                    dateNow(): _javatypes.java.time.LocalDate;
                    dateNow(arg0: _javatypes.java.time.ZoneId): _javatypes.java.time.LocalDate;
                    dateNow(arg0: _javatypes.java.time.Clock): _javatypes.java.time.LocalDate;
                    isLeapYear(arg0: number): boolean;
                    prolepticYear(arg0: _javatypes.java.time.chrono.Era, arg1: number): number;
                    eraOf(arg0: number): _javatypes.java.time.chrono.IsoEra;
                    eras(): _javatypes.java.util.List<_javatypes.java.time.chrono.Era>;
                    resolveDate(arg0: _javatypes.java.util.Map<_javatypes.java.time.temporal.TemporalField, number>, arg1: _javatypes.java.time.format.ResolverStyle): _javatypes.java.time.LocalDate;
                    range(arg0: _javatypes.java.time.temporal.ChronoField): _javatypes.java.time.temporal.ValueRange;
                    period(arg0: number, arg1: number, arg2: number): _javatypes.java.time.Period;
                    
                }
                namespace IsoChronology {
                    interface static {
                        
                        readonly INSTANCE: _javatypes.java.time.chrono.IsoChronology;
                        
                        
                    }
                }
                interface IsoEra extends _javatypes.java.lang.Enum<_javatypes.java.time.chrono.IsoEra>, _javatypes.java.time.chrono.Era {
                    
                    getValue(): number;
                    
                }
                namespace IsoEra {
                    interface static {
                        
                        readonly BCE: _javatypes.java.time.chrono.IsoEra;
                        readonly CE: _javatypes.java.time.chrono.IsoEra;
                        
                        values(): _javatypes.java.time.chrono.IsoEra[];
                        valueOf(arg0: string): _javatypes.java.time.chrono.IsoEra;
                        of(arg0: number): _javatypes.java.time.chrono.IsoEra;
                        
                    }
                }
                interface AbstractChronology extends any, _javatypes.java.time.chrono.Chronology {
                    
                    resolveDate(arg0: _javatypes.java.util.Map<_javatypes.java.time.temporal.TemporalField, number>, arg1: _javatypes.java.time.format.ResolverStyle): _javatypes.java.time.chrono.ChronoLocalDate;
                    compareTo(arg0: _javatypes.java.time.chrono.Chronology): number;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    toString(): string;
                    
                }
                namespace AbstractChronology {
                    interface static {
                        
                        
                        
                    }
                }
            }
        
            namespace zone {
            
                interface ZoneRules extends any, _javatypes.java.io.Serializable {
                    
                    isFixedOffset(): boolean;
                    getOffset(arg0: _javatypes.java.time.Instant): _javatypes.java.time.ZoneOffset;
                    getOffset(arg0: _javatypes.java.time.LocalDateTime): _javatypes.java.time.ZoneOffset;
                    getValidOffsets(arg0: _javatypes.java.time.LocalDateTime): _javatypes.java.util.List<_javatypes.java.time.ZoneOffset>;
                    getTransition(arg0: _javatypes.java.time.LocalDateTime): _javatypes.java.time.zone.ZoneOffsetTransition;
                    getStandardOffset(arg0: _javatypes.java.time.Instant): _javatypes.java.time.ZoneOffset;
                    getDaylightSavings(arg0: _javatypes.java.time.Instant): _javatypes.java.time.Duration;
                    isDaylightSavings(arg0: _javatypes.java.time.Instant): boolean;
                    isValidOffset(arg0: _javatypes.java.time.LocalDateTime, arg1: _javatypes.java.time.ZoneOffset): boolean;
                    nextTransition(arg0: _javatypes.java.time.Instant): _javatypes.java.time.zone.ZoneOffsetTransition;
                    previousTransition(arg0: _javatypes.java.time.Instant): _javatypes.java.time.zone.ZoneOffsetTransition;
                    getTransitions(): _javatypes.java.util.List<_javatypes.java.time.zone.ZoneOffsetTransition>;
                    getTransitionRules(): _javatypes.java.util.List<_javatypes.java.time.zone.ZoneOffsetTransitionRule>;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    toString(): string;
                    
                }
                namespace ZoneRules {
                    interface static {
                        
                        
                        of(arg0: _javatypes.java.time.ZoneOffset, arg1: _javatypes.java.time.ZoneOffset, arg2: _javatypes.java.util.List<_javatypes.java.time.zone.ZoneOffsetTransition>, arg3: _javatypes.java.util.List<_javatypes.java.time.zone.ZoneOffsetTransition>, arg4: _javatypes.java.util.List<_javatypes.java.time.zone.ZoneOffsetTransitionRule>): _javatypes.java.time.zone.ZoneRules;
                        of(arg0: _javatypes.java.time.ZoneOffset): _javatypes.java.time.zone.ZoneRules;
                        
                    }
                }
                interface ZoneOffsetTransition extends any, _javatypes.java.lang.Comparable<_javatypes.java.time.zone.ZoneOffsetTransition>, _javatypes.java.io.Serializable {
                    
                    getInstant(): _javatypes.java.time.Instant;
                    toEpochSecond(): number;
                    getDateTimeBefore(): _javatypes.java.time.LocalDateTime;
                    getDateTimeAfter(): _javatypes.java.time.LocalDateTime;
                    getOffsetBefore(): _javatypes.java.time.ZoneOffset;
                    getOffsetAfter(): _javatypes.java.time.ZoneOffset;
                    getDuration(): _javatypes.java.time.Duration;
                    isGap(): boolean;
                    isOverlap(): boolean;
                    isValidOffset(arg0: _javatypes.java.time.ZoneOffset): boolean;
                    compareTo(arg0: _javatypes.java.time.zone.ZoneOffsetTransition): number;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    toString(): string;
                    
                }
                namespace ZoneOffsetTransition {
                    interface static {
                        
                        
                        of(arg0: _javatypes.java.time.LocalDateTime, arg1: _javatypes.java.time.ZoneOffset, arg2: _javatypes.java.time.ZoneOffset): _javatypes.java.time.zone.ZoneOffsetTransition;
                        
                    }
                }
                interface ZoneOffsetTransitionRule extends any, _javatypes.java.io.Serializable {
                    
                    getMonth(): _javatypes.java.time.Month;
                    getDayOfMonthIndicator(): number;
                    getDayOfWeek(): _javatypes.java.time.DayOfWeek;
                    getLocalTime(): _javatypes.java.time.LocalTime;
                    isMidnightEndOfDay(): boolean;
                    getTimeDefinition(): _javatypes.java.time.zone.ZoneOffsetTransitionRule$TimeDefinition;
                    getStandardOffset(): _javatypes.java.time.ZoneOffset;
                    getOffsetBefore(): _javatypes.java.time.ZoneOffset;
                    getOffsetAfter(): _javatypes.java.time.ZoneOffset;
                    createTransition(arg0: number): _javatypes.java.time.zone.ZoneOffsetTransition;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    toString(): string;
                    
                }
                namespace ZoneOffsetTransitionRule {
                    interface static {
                        
                        
                        of(arg0: _javatypes.java.time.Month, arg1: number, arg2: _javatypes.java.time.DayOfWeek, arg3: _javatypes.java.time.LocalTime, arg4: boolean, arg5: _javatypes.java.time.zone.ZoneOffsetTransitionRule$TimeDefinition, arg6: _javatypes.java.time.ZoneOffset, arg7: _javatypes.java.time.ZoneOffset, arg8: _javatypes.java.time.ZoneOffset): _javatypes.java.time.zone.ZoneOffsetTransitionRule;
                        
                    }
                }
                interface ZoneOffsetTransitionRule$TimeDefinition extends _javatypes.java.lang.Enum<_javatypes.java.time.zone.ZoneOffsetTransitionRule$TimeDefinition> {
                    
                    createDateTime(arg0: _javatypes.java.time.LocalDateTime, arg1: _javatypes.java.time.ZoneOffset, arg2: _javatypes.java.time.ZoneOffset): _javatypes.java.time.LocalDateTime;
                    
                }
                namespace ZoneOffsetTransitionRule$TimeDefinition {
                    interface static {
                        
                        readonly UTC: _javatypes.java.time.zone.ZoneOffsetTransitionRule$TimeDefinition;
                        readonly WALL: _javatypes.java.time.zone.ZoneOffsetTransitionRule$TimeDefinition;
                        readonly STANDARD: _javatypes.java.time.zone.ZoneOffsetTransitionRule$TimeDefinition;
                        
                        values(): _javatypes.java.time.zone.ZoneOffsetTransitionRule$TimeDefinition[];
                        valueOf(arg0: string): _javatypes.java.time.zone.ZoneOffsetTransitionRule$TimeDefinition;
                        
                    }
                }
            }
        }
    
        namespace security {
        
            interface PublicKey extends _javatypes.java.lang.Interface, _javatypes.java.security.Key {
                
                
            }
            namespace PublicKey {
                interface static {
                    
                    readonly serialVersionUID: number;
                    
                    
                }
            }
            interface Principal extends _javatypes.java.lang.Interface {
                
                equals(arg0: any): boolean;
                toString(): string;
                hashCode(): number;
                getName(): string;
                implies(arg0: _javatypes.javax.security.auth.Subject): boolean;
                
            }
            namespace Principal {
                interface static {
                    
                    
                    
                }
            }
            interface Key extends _javatypes.java.lang.Interface, _javatypes.java.io.Serializable {
                
                getAlgorithm(): string;
                getFormat(): string;
                getEncoded(): number[];
                
            }
            namespace Key {
                interface static {
                    
                    readonly serialVersionUID: number;
                    
                    
                }
            }
            interface PrivilegedAction<T> extends _javatypes.java.lang.Interface {
                
                run(): T;
                
            }
            namespace PrivilegedAction {
                interface static {
                    
                    
                    
                }
            }
            interface AccessControlContext extends any {
                
                getDomainCombiner(): _javatypes.java.security.DomainCombiner;
                checkPermission(arg0: _javatypes.java.security.Permission): void;
                equals(arg0: any): boolean;
                hashCode(): number;
                
            }
            namespace AccessControlContext {
                interface static {
                    new (arg0: _javatypes.java.security.ProtectionDomain[]): _javatypes.java.security.AccessControlContext;
                    new (arg0: _javatypes.java.security.AccessControlContext, arg1: _javatypes.java.security.DomainCombiner): _javatypes.java.security.AccessControlContext;
                    
                    
                    
                }
            }
            interface PrivilegedExceptionAction<T> extends _javatypes.java.lang.Interface {
                
                run(): T;
                
            }
            namespace PrivilegedExceptionAction {
                interface static {
                    
                    
                    
                }
            }
            interface ProtectionDomain extends any {
                
                getCodeSource(): _javatypes.java.security.CodeSource;
                getClassLoader(): _javatypes.java.lang.ClassLoader;
                getPrincipals(): _javatypes.java.security.Principal[];
                getPermissions(): _javatypes.java.security.PermissionCollection;
                staticPermissionsOnly(): boolean;
                implies(arg0: _javatypes.java.security.Permission): boolean;
                toString(): string;
                
            }
            namespace ProtectionDomain {
                interface static {
                    new (arg0: _javatypes.java.security.CodeSource, arg1: _javatypes.java.security.PermissionCollection): _javatypes.java.security.ProtectionDomain;
                    new (arg0: _javatypes.java.security.CodeSource, arg1: _javatypes.java.security.PermissionCollection, arg2: _javatypes.java.lang.ClassLoader, arg3: _javatypes.java.security.Principal[]): _javatypes.java.security.ProtectionDomain;
                    
                    
                    
                }
            }
            interface CodeSource extends any, _javatypes.java.io.Serializable {
                
                hashCode(): number;
                equals(arg0: any): boolean;
                getLocation(): _javatypes.java.net.URL;
                getCertificates(): _javatypes.java.security.cert.Certificate[];
                getCodeSigners(): _javatypes.java.security.CodeSigner[];
                implies(arg0: _javatypes.java.security.CodeSource): boolean;
                toString(): string;
                
            }
            namespace CodeSource {
                interface static {
                    new (arg0: _javatypes.java.net.URL, arg1: _javatypes.java.security.cert.Certificate[]): _javatypes.java.security.CodeSource;
                    new (arg0: _javatypes.java.net.URL, arg1: _javatypes.java.security.CodeSigner[]): _javatypes.java.security.CodeSource;
                    
                    
                    
                }
            }
            interface PermissionCollection extends any, _javatypes.java.io.Serializable {
                
                add(arg0: _javatypes.java.security.Permission): void;
                implies(arg0: _javatypes.java.security.Permission): boolean;
                elements(): _javatypes.java.util.Enumeration<_javatypes.java.security.Permission>;
                elementsAsStream(): _javatypes.java.util.stream.Stream<_javatypes.java.security.Permission>;
                setReadOnly(): void;
                isReadOnly(): boolean;
                toString(): string;
                
            }
            namespace PermissionCollection {
                interface static {
                    new (): _javatypes.java.security.PermissionCollection;
                    
                    
                    
                }
            }
            interface DomainCombiner extends _javatypes.java.lang.Interface {
                
                combine(arg0: _javatypes.java.security.ProtectionDomain[], arg1: _javatypes.java.security.ProtectionDomain[]): _javatypes.java.security.ProtectionDomain[];
                
            }
            namespace DomainCombiner {
                interface static {
                    
                    
                    
                }
            }
            interface Permission extends any, _javatypes.java.security.Guard, _javatypes.java.io.Serializable {
                
                checkGuard(arg0: any): void;
                implies(arg0: _javatypes.java.security.Permission): boolean;
                equals(arg0: any): boolean;
                hashCode(): number;
                getName(): string;
                getActions(): string;
                newPermissionCollection(): _javatypes.java.security.PermissionCollection;
                toString(): string;
                
            }
            namespace Permission {
                interface static {
                    new (arg0: string): _javatypes.java.security.Permission;
                    
                    
                    
                }
            }
            interface Provider extends _javatypes.java.util.Properties {
                
                configure(arg0: string): _javatypes.java.security.Provider;
                isConfigured(): boolean;
                getName(): string;
                getVersion(): number;
                getVersionStr(): string;
                getInfo(): string;
                toString(): string;
                clear(): void;
                load(arg0: _javatypes.java.io.InputStream): void;
                putAll(arg0: _javatypes.java.util.Map<any, any>): void;
                entrySet(): _javatypes.java.util.Set<_javatypes.java.util.Map$Entry<any, any>>;
                keySet(): _javatypes.java.util.Set<any>;
                values(): _javatypes.java.util.Collection<any>;
                put(arg0: any, arg1: any): any;
                putIfAbsent(arg0: any, arg1: any): any;
                remove(arg0: any): any;
                remove(arg0: any, arg1: any): boolean;
                replace(arg0: any, arg1: any, arg2: any): boolean;
                replace(arg0: any, arg1: any): any;
                replaceAll(arg0: _javatypes.java.util._function.BiFunction<any, any, any>): void;
                compute(arg0: any, arg1: _javatypes.java.util._function.BiFunction<any, any, any>): any;
                computeIfAbsent(arg0: any, arg1: _javatypes.java.util._function.Function<any, any>): any;
                computeIfPresent(arg0: any, arg1: _javatypes.java.util._function.BiFunction<any, any, any>): any;
                merge(arg0: any, arg1: any, arg2: _javatypes.java.util._function.BiFunction<any, any, any>): any;
                get(arg0: any): any;
                getOrDefault(arg0: any, arg1: any): any;
                forEach(arg0: _javatypes.java.util._function.BiConsumer<any, any>): void;
                keys(): _javatypes.java.util.Enumeration<any>;
                elements(): _javatypes.java.util.Enumeration<any>;
                getProperty(arg0: string): string;
                getService(arg0: string, arg1: string): _javatypes.java.security.Provider$Service;
                getServices(): _javatypes.java.util.Set<_javatypes.java.security.Provider$Service>;
                
            }
            namespace Provider {
                interface static {
                    
                    
                    
                }
            }
            interface CodeSigner extends any, _javatypes.java.io.Serializable {
                
                getSignerCertPath(): _javatypes.java.security.cert.CertPath;
                getTimestamp(): _javatypes.java.security.Timestamp;
                hashCode(): number;
                equals(arg0: any): boolean;
                toString(): string;
                
            }
            namespace CodeSigner {
                interface static {
                    new (arg0: _javatypes.java.security.cert.CertPath, arg1: _javatypes.java.security.Timestamp): _javatypes.java.security.CodeSigner;
                    
                    
                    
                }
            }
            interface Guard extends _javatypes.java.lang.Interface {
                
                checkGuard(arg0: any): void;
                
            }
            namespace Guard {
                interface static {
                    
                    
                    
                }
            }
            interface Provider$Service extends any {
                
                getType(): string;
                getAlgorithm(): string;
                getProvider(): _javatypes.java.security.Provider;
                getClassName(): string;
                getAttribute(arg0: string): string;
                newInstance(arg0: any): any;
                supportsParameter(arg0: any): boolean;
                toString(): string;
                
            }
            namespace Provider$Service {
                interface static {
                    new (arg0: _javatypes.java.security.Provider, arg1: string, arg2: string, arg3: string, arg4: _javatypes.java.util.List<string>, arg5: _javatypes.java.util.Map<string, string>): _javatypes.java.security.Provider$Service;
                    
                    
                    
                }
            }
            interface Timestamp extends any, _javatypes.java.io.Serializable {
                
                getTimestamp(): _javatypes.java.util.Date;
                getSignerCertPath(): _javatypes.java.security.cert.CertPath;
                hashCode(): number;
                equals(arg0: any): boolean;
                toString(): string;
                
            }
            namespace Timestamp {
                interface static {
                    new (arg0: _javatypes.java.util.Date, arg1: _javatypes.java.security.cert.CertPath): _javatypes.java.security.Timestamp;
                    
                    
                    
                }
            }
        
            namespace cert {
            
                interface Certificate extends any, _javatypes.java.io.Serializable {
                    
                    getType(): string;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    getEncoded(): number[];
                    verify(arg0: _javatypes.java.security.PublicKey): void;
                    verify(arg0: _javatypes.java.security.PublicKey, arg1: string): void;
                    verify(arg0: _javatypes.java.security.PublicKey, arg1: _javatypes.java.security.Provider): void;
                    toString(): string;
                    getPublicKey(): _javatypes.java.security.PublicKey;
                    
                }
                namespace Certificate {
                    interface static {
                        
                        
                        
                    }
                }
                interface CertPath extends any, _javatypes.java.io.Serializable {
                    
                    getType(): string;
                    getEncodings(): _javatypes.java.util.Iterator<string>;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    toString(): string;
                    getEncoded(): number[];
                    getEncoded(arg0: string): number[];
                    getCertificates(): _javatypes.java.util.List<any>;
                    
                }
                namespace CertPath {
                    interface static {
                        
                        
                        
                    }
                }
            }
        }
    
        namespace math {
        
            interface BigInteger extends _javatypes.java.lang.Number, _javatypes.java.lang.Comparable<_javatypes.java.math.BigInteger> {
                
                nextProbablePrime(): _javatypes.java.math.BigInteger;
                add(arg0: _javatypes.java.math.BigInteger): _javatypes.java.math.BigInteger;
                subtract(arg0: _javatypes.java.math.BigInteger): _javatypes.java.math.BigInteger;
                multiply(arg0: _javatypes.java.math.BigInteger): _javatypes.java.math.BigInteger;
                divide(arg0: _javatypes.java.math.BigInteger): _javatypes.java.math.BigInteger;
                divideAndRemainder(arg0: _javatypes.java.math.BigInteger): _javatypes.java.math.BigInteger[];
                remainder(arg0: _javatypes.java.math.BigInteger): _javatypes.java.math.BigInteger;
                pow(arg0: number): _javatypes.java.math.BigInteger;
                sqrt(): _javatypes.java.math.BigInteger;
                sqrtAndRemainder(): _javatypes.java.math.BigInteger[];
                gcd(arg0: _javatypes.java.math.BigInteger): _javatypes.java.math.BigInteger;
                abs(): _javatypes.java.math.BigInteger;
                negate(): _javatypes.java.math.BigInteger;
                signum(): number;
                mod(arg0: _javatypes.java.math.BigInteger): _javatypes.java.math.BigInteger;
                modPow(arg0: _javatypes.java.math.BigInteger, arg1: _javatypes.java.math.BigInteger): _javatypes.java.math.BigInteger;
                modInverse(arg0: _javatypes.java.math.BigInteger): _javatypes.java.math.BigInteger;
                shiftLeft(arg0: number): _javatypes.java.math.BigInteger;
                shiftRight(arg0: number): _javatypes.java.math.BigInteger;
                and(arg0: _javatypes.java.math.BigInteger): _javatypes.java.math.BigInteger;
                or(arg0: _javatypes.java.math.BigInteger): _javatypes.java.math.BigInteger;
                xor(arg0: _javatypes.java.math.BigInteger): _javatypes.java.math.BigInteger;
                not(): _javatypes.java.math.BigInteger;
                andNot(arg0: _javatypes.java.math.BigInteger): _javatypes.java.math.BigInteger;
                testBit(arg0: number): boolean;
                setBit(arg0: number): _javatypes.java.math.BigInteger;
                clearBit(arg0: number): _javatypes.java.math.BigInteger;
                flipBit(arg0: number): _javatypes.java.math.BigInteger;
                getLowestSetBit(): number;
                bitLength(): number;
                bitCount(): number;
                isProbablePrime(arg0: number): boolean;
                compareTo(arg0: _javatypes.java.math.BigInteger): number;
                equals(arg0: any): boolean;
                min(arg0: _javatypes.java.math.BigInteger): _javatypes.java.math.BigInteger;
                max(arg0: _javatypes.java.math.BigInteger): _javatypes.java.math.BigInteger;
                hashCode(): number;
                toString(arg0: number): string;
                toString(): string;
                toByteArray(): number[];
                intValue(): number;
                longValue(): number;
                floatValue(): number;
                doubleValue(): number;
                longValueExact(): number;
                intValueExact(): number;
                shortValueExact(): number;
                byteValueExact(): number;
                
            }
            namespace BigInteger {
                interface static {
                    new (arg0: number[], arg1: number, arg2: number): _javatypes.java.math.BigInteger;
                    new (arg0: number[]): _javatypes.java.math.BigInteger;
                    new (arg0: number, arg1: number[], arg2: number, arg3: number): _javatypes.java.math.BigInteger;
                    new (arg0: number, arg1: number[]): _javatypes.java.math.BigInteger;
                    new (arg0: string, arg1: number): _javatypes.java.math.BigInteger;
                    new (arg0: string): _javatypes.java.math.BigInteger;
                    new (arg0: number, arg1: _javatypes.java.util.Random): _javatypes.java.math.BigInteger;
                    new (arg0: number, arg1: number, arg2: _javatypes.java.util.Random): _javatypes.java.math.BigInteger;
                    
                    readonly ZERO: _javatypes.java.math.BigInteger;
                    readonly ONE: _javatypes.java.math.BigInteger;
                    readonly TWO: _javatypes.java.math.BigInteger;
                    readonly TEN: _javatypes.java.math.BigInteger;
                    
                    probablePrime(arg0: number, arg1: _javatypes.java.util.Random): _javatypes.java.math.BigInteger;
                    valueOf(arg0: number): _javatypes.java.math.BigInteger;
                    
                }
            }
            interface BigDecimal extends _javatypes.java.lang.Number, _javatypes.java.lang.Comparable<_javatypes.java.math.BigDecimal> {
                
                add(arg0: _javatypes.java.math.BigDecimal): _javatypes.java.math.BigDecimal;
                add(arg0: _javatypes.java.math.BigDecimal, arg1: _javatypes.java.math.MathContext): _javatypes.java.math.BigDecimal;
                subtract(arg0: _javatypes.java.math.BigDecimal): _javatypes.java.math.BigDecimal;
                subtract(arg0: _javatypes.java.math.BigDecimal, arg1: _javatypes.java.math.MathContext): _javatypes.java.math.BigDecimal;
                multiply(arg0: _javatypes.java.math.BigDecimal): _javatypes.java.math.BigDecimal;
                multiply(arg0: _javatypes.java.math.BigDecimal, arg1: _javatypes.java.math.MathContext): _javatypes.java.math.BigDecimal;
                divide(arg0: _javatypes.java.math.BigDecimal, arg1: number, arg2: number): _javatypes.java.math.BigDecimal;
                divide(arg0: _javatypes.java.math.BigDecimal, arg1: number, arg2: _javatypes.java.math.RoundingMode): _javatypes.java.math.BigDecimal;
                divide(arg0: _javatypes.java.math.BigDecimal, arg1: number): _javatypes.java.math.BigDecimal;
                divide(arg0: _javatypes.java.math.BigDecimal, arg1: _javatypes.java.math.RoundingMode): _javatypes.java.math.BigDecimal;
                divide(arg0: _javatypes.java.math.BigDecimal): _javatypes.java.math.BigDecimal;
                divide(arg0: _javatypes.java.math.BigDecimal, arg1: _javatypes.java.math.MathContext): _javatypes.java.math.BigDecimal;
                divideToIntegralValue(arg0: _javatypes.java.math.BigDecimal): _javatypes.java.math.BigDecimal;
                divideToIntegralValue(arg0: _javatypes.java.math.BigDecimal, arg1: _javatypes.java.math.MathContext): _javatypes.java.math.BigDecimal;
                remainder(arg0: _javatypes.java.math.BigDecimal): _javatypes.java.math.BigDecimal;
                remainder(arg0: _javatypes.java.math.BigDecimal, arg1: _javatypes.java.math.MathContext): _javatypes.java.math.BigDecimal;
                divideAndRemainder(arg0: _javatypes.java.math.BigDecimal): _javatypes.java.math.BigDecimal[];
                divideAndRemainder(arg0: _javatypes.java.math.BigDecimal, arg1: _javatypes.java.math.MathContext): _javatypes.java.math.BigDecimal[];
                sqrt(arg0: _javatypes.java.math.MathContext): _javatypes.java.math.BigDecimal;
                pow(arg0: number): _javatypes.java.math.BigDecimal;
                pow(arg0: number, arg1: _javatypes.java.math.MathContext): _javatypes.java.math.BigDecimal;
                abs(): _javatypes.java.math.BigDecimal;
                abs(arg0: _javatypes.java.math.MathContext): _javatypes.java.math.BigDecimal;
                negate(): _javatypes.java.math.BigDecimal;
                negate(arg0: _javatypes.java.math.MathContext): _javatypes.java.math.BigDecimal;
                plus(): _javatypes.java.math.BigDecimal;
                plus(arg0: _javatypes.java.math.MathContext): _javatypes.java.math.BigDecimal;
                signum(): number;
                scale(): number;
                precision(): number;
                unscaledValue(): _javatypes.java.math.BigInteger;
                round(arg0: _javatypes.java.math.MathContext): _javatypes.java.math.BigDecimal;
                setScale(arg0: number, arg1: _javatypes.java.math.RoundingMode): _javatypes.java.math.BigDecimal;
                setScale(arg0: number, arg1: number): _javatypes.java.math.BigDecimal;
                setScale(arg0: number): _javatypes.java.math.BigDecimal;
                movePointLeft(arg0: number): _javatypes.java.math.BigDecimal;
                movePointRight(arg0: number): _javatypes.java.math.BigDecimal;
                scaleByPowerOfTen(arg0: number): _javatypes.java.math.BigDecimal;
                stripTrailingZeros(): _javatypes.java.math.BigDecimal;
                compareTo(arg0: _javatypes.java.math.BigDecimal): number;
                equals(arg0: any): boolean;
                min(arg0: _javatypes.java.math.BigDecimal): _javatypes.java.math.BigDecimal;
                max(arg0: _javatypes.java.math.BigDecimal): _javatypes.java.math.BigDecimal;
                hashCode(): number;
                toString(): string;
                toEngineeringString(): string;
                toPlainString(): string;
                toBigInteger(): _javatypes.java.math.BigInteger;
                toBigIntegerExact(): _javatypes.java.math.BigInteger;
                longValue(): number;
                longValueExact(): number;
                intValue(): number;
                intValueExact(): number;
                shortValueExact(): number;
                byteValueExact(): number;
                floatValue(): number;
                doubleValue(): number;
                ulp(): _javatypes.java.math.BigDecimal;
                
            }
            namespace BigDecimal {
                interface static {
                    new (arg0: number[], arg1: number, arg2: number): _javatypes.java.math.BigDecimal;
                    new (arg0: number[], arg1: number, arg2: number, arg3: _javatypes.java.math.MathContext): _javatypes.java.math.BigDecimal;
                    new (arg0: number[]): _javatypes.java.math.BigDecimal;
                    new (arg0: number[], arg1: _javatypes.java.math.MathContext): _javatypes.java.math.BigDecimal;
                    new (arg0: string): _javatypes.java.math.BigDecimal;
                    new (arg0: string, arg1: _javatypes.java.math.MathContext): _javatypes.java.math.BigDecimal;
                    new (arg0: number): _javatypes.java.math.BigDecimal;
                    new (arg0: number, arg1: _javatypes.java.math.MathContext): _javatypes.java.math.BigDecimal;
                    new (arg0: _javatypes.java.math.BigInteger): _javatypes.java.math.BigDecimal;
                    new (arg0: _javatypes.java.math.BigInteger, arg1: _javatypes.java.math.MathContext): _javatypes.java.math.BigDecimal;
                    new (arg0: _javatypes.java.math.BigInteger, arg1: number): _javatypes.java.math.BigDecimal;
                    new (arg0: _javatypes.java.math.BigInteger, arg1: number, arg2: _javatypes.java.math.MathContext): _javatypes.java.math.BigDecimal;
                    new (arg0: number): _javatypes.java.math.BigDecimal;
                    new (arg0: number, arg1: _javatypes.java.math.MathContext): _javatypes.java.math.BigDecimal;
                    new (arg0: number): _javatypes.java.math.BigDecimal;
                    new (arg0: number, arg1: _javatypes.java.math.MathContext): _javatypes.java.math.BigDecimal;
                    
                    readonly ZERO: _javatypes.java.math.BigDecimal;
                    readonly ONE: _javatypes.java.math.BigDecimal;
                    readonly TEN: _javatypes.java.math.BigDecimal;
                    readonly ROUND_UP: number;
                    readonly ROUND_DOWN: number;
                    readonly ROUND_CEILING: number;
                    readonly ROUND_FLOOR: number;
                    readonly ROUND_HALF_UP: number;
                    readonly ROUND_HALF_DOWN: number;
                    readonly ROUND_HALF_EVEN: number;
                    readonly ROUND_UNNECESSARY: number;
                    
                    valueOf(arg0: number, arg1: number): _javatypes.java.math.BigDecimal;
                    valueOf(arg0: number): _javatypes.java.math.BigDecimal;
                    valueOf(arg0: number): _javatypes.java.math.BigDecimal;
                    
                }
            }
            interface RoundingMode extends _javatypes.java.lang.Enum<_javatypes.java.math.RoundingMode> {
                
                
            }
            namespace RoundingMode {
                interface static {
                    
                    readonly UP: _javatypes.java.math.RoundingMode;
                    readonly DOWN: _javatypes.java.math.RoundingMode;
                    readonly CEILING: _javatypes.java.math.RoundingMode;
                    readonly FLOOR: _javatypes.java.math.RoundingMode;
                    readonly HALF_UP: _javatypes.java.math.RoundingMode;
                    readonly HALF_DOWN: _javatypes.java.math.RoundingMode;
                    readonly HALF_EVEN: _javatypes.java.math.RoundingMode;
                    readonly UNNECESSARY: _javatypes.java.math.RoundingMode;
                    
                    values(): _javatypes.java.math.RoundingMode[];
                    valueOf(arg0: string): _javatypes.java.math.RoundingMode;
                    valueOf(arg0: number): _javatypes.java.math.RoundingMode;
                    
                }
            }
            interface MathContext extends any, _javatypes.java.io.Serializable {
                
                getPrecision(): number;
                getRoundingMode(): _javatypes.java.math.RoundingMode;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace MathContext {
                interface static {
                    new (arg0: number): _javatypes.java.math.MathContext;
                    new (arg0: number, arg1: _javatypes.java.math.RoundingMode): _javatypes.java.math.MathContext;
                    new (arg0: string): _javatypes.java.math.MathContext;
                    
                    readonly UNLIMITED: _javatypes.java.math.MathContext;
                    readonly DECIMAL32: _javatypes.java.math.MathContext;
                    readonly DECIMAL64: _javatypes.java.math.MathContext;
                    readonly DECIMAL128: _javatypes.java.math.MathContext;
                    
                    
                }
            }
        }
    
        namespace text {
        
            interface AttributedCharacterIterator$Attribute extends any, _javatypes.java.io.Serializable {
                
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace AttributedCharacterIterator$Attribute {
                interface static {
                    
                    readonly LANGUAGE: _javatypes.java.text.AttributedCharacterIterator$Attribute;
                    readonly READING: _javatypes.java.text.AttributedCharacterIterator$Attribute;
                    readonly INPUT_METHOD_SEGMENT: _javatypes.java.text.AttributedCharacterIterator$Attribute;
                    
                    
                }
            }
            interface ParsePosition extends any {
                
                getIndex(): number;
                setIndex(arg0: number): void;
                setErrorIndex(arg0: number): void;
                getErrorIndex(): number;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace ParsePosition {
                interface static {
                    new (arg0: number): _javatypes.java.text.ParsePosition;
                    
                    
                    
                }
            }
            interface Format extends any, _javatypes.java.io.Serializable, _javatypes.java.lang.Cloneable {
                
                format(arg0: any): string;
                format(arg0: any, arg1: _javatypes.java.lang.StringBuffer, arg2: _javatypes.java.text.FieldPosition): _javatypes.java.lang.StringBuffer;
                formatToCharacterIterator(arg0: any): _javatypes.java.text.AttributedCharacterIterator;
                parseObject(arg0: string, arg1: _javatypes.java.text.ParsePosition): any;
                parseObject(arg0: string): any;
                clone(): any;
                
            }
            namespace Format {
                interface static {
                    
                    
                    
                }
            }
            interface AttributedCharacterIterator extends _javatypes.java.lang.Interface, _javatypes.java.text.CharacterIterator {
                
                getRunStart(): number;
                getRunStart(arg0: _javatypes.java.text.AttributedCharacterIterator$Attribute): number;
                getRunStart(arg0: _javatypes.java.util.Set<any>): number;
                getRunLimit(): number;
                getRunLimit(arg0: _javatypes.java.text.AttributedCharacterIterator$Attribute): number;
                getRunLimit(arg0: _javatypes.java.util.Set<any>): number;
                getAttributes(): _javatypes.java.util.Map<_javatypes.java.text.AttributedCharacterIterator$Attribute, any>;
                getAttribute(arg0: _javatypes.java.text.AttributedCharacterIterator$Attribute): any;
                getAllAttributeKeys(): _javatypes.java.util.Set<_javatypes.java.text.AttributedCharacterIterator$Attribute>;
                
            }
            namespace AttributedCharacterIterator {
                interface static {
                    
                    
                    
                }
            }
            interface CharacterIterator extends _javatypes.java.lang.Interface, _javatypes.java.lang.Cloneable {
                
                first(): number;
                last(): number;
                current(): number;
                next(): number;
                previous(): number;
                setIndex(arg0: number): number;
                getBeginIndex(): number;
                getEndIndex(): number;
                getIndex(): number;
                clone(): any;
                
            }
            namespace CharacterIterator {
                interface static {
                    
                    readonly DONE: number;
                    
                    
                }
            }
            interface FieldPosition extends any {
                
                getFieldAttribute(): _javatypes.java.text.Format$Field;
                getField(): number;
                getBeginIndex(): number;
                getEndIndex(): number;
                setBeginIndex(arg0: number): void;
                setEndIndex(arg0: number): void;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace FieldPosition {
                interface static {
                    new (arg0: number): _javatypes.java.text.FieldPosition;
                    new (arg0: _javatypes.java.text.Format$Field): _javatypes.java.text.FieldPosition;
                    new (arg0: _javatypes.java.text.Format$Field, arg1: number): _javatypes.java.text.FieldPosition;
                    
                    
                    
                }
            }
            interface Format$Field extends _javatypes.java.text.AttributedCharacterIterator$Attribute {
                
                
            }
            namespace Format$Field {
                interface static {
                    
                    
                    
                }
            }
            interface NumberFormat extends _javatypes.java.text.Format {
                
                format(arg0: any, arg1: _javatypes.java.lang.StringBuffer, arg2: _javatypes.java.text.FieldPosition): _javatypes.java.lang.StringBuffer;
                parseObject(arg0: string, arg1: _javatypes.java.text.ParsePosition): any;
                format(arg0: number): string;
                format(arg0: number): string;
                format(arg0: number, arg1: _javatypes.java.lang.StringBuffer, arg2: _javatypes.java.text.FieldPosition): _javatypes.java.lang.StringBuffer;
                format(arg0: number, arg1: _javatypes.java.lang.StringBuffer, arg2: _javatypes.java.text.FieldPosition): _javatypes.java.lang.StringBuffer;
                parse(arg0: string, arg1: _javatypes.java.text.ParsePosition): _javatypes.java.lang.Number;
                parse(arg0: string): _javatypes.java.lang.Number;
                isParseIntegerOnly(): boolean;
                setParseIntegerOnly(arg0: boolean): void;
                hashCode(): number;
                equals(arg0: any): boolean;
                clone(): any;
                isGroupingUsed(): boolean;
                setGroupingUsed(arg0: boolean): void;
                getMaximumIntegerDigits(): number;
                setMaximumIntegerDigits(arg0: number): void;
                getMinimumIntegerDigits(): number;
                setMinimumIntegerDigits(arg0: number): void;
                getMaximumFractionDigits(): number;
                setMaximumFractionDigits(arg0: number): void;
                getMinimumFractionDigits(): number;
                setMinimumFractionDigits(arg0: number): void;
                getCurrency(): _javatypes.java.util.Currency;
                setCurrency(arg0: _javatypes.java.util.Currency): void;
                getRoundingMode(): _javatypes.java.math.RoundingMode;
                setRoundingMode(arg0: _javatypes.java.math.RoundingMode): void;
                
            }
            namespace NumberFormat {
                interface static {
                    
                    readonly INTEGER_FIELD: number;
                    readonly FRACTION_FIELD: number;
                    
                    getInstance(): _javatypes.java.text.NumberFormat;
                    getInstance(arg0: _javatypes.java.util.Locale): _javatypes.java.text.NumberFormat;
                    getNumberInstance(): _javatypes.java.text.NumberFormat;
                    getNumberInstance(arg0: _javatypes.java.util.Locale): _javatypes.java.text.NumberFormat;
                    getIntegerInstance(): _javatypes.java.text.NumberFormat;
                    getIntegerInstance(arg0: _javatypes.java.util.Locale): _javatypes.java.text.NumberFormat;
                    getCurrencyInstance(): _javatypes.java.text.NumberFormat;
                    getCurrencyInstance(arg0: _javatypes.java.util.Locale): _javatypes.java.text.NumberFormat;
                    getPercentInstance(): _javatypes.java.text.NumberFormat;
                    getPercentInstance(arg0: _javatypes.java.util.Locale): _javatypes.java.text.NumberFormat;
                    getCompactNumberInstance(): _javatypes.java.text.NumberFormat;
                    getCompactNumberInstance(arg0: _javatypes.java.util.Locale, arg1: _javatypes.java.text.NumberFormat$Style): _javatypes.java.text.NumberFormat;
                    getAvailableLocales(): _javatypes.java.util.Locale[];
                    
                }
            }
            interface NumberFormat$Style extends _javatypes.java.lang.Enum<_javatypes.java.text.NumberFormat$Style> {
                
                
            }
            namespace NumberFormat$Style {
                interface static {
                    
                    readonly SHORT: _javatypes.java.text.NumberFormat$Style;
                    readonly LONG: _javatypes.java.text.NumberFormat$Style;
                    
                    values(): _javatypes.java.text.NumberFormat$Style[];
                    valueOf(arg0: string): _javatypes.java.text.NumberFormat$Style;
                    
                }
            }
        }
    
        namespace beans {
        
            interface PropertyChangeListener extends _javatypes.java.lang.Interface, _javatypes.java.util.EventListener {
                
                propertyChange(arg0: _javatypes.java.beans.PropertyChangeEvent): void;
                
            }
            namespace PropertyChangeListener {
                interface static {
                    
                    
                    
                }
            }
            interface PropertyChangeEvent extends _javatypes.java.util.EventObject {
                
                getPropertyName(): string;
                getNewValue(): any;
                getOldValue(): any;
                setPropagationId(arg0: any): void;
                getPropagationId(): any;
                toString(): string;
                
            }
            namespace PropertyChangeEvent {
                interface static {
                    new (arg0: any, arg1: string, arg2: any, arg3: any): _javatypes.java.beans.PropertyChangeEvent;
                    
                    
                    
                }
            }
        }
    
        namespace net {
        
            interface Socket extends any, _javatypes.java.io.Closeable {
                
                connect(arg0: _javatypes.java.net.SocketAddress): void;
                connect(arg0: _javatypes.java.net.SocketAddress, arg1: number): void;
                bind(arg0: _javatypes.java.net.SocketAddress): void;
                getInetAddress(): _javatypes.java.net.InetAddress;
                getLocalAddress(): _javatypes.java.net.InetAddress;
                getPort(): number;
                getLocalPort(): number;
                getRemoteSocketAddress(): _javatypes.java.net.SocketAddress;
                getLocalSocketAddress(): _javatypes.java.net.SocketAddress;
                getChannel(): _javatypes.java.nio.channels.SocketChannel;
                getInputStream(): _javatypes.java.io.InputStream;
                getOutputStream(): _javatypes.java.io.OutputStream;
                setTcpNoDelay(arg0: boolean): void;
                getTcpNoDelay(): boolean;
                setSoLinger(arg0: boolean, arg1: number): void;
                getSoLinger(): number;
                sendUrgentData(arg0: number): void;
                setOOBInline(arg0: boolean): void;
                getOOBInline(): boolean;
                setSoTimeout(arg0: number): void;
                getSoTimeout(): number;
                setSendBufferSize(arg0: number): void;
                getSendBufferSize(): number;
                setReceiveBufferSize(arg0: number): void;
                getReceiveBufferSize(): number;
                setKeepAlive(arg0: boolean): void;
                getKeepAlive(): boolean;
                setTrafficClass(arg0: number): void;
                getTrafficClass(): number;
                setReuseAddress(arg0: boolean): void;
                getReuseAddress(): boolean;
                close(): void;
                shutdownInput(): void;
                shutdownOutput(): void;
                toString(): string;
                isConnected(): boolean;
                isBound(): boolean;
                isClosed(): boolean;
                isInputShutdown(): boolean;
                isOutputShutdown(): boolean;
                setPerformancePreferences(arg0: number, arg1: number, arg2: number): void;
                setOption<T>(arg0: _javatypes.java.net.SocketOption<T>, arg1: T): _javatypes.java.net.Socket;
                getOption<T>(arg0: _javatypes.java.net.SocketOption<T>): T;
                supportedOptions(): _javatypes.java.util.Set<_javatypes.java.net.SocketOption<any>>;
                
            }
            namespace Socket {
                interface static {
                    new (): _javatypes.java.net.Socket;
                    new (arg0: _javatypes.java.net.Proxy): _javatypes.java.net.Socket;
                    new (arg0: string, arg1: number): _javatypes.java.net.Socket;
                    new (arg0: _javatypes.java.net.InetAddress, arg1: number): _javatypes.java.net.Socket;
                    new (arg0: string, arg1: number, arg2: _javatypes.java.net.InetAddress, arg3: number): _javatypes.java.net.Socket;
                    new (arg0: _javatypes.java.net.InetAddress, arg1: number, arg2: _javatypes.java.net.InetAddress, arg3: number): _javatypes.java.net.Socket;
                    new (arg0: string, arg1: number, arg2: boolean): _javatypes.java.net.Socket;
                    new (arg0: _javatypes.java.net.InetAddress, arg1: number, arg2: boolean): _javatypes.java.net.Socket;
                    
                    
                    setSocketImplFactory(arg0: _javatypes.java.net.SocketImplFactory): void;
                    
                }
            }
            interface InetAddress extends any, _javatypes.java.io.Serializable {
                
                isMulticastAddress(): boolean;
                isAnyLocalAddress(): boolean;
                isLoopbackAddress(): boolean;
                isLinkLocalAddress(): boolean;
                isSiteLocalAddress(): boolean;
                isMCGlobal(): boolean;
                isMCNodeLocal(): boolean;
                isMCLinkLocal(): boolean;
                isMCSiteLocal(): boolean;
                isMCOrgLocal(): boolean;
                isReachable(arg0: number): boolean;
                isReachable(arg0: _javatypes.java.net.NetworkInterface, arg1: number, arg2: number): boolean;
                getHostName(): string;
                getCanonicalHostName(): string;
                getAddress(): number[];
                getHostAddress(): string;
                hashCode(): number;
                equals(arg0: any): boolean;
                toString(): string;
                
            }
            namespace InetAddress {
                interface static {
                    
                    
                    getByAddress(arg0: string, arg1: number[]): _javatypes.java.net.InetAddress;
                    getByName(arg0: string): _javatypes.java.net.InetAddress;
                    getAllByName(arg0: string): _javatypes.java.net.InetAddress[];
                    getLoopbackAddress(): _javatypes.java.net.InetAddress;
                    getByAddress(arg0: number[]): _javatypes.java.net.InetAddress;
                    getLocalHost(): _javatypes.java.net.InetAddress;
                    
                }
            }
            interface SocketOption<T> extends _javatypes.java.lang.Interface {
                
                name(): string;
                type(): _javatypes.java.lang.Class<T>;
                
            }
            namespace SocketOption {
                interface static {
                    
                    
                    
                }
            }
            interface SocketImplFactory extends _javatypes.java.lang.Interface {
                
                createSocketImpl(): _javatypes.java.net.SocketImpl;
                
            }
            namespace SocketImplFactory {
                interface static {
                    
                    
                    
                }
            }
            interface SocketAddress extends any, _javatypes.java.io.Serializable {
                
                
            }
            namespace SocketAddress {
                interface static {
                    new (): _javatypes.java.net.SocketAddress;
                    
                    
                    
                }
            }
            interface Proxy extends any {
                
                type(): _javatypes.java.net.Proxy$Type;
                address(): _javatypes.java.net.SocketAddress;
                toString(): string;
                equals(arg0: any): boolean;
                hashCode(): number;
                
            }
            namespace Proxy {
                interface static {
                    new (arg0: _javatypes.java.net.Proxy$Type, arg1: _javatypes.java.net.SocketAddress): _javatypes.java.net.Proxy;
                    
                    readonly NO_PROXY: _javatypes.java.net.Proxy;
                    
                    
                }
            }
            interface NetworkInterface extends any {
                
                getName(): string;
                getInetAddresses(): _javatypes.java.util.Enumeration<_javatypes.java.net.InetAddress>;
                inetAddresses(): _javatypes.java.util.stream.Stream<_javatypes.java.net.InetAddress>;
                getInterfaceAddresses(): _javatypes.java.util.List<_javatypes.java.net.InterfaceAddress>;
                getSubInterfaces(): _javatypes.java.util.Enumeration<_javatypes.java.net.NetworkInterface>;
                subInterfaces(): _javatypes.java.util.stream.Stream<_javatypes.java.net.NetworkInterface>;
                getParent(): _javatypes.java.net.NetworkInterface;
                getIndex(): number;
                getDisplayName(): string;
                isUp(): boolean;
                isLoopback(): boolean;
                isPointToPoint(): boolean;
                supportsMulticast(): boolean;
                getHardwareAddress(): number[];
                getMTU(): number;
                isVirtual(): boolean;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace NetworkInterface {
                interface static {
                    
                    
                    getByName(arg0: string): _javatypes.java.net.NetworkInterface;
                    getByIndex(arg0: number): _javatypes.java.net.NetworkInterface;
                    getByInetAddress(arg0: _javatypes.java.net.InetAddress): _javatypes.java.net.NetworkInterface;
                    getNetworkInterfaces(): _javatypes.java.util.Enumeration<_javatypes.java.net.NetworkInterface>;
                    networkInterfaces(): _javatypes.java.util.stream.Stream<_javatypes.java.net.NetworkInterface>;
                    
                }
            }
            interface SocketImpl extends any, _javatypes.java.net.SocketOptions {
                
                toString(): string;
                
            }
            namespace SocketImpl {
                interface static {
                    new (): _javatypes.java.net.SocketImpl;
                    
                    
                    
                }
            }
            interface Proxy$Type extends _javatypes.java.lang.Enum<_javatypes.java.net.Proxy$Type> {
                
                
            }
            namespace Proxy$Type {
                interface static {
                    
                    readonly DIRECT: _javatypes.java.net.Proxy$Type;
                    readonly HTTP: _javatypes.java.net.Proxy$Type;
                    readonly SOCKS: _javatypes.java.net.Proxy$Type;
                    
                    values(): _javatypes.java.net.Proxy$Type[];
                    valueOf(arg0: string): _javatypes.java.net.Proxy$Type;
                    
                }
            }
            interface SocketOptions extends _javatypes.java.lang.Interface {
                
                setOption(arg0: number, arg1: any): void;
                getOption(arg0: number): any;
                
            }
            namespace SocketOptions {
                interface static {
                    
                    readonly TCP_NODELAY: number;
                    readonly SO_BINDADDR: number;
                    readonly SO_REUSEADDR: number;
                    readonly SO_REUSEPORT: number;
                    readonly SO_BROADCAST: number;
                    readonly IP_MULTICAST_IF: number;
                    readonly IP_MULTICAST_IF2: number;
                    readonly IP_MULTICAST_LOOP: number;
                    readonly IP_TOS: number;
                    readonly SO_LINGER: number;
                    readonly SO_TIMEOUT: number;
                    readonly SO_SNDBUF: number;
                    readonly SO_RCVBUF: number;
                    readonly SO_KEEPALIVE: number;
                    readonly SO_OOBINLINE: number;
                    
                    
                }
            }
            interface InterfaceAddress extends any {
                
                getAddress(): _javatypes.java.net.InetAddress;
                getBroadcast(): _javatypes.java.net.InetAddress;
                getNetworkPrefixLength(): number;
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace InterfaceAddress {
                interface static {
                    
                    
                    
                }
            }
            interface ProtocolFamily extends _javatypes.java.lang.Interface {
                
                name(): string;
                
            }
            namespace ProtocolFamily {
                interface static {
                    
                    
                    
                }
            }
            interface ServerSocket extends any, _javatypes.java.io.Closeable {
                
                bind(arg0: _javatypes.java.net.SocketAddress): void;
                bind(arg0: _javatypes.java.net.SocketAddress, arg1: number): void;
                getInetAddress(): _javatypes.java.net.InetAddress;
                getLocalPort(): number;
                getLocalSocketAddress(): _javatypes.java.net.SocketAddress;
                accept(): _javatypes.java.net.Socket;
                close(): void;
                getChannel(): _javatypes.java.nio.channels.ServerSocketChannel;
                isBound(): boolean;
                isClosed(): boolean;
                setSoTimeout(arg0: number): void;
                getSoTimeout(): number;
                setReuseAddress(arg0: boolean): void;
                getReuseAddress(): boolean;
                toString(): string;
                setReceiveBufferSize(arg0: number): void;
                getReceiveBufferSize(): number;
                setPerformancePreferences(arg0: number, arg1: number, arg2: number): void;
                setOption<T>(arg0: _javatypes.java.net.SocketOption<T>, arg1: T): _javatypes.java.net.ServerSocket;
                getOption<T>(arg0: _javatypes.java.net.SocketOption<T>): T;
                supportedOptions(): _javatypes.java.util.Set<_javatypes.java.net.SocketOption<any>>;
                
            }
            namespace ServerSocket {
                interface static {
                    new (): _javatypes.java.net.ServerSocket;
                    new (arg0: number): _javatypes.java.net.ServerSocket;
                    new (arg0: number, arg1: number): _javatypes.java.net.ServerSocket;
                    new (arg0: number, arg1: number, arg2: _javatypes.java.net.InetAddress): _javatypes.java.net.ServerSocket;
                    
                    
                    setSocketFactory(arg0: _javatypes.java.net.SocketImplFactory): void;
                    
                }
            }
            interface DatagramSocket extends any, _javatypes.java.io.Closeable {
                
                bind(arg0: _javatypes.java.net.SocketAddress): void;
                connect(arg0: _javatypes.java.net.InetAddress, arg1: number): void;
                connect(arg0: _javatypes.java.net.SocketAddress): void;
                disconnect(): void;
                isBound(): boolean;
                isConnected(): boolean;
                getInetAddress(): _javatypes.java.net.InetAddress;
                getPort(): number;
                getRemoteSocketAddress(): _javatypes.java.net.SocketAddress;
                getLocalSocketAddress(): _javatypes.java.net.SocketAddress;
                send(arg0: _javatypes.java.net.DatagramPacket): void;
                receive(arg0: _javatypes.java.net.DatagramPacket): void;
                getLocalAddress(): _javatypes.java.net.InetAddress;
                getLocalPort(): number;
                setSoTimeout(arg0: number): void;
                getSoTimeout(): number;
                setSendBufferSize(arg0: number): void;
                getSendBufferSize(): number;
                setReceiveBufferSize(arg0: number): void;
                getReceiveBufferSize(): number;
                setReuseAddress(arg0: boolean): void;
                getReuseAddress(): boolean;
                setBroadcast(arg0: boolean): void;
                getBroadcast(): boolean;
                setTrafficClass(arg0: number): void;
                getTrafficClass(): number;
                close(): void;
                isClosed(): boolean;
                getChannel(): _javatypes.java.nio.channels.DatagramChannel;
                setOption<T>(arg0: _javatypes.java.net.SocketOption<T>, arg1: T): _javatypes.java.net.DatagramSocket;
                getOption<T>(arg0: _javatypes.java.net.SocketOption<T>): T;
                supportedOptions(): _javatypes.java.util.Set<_javatypes.java.net.SocketOption<any>>;
                joinGroup(arg0: _javatypes.java.net.SocketAddress, arg1: _javatypes.java.net.NetworkInterface): void;
                leaveGroup(arg0: _javatypes.java.net.SocketAddress, arg1: _javatypes.java.net.NetworkInterface): void;
                
            }
            namespace DatagramSocket {
                interface static {
                    new (): _javatypes.java.net.DatagramSocket;
                    new (arg0: _javatypes.java.net.SocketAddress): _javatypes.java.net.DatagramSocket;
                    new (arg0: number): _javatypes.java.net.DatagramSocket;
                    new (arg0: number, arg1: _javatypes.java.net.InetAddress): _javatypes.java.net.DatagramSocket;
                    
                    
                    setDatagramSocketImplFactory(arg0: _javatypes.java.net.DatagramSocketImplFactory): void;
                    
                }
            }
            interface DatagramSocketImplFactory extends _javatypes.java.lang.Interface {
                
                createDatagramSocketImpl(): _javatypes.java.net.DatagramSocketImpl;
                
            }
            namespace DatagramSocketImplFactory {
                interface static {
                    
                    
                    
                }
            }
            interface DatagramPacket extends any {
                
                getAddress(): _javatypes.java.net.InetAddress;
                getPort(): number;
                getData(): number[];
                getOffset(): number;
                getLength(): number;
                setData(arg0: number[], arg1: number, arg2: number): void;
                setAddress(arg0: _javatypes.java.net.InetAddress): void;
                setPort(arg0: number): void;
                setSocketAddress(arg0: _javatypes.java.net.SocketAddress): void;
                getSocketAddress(): _javatypes.java.net.SocketAddress;
                setData(arg0: number[]): void;
                setLength(arg0: number): void;
                
            }
            namespace DatagramPacket {
                interface static {
                    new (arg0: number[], arg1: number, arg2: number): _javatypes.java.net.DatagramPacket;
                    new (arg0: number[], arg1: number): _javatypes.java.net.DatagramPacket;
                    new (arg0: number[], arg1: number, arg2: number, arg3: _javatypes.java.net.InetAddress, arg4: number): _javatypes.java.net.DatagramPacket;
                    new (arg0: number[], arg1: number, arg2: number, arg3: _javatypes.java.net.SocketAddress): _javatypes.java.net.DatagramPacket;
                    new (arg0: number[], arg1: number, arg2: _javatypes.java.net.InetAddress, arg3: number): _javatypes.java.net.DatagramPacket;
                    new (arg0: number[], arg1: number, arg2: _javatypes.java.net.SocketAddress): _javatypes.java.net.DatagramPacket;
                    
                    
                    
                }
            }
            interface DatagramSocketImpl extends any, _javatypes.java.net.SocketOptions {
                
                
            }
            namespace DatagramSocketImpl {
                interface static {
                    new (): _javatypes.java.net.DatagramSocketImpl;
                    
                    
                    
                }
            }
        }
    }

    namespace org {
    
    
        namespace slf4j {
        
            interface Logger extends _javatypes.java.lang.Interface {
                
                getName(): string;
                makeLoggingEventBuilder(arg0: _javatypes.org.slf4j.event.Level): _javatypes.org.slf4j.spi.LoggingEventBuilder;
                atLevel(arg0: _javatypes.org.slf4j.event.Level): _javatypes.org.slf4j.spi.LoggingEventBuilder;
                isEnabledForLevel(arg0: _javatypes.org.slf4j.event.Level): boolean;
                isTraceEnabled(): boolean;
                trace(arg0: string): void;
                trace(arg0: string, arg1: any): void;
                trace(arg0: string, arg1: any, arg2: any): void;
                trace(arg0: string, arg1: any[]): void;
                trace(arg0: string, arg1: _javatypes.java.lang.Throwable): void;
                isTraceEnabled(arg0: _javatypes.org.slf4j.Marker): boolean;
                atTrace(): _javatypes.org.slf4j.spi.LoggingEventBuilder;
                trace(arg0: _javatypes.org.slf4j.Marker, arg1: string): void;
                trace(arg0: _javatypes.org.slf4j.Marker, arg1: string, arg2: any): void;
                trace(arg0: _javatypes.org.slf4j.Marker, arg1: string, arg2: any, arg3: any): void;
                trace(arg0: _javatypes.org.slf4j.Marker, arg1: string, arg2: any[]): void;
                trace(arg0: _javatypes.org.slf4j.Marker, arg1: string, arg2: _javatypes.java.lang.Throwable): void;
                isDebugEnabled(): boolean;
                debug(arg0: string): void;
                debug(arg0: string, arg1: any): void;
                debug(arg0: string, arg1: any, arg2: any): void;
                debug(arg0: string, arg1: any[]): void;
                debug(arg0: string, arg1: _javatypes.java.lang.Throwable): void;
                isDebugEnabled(arg0: _javatypes.org.slf4j.Marker): boolean;
                debug(arg0: _javatypes.org.slf4j.Marker, arg1: string): void;
                debug(arg0: _javatypes.org.slf4j.Marker, arg1: string, arg2: any): void;
                debug(arg0: _javatypes.org.slf4j.Marker, arg1: string, arg2: any, arg3: any): void;
                debug(arg0: _javatypes.org.slf4j.Marker, arg1: string, arg2: any[]): void;
                debug(arg0: _javatypes.org.slf4j.Marker, arg1: string, arg2: _javatypes.java.lang.Throwable): void;
                atDebug(): _javatypes.org.slf4j.spi.LoggingEventBuilder;
                isInfoEnabled(): boolean;
                info(arg0: string): void;
                info(arg0: string, arg1: any): void;
                info(arg0: string, arg1: any, arg2: any): void;
                info(arg0: string, arg1: any[]): void;
                info(arg0: string, arg1: _javatypes.java.lang.Throwable): void;
                isInfoEnabled(arg0: _javatypes.org.slf4j.Marker): boolean;
                info(arg0: _javatypes.org.slf4j.Marker, arg1: string): void;
                info(arg0: _javatypes.org.slf4j.Marker, arg1: string, arg2: any): void;
                info(arg0: _javatypes.org.slf4j.Marker, arg1: string, arg2: any, arg3: any): void;
                info(arg0: _javatypes.org.slf4j.Marker, arg1: string, arg2: any[]): void;
                info(arg0: _javatypes.org.slf4j.Marker, arg1: string, arg2: _javatypes.java.lang.Throwable): void;
                atInfo(): _javatypes.org.slf4j.spi.LoggingEventBuilder;
                isWarnEnabled(): boolean;
                warn(arg0: string): void;
                warn(arg0: string, arg1: any): void;
                warn(arg0: string, arg1: any[]): void;
                warn(arg0: string, arg1: any, arg2: any): void;
                warn(arg0: string, arg1: _javatypes.java.lang.Throwable): void;
                isWarnEnabled(arg0: _javatypes.org.slf4j.Marker): boolean;
                warn(arg0: _javatypes.org.slf4j.Marker, arg1: string): void;
                warn(arg0: _javatypes.org.slf4j.Marker, arg1: string, arg2: any): void;
                warn(arg0: _javatypes.org.slf4j.Marker, arg1: string, arg2: any, arg3: any): void;
                warn(arg0: _javatypes.org.slf4j.Marker, arg1: string, arg2: any[]): void;
                warn(arg0: _javatypes.org.slf4j.Marker, arg1: string, arg2: _javatypes.java.lang.Throwable): void;
                atWarn(): _javatypes.org.slf4j.spi.LoggingEventBuilder;
                isErrorEnabled(): boolean;
                error(arg0: string): void;
                error(arg0: string, arg1: any): void;
                error(arg0: string, arg1: any, arg2: any): void;
                error(arg0: string, arg1: any[]): void;
                error(arg0: string, arg1: _javatypes.java.lang.Throwable): void;
                isErrorEnabled(arg0: _javatypes.org.slf4j.Marker): boolean;
                error(arg0: _javatypes.org.slf4j.Marker, arg1: string): void;
                error(arg0: _javatypes.org.slf4j.Marker, arg1: string, arg2: any): void;
                error(arg0: _javatypes.org.slf4j.Marker, arg1: string, arg2: any, arg3: any): void;
                error(arg0: _javatypes.org.slf4j.Marker, arg1: string, arg2: any[]): void;
                error(arg0: _javatypes.org.slf4j.Marker, arg1: string, arg2: _javatypes.java.lang.Throwable): void;
                atError(): _javatypes.org.slf4j.spi.LoggingEventBuilder;
                
            }
            namespace Logger {
                interface static {
                    
                    readonly ROOT_LOGGER_NAME: string;
                    
                    
                }
            }
            interface Marker extends _javatypes.java.lang.Interface, _javatypes.java.io.Serializable {
                
                getName(): string;
                add(arg0: _javatypes.org.slf4j.Marker): void;
                remove(arg0: _javatypes.org.slf4j.Marker): boolean;
                hasChildren(): boolean;
                hasReferences(): boolean;
                iterator(): _javatypes.java.util.Iterator<_javatypes.org.slf4j.Marker>;
                contains(arg0: _javatypes.org.slf4j.Marker): boolean;
                contains(arg0: string): boolean;
                equals(arg0: any): boolean;
                hashCode(): number;
                
            }
            namespace Marker {
                interface static {
                    
                    readonly ANY_MARKER: string;
                    readonly ANY_NON_NULL_MARKER: string;
                    
                    
                }
            }
        
            namespace event {
            
                interface Level extends _javatypes.java.lang.Enum<_javatypes.org.slf4j.event.Level> {
                    
                    toInt(): number;
                    toString(): string;
                    
                }
                namespace Level {
                    interface static {
                        
                        readonly ERROR: _javatypes.org.slf4j.event.Level;
                        readonly WARN: _javatypes.org.slf4j.event.Level;
                        readonly INFO: _javatypes.org.slf4j.event.Level;
                        readonly DEBUG: _javatypes.org.slf4j.event.Level;
                        readonly TRACE: _javatypes.org.slf4j.event.Level;
                        
                        values(): _javatypes.org.slf4j.event.Level[];
                        valueOf(arg0: string): _javatypes.org.slf4j.event.Level;
                        intToLevel(arg0: number): _javatypes.org.slf4j.event.Level;
                        
                    }
                }
            }
        
            namespace spi {
            
                interface LoggingEventBuilder extends _javatypes.java.lang.Interface {
                    
                    setCause(arg0: _javatypes.java.lang.Throwable): _javatypes.org.slf4j.spi.LoggingEventBuilder;
                    addMarker(arg0: _javatypes.org.slf4j.Marker): _javatypes.org.slf4j.spi.LoggingEventBuilder;
                    addArgument(arg0: any): _javatypes.org.slf4j.spi.LoggingEventBuilder;
                    addArgument(arg0: _javatypes.java.util._function.Supplier<any>): _javatypes.org.slf4j.spi.LoggingEventBuilder;
                    addKeyValue(arg0: string, arg1: any): _javatypes.org.slf4j.spi.LoggingEventBuilder;
                    addKeyValue(arg0: string, arg1: _javatypes.java.util._function.Supplier<any>): _javatypes.org.slf4j.spi.LoggingEventBuilder;
                    setMessage(arg0: string): _javatypes.org.slf4j.spi.LoggingEventBuilder;
                    setMessage(arg0: _javatypes.java.util._function.Supplier<string>): _javatypes.org.slf4j.spi.LoggingEventBuilder;
                    log(): void;
                    log(arg0: string): void;
                    log(arg0: string, arg1: any): void;
                    log(arg0: string, arg1: any, arg2: any): void;
                    log(arg0: string, arg1: any[]): void;
                    log(arg0: _javatypes.java.util._function.Supplier<string>): void;
                    
                }
                namespace LoggingEventBuilder {
                    interface static {
                        
                        
                        
                    }
                }
            }
        }
    
        namespace joor {
        
            interface Reflect extends any {
                
                get<T>(): T;
                set(arg0: string, arg1: any): _javatypes.org.joor.Reflect;
                get<T>(arg0: string): T;
                field(arg0: string): _javatypes.org.joor.Reflect;
                fields(): _javatypes.java.util.Map<string, _javatypes.org.joor.Reflect>;
                call(arg0: string): _javatypes.org.joor.Reflect;
                call(arg0: string, arg1: any[]): _javatypes.org.joor.Reflect;
                create(): _javatypes.org.joor.Reflect;
                create(arg0: any[]): _javatypes.org.joor.Reflect;
                as<P>(arg0: _javatypes.java.lang.Class<P>): P;
                as<P>(arg0: _javatypes.java.lang.Class<P>, arg1: _javatypes.java.lang.Class<any>[]): P;
                hashCode(): number;
                equals(arg0: any): boolean;
                toString(): string;
                type(): _javatypes.java.lang.Class<any>;
                
            }
            namespace Reflect {
                interface static {
                    
                    
                    compile(arg0: string, arg1: string): _javatypes.org.joor.Reflect;
                    compile(arg0: string, arg1: string, arg2: _javatypes.org.joor.CompileOptions): _javatypes.org.joor.Reflect;
                    on(arg0: string): _javatypes.org.joor.Reflect;
                    on(arg0: string, arg1: _javatypes.java.lang.ClassLoader): _javatypes.org.joor.Reflect;
                    on(arg0: _javatypes.java.lang.Class<any>): _javatypes.org.joor.Reflect;
                    onClass(arg0: string): _javatypes.org.joor.Reflect;
                    onClass(arg0: string, arg1: _javatypes.java.lang.ClassLoader): _javatypes.org.joor.Reflect;
                    onClass(arg0: _javatypes.java.lang.Class<any>): _javatypes.org.joor.Reflect;
                    on(arg0: any): _javatypes.org.joor.Reflect;
                    initValue<T>(arg0: _javatypes.java.lang.Class<T>): T;
                    accessible<T>(arg0: T): T;
                    wrapper<T>(arg0: _javatypes.java.lang.Class<T>): _javatypes.java.lang.Class<T>;
                    
                }
            }
            interface CompileOptions extends any {
                
                processors(arg0: _javatypes.javax.annotation.processing.Processor[]): _javatypes.org.joor.CompileOptions;
                processors(arg0: _javatypes.java.util.List<any>): _javatypes.org.joor.CompileOptions;
                options(arg0: string[]): _javatypes.org.joor.CompileOptions;
                options(arg0: _javatypes.java.util.List<string>): _javatypes.org.joor.CompileOptions;
                
            }
            namespace CompileOptions {
                interface static {
                    new (): _javatypes.org.joor.CompileOptions;
                    
                    
                    
                }
            }
        }
    
        namespace joml {
        
            interface Vector3f extends any, _javatypes.java.io.Externalizable, _javatypes.java.lang.Cloneable, _javatypes.org.joml.Vector3fc {
                x: number;
                y: number;
                z: number;
                
                x(): number;
                y(): number;
                z(): number;
                set(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Vector3f;
                set(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Vector3f;
                set(arg0: _javatypes.org.joml.Vector3ic): _javatypes.org.joml.Vector3f;
                set(arg0: _javatypes.org.joml.Vector2fc, arg1: number): _javatypes.org.joml.Vector3f;
                set(arg0: _javatypes.org.joml.Vector2dc, arg1: number): _javatypes.org.joml.Vector3f;
                set(arg0: _javatypes.org.joml.Vector2ic, arg1: number): _javatypes.org.joml.Vector3f;
                set(arg0: number): _javatypes.org.joml.Vector3f;
                set(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector3f;
                set(arg0: number): _javatypes.org.joml.Vector3f;
                set(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector3f;
                set(arg0: number[]): _javatypes.org.joml.Vector3f;
                set(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector3f;
                set(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector3f;
                set(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Vector3f;
                set(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Vector3f;
                setFromAddress(arg0: number): _javatypes.org.joml.Vector3f;
                setComponent(arg0: number, arg1: number): _javatypes.org.joml.Vector3f;
                get(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Vector3fc;
                sub(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Vector3f;
                sub(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                sub(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector3f;
                sub(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                add(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Vector3f;
                add(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                add(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector3f;
                add(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                fma(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Vector3f;
                fma(arg0: number, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Vector3f;
                fma(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                fma(arg0: number, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mulAdd(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Vector3f;
                mulAdd(arg0: number, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Vector3f;
                mulAdd(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mulAdd(arg0: number, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mul(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Vector3f;
                mul(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                div(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Vector3f;
                div(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mulProject(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mulProject(arg0: _javatypes.org.joml.Matrix4fc, arg1: number, arg2: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mulProject(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Vector3f;
                mul(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Vector3f;
                mul(arg0: _javatypes.org.joml.Matrix3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mul(arg0: _javatypes.org.joml.Matrix3dc): _javatypes.org.joml.Vector3f;
                mul(arg0: _javatypes.org.joml.Matrix3dc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mul(arg0: _javatypes.org.joml.Matrix3x2fc): _javatypes.org.joml.Vector3f;
                mul(arg0: _javatypes.org.joml.Matrix3x2fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mulTranspose(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Vector3f;
                mulTranspose(arg0: _javatypes.org.joml.Matrix3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mulPosition(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Vector3f;
                mulPosition(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Vector3f;
                mulPosition(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mulPosition(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mulTransposePosition(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Vector3f;
                mulTransposePosition(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mulPositionW(arg0: _javatypes.org.joml.Matrix4fc): number;
                mulPositionW(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector3f): number;
                mulDirection(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Vector3f;
                mulDirection(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Vector3f;
                mulDirection(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Vector3f;
                mulDirection(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mulDirection(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mulDirection(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mulTransposeDirection(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Vector3f;
                mulTransposeDirection(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mul(arg0: number): _javatypes.org.joml.Vector3f;
                mul(arg0: number, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mul(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector3f;
                mul(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                div(arg0: number): _javatypes.org.joml.Vector3f;
                div(arg0: number, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                div(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector3f;
                div(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                rotate(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Vector3f;
                rotate(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                rotationTo(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotationTo(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateAxis(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Vector3f;
                rotateAxis(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                rotateX(arg0: number): _javatypes.org.joml.Vector3f;
                rotateX(arg0: number, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                rotateY(arg0: number): _javatypes.org.joml.Vector3f;
                rotateY(arg0: number, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                rotateZ(arg0: number): _javatypes.org.joml.Vector3f;
                rotateZ(arg0: number, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                lengthSquared(): number;
                length(): number;
                normalize(): _javatypes.org.joml.Vector3f;
                normalize(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normalize(arg0: number): _javatypes.org.joml.Vector3f;
                normalize(arg0: number, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                cross(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Vector3f;
                cross(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector3f;
                cross(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                cross(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                distance(arg0: _javatypes.org.joml.Vector3fc): number;
                distance(arg0: number, arg1: number, arg2: number): number;
                distanceSquared(arg0: _javatypes.org.joml.Vector3fc): number;
                distanceSquared(arg0: number, arg1: number, arg2: number): number;
                dot(arg0: _javatypes.org.joml.Vector3fc): number;
                dot(arg0: number, arg1: number, arg2: number): number;
                angleCos(arg0: _javatypes.org.joml.Vector3fc): number;
                angle(arg0: _javatypes.org.joml.Vector3fc): number;
                angleSigned(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc): number;
                angleSigned(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
                min(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Vector3f;
                min(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                max(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Vector3f;
                max(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                zero(): _javatypes.org.joml.Vector3f;
                toString(): string;
                toString(arg0: _javatypes.java.text.NumberFormat): string;
                writeExternal(arg0: _javatypes.java.io.ObjectOutput): void;
                readExternal(arg0: _javatypes.java.io.ObjectInput): void;
                negate(): _javatypes.org.joml.Vector3f;
                negate(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                absolute(): _javatypes.org.joml.Vector3f;
                absolute(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                hashCode(): number;
                equals(arg0: any): boolean;
                equals(arg0: _javatypes.org.joml.Vector3fc, arg1: number): boolean;
                equals(arg0: number, arg1: number, arg2: number): boolean;
                reflect(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Vector3f;
                reflect(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector3f;
                reflect(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                reflect(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                half(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Vector3f;
                half(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector3f;
                half(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                half(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                smoothStep(arg0: _javatypes.org.joml.Vector3fc, arg1: number, arg2: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                hermite(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc, arg3: number, arg4: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                lerp(arg0: _javatypes.org.joml.Vector3fc, arg1: number): _javatypes.org.joml.Vector3f;
                lerp(arg0: _javatypes.org.joml.Vector3fc, arg1: number, arg2: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                get(arg0: number): number;
                get(arg0: number, arg1: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                get(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                get(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                maxComponent(): number;
                minComponent(): number;
                orthogonalize(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                orthogonalize(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Vector3f;
                orthogonalizeUnit(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                orthogonalizeUnit(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Vector3f;
                floor(): _javatypes.org.joml.Vector3f;
                floor(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                ceil(): _javatypes.org.joml.Vector3f;
                ceil(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                round(): _javatypes.org.joml.Vector3f;
                round(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                isFinite(): boolean;
                clone(): any;
                
            }
            namespace Vector3f {
                interface static {
                    new (): _javatypes.org.joml.Vector3f;
                    new (arg0: number): _javatypes.org.joml.Vector3f;
                    new (arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector3f;
                    new (arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Vector3f;
                    new (arg0: _javatypes.org.joml.Vector3ic): _javatypes.org.joml.Vector3f;
                    new (arg0: _javatypes.org.joml.Vector2fc, arg1: number): _javatypes.org.joml.Vector3f;
                    new (arg0: _javatypes.org.joml.Vector2ic, arg1: number): _javatypes.org.joml.Vector3f;
                    new (arg0: number[]): _javatypes.org.joml.Vector3f;
                    new (arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector3f;
                    new (arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector3f;
                    new (arg0: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Vector3f;
                    new (arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Vector3f;
                    
                    
                    lengthSquared(arg0: number, arg1: number, arg2: number): number;
                    length(arg0: number, arg1: number, arg2: number): number;
                    distance(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
                    distanceSquared(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
                    
                }
            }
            interface Matrix3fc extends _javatypes.java.lang.Interface {
                
                m00(): number;
                m01(): number;
                m02(): number;
                m10(): number;
                m11(): number;
                m12(): number;
                m20(): number;
                m21(): number;
                m22(): number;
                mul(arg0: _javatypes.org.joml.Matrix3fc, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mulLocal(arg0: _javatypes.org.joml.Matrix3fc, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                determinant(): number;
                invert(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                transpose(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                get(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                get(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                getRotation(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.AxisAngle4f;
                getUnnormalizedRotation(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getNormalizedRotation(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getUnnormalizedRotation(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                getNormalizedRotation(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                get(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get3x4(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get3x4(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get3x4(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get3x4(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Matrix3fc;
                get(arg0: number[], arg1: number): number[];
                get(arg0: number[]): number[];
                scale(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                scale(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                scale(arg0: number, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                scaleLocal(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                transform(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transform(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transform(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformTranspose(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformTranspose(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformTranspose(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                rotateX(arg0: number, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotateY(arg0: number, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotateZ(arg0: number, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotateXYZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotateZYX(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotateYXZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotate(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotateLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotateLocalX(arg0: number, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotateLocalY(arg0: number, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotateLocalZ(arg0: number, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotate(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotateLocal(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotate(arg0: _javatypes.org.joml.AxisAngle4f, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                lookAlong(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                lookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                getRow(arg0: number, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                getColumn(arg0: number, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                get(arg0: number, arg1: number): number;
                getRowColumn(arg0: number, arg1: number): number;
                normal(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                cofactor(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                getScale(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                positiveZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normalizedPositiveZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                positiveX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normalizedPositiveX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                positiveY(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normalizedPositiveY(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                add(arg0: _javatypes.org.joml.Matrix3fc, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                sub(arg0: _javatypes.org.joml.Matrix3fc, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mulComponentWise(arg0: _javatypes.org.joml.Matrix3fc, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                lerp(arg0: _javatypes.org.joml.Matrix3fc, arg1: number, arg2: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotateTowards(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotateTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                getEulerAnglesXYZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                getEulerAnglesZYX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                obliqueZ(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                equals(arg0: _javatypes.org.joml.Matrix3fc, arg1: number): boolean;
                reflect(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                reflect(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                reflect(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                isFinite(): boolean;
                quadraticFormProduct(arg0: number, arg1: number, arg2: number): number;
                quadraticFormProduct(arg0: _javatypes.org.joml.Vector3fc): number;
                mapXZY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapXZnY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapXnYnZ(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapXnZY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapXnZnY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapYXZ(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapYXnZ(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapYZX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapYZnX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapYnXZ(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapYnXnZ(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapYnZX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapYnZnX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapZXY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapZXnY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapZYX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapZYnX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapZnXY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapZnXnY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapZnYX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapZnYnX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnXYnZ(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnXZY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnXZnY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnXnYZ(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnXnYnZ(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnXnZY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnXnZnY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnYXZ(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnYXnZ(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnYZX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnYZnX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnYnXZ(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnYnXnZ(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnYnZX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnYnZnX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnZXY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnZXnY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnZYX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnZYnX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnZnXY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnZnXnY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnZnYX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnZnYnX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                negateX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                negateY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                negateZ(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                
            }
            namespace Matrix3fc {
                interface static {
                    
                    
                    
                }
            }
            interface Vector3dc extends _javatypes.java.lang.Interface {
                
                x(): number;
                y(): number;
                z(): number;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getf(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getf(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Vector3dc;
                sub(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                sub(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                sub(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                add(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                add(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                add(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                fma(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                fma(arg0: number, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                fma(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                fma(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                fma(arg0: number, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulAdd(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulAdd(arg0: number, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulAdd(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mul(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mul(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                div(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                div(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulProject(arg0: _javatypes.org.joml.Matrix4dc, arg1: number, arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulProject(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulProject(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mul(arg0: _javatypes.org.joml.Matrix3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mul(arg0: _javatypes.org.joml.Matrix3dc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mul(arg0: _javatypes.org.joml.Matrix3fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mul(arg0: _javatypes.org.joml.Matrix3x2dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mul(arg0: _javatypes.org.joml.Matrix3x2fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulTranspose(arg0: _javatypes.org.joml.Matrix3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulTranspose(arg0: _javatypes.org.joml.Matrix3fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulPosition(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulPosition(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulPosition(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulPosition(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulTransposePosition(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulTransposePosition(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulPositionW(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector3d): number;
                mulPositionW(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Vector3d): number;
                mulDirection(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulDirection(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulDirection(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulDirection(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulTransposeDirection(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulTransposeDirection(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mul(arg0: number, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mul(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                rotate(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                rotationTo(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotationTo(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotateAxis(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                rotateX(arg0: number, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                rotateY(arg0: number, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                rotateZ(arg0: number, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                div(arg0: number, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                div(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                lengthSquared(): number;
                length(): number;
                normalize(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normalize(arg0: number, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                cross(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                cross(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                distance(arg0: _javatypes.org.joml.Vector3dc): number;
                distance(arg0: number, arg1: number, arg2: number): number;
                distanceSquared(arg0: _javatypes.org.joml.Vector3dc): number;
                distanceSquared(arg0: number, arg1: number, arg2: number): number;
                dot(arg0: _javatypes.org.joml.Vector3dc): number;
                dot(arg0: number, arg1: number, arg2: number): number;
                angleCos(arg0: _javatypes.org.joml.Vector3dc): number;
                angle(arg0: _javatypes.org.joml.Vector3dc): number;
                angleSigned(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc): number;
                angleSigned(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
                min(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                max(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                negate(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                absolute(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                reflect(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                reflect(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                half(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                half(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                smoothStep(arg0: _javatypes.org.joml.Vector3dc, arg1: number, arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                hermite(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc, arg3: number, arg4: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                lerp(arg0: _javatypes.org.joml.Vector3dc, arg1: number, arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                get(arg0: number): number;
                get(arg0: number, arg1: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                get(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                get(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                maxComponent(): number;
                minComponent(): number;
                orthogonalize(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                orthogonalizeUnit(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                floor(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                ceil(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                round(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                isFinite(): boolean;
                equals(arg0: _javatypes.org.joml.Vector3dc, arg1: number): boolean;
                equals(arg0: number, arg1: number, arg2: number): boolean;
                
            }
            namespace Vector3dc {
                interface static {
                    
                    
                    
                }
            }
            interface Vector2dc extends _javatypes.java.lang.Interface {
                
                x(): number;
                y(): number;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Vector2dc;
                sub(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                sub(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                sub(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                mul(arg0: number, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                mul(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                mul(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                div(arg0: number, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                div(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                div(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                div(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                mul(arg0: _javatypes.org.joml.Matrix2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                mul(arg0: _javatypes.org.joml.Matrix2fc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                mulTranspose(arg0: _javatypes.org.joml.Matrix2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                mulTranspose(arg0: _javatypes.org.joml.Matrix2fc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                mulPosition(arg0: _javatypes.org.joml.Matrix3x2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                mulDirection(arg0: _javatypes.org.joml.Matrix3x2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                dot(arg0: _javatypes.org.joml.Vector2dc): number;
                angle(arg0: _javatypes.org.joml.Vector2dc): number;
                lengthSquared(): number;
                length(): number;
                distance(arg0: _javatypes.org.joml.Vector2dc): number;
                distanceSquared(arg0: _javatypes.org.joml.Vector2dc): number;
                distance(arg0: _javatypes.org.joml.Vector2fc): number;
                distanceSquared(arg0: _javatypes.org.joml.Vector2fc): number;
                distance(arg0: number, arg1: number): number;
                distanceSquared(arg0: number, arg1: number): number;
                normalize(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                normalize(arg0: number, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                add(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                add(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                add(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                negate(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                lerp(arg0: _javatypes.org.joml.Vector2dc, arg1: number, arg2: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                fma(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2dc, arg2: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                fma(arg0: number, arg1: _javatypes.org.joml.Vector2dc, arg2: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                min(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                max(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                maxComponent(): number;
                minComponent(): number;
                get(arg0: number): number;
                get(arg0: number, arg1: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                get(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                get(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                floor(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                ceil(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                round(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                isFinite(): boolean;
                absolute(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                equals(arg0: _javatypes.org.joml.Vector2dc, arg1: number): boolean;
                equals(arg0: number, arg1: number): boolean;
                
            }
            namespace Vector2dc {
                interface static {
                    
                    
                    
                }
            }
            interface Vector2ic extends _javatypes.java.lang.Interface {
                
                x(): number;
                y(): number;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: _javatypes.java.nio.IntBuffer): _javatypes.java.nio.IntBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.IntBuffer): _javatypes.java.nio.IntBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Vector2ic;
                sub(arg0: _javatypes.org.joml.Vector2ic, arg1: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                sub(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                lengthSquared(): number;
                length(): number;
                distance(arg0: _javatypes.org.joml.Vector2ic): number;
                distance(arg0: number, arg1: number): number;
                distanceSquared(arg0: _javatypes.org.joml.Vector2ic): number;
                distanceSquared(arg0: number, arg1: number): number;
                gridDistance(arg0: _javatypes.org.joml.Vector2ic): number;
                gridDistance(arg0: number, arg1: number): number;
                add(arg0: _javatypes.org.joml.Vector2ic, arg1: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                add(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                mul(arg0: number, arg1: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                mul(arg0: _javatypes.org.joml.Vector2ic, arg1: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                mul(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                div(arg0: number, arg1: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                div(arg0: number, arg1: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                negate(arg0: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                min(arg0: _javatypes.org.joml.Vector2ic, arg1: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                max(arg0: _javatypes.org.joml.Vector2ic, arg1: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                maxComponent(): number;
                minComponent(): number;
                absolute(arg0: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                get(arg0: number): number;
                equals(arg0: number, arg1: number): boolean;
                
            }
            namespace Vector2ic {
                interface static {
                    
                    
                    
                }
            }
            interface Quaternionf extends any, _javatypes.java.io.Externalizable, _javatypes.java.lang.Cloneable, _javatypes.org.joml.Quaternionfc {
                x: number;
                y: number;
                z: number;
                w: number;
                
                x(): number;
                y(): number;
                z(): number;
                w(): number;
                normalize(): _javatypes.org.joml.Quaternionf;
                normalize(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                add(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Quaternionf;
                add(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                add(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Quaternionf;
                add(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                dot(arg0: _javatypes.org.joml.Quaternionf): number;
                angle(): number;
                get(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                get(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                get(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                get(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                get(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                get(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                get(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.AxisAngle4f;
                get(arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.AxisAngle4d;
                get(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                get(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getAsMatrix3f(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getAsMatrix3f(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getAsMatrix4f(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getAsMatrix4f(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getAsMatrix4x3f(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getAsMatrix4x3f(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                set(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Quaternionf;
                set(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Quaternionf;
                set(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Quaternionf;
                set(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.Quaternionf;
                set(arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.Quaternionf;
                setAngleAxis(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Quaternionf;
                setAngleAxis(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Quaternionf;
                rotationAxis(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.Quaternionf;
                rotationAxis(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Quaternionf;
                rotationAxis(arg0: number, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Quaternionf;
                rotationX(arg0: number): _javatypes.org.joml.Quaternionf;
                rotationY(arg0: number): _javatypes.org.joml.Quaternionf;
                rotationZ(arg0: number): _javatypes.org.joml.Quaternionf;
                setFromUnnormalized(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Quaternionf;
                setFromUnnormalized(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Quaternionf;
                setFromUnnormalized(arg0: _javatypes.org.joml.Matrix4x3dc): _javatypes.org.joml.Quaternionf;
                setFromNormalized(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Quaternionf;
                setFromNormalized(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Quaternionf;
                setFromNormalized(arg0: _javatypes.org.joml.Matrix4x3dc): _javatypes.org.joml.Quaternionf;
                setFromUnnormalized(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Quaternionf;
                setFromNormalized(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Quaternionf;
                setFromUnnormalized(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Quaternionf;
                setFromNormalized(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Quaternionf;
                setFromUnnormalized(arg0: _javatypes.org.joml.Matrix3dc): _javatypes.org.joml.Quaternionf;
                setFromNormalized(arg0: _javatypes.org.joml.Matrix3dc): _javatypes.org.joml.Quaternionf;
                fromAxisAngleRad(arg0: _javatypes.org.joml.Vector3fc, arg1: number): _javatypes.org.joml.Quaternionf;
                fromAxisAngleRad(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Quaternionf;
                fromAxisAngleDeg(arg0: _javatypes.org.joml.Vector3fc, arg1: number): _javatypes.org.joml.Quaternionf;
                fromAxisAngleDeg(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Quaternionf;
                mul(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Quaternionf;
                mul(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                mul(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Quaternionf;
                mul(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                mul(arg0: number): _javatypes.org.joml.Quaternionf;
                mul(arg0: number, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                premul(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Quaternionf;
                premul(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                premul(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Quaternionf;
                premul(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                transform(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformInverse(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPositiveX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPositiveX(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnitPositiveX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformUnitPositiveX(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformPositiveY(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPositiveY(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnitPositiveY(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnitPositiveY(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPositiveZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPositiveZ(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnitPositiveZ(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnitPositiveZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transform(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformInverse(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transform(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformInverse(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transform(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformInverse(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformUnit(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformUnit(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformInverseUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transform(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformInverse(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transform(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformInverse(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transform(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverse(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformUnit(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnit(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformInverseUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformPositiveX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPositiveX(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnitPositiveX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformUnitPositiveX(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformPositiveY(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPositiveY(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnitPositiveY(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnitPositiveY(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPositiveZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPositiveZ(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnitPositiveZ(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnitPositiveZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transform(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformInverse(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transform(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverse(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transform(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverse(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transform(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverse(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transform(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformInverse(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transform(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformInverse(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnit(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnit(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverseUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverseUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformUnit(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformInverseUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                invert(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                invert(): _javatypes.org.joml.Quaternionf;
                div(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                div(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Quaternionf;
                conjugate(): _javatypes.org.joml.Quaternionf;
                conjugate(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                identity(): _javatypes.org.joml.Quaternionf;
                rotateXYZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Quaternionf;
                rotateXYZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateZYX(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Quaternionf;
                rotateZYX(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateYXZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Quaternionf;
                rotateYXZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getEulerAnglesXYZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                getEulerAnglesZYX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                getEulerAnglesZXY(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                getEulerAnglesYXZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                lengthSquared(): number;
                rotationXYZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Quaternionf;
                rotationZYX(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Quaternionf;
                rotationYXZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Quaternionf;
                slerp(arg0: _javatypes.org.joml.Quaternionfc, arg1: number): _javatypes.org.joml.Quaternionf;
                slerp(arg0: _javatypes.org.joml.Quaternionfc, arg1: number, arg2: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                scale(arg0: number): _javatypes.org.joml.Quaternionf;
                scale(arg0: number, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                scaling(arg0: number): _javatypes.org.joml.Quaternionf;
                integrate(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Quaternionf;
                integrate(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                nlerp(arg0: _javatypes.org.joml.Quaternionfc, arg1: number): _javatypes.org.joml.Quaternionf;
                nlerp(arg0: _javatypes.org.joml.Quaternionfc, arg1: number, arg2: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                nlerpIterative(arg0: _javatypes.org.joml.Quaternionfc, arg1: number, arg2: number, arg3: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                nlerpIterative(arg0: _javatypes.org.joml.Quaternionfc, arg1: number, arg2: number): _javatypes.org.joml.Quaternionf;
                lookAlong(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Quaternionf;
                lookAlong(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                lookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Quaternionf;
                lookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotationTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Quaternionf;
                rotationTo(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Quaternionf;
                rotateTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Quaternionf;
                rotateTo(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateTo(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Quaternionf;
                rotateX(arg0: number): _javatypes.org.joml.Quaternionf;
                rotateX(arg0: number, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateY(arg0: number): _javatypes.org.joml.Quaternionf;
                rotateY(arg0: number, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateZ(arg0: number): _javatypes.org.joml.Quaternionf;
                rotateZ(arg0: number, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateLocalX(arg0: number): _javatypes.org.joml.Quaternionf;
                rotateLocalX(arg0: number, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateLocalY(arg0: number): _javatypes.org.joml.Quaternionf;
                rotateLocalY(arg0: number, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateLocalZ(arg0: number): _javatypes.org.joml.Quaternionf;
                rotateLocalZ(arg0: number, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateAxis(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateAxis(arg0: number, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateAxis(arg0: number, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Quaternionf;
                rotateAxis(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Quaternionf;
                toString(): string;
                toString(arg0: _javatypes.java.text.NumberFormat): string;
                writeExternal(arg0: _javatypes.java.io.ObjectOutput): void;
                readExternal(arg0: _javatypes.java.io.ObjectInput): void;
                hashCode(): number;
                equals(arg0: any): boolean;
                difference(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                difference(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                positiveX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normalizedPositiveX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                positiveY(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normalizedPositiveY(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                positiveZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normalizedPositiveZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                conjugateBy(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Quaternionf;
                conjugateBy(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                isFinite(): boolean;
                equals(arg0: _javatypes.org.joml.Quaternionfc, arg1: number): boolean;
                equals(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                clone(): any;
                
            }
            namespace Quaternionf {
                interface static {
                    new (): _javatypes.org.joml.Quaternionf;
                    new (arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Quaternionf;
                    new (arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Quaternionf;
                    new (arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Quaternionf;
                    new (arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Quaternionf;
                    new (arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.Quaternionf;
                    new (arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.Quaternionf;
                    
                    
                    slerp(arg0: _javatypes.org.joml.Quaternionf[], arg1: number[], arg2: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionfc;
                    nlerp(arg0: _javatypes.org.joml.Quaternionfc[], arg1: number[], arg2: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionfc;
                    nlerpIterative(arg0: _javatypes.org.joml.Quaternionf[], arg1: number[], arg2: number, arg3: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionfc;
                    
                }
            }
            interface Vector2fc extends _javatypes.java.lang.Interface {
                
                x(): number;
                y(): number;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Vector2fc;
                sub(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                sub(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                dot(arg0: _javatypes.org.joml.Vector2fc): number;
                angle(arg0: _javatypes.org.joml.Vector2fc): number;
                lengthSquared(): number;
                length(): number;
                distance(arg0: _javatypes.org.joml.Vector2fc): number;
                distanceSquared(arg0: _javatypes.org.joml.Vector2fc): number;
                distance(arg0: number, arg1: number): number;
                distanceSquared(arg0: number, arg1: number): number;
                normalize(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                normalize(arg0: number, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                add(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                add(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                negate(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                mul(arg0: number, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                mul(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                mul(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                div(arg0: number, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                div(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                div(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                mul(arg0: _javatypes.org.joml.Matrix2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                mul(arg0: _javatypes.org.joml.Matrix2dc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                mulTranspose(arg0: _javatypes.org.joml.Matrix2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                mulPosition(arg0: _javatypes.org.joml.Matrix3x2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                mulDirection(arg0: _javatypes.org.joml.Matrix3x2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                lerp(arg0: _javatypes.org.joml.Vector2fc, arg1: number, arg2: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                fma(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2fc, arg2: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                fma(arg0: number, arg1: _javatypes.org.joml.Vector2fc, arg2: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                min(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                max(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                maxComponent(): number;
                minComponent(): number;
                get(arg0: number): number;
                get(arg0: number, arg1: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                get(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                get(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                floor(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                ceil(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                round(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                isFinite(): boolean;
                absolute(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                equals(arg0: _javatypes.org.joml.Vector2fc, arg1: number): boolean;
                equals(arg0: number, arg1: number): boolean;
                
            }
            namespace Vector2fc {
                interface static {
                    
                    
                    
                }
            }
            interface Matrix4x3fc extends _javatypes.java.lang.Interface {
                
                properties(): number;
                m00(): number;
                m01(): number;
                m02(): number;
                m10(): number;
                m11(): number;
                m12(): number;
                m20(): number;
                m21(): number;
                m22(): number;
                m30(): number;
                m31(): number;
                m32(): number;
                get(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                get(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mul(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mulTranslation(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mulOrtho(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mul3x3(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                fma(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: number, arg2: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                add(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                sub(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mulComponentWise(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                determinant(): number;
                invert(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                invert(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                invertOrtho(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                transpose3x3(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                transpose3x3(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                getTranslation(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                getScale(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                get(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                get(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                getRotation(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.AxisAngle4f;
                getRotation(arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.AxisAngle4d;
                getUnnormalizedRotation(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getNormalizedRotation(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getUnnormalizedRotation(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                getNormalizedRotation(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                get(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Matrix4x3fc;
                get(arg0: number[], arg1: number): number[];
                get(arg0: number[]): number[];
                get4x4(arg0: number[], arg1: number): number[];
                get4x4(arg0: number[]): number[];
                get4x4(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get4x4(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get4x4(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get4x4(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get3x4(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get3x4(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get3x4(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get3x4(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: number[], arg1: number): number[];
                getTransposed(arg0: number[]): number[];
                transform(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transform(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformPosition(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPosition(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformDirection(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformDirection(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                scale(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                scale(arg0: number, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                scaleXY(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                scale(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                scaleLocal(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateX(arg0: number, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateY(arg0: number, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateZ(arg0: number, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateXYZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateZYX(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateYXZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotate(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateTranslation(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateAround(arg0: _javatypes.org.joml.Quaternionfc, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                translate(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                translate(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                translateLocal(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                translateLocal(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                ortho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                ortho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                orthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                orthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                orthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                orthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                orthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                orthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                ortho2D(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                ortho2DLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                lookAlong(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                lookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                lookAt(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc, arg3: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                lookAt(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                lookAtLH(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc, arg3: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                lookAtLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotate(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateTranslation(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateLocal(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotate(arg0: _javatypes.org.joml.AxisAngle4f, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                reflect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                reflect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                reflect(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                reflect(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                getRow(arg0: number, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                getColumn(arg0: number, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normal(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                normal(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                cofactor3x3(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                cofactor3x3(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                normalize3x3(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                normalize3x3(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                frustumPlane(arg0: number, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                positiveZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normalizedPositiveZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                positiveX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normalizedPositiveX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                positiveY(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normalizedPositiveY(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                origin(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                shadow(arg0: _javatypes.org.joml.Vector4fc, arg1: number, arg2: number, arg3: number, arg4: number, arg5: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                shadow(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                shadow(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Matrix4x3fc, arg2: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                shadow(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3fc, arg5: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                pick(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                arcball(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                arcball(arg0: number, arg1: _javatypes.org.joml.Vector3fc, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                transformAab(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Vector3f, arg7: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix4x3f;
                transformAab(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3f, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix4x3f;
                lerp(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: number, arg2: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateTowards(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                getEulerAnglesXYZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                getEulerAnglesZYX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                obliqueZ(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                withLookAtUp(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                withLookAtUp(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapXZY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapXZnY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapXnYnZ(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapXnZY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapXnZnY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapYXZ(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapYXnZ(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapYZX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapYZnX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapYnXZ(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapYnXnZ(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapYnZX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapYnZnX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapZXY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapZXnY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapZYX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapZYnX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapZnXY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapZnXnY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapZnYX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapZnYnX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnXYnZ(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnXZY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnXZnY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnXnYZ(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnXnYnZ(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnXnZY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnXnZnY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnYXZ(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnYXnZ(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnYZX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnYZnX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnYnXZ(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnYnXnZ(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnYnZX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnYnZnX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnZXY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnZXnY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnZYX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnZYnX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnZnXY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnZnXnY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnZnYX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnZnYnX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                negateX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                negateY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                negateZ(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                equals(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: number): boolean;
                isFinite(): boolean;
                
            }
            namespace Matrix4x3fc {
                interface static {
                    
                    readonly PLANE_NX: number;
                    readonly PLANE_PX: number;
                    readonly PLANE_NY: number;
                    readonly PLANE_PY: number;
                    readonly PLANE_NZ: number;
                    readonly PLANE_PZ: number;
                    readonly PROPERTY_IDENTITY: number;
                    readonly PROPERTY_TRANSLATION: number;
                    readonly PROPERTY_ORTHONORMAL: number;
                    
                    
                }
            }
            interface Vector3ic extends _javatypes.java.lang.Interface {
                
                x(): number;
                y(): number;
                z(): number;
                get(arg0: _javatypes.java.nio.IntBuffer): _javatypes.java.nio.IntBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.IntBuffer): _javatypes.java.nio.IntBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Vector3ic;
                sub(arg0: _javatypes.org.joml.Vector3ic, arg1: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                sub(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                add(arg0: _javatypes.org.joml.Vector3ic, arg1: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                add(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                mul(arg0: number, arg1: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                mul(arg0: _javatypes.org.joml.Vector3ic, arg1: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                mul(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                div(arg0: number, arg1: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                div(arg0: number, arg1: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                lengthSquared(): number;
                length(): number;
                distance(arg0: _javatypes.org.joml.Vector3ic): number;
                distance(arg0: number, arg1: number, arg2: number): number;
                gridDistance(arg0: _javatypes.org.joml.Vector3ic): number;
                gridDistance(arg0: number, arg1: number, arg2: number): number;
                distanceSquared(arg0: _javatypes.org.joml.Vector3ic): number;
                distanceSquared(arg0: number, arg1: number, arg2: number): number;
                negate(arg0: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                min(arg0: _javatypes.org.joml.Vector3ic, arg1: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                max(arg0: _javatypes.org.joml.Vector3ic, arg1: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                get(arg0: number): number;
                maxComponent(): number;
                minComponent(): number;
                absolute(arg0: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                equals(arg0: number, arg1: number, arg2: number): boolean;
                
            }
            namespace Vector3ic {
                interface static {
                    
                    
                    
                }
            }
            interface Matrix3dc extends _javatypes.java.lang.Interface {
                
                m00(): number;
                m01(): number;
                m02(): number;
                m10(): number;
                m11(): number;
                m12(): number;
                m20(): number;
                m21(): number;
                m22(): number;
                mul(arg0: _javatypes.org.joml.Matrix3dc, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mulLocal(arg0: _javatypes.org.joml.Matrix3dc, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mul(arg0: _javatypes.org.joml.Matrix3fc, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                determinant(): number;
                invert(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                transpose(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                get(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                getRotation(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.AxisAngle4f;
                getUnnormalizedRotation(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getNormalizedRotation(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getUnnormalizedRotation(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                getNormalizedRotation(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                get(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getFloats(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getFloats(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                getTransposed(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposedFloats(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposedFloats(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Matrix3dc;
                get(arg0: number[], arg1: number): number[];
                get(arg0: number[]): number[];
                get(arg0: number[], arg1: number): number[];
                get(arg0: number[]): number[];
                scale(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                scale(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                scale(arg0: number, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                scaleLocal(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                transform(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transform(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transform(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transform(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transform(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformTranspose(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformTranspose(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformTranspose(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                rotateX(arg0: number, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateY(arg0: number, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateZ(arg0: number, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateXYZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateZYX(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateYXZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotate(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateLocalX(arg0: number, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateLocalY(arg0: number, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateLocalZ(arg0: number, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateLocal(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateLocal(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotate(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotate(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotate(arg0: _javatypes.org.joml.AxisAngle4f, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotate(arg0: _javatypes.org.joml.AxisAngle4d, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                getRow(arg0: number, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                getColumn(arg0: number, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                get(arg0: number, arg1: number): number;
                getRowColumn(arg0: number, arg1: number): number;
                normal(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                cofactor(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                lookAlong(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                lookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                getScale(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                positiveZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normalizedPositiveZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                positiveX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normalizedPositiveX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                positiveY(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normalizedPositiveY(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                add(arg0: _javatypes.org.joml.Matrix3dc, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                sub(arg0: _javatypes.org.joml.Matrix3dc, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mulComponentWise(arg0: _javatypes.org.joml.Matrix3dc, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                lerp(arg0: _javatypes.org.joml.Matrix3dc, arg1: number, arg2: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateTowards(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                getEulerAnglesXYZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                getEulerAnglesZYX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                obliqueZ(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                equals(arg0: _javatypes.org.joml.Matrix3dc, arg1: number): boolean;
                reflect(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                reflect(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                reflect(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                isFinite(): boolean;
                quadraticFormProduct(arg0: number, arg1: number, arg2: number): number;
                quadraticFormProduct(arg0: _javatypes.org.joml.Vector3dc): number;
                quadraticFormProduct(arg0: _javatypes.org.joml.Vector3fc): number;
                mapXZY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapXZnY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapXnYnZ(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapXnZY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapXnZnY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapYXZ(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapYXnZ(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapYZX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapYZnX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapYnXZ(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapYnXnZ(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapYnZX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapYnZnX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapZXY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapZXnY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapZYX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapZYnX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapZnXY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapZnXnY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapZnYX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapZnYnX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnXYnZ(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnXZY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnXZnY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnXnYZ(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnXnYnZ(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnXnZY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnXnZnY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnYXZ(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnYXnZ(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnYZX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnYZnX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnYnXZ(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnYnXnZ(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnYnZX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnYnZnX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnZXY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnZXnY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnZYX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnZYnX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnZnXY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnZnXnY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnZnYX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnZnYnX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                negateX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                negateY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                negateZ(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                
            }
            namespace Matrix3dc {
                interface static {
                    
                    
                    
                }
            }
            interface Matrix4dc extends _javatypes.java.lang.Interface {
                
                properties(): number;
                m00(): number;
                m01(): number;
                m02(): number;
                m03(): number;
                m10(): number;
                m11(): number;
                m12(): number;
                m13(): number;
                m20(): number;
                m21(): number;
                m22(): number;
                m23(): number;
                m30(): number;
                m31(): number;
                m32(): number;
                m33(): number;
                mul(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mul0(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mul(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: number, arg12: number, arg13: number, arg14: number, arg15: number, arg16: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mul3x3(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mulLocal(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mulLocalAffine(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mul(arg0: _javatypes.org.joml.Matrix3x2dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mul(arg0: _javatypes.org.joml.Matrix3x2fc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mul(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mul(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mul(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mulPerspectiveAffine(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mulPerspectiveAffine(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mulAffineR(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mulAffine(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mulTranslationAffine(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mulOrthoAffine(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                fma4x3(arg0: _javatypes.org.joml.Matrix4dc, arg1: number, arg2: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                add(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                sub(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mulComponentWise(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                add4x3(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                add4x3(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                sub4x3(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mul4x3ComponentWise(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                determinant(): number;
                determinant3x3(): number;
                determinantAffine(): number;
                invert(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                invertPerspective(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                invertFrustum(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                invertOrtho(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                invertPerspectiveView(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                invertPerspectiveView(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                invertAffine(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                transpose(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                transpose3x3(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                transpose3x3(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                getTranslation(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                getScale(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                get(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                get4x3(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                get3x3(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                getUnnormalizedRotation(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getNormalizedRotation(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getUnnormalizedRotation(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                getNormalizedRotation(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                get(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Matrix4dc;
                getFloats(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getFloats(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number[], arg1: number): number[];
                get(arg0: number[]): number[];
                get(arg0: number[], arg1: number): number[];
                get(arg0: number[]): number[];
                getTransposed(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                getTransposed(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposedFloats(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposedFloats(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get4x3Transposed(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get4x3Transposed(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get4x3Transposed(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get4x3Transposed(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                transform(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transform(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transform(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformTranspose(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformTranspose(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformTranspose(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformProject(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformProject(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformProject(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformProject(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformProject(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformProject(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformProject(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformProject(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPosition(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPosition(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPosition(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformDirection(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformDirection(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformDirection(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformDirection(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformDirection(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformDirection(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformAffine(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformAffine(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformAffine(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                scale(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                scale(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                scale(arg0: number, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                scaleXY(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                scaleLocal(arg0: number, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                scaleLocal(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                scaleAroundLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                scaleAroundLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotate(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateTranslation(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateAffine(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateAroundAffine(arg0: _javatypes.org.joml.Quaterniondc, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateAround(arg0: _javatypes.org.joml.Quaterniondc, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateLocalX(arg0: number, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateLocalY(arg0: number, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateLocalZ(arg0: number, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateAroundLocal(arg0: _javatypes.org.joml.Quaterniondc, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                translate(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                translate(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                translate(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                translateLocal(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                translateLocal(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                translateLocal(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateX(arg0: number, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateY(arg0: number, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateZ(arg0: number, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateTowardsXY(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateXYZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateAffineXYZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateZYX(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateAffineZYX(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateYXZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateAffineYXZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotate(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotate(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateAffine(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateTranslation(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateTranslation(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateLocal(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateAffine(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateLocal(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotate(arg0: _javatypes.org.joml.AxisAngle4f, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotate(arg0: _javatypes.org.joml.AxisAngle4d, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                getRow(arg0: number, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                getRow(arg0: number, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                getColumn(arg0: number, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                getColumn(arg0: number, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                get(arg0: number, arg1: number): number;
                getRowColumn(arg0: number, arg1: number): number;
                normal(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                normal(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                cofactor3x3(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                cofactor3x3(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                normalize3x3(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                normalize3x3(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                unproject(arg0: number, arg1: number, arg2: number, arg3: number[], arg4: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                unproject(arg0: number, arg1: number, arg2: number, arg3: number[], arg4: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                unproject(arg0: _javatypes.org.joml.Vector3dc, arg1: number[], arg2: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                unproject(arg0: _javatypes.org.joml.Vector3dc, arg1: number[], arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                unprojectRay(arg0: number, arg1: number, arg2: number[], arg3: _javatypes.org.joml.Vector3d, arg4: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Matrix4d;
                unprojectRay(arg0: _javatypes.org.joml.Vector2dc, arg1: number[], arg2: _javatypes.org.joml.Vector3d, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Matrix4d;
                unprojectInv(arg0: _javatypes.org.joml.Vector3dc, arg1: number[], arg2: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                unprojectInv(arg0: number, arg1: number, arg2: number, arg3: number[], arg4: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                unprojectInv(arg0: _javatypes.org.joml.Vector3dc, arg1: number[], arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                unprojectInv(arg0: number, arg1: number, arg2: number, arg3: number[], arg4: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                unprojectInvRay(arg0: _javatypes.org.joml.Vector2dc, arg1: number[], arg2: _javatypes.org.joml.Vector3d, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Matrix4d;
                unprojectInvRay(arg0: number, arg1: number, arg2: number[], arg3: _javatypes.org.joml.Vector3d, arg4: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Matrix4d;
                project(arg0: number, arg1: number, arg2: number, arg3: number[], arg4: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                project(arg0: number, arg1: number, arg2: number, arg3: number[], arg4: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                project(arg0: _javatypes.org.joml.Vector3dc, arg1: number[], arg2: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                project(arg0: _javatypes.org.joml.Vector3dc, arg1: number[], arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                reflect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                reflect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                reflect(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                reflect(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                ortho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                ortho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                orthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                orthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                orthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                orthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                orthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                orthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                ortho2D(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                ortho2DLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                lookAlong(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                lookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                lookAt(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                lookAt(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                lookAtPerspective(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                lookAtLH(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                lookAtLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                lookAtPerspectiveLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                tile(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                perspective(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                perspective(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                perspectiveRect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                perspectiveRect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                perspectiveOffCenter(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                perspectiveOffCenter(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                perspectiveOffCenterFov(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                perspectiveOffCenterFov(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                perspectiveOffCenterFovLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                perspectiveOffCenterFovLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                perspectiveLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                perspectiveLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                frustum(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                frustum(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                frustumLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                frustumLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                frustumPlane(arg0: number, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                frustumCorner(arg0: number, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                perspectiveOrigin(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                perspectiveInvOrigin(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                perspectiveFov(): number;
                perspectiveNear(): number;
                perspectiveFar(): number;
                frustumRayDir(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                positiveZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normalizedPositiveZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                positiveX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normalizedPositiveX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                positiveY(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normalizedPositiveY(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                originAffine(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                origin(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                shadow(arg0: _javatypes.org.joml.Vector4dc, arg1: number, arg2: number, arg3: number, arg4: number, arg5: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                shadow(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                shadow(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Matrix4dc, arg2: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                shadow(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4dc, arg5: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                pick(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                isAffine(): boolean;
                arcball(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                arcball(arg0: number, arg1: _javatypes.org.joml.Vector3dc, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                projectedGridRange(arg0: _javatypes.org.joml.Matrix4dc, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                perspectiveFrustumSlice(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                orthoCrop(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                transformAab(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Vector3d, arg7: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Matrix4d;
                transformAab(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3d, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Matrix4d;
                lerp(arg0: _javatypes.org.joml.Matrix4dc, arg1: number, arg2: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateTowards(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                getEulerAnglesXYZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                getEulerAnglesZYX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                testPoint(arg0: number, arg1: number, arg2: number): boolean;
                testSphere(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                testAab(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
                obliqueZ(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                withLookAtUp(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                withLookAtUp(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapXZY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapXZnY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapXnYnZ(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapXnZY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapXnZnY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapYXZ(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapYXnZ(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapYZX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapYZnX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapYnXZ(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapYnXnZ(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapYnZX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapYnZnX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapZXY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapZXnY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapZYX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapZYnX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapZnXY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapZnXnY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapZnYX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapZnYnX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnXYnZ(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnXZY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnXZnY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnXnYZ(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnXnYnZ(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnXnZY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnXnZnY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnYXZ(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnYXnZ(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnYZX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnYZnX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnYnXZ(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnYnXnZ(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnYnZX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnYnZnX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnZXY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnZXnY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnZYX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnZYnX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnZnXY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnZnXnY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnZnYX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnZnYnX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                negateX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                negateY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                negateZ(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                equals(arg0: _javatypes.org.joml.Matrix4dc, arg1: number): boolean;
                isFinite(): boolean;
                
            }
            namespace Matrix4dc {
                interface static {
                    
                    readonly PLANE_NX: number;
                    readonly PLANE_PX: number;
                    readonly PLANE_NY: number;
                    readonly PLANE_PY: number;
                    readonly PLANE_NZ: number;
                    readonly PLANE_PZ: number;
                    readonly CORNER_NXNYNZ: number;
                    readonly CORNER_PXNYNZ: number;
                    readonly CORNER_PXPYNZ: number;
                    readonly CORNER_NXPYNZ: number;
                    readonly CORNER_PXNYPZ: number;
                    readonly CORNER_NXNYPZ: number;
                    readonly CORNER_NXPYPZ: number;
                    readonly CORNER_PXPYPZ: number;
                    readonly PROPERTY_PERSPECTIVE: number;
                    readonly PROPERTY_AFFINE: number;
                    readonly PROPERTY_IDENTITY: number;
                    readonly PROPERTY_TRANSLATION: number;
                    readonly PROPERTY_ORTHONORMAL: number;
                    
                    
                }
            }
            interface Matrix4fc extends _javatypes.java.lang.Interface {
                
                properties(): number;
                m00(): number;
                m01(): number;
                m02(): number;
                m03(): number;
                m10(): number;
                m11(): number;
                m12(): number;
                m13(): number;
                m20(): number;
                m21(): number;
                m22(): number;
                m23(): number;
                m30(): number;
                m31(): number;
                m32(): number;
                m33(): number;
                mul(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mul0(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mul(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: number, arg12: number, arg13: number, arg14: number, arg15: number, arg16: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mul3x3(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mulLocal(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mulLocalAffine(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mul(arg0: _javatypes.org.joml.Matrix3x2fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mul(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mulPerspectiveAffine(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mulPerspectiveAffine(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mulAffineR(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mulAffine(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mulTranslationAffine(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mulOrthoAffine(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                fma4x3(arg0: _javatypes.org.joml.Matrix4fc, arg1: number, arg2: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                add(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                sub(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mulComponentWise(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                add4x3(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                sub4x3(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mul4x3ComponentWise(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                determinant(): number;
                determinant3x3(): number;
                determinantAffine(): number;
                invert(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                invertPerspective(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                invertFrustum(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                invertOrtho(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                invertPerspectiveView(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                invertPerspectiveView(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                invertAffine(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                transpose(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                transpose3x3(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                transpose3x3(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                getTranslation(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                getScale(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                get(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                get4x3(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                get(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                get3x3(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                get3x3(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                getRotation(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.AxisAngle4f;
                getRotation(arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.AxisAngle4d;
                getUnnormalizedRotation(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getNormalizedRotation(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getUnnormalizedRotation(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                getNormalizedRotation(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                get(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get4x3(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get4x3(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get4x3(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get4x3(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get3x4(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get3x4(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get3x4(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get3x4(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get4x3Transposed(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get4x3Transposed(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get4x3Transposed(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get4x3Transposed(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Matrix4fc;
                get(arg0: number[], arg1: number): number[];
                get(arg0: number[]): number[];
                transform(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transform(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transform(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformTranspose(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformTranspose(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformTranspose(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformProject(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformProject(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformProject(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformProject(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformProject(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformProject(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformProject(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformProject(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPosition(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPosition(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPosition(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformDirection(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformDirection(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformDirection(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformAffine(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformAffine(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformAffine(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                scale(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                scale(arg0: number, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                scaleXY(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                scale(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                scaleLocal(arg0: number, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                scaleLocal(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                scaleAroundLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                scaleAroundLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateX(arg0: number, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateY(arg0: number, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateZ(arg0: number, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateTowardsXY(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateXYZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateAffineXYZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateZYX(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateAffineZYX(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateYXZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateAffineYXZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotate(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateTranslation(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateAffine(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateLocalX(arg0: number, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateLocalY(arg0: number, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateLocalZ(arg0: number, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                translate(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                translate(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                translateLocal(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                translateLocal(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                ortho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                ortho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                orthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                orthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                orthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                orthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                orthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                orthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                ortho2D(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                ortho2DLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                lookAlong(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                lookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                lookAt(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                lookAt(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                lookAtPerspective(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                lookAtLH(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                lookAtLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                lookAtPerspectiveLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                tile(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                perspective(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                perspective(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                perspectiveRect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                perspectiveRect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                perspectiveOffCenter(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                perspectiveOffCenter(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                perspectiveOffCenterFov(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                perspectiveOffCenterFov(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                perspectiveOffCenterFovLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                perspectiveOffCenterFovLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                perspectiveLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                perspectiveLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                frustum(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                frustum(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                frustumLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                frustumLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotate(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateAffine(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateTranslation(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateAroundAffine(arg0: _javatypes.org.joml.Quaternionfc, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateAround(arg0: _javatypes.org.joml.Quaternionfc, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateLocal(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateAroundLocal(arg0: _javatypes.org.joml.Quaternionfc, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotate(arg0: _javatypes.org.joml.AxisAngle4f, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                unproject(arg0: number, arg1: number, arg2: number, arg3: number[], arg4: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                unproject(arg0: number, arg1: number, arg2: number, arg3: number[], arg4: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                unproject(arg0: _javatypes.org.joml.Vector3fc, arg1: number[], arg2: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                unproject(arg0: _javatypes.org.joml.Vector3fc, arg1: number[], arg2: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                unprojectRay(arg0: number, arg1: number, arg2: number[], arg3: _javatypes.org.joml.Vector3f, arg4: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix4f;
                unprojectRay(arg0: _javatypes.org.joml.Vector2fc, arg1: number[], arg2: _javatypes.org.joml.Vector3f, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix4f;
                unprojectInv(arg0: _javatypes.org.joml.Vector3fc, arg1: number[], arg2: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                unprojectInv(arg0: number, arg1: number, arg2: number, arg3: number[], arg4: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                unprojectInvRay(arg0: _javatypes.org.joml.Vector2fc, arg1: number[], arg2: _javatypes.org.joml.Vector3f, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix4f;
                unprojectInvRay(arg0: number, arg1: number, arg2: number[], arg3: _javatypes.org.joml.Vector3f, arg4: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix4f;
                unprojectInv(arg0: _javatypes.org.joml.Vector3fc, arg1: number[], arg2: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                unprojectInv(arg0: number, arg1: number, arg2: number, arg3: number[], arg4: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                project(arg0: number, arg1: number, arg2: number, arg3: number[], arg4: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                project(arg0: number, arg1: number, arg2: number, arg3: number[], arg4: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                project(arg0: _javatypes.org.joml.Vector3fc, arg1: number[], arg2: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                project(arg0: _javatypes.org.joml.Vector3fc, arg1: number[], arg2: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                reflect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                reflect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                reflect(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                reflect(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                getRow(arg0: number, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                getRow(arg0: number, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                getColumn(arg0: number, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                getColumn(arg0: number, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                get(arg0: number, arg1: number): number;
                getRowColumn(arg0: number, arg1: number): number;
                normal(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                normal(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                cofactor3x3(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                cofactor3x3(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                normalize3x3(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                normalize3x3(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                frustumPlane(arg0: number, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                frustumCorner(arg0: number, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                perspectiveOrigin(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                perspectiveInvOrigin(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                perspectiveFov(): number;
                perspectiveNear(): number;
                perspectiveFar(): number;
                frustumRayDir(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                positiveZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normalizedPositiveZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                positiveX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normalizedPositiveX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                positiveY(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normalizedPositiveY(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                originAffine(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                origin(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                shadow(arg0: _javatypes.org.joml.Vector4f, arg1: number, arg2: number, arg3: number, arg4: number, arg5: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                shadow(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                shadow(arg0: _javatypes.org.joml.Vector4f, arg1: _javatypes.org.joml.Matrix4fc, arg2: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                shadow(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4fc, arg5: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                pick(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                isAffine(): boolean;
                arcball(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                arcball(arg0: number, arg1: _javatypes.org.joml.Vector3fc, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                frustumAabb(arg0: _javatypes.org.joml.Vector3f, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix4f;
                projectedGridRange(arg0: _javatypes.org.joml.Matrix4fc, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                perspectiveFrustumSlice(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                orthoCrop(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                transformAab(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Vector3f, arg7: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix4f;
                transformAab(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3f, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix4f;
                lerp(arg0: _javatypes.org.joml.Matrix4fc, arg1: number, arg2: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateTowards(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                getEulerAnglesXYZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                getEulerAnglesZYX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                testPoint(arg0: number, arg1: number, arg2: number): boolean;
                testSphere(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                testAab(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
                obliqueZ(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                withLookAtUp(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                withLookAtUp(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapXZY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapXZnY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapXnYnZ(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapXnZY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapXnZnY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapYXZ(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapYXnZ(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapYZX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapYZnX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapYnXZ(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapYnXnZ(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapYnZX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapYnZnX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapZXY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapZXnY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapZYX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapZYnX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapZnXY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapZnXnY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapZnYX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapZnYnX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnXYnZ(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnXZY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnXZnY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnXnYZ(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnXnYnZ(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnXnZY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnXnZnY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnYXZ(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnYXnZ(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnYZX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnYZnX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnYnXZ(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnYnXnZ(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnYnZX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnYnZnX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnZXY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnZXnY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnZYX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnZYnX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnZnXY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnZnXnY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnZnYX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnZnYnX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                negateX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                negateY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                negateZ(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                equals(arg0: _javatypes.org.joml.Matrix4fc, arg1: number): boolean;
                isFinite(): boolean;
                
            }
            namespace Matrix4fc {
                interface static {
                    
                    readonly PLANE_NX: number;
                    readonly PLANE_PX: number;
                    readonly PLANE_NY: number;
                    readonly PLANE_PY: number;
                    readonly PLANE_NZ: number;
                    readonly PLANE_PZ: number;
                    readonly CORNER_NXNYNZ: number;
                    readonly CORNER_PXNYNZ: number;
                    readonly CORNER_PXPYNZ: number;
                    readonly CORNER_NXPYNZ: number;
                    readonly CORNER_PXNYPZ: number;
                    readonly CORNER_NXNYPZ: number;
                    readonly CORNER_NXPYPZ: number;
                    readonly CORNER_PXPYPZ: number;
                    readonly PROPERTY_PERSPECTIVE: number;
                    readonly PROPERTY_AFFINE: number;
                    readonly PROPERTY_IDENTITY: number;
                    readonly PROPERTY_TRANSLATION: number;
                    readonly PROPERTY_ORTHONORMAL: number;
                    
                    
                }
            }
            interface Vector3d extends any, _javatypes.java.io.Externalizable, _javatypes.java.lang.Cloneable, _javatypes.org.joml.Vector3dc {
                x: number;
                y: number;
                z: number;
                
                x(): number;
                y(): number;
                z(): number;
                set(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Vector3d;
                set(arg0: _javatypes.org.joml.Vector3ic): _javatypes.org.joml.Vector3d;
                set(arg0: _javatypes.org.joml.Vector2dc, arg1: number): _javatypes.org.joml.Vector3d;
                set(arg0: _javatypes.org.joml.Vector2ic, arg1: number): _javatypes.org.joml.Vector3d;
                set(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Vector3d;
                set(arg0: _javatypes.org.joml.Vector2fc, arg1: number): _javatypes.org.joml.Vector3d;
                set(arg0: number): _javatypes.org.joml.Vector3d;
                set(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector3d;
                set(arg0: number[]): _javatypes.org.joml.Vector3d;
                set(arg0: number[]): _javatypes.org.joml.Vector3d;
                set(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector3d;
                set(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector3d;
                set(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Vector3d;
                set(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Vector3d;
                setFromAddress(arg0: number): _javatypes.org.joml.Vector3d;
                setComponent(arg0: number, arg1: number): _javatypes.org.joml.Vector3d;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                getf(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getf(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Vector3dc;
                sub(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Vector3d;
                sub(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                sub(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Vector3d;
                sub(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                sub(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector3d;
                sub(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                add(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Vector3d;
                add(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                add(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Vector3d;
                add(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                add(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector3d;
                add(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                fma(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Vector3d;
                fma(arg0: number, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Vector3d;
                fma(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Vector3d;
                fma(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                fma(arg0: number, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Vector3d;
                fma(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                fma(arg0: number, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                fma(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                fma(arg0: number, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulAdd(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Vector3d;
                mulAdd(arg0: number, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Vector3d;
                mulAdd(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulAdd(arg0: number, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulAdd(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mul(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Vector3d;
                mul(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Vector3d;
                mul(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mul(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                div(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                div(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Vector3d;
                div(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                div(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulProject(arg0: _javatypes.org.joml.Matrix4dc, arg1: number, arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulProject(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulProject(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Vector3d;
                mulProject(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulProject(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Vector3d;
                mul(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Vector3d;
                mul(arg0: _javatypes.org.joml.Matrix3dc): _javatypes.org.joml.Vector3d;
                mul(arg0: _javatypes.org.joml.Matrix3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mul(arg0: _javatypes.org.joml.Matrix3dc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mul(arg0: _javatypes.org.joml.Matrix3fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mul(arg0: _javatypes.org.joml.Matrix3x2dc): _javatypes.org.joml.Vector3d;
                mul(arg0: _javatypes.org.joml.Matrix3x2dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mul(arg0: _javatypes.org.joml.Matrix3x2fc): _javatypes.org.joml.Vector3d;
                mul(arg0: _javatypes.org.joml.Matrix3x2fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulTranspose(arg0: _javatypes.org.joml.Matrix3dc): _javatypes.org.joml.Vector3d;
                mulTranspose(arg0: _javatypes.org.joml.Matrix3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulTranspose(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Vector3d;
                mulTranspose(arg0: _javatypes.org.joml.Matrix3fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulPosition(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Vector3d;
                mulPosition(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Vector3d;
                mulPosition(arg0: _javatypes.org.joml.Matrix4x3dc): _javatypes.org.joml.Vector3d;
                mulPosition(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Vector3d;
                mulPosition(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulPosition(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulPosition(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulPosition(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulTransposePosition(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Vector3d;
                mulTransposePosition(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulTransposePosition(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Vector3d;
                mulTransposePosition(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulPositionW(arg0: _javatypes.org.joml.Matrix4fc): number;
                mulPositionW(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector3d): number;
                mulPositionW(arg0: _javatypes.org.joml.Matrix4dc): number;
                mulPositionW(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Vector3d): number;
                mulDirection(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Vector3d;
                mulDirection(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Vector3d;
                mulDirection(arg0: _javatypes.org.joml.Matrix4x3dc): _javatypes.org.joml.Vector3d;
                mulDirection(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Vector3d;
                mulDirection(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulDirection(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulDirection(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulDirection(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulTransposeDirection(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Vector3d;
                mulTransposeDirection(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulTransposeDirection(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Vector3d;
                mulTransposeDirection(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mul(arg0: number): _javatypes.org.joml.Vector3d;
                mul(arg0: number, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mul(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector3d;
                mul(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                rotate(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Vector3d;
                rotate(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                rotationTo(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotationTo(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotateAxis(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Vector3d;
                rotateAxis(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                rotateX(arg0: number): _javatypes.org.joml.Vector3d;
                rotateX(arg0: number, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                rotateY(arg0: number): _javatypes.org.joml.Vector3d;
                rotateY(arg0: number, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                rotateZ(arg0: number): _javatypes.org.joml.Vector3d;
                rotateZ(arg0: number, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                div(arg0: number): _javatypes.org.joml.Vector3d;
                div(arg0: number, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                div(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector3d;
                div(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                lengthSquared(): number;
                length(): number;
                normalize(): _javatypes.org.joml.Vector3d;
                normalize(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normalize(arg0: number): _javatypes.org.joml.Vector3d;
                normalize(arg0: number, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                cross(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Vector3d;
                cross(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector3d;
                cross(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                cross(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                distance(arg0: _javatypes.org.joml.Vector3dc): number;
                distance(arg0: number, arg1: number, arg2: number): number;
                distanceSquared(arg0: _javatypes.org.joml.Vector3dc): number;
                distanceSquared(arg0: number, arg1: number, arg2: number): number;
                dot(arg0: _javatypes.org.joml.Vector3dc): number;
                dot(arg0: number, arg1: number, arg2: number): number;
                angleCos(arg0: _javatypes.org.joml.Vector3dc): number;
                angle(arg0: _javatypes.org.joml.Vector3dc): number;
                angleSigned(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc): number;
                angleSigned(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
                min(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Vector3d;
                min(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                max(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Vector3d;
                max(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                zero(): _javatypes.org.joml.Vector3d;
                toString(): string;
                toString(arg0: _javatypes.java.text.NumberFormat): string;
                writeExternal(arg0: _javatypes.java.io.ObjectOutput): void;
                readExternal(arg0: _javatypes.java.io.ObjectInput): void;
                negate(): _javatypes.org.joml.Vector3d;
                negate(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                absolute(): _javatypes.org.joml.Vector3d;
                absolute(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                hashCode(): number;
                equals(arg0: any): boolean;
                equals(arg0: _javatypes.org.joml.Vector3dc, arg1: number): boolean;
                equals(arg0: number, arg1: number, arg2: number): boolean;
                reflect(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Vector3d;
                reflect(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector3d;
                reflect(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                reflect(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                half(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Vector3d;
                half(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector3d;
                half(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                half(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                smoothStep(arg0: _javatypes.org.joml.Vector3dc, arg1: number, arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                hermite(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc, arg3: number, arg4: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                lerp(arg0: _javatypes.org.joml.Vector3dc, arg1: number): _javatypes.org.joml.Vector3d;
                lerp(arg0: _javatypes.org.joml.Vector3dc, arg1: number, arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                get(arg0: number): number;
                get(arg0: number, arg1: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                get(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                get(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                maxComponent(): number;
                minComponent(): number;
                orthogonalize(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                orthogonalize(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Vector3d;
                orthogonalizeUnit(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                orthogonalizeUnit(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Vector3d;
                floor(): _javatypes.org.joml.Vector3d;
                floor(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                ceil(): _javatypes.org.joml.Vector3d;
                ceil(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                round(): _javatypes.org.joml.Vector3d;
                round(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                isFinite(): boolean;
                clone(): any;
                
            }
            namespace Vector3d {
                interface static {
                    new (): _javatypes.org.joml.Vector3d;
                    new (arg0: number): _javatypes.org.joml.Vector3d;
                    new (arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector3d;
                    new (arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Vector3d;
                    new (arg0: _javatypes.org.joml.Vector3ic): _javatypes.org.joml.Vector3d;
                    new (arg0: _javatypes.org.joml.Vector2fc, arg1: number): _javatypes.org.joml.Vector3d;
                    new (arg0: _javatypes.org.joml.Vector2ic, arg1: number): _javatypes.org.joml.Vector3d;
                    new (arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Vector3d;
                    new (arg0: _javatypes.org.joml.Vector2dc, arg1: number): _javatypes.org.joml.Vector3d;
                    new (arg0: number[]): _javatypes.org.joml.Vector3d;
                    new (arg0: number[]): _javatypes.org.joml.Vector3d;
                    new (arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector3d;
                    new (arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector3d;
                    new (arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Vector3d;
                    new (arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Vector3d;
                    
                    
                    lengthSquared(arg0: number, arg1: number, arg2: number): number;
                    length(arg0: number, arg1: number, arg2: number): number;
                    distance(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
                    distanceSquared(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
                    
                }
            }
            interface Vector3i extends any, _javatypes.java.io.Externalizable, _javatypes.java.lang.Cloneable, _javatypes.org.joml.Vector3ic {
                x: number;
                y: number;
                z: number;
                
                x(): number;
                y(): number;
                z(): number;
                set(arg0: _javatypes.org.joml.Vector3ic): _javatypes.org.joml.Vector3i;
                set(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Vector3i;
                set(arg0: _javatypes.org.joml.Vector3dc, arg1: number): _javatypes.org.joml.Vector3i;
                set(arg0: _javatypes.org.joml.Vector3fc, arg1: number): _javatypes.org.joml.Vector3i;
                set(arg0: _javatypes.org.joml.Vector2ic, arg1: number): _javatypes.org.joml.Vector3i;
                set(arg0: number): _javatypes.org.joml.Vector3i;
                set(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector3i;
                set(arg0: number[]): _javatypes.org.joml.Vector3i;
                set(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector3i;
                set(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector3i;
                set(arg0: _javatypes.java.nio.IntBuffer): _javatypes.org.joml.Vector3i;
                set(arg0: number, arg1: _javatypes.java.nio.IntBuffer): _javatypes.org.joml.Vector3i;
                setFromAddress(arg0: number): _javatypes.org.joml.Vector3i;
                get(arg0: number): number;
                setComponent(arg0: number, arg1: number): _javatypes.org.joml.Vector3i;
                get(arg0: _javatypes.java.nio.IntBuffer): _javatypes.java.nio.IntBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.IntBuffer): _javatypes.java.nio.IntBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Vector3ic;
                sub(arg0: _javatypes.org.joml.Vector3ic): _javatypes.org.joml.Vector3i;
                sub(arg0: _javatypes.org.joml.Vector3ic, arg1: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                sub(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector3i;
                sub(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                add(arg0: _javatypes.org.joml.Vector3ic): _javatypes.org.joml.Vector3i;
                add(arg0: _javatypes.org.joml.Vector3ic, arg1: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                add(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector3i;
                add(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                mul(arg0: number): _javatypes.org.joml.Vector3i;
                mul(arg0: number, arg1: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                mul(arg0: _javatypes.org.joml.Vector3ic): _javatypes.org.joml.Vector3i;
                mul(arg0: _javatypes.org.joml.Vector3ic, arg1: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                mul(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector3i;
                mul(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                div(arg0: number): _javatypes.org.joml.Vector3i;
                div(arg0: number, arg1: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                div(arg0: number): _javatypes.org.joml.Vector3i;
                div(arg0: number, arg1: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                lengthSquared(): number;
                length(): number;
                distance(arg0: _javatypes.org.joml.Vector3ic): number;
                distance(arg0: number, arg1: number, arg2: number): number;
                gridDistance(arg0: _javatypes.org.joml.Vector3ic): number;
                gridDistance(arg0: number, arg1: number, arg2: number): number;
                distanceSquared(arg0: _javatypes.org.joml.Vector3ic): number;
                distanceSquared(arg0: number, arg1: number, arg2: number): number;
                zero(): _javatypes.org.joml.Vector3i;
                toString(): string;
                toString(arg0: _javatypes.java.text.NumberFormat): string;
                writeExternal(arg0: _javatypes.java.io.ObjectOutput): void;
                readExternal(arg0: _javatypes.java.io.ObjectInput): void;
                negate(): _javatypes.org.joml.Vector3i;
                negate(arg0: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                min(arg0: _javatypes.org.joml.Vector3ic): _javatypes.org.joml.Vector3i;
                min(arg0: _javatypes.org.joml.Vector3ic, arg1: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                max(arg0: _javatypes.org.joml.Vector3ic): _javatypes.org.joml.Vector3i;
                max(arg0: _javatypes.org.joml.Vector3ic, arg1: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                maxComponent(): number;
                minComponent(): number;
                absolute(): _javatypes.org.joml.Vector3i;
                absolute(arg0: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                hashCode(): number;
                equals(arg0: any): boolean;
                equals(arg0: number, arg1: number, arg2: number): boolean;
                clone(): any;
                
            }
            namespace Vector3i {
                interface static {
                    new (): _javatypes.org.joml.Vector3i;
                    new (arg0: number): _javatypes.org.joml.Vector3i;
                    new (arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector3i;
                    new (arg0: _javatypes.org.joml.Vector3ic): _javatypes.org.joml.Vector3i;
                    new (arg0: _javatypes.org.joml.Vector2ic, arg1: number): _javatypes.org.joml.Vector3i;
                    new (arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Vector3i;
                    new (arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Vector3i;
                    new (arg0: _javatypes.org.joml.Vector2fc, arg1: number, arg2: number): _javatypes.org.joml.Vector3i;
                    new (arg0: _javatypes.org.joml.Vector3fc, arg1: number): _javatypes.org.joml.Vector3i;
                    new (arg0: _javatypes.org.joml.Vector2dc, arg1: number, arg2: number): _javatypes.org.joml.Vector3i;
                    new (arg0: _javatypes.org.joml.Vector3dc, arg1: number): _javatypes.org.joml.Vector3i;
                    new (arg0: number[]): _javatypes.org.joml.Vector3i;
                    new (arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector3i;
                    new (arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector3i;
                    new (arg0: _javatypes.java.nio.IntBuffer): _javatypes.org.joml.Vector3i;
                    new (arg0: number, arg1: _javatypes.java.nio.IntBuffer): _javatypes.org.joml.Vector3i;
                    
                    
                    lengthSquared(arg0: number, arg1: number, arg2: number): number;
                    length(arg0: number, arg1: number, arg2: number): number;
                    distance(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
                    distanceSquared(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
                    
                }
            }
            interface Matrix3x2fc extends _javatypes.java.lang.Interface {
                
                m00(): number;
                m01(): number;
                m10(): number;
                m11(): number;
                m20(): number;
                m21(): number;
                mul(arg0: _javatypes.org.joml.Matrix3x2fc, arg1: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                mulLocal(arg0: _javatypes.org.joml.Matrix3x2fc, arg1: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                determinant(): number;
                invert(arg0: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                translate(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                translate(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                translateLocal(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                translateLocal(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                get(arg0: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                get(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get3x3(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get3x3(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get3x3(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get3x3(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get4x4(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get4x4(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get4x4(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get4x4(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Matrix3x2fc;
                get(arg0: number[], arg1: number): number[];
                get(arg0: number[]): number[];
                get3x3(arg0: number[], arg1: number): number[];
                get3x3(arg0: number[]): number[];
                get4x4(arg0: number[], arg1: number): number[];
                get4x4(arg0: number[]): number[];
                scale(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                scale(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                scaleAroundLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                scaleAroundLocal(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                scale(arg0: number, arg1: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                scaleLocal(arg0: number, arg1: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                scaleLocal(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                transform(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transform(arg0: _javatypes.org.joml.Vector3f, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transform(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPosition(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                transformPosition(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                transformPosition(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                transformDirection(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                transformDirection(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                transformDirection(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                rotate(arg0: number, arg1: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                rotateLocal(arg0: number, arg1: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                rotateAbout(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                rotateTo(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2fc, arg2: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                view(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                origin(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                viewArea(arg0: number[]): number[];
                positiveX(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                normalizedPositiveX(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                positiveY(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                normalizedPositiveY(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                unproject(arg0: number, arg1: number, arg2: number[], arg3: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                unprojectInv(arg0: number, arg1: number, arg2: number[], arg3: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                testPoint(arg0: number, arg1: number): boolean;
                testCircle(arg0: number, arg1: number, arg2: number): boolean;
                testAar(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                equals(arg0: _javatypes.org.joml.Matrix3x2fc, arg1: number): boolean;
                isFinite(): boolean;
                
            }
            namespace Matrix3x2fc {
                interface static {
                    
                    
                    
                }
            }
            interface Vector3fc extends _javatypes.java.lang.Interface {
                
                x(): number;
                y(): number;
                z(): number;
                get(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Vector3fc;
                sub(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                sub(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                add(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                add(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                fma(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                fma(arg0: number, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mulAdd(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mulAdd(arg0: number, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mul(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                div(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mulProject(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mulProject(arg0: _javatypes.org.joml.Matrix4fc, arg1: number, arg2: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mul(arg0: _javatypes.org.joml.Matrix3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mul(arg0: _javatypes.org.joml.Matrix3dc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mul(arg0: _javatypes.org.joml.Matrix3x2fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mulTranspose(arg0: _javatypes.org.joml.Matrix3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mulPosition(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mulPosition(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mulTransposePosition(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mulPositionW(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector3f): number;
                mulDirection(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mulDirection(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mulDirection(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mulTransposeDirection(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mul(arg0: number, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mul(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                div(arg0: number, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                div(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                rotate(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                rotationTo(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotationTo(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateAxis(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                rotateX(arg0: number, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                rotateY(arg0: number, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                rotateZ(arg0: number, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                lengthSquared(): number;
                length(): number;
                normalize(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normalize(arg0: number, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                cross(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                cross(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                distance(arg0: _javatypes.org.joml.Vector3fc): number;
                distance(arg0: number, arg1: number, arg2: number): number;
                distanceSquared(arg0: _javatypes.org.joml.Vector3fc): number;
                distanceSquared(arg0: number, arg1: number, arg2: number): number;
                dot(arg0: _javatypes.org.joml.Vector3fc): number;
                dot(arg0: number, arg1: number, arg2: number): number;
                angleCos(arg0: _javatypes.org.joml.Vector3fc): number;
                angle(arg0: _javatypes.org.joml.Vector3fc): number;
                angleSigned(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc): number;
                angleSigned(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): number;
                min(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                max(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                negate(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                absolute(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                reflect(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                reflect(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                half(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                half(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                smoothStep(arg0: _javatypes.org.joml.Vector3fc, arg1: number, arg2: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                hermite(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc, arg3: number, arg4: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                lerp(arg0: _javatypes.org.joml.Vector3fc, arg1: number, arg2: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                get(arg0: number): number;
                get(arg0: number, arg1: _javatypes.org.joml.Vector3i): _javatypes.org.joml.Vector3i;
                get(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                get(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                maxComponent(): number;
                minComponent(): number;
                orthogonalize(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                orthogonalizeUnit(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                floor(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                ceil(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                round(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                isFinite(): boolean;
                equals(arg0: _javatypes.org.joml.Vector3fc, arg1: number): boolean;
                equals(arg0: number, arg1: number, arg2: number): boolean;
                
            }
            namespace Vector3fc {
                interface static {
                    
                    
                    
                }
            }
            interface Quaternionfc extends _javatypes.java.lang.Interface {
                
                x(): number;
                y(): number;
                z(): number;
                w(): number;
                normalize(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                add(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                add(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                angle(): number;
                get(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                get(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                get(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                get(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                get(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                get(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                get(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.AxisAngle4f;
                get(arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.AxisAngle4d;
                get(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                get(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getAsMatrix3f(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getAsMatrix3f(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getAsMatrix4f(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getAsMatrix4f(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getAsMatrix4x3f(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getAsMatrix4x3f(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                mul(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                mul(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                mul(arg0: number, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                premul(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                premul(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                transform(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformInverse(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformUnit(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPositiveX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPositiveX(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnitPositiveX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformUnitPositiveX(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformPositiveY(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPositiveY(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnitPositiveY(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformUnitPositiveY(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformPositiveZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPositiveZ(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnitPositiveZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformUnitPositiveZ(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transform(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformInverse(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transform(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformInverse(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transform(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transform(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverse(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformInverse(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformUnit(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverseUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformInverseUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transform(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformInverse(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transform(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformInverse(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnit(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnit(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformInverseUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transform(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverse(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPositiveX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPositiveX(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnitPositiveX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformUnitPositiveX(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformPositiveY(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPositiveY(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnitPositiveY(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformUnitPositiveY(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformPositiveZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPositiveZ(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnitPositiveZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformUnitPositiveZ(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transform(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformInverse(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transform(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverse(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transform(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverse(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transform(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformInverse(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transform(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformInverse(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnit(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnit(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverseUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformUnit(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformInverseUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                invert(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                div(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                conjugate(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateXYZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateZYX(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateYXZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getEulerAnglesXYZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                getEulerAnglesZYX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                getEulerAnglesZXY(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                getEulerAnglesYXZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                lengthSquared(): number;
                slerp(arg0: _javatypes.org.joml.Quaternionfc, arg1: number, arg2: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                scale(arg0: number, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                integrate(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                nlerp(arg0: _javatypes.org.joml.Quaternionfc, arg1: number, arg2: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                nlerpIterative(arg0: _javatypes.org.joml.Quaternionfc, arg1: number, arg2: number, arg3: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                lookAlong(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                lookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateTo(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateX(arg0: number, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateY(arg0: number, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateZ(arg0: number, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateLocalX(arg0: number, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateLocalY(arg0: number, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateLocalZ(arg0: number, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateAxis(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                rotateAxis(arg0: number, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                difference(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                positiveX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normalizedPositiveX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                positiveY(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normalizedPositiveY(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                positiveZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normalizedPositiveZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                conjugateBy(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                isFinite(): boolean;
                equals(arg0: _javatypes.org.joml.Quaternionfc, arg1: number): boolean;
                equals(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                
            }
            namespace Quaternionfc {
                interface static {
                    
                    
                    
                }
            }
            interface Vector2f extends any, _javatypes.java.io.Externalizable, _javatypes.java.lang.Cloneable, _javatypes.org.joml.Vector2fc {
                x: number;
                y: number;
                
                x(): number;
                y(): number;
                set(arg0: number): _javatypes.org.joml.Vector2f;
                set(arg0: number, arg1: number): _javatypes.org.joml.Vector2f;
                set(arg0: number): _javatypes.org.joml.Vector2f;
                set(arg0: number, arg1: number): _javatypes.org.joml.Vector2f;
                set(arg0: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Vector2f;
                set(arg0: _javatypes.org.joml.Vector2ic): _javatypes.org.joml.Vector2f;
                set(arg0: _javatypes.org.joml.Vector2dc): _javatypes.org.joml.Vector2f;
                set(arg0: number[]): _javatypes.org.joml.Vector2f;
                set(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector2f;
                set(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector2f;
                set(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Vector2f;
                set(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Vector2f;
                setFromAddress(arg0: number): _javatypes.org.joml.Vector2f;
                get(arg0: number): number;
                get(arg0: number, arg1: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                get(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                get(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                setComponent(arg0: number, arg1: number): _javatypes.org.joml.Vector2f;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Vector2fc;
                perpendicular(): _javatypes.org.joml.Vector2f;
                sub(arg0: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Vector2f;
                sub(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                sub(arg0: number, arg1: number): _javatypes.org.joml.Vector2f;
                sub(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                dot(arg0: _javatypes.org.joml.Vector2fc): number;
                angle(arg0: _javatypes.org.joml.Vector2fc): number;
                lengthSquared(): number;
                length(): number;
                distance(arg0: _javatypes.org.joml.Vector2fc): number;
                distanceSquared(arg0: _javatypes.org.joml.Vector2fc): number;
                distance(arg0: number, arg1: number): number;
                distanceSquared(arg0: number, arg1: number): number;
                normalize(): _javatypes.org.joml.Vector2f;
                normalize(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                normalize(arg0: number): _javatypes.org.joml.Vector2f;
                normalize(arg0: number, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                add(arg0: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Vector2f;
                add(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                add(arg0: number, arg1: number): _javatypes.org.joml.Vector2f;
                add(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                zero(): _javatypes.org.joml.Vector2f;
                writeExternal(arg0: _javatypes.java.io.ObjectOutput): void;
                readExternal(arg0: _javatypes.java.io.ObjectInput): void;
                negate(): _javatypes.org.joml.Vector2f;
                negate(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                mul(arg0: number): _javatypes.org.joml.Vector2f;
                mul(arg0: number, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                mul(arg0: number, arg1: number): _javatypes.org.joml.Vector2f;
                mul(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                mul(arg0: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Vector2f;
                mul(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                div(arg0: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Vector2f;
                div(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                div(arg0: number): _javatypes.org.joml.Vector2f;
                div(arg0: number, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                div(arg0: number, arg1: number): _javatypes.org.joml.Vector2f;
                div(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                mul(arg0: _javatypes.org.joml.Matrix2fc): _javatypes.org.joml.Vector2f;
                mul(arg0: _javatypes.org.joml.Matrix2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                mul(arg0: _javatypes.org.joml.Matrix2dc): _javatypes.org.joml.Vector2f;
                mul(arg0: _javatypes.org.joml.Matrix2dc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                mulTranspose(arg0: _javatypes.org.joml.Matrix2fc): _javatypes.org.joml.Vector2f;
                mulTranspose(arg0: _javatypes.org.joml.Matrix2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                mulPosition(arg0: _javatypes.org.joml.Matrix3x2fc): _javatypes.org.joml.Vector2f;
                mulPosition(arg0: _javatypes.org.joml.Matrix3x2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                mulDirection(arg0: _javatypes.org.joml.Matrix3x2fc): _javatypes.org.joml.Vector2f;
                mulDirection(arg0: _javatypes.org.joml.Matrix3x2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                lerp(arg0: _javatypes.org.joml.Vector2fc, arg1: number): _javatypes.org.joml.Vector2f;
                lerp(arg0: _javatypes.org.joml.Vector2fc, arg1: number, arg2: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                hashCode(): number;
                equals(arg0: any): boolean;
                equals(arg0: _javatypes.org.joml.Vector2fc, arg1: number): boolean;
                equals(arg0: number, arg1: number): boolean;
                toString(): string;
                toString(arg0: _javatypes.java.text.NumberFormat): string;
                fma(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Vector2f;
                fma(arg0: number, arg1: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Vector2f;
                fma(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2fc, arg2: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                fma(arg0: number, arg1: _javatypes.org.joml.Vector2fc, arg2: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                min(arg0: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Vector2f;
                min(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                max(arg0: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Vector2f;
                max(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                maxComponent(): number;
                minComponent(): number;
                floor(): _javatypes.org.joml.Vector2f;
                floor(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                ceil(): _javatypes.org.joml.Vector2f;
                ceil(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                round(): _javatypes.org.joml.Vector2f;
                round(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                isFinite(): boolean;
                absolute(): _javatypes.org.joml.Vector2f;
                absolute(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                clone(): any;
                
            }
            namespace Vector2f {
                interface static {
                    new (): _javatypes.org.joml.Vector2f;
                    new (arg0: number): _javatypes.org.joml.Vector2f;
                    new (arg0: number, arg1: number): _javatypes.org.joml.Vector2f;
                    new (arg0: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Vector2f;
                    new (arg0: _javatypes.org.joml.Vector2ic): _javatypes.org.joml.Vector2f;
                    new (arg0: number[]): _javatypes.org.joml.Vector2f;
                    new (arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector2f;
                    new (arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector2f;
                    new (arg0: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Vector2f;
                    new (arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Vector2f;
                    
                    
                    lengthSquared(arg0: number, arg1: number): number;
                    length(arg0: number, arg1: number): number;
                    distance(arg0: number, arg1: number, arg2: number, arg3: number): number;
                    distanceSquared(arg0: number, arg1: number, arg2: number, arg3: number): number;
                    
                }
            }
            interface Quaterniondc extends _javatypes.java.lang.Interface {
                
                x(): number;
                y(): number;
                z(): number;
                w(): number;
                normalize(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                add(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                add(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                dot(arg0: _javatypes.org.joml.Quaterniondc): number;
                angle(): number;
                get(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                get(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                get(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                get(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                get(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.AxisAngle4f;
                get(arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.AxisAngle4d;
                get(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                get(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                mul(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                mul(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                mul(arg0: number, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                premul(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                premul(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                transform(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverse(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformUnit(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPositiveX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPositiveX(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnitPositiveX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformUnitPositiveX(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformPositiveY(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPositiveY(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnitPositiveY(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformUnitPositiveY(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformPositiveZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPositiveZ(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnitPositiveZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformUnitPositiveZ(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transform(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformInverse(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transform(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverse(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transform(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverse(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transform(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformInverse(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transform(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformInverse(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transform(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformInverse(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformUnit(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnit(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverseUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformUnit(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformInverseUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnit(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPositiveX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPositiveX(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnitPositiveX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformUnitPositiveX(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformPositiveY(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPositiveY(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnitPositiveY(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformUnitPositiveY(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformPositiveZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPositiveZ(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnitPositiveZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformUnitPositiveZ(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transform(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformInverse(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transform(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformInverse(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transform(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformInverse(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transform(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformInverse(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transform(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformInverse(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnit(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnit(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformInverseUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformUnit(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformInverseUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                invert(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                div(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                conjugate(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                lengthSquared(): number;
                slerp(arg0: _javatypes.org.joml.Quaterniondc, arg1: number, arg2: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                scale(arg0: number, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                integrate(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                nlerp(arg0: _javatypes.org.joml.Quaterniondc, arg1: number, arg2: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                nlerpIterative(arg0: _javatypes.org.joml.Quaterniondc, arg1: number, arg2: number, arg3: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                lookAlong(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                lookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                difference(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotateTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotateTo(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotateX(arg0: number, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotateY(arg0: number, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotateZ(arg0: number, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotateLocalX(arg0: number, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotateLocalY(arg0: number, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotateLocalZ(arg0: number, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotateXYZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotateZYX(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotateYXZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                getEulerAnglesXYZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                getEulerAnglesZYX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                getEulerAnglesZXY(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                getEulerAnglesYXZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                rotateAxis(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotateAxis(arg0: number, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                positiveX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normalizedPositiveX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                positiveY(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normalizedPositiveY(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                positiveZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normalizedPositiveZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                conjugateBy(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                isFinite(): boolean;
                equals(arg0: _javatypes.org.joml.Quaterniondc, arg1: number): boolean;
                equals(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                
            }
            namespace Quaterniondc {
                interface static {
                    
                    
                    
                }
            }
            interface Matrix3f extends any, _javatypes.java.io.Externalizable, _javatypes.java.lang.Cloneable, _javatypes.org.joml.Matrix3fc {
                m00: number;
                m01: number;
                m02: number;
                m10: number;
                m11: number;
                m12: number;
                m20: number;
                m21: number;
                m22: number;
                
                m00(): number;
                m01(): number;
                m02(): number;
                m10(): number;
                m11(): number;
                m12(): number;
                m20(): number;
                m21(): number;
                m22(): number;
                m00(arg0: number): _javatypes.org.joml.Matrix3f;
                m01(arg0: number): _javatypes.org.joml.Matrix3f;
                m02(arg0: number): _javatypes.org.joml.Matrix3f;
                m10(arg0: number): _javatypes.org.joml.Matrix3f;
                m11(arg0: number): _javatypes.org.joml.Matrix3f;
                m12(arg0: number): _javatypes.org.joml.Matrix3f;
                m20(arg0: number): _javatypes.org.joml.Matrix3f;
                m21(arg0: number): _javatypes.org.joml.Matrix3f;
                m22(arg0: number): _javatypes.org.joml.Matrix3f;
                set(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Matrix3f;
                setTransposed(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Matrix3f;
                set(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Matrix3f;
                set(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Matrix3f;
                set(arg0: _javatypes.org.joml.Matrix2fc): _javatypes.org.joml.Matrix3f;
                set(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.Matrix3f;
                set(arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.Matrix3f;
                set(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix3f;
                set(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Matrix3f;
                mul(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Matrix3f;
                mul(arg0: _javatypes.org.joml.Matrix3fc, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mulLocal(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Matrix3f;
                mulLocal(arg0: _javatypes.org.joml.Matrix3fc, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                set(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix3f;
                set(arg0: number[]): _javatypes.org.joml.Matrix3f;
                set(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix3f;
                determinant(): number;
                invert(): _javatypes.org.joml.Matrix3f;
                invert(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                transpose(): _javatypes.org.joml.Matrix3f;
                transpose(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                toString(): string;
                toString(arg0: _javatypes.java.text.NumberFormat): string;
                get(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                get(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                getRotation(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.AxisAngle4f;
                getUnnormalizedRotation(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getNormalizedRotation(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getUnnormalizedRotation(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                getNormalizedRotation(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                get(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get3x4(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get3x4(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get3x4(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get3x4(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Matrix3fc;
                get(arg0: number[], arg1: number): number[];
                get(arg0: number[]): number[];
                set(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Matrix3f;
                set(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix3f;
                set(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Matrix3f;
                set(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix3f;
                setFromAddress(arg0: number): _javatypes.org.joml.Matrix3f;
                zero(): _javatypes.org.joml.Matrix3f;
                identity(): _javatypes.org.joml.Matrix3f;
                scale(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                scale(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix3f;
                scale(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                scale(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3f;
                scale(arg0: number, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                scale(arg0: number): _javatypes.org.joml.Matrix3f;
                scaleLocal(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                scaleLocal(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3f;
                scaling(arg0: number): _javatypes.org.joml.Matrix3f;
                scaling(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3f;
                scaling(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix3f;
                rotation(arg0: number, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix3f;
                rotation(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.Matrix3f;
                rotation(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix3f;
                rotationX(arg0: number): _javatypes.org.joml.Matrix3f;
                rotationY(arg0: number): _javatypes.org.joml.Matrix3f;
                rotationZ(arg0: number): _javatypes.org.joml.Matrix3f;
                rotationXYZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3f;
                rotationZYX(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3f;
                rotationYXZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3f;
                rotation(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix3f;
                transform(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transform(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transform(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformTranspose(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformTranspose(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformTranspose(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                writeExternal(arg0: _javatypes.java.io.ObjectOutput): void;
                readExternal(arg0: _javatypes.java.io.ObjectInput): void;
                rotateX(arg0: number, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotateX(arg0: number): _javatypes.org.joml.Matrix3f;
                rotateY(arg0: number, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotateY(arg0: number): _javatypes.org.joml.Matrix3f;
                rotateZ(arg0: number, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotateZ(arg0: number): _javatypes.org.joml.Matrix3f;
                rotateXYZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix3f;
                rotateXYZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3f;
                rotateXYZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotateZYX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix3f;
                rotateZYX(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3f;
                rotateZYX(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotateYXZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix3f;
                rotateYXZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3f;
                rotateYXZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotate(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix3f;
                rotate(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotateLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotateLocal(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix3f;
                rotateLocalX(arg0: number, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotateLocalX(arg0: number): _javatypes.org.joml.Matrix3f;
                rotateLocalY(arg0: number, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotateLocalY(arg0: number): _javatypes.org.joml.Matrix3f;
                rotateLocalZ(arg0: number, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotateLocalZ(arg0: number): _javatypes.org.joml.Matrix3f;
                rotate(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix3f;
                rotate(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotateLocal(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotateLocal(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix3f;
                rotate(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.Matrix3f;
                rotate(arg0: _javatypes.org.joml.AxisAngle4f, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix3f;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                lookAlong(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix3f;
                lookAlong(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                lookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                lookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix3f;
                setLookAlong(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix3f;
                setLookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix3f;
                getRow(arg0: number, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                setRow(arg0: number, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix3f;
                setRow(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix3f;
                getColumn(arg0: number, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                setColumn(arg0: number, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix3f;
                setColumn(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix3f;
                get(arg0: number, arg1: number): number;
                set(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3f;
                getRowColumn(arg0: number, arg1: number): number;
                setRowColumn(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3f;
                normal(): _javatypes.org.joml.Matrix3f;
                normal(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                cofactor(): _javatypes.org.joml.Matrix3f;
                cofactor(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                getScale(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                positiveZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normalizedPositiveZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                positiveX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normalizedPositiveX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                positiveY(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normalizedPositiveY(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                hashCode(): number;
                equals(arg0: any): boolean;
                equals(arg0: _javatypes.org.joml.Matrix3fc, arg1: number): boolean;
                swap(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                add(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Matrix3f;
                add(arg0: _javatypes.org.joml.Matrix3fc, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                sub(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Matrix3f;
                sub(arg0: _javatypes.org.joml.Matrix3fc, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mulComponentWise(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Matrix3f;
                mulComponentWise(arg0: _javatypes.org.joml.Matrix3fc, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                setSkewSymmetric(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3f;
                lerp(arg0: _javatypes.org.joml.Matrix3fc, arg1: number): _javatypes.org.joml.Matrix3f;
                lerp(arg0: _javatypes.org.joml.Matrix3fc, arg1: number, arg2: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotateTowards(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotateTowards(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix3f;
                rotateTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix3f;
                rotateTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                rotationTowards(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix3f;
                rotationTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix3f;
                getEulerAnglesZYX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                getEulerAnglesXYZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                obliqueZ(arg0: number, arg1: number): _javatypes.org.joml.Matrix3f;
                obliqueZ(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                reflect(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                reflect(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3f;
                reflect(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix3f;
                reflect(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix3f;
                reflect(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                reflect(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                reflection(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3f;
                reflection(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix3f;
                reflection(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix3f;
                isFinite(): boolean;
                quadraticFormProduct(arg0: number, arg1: number, arg2: number): number;
                quadraticFormProduct(arg0: _javatypes.org.joml.Vector3fc): number;
                mapXZY(): _javatypes.org.joml.Matrix3f;
                mapXZY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapXZnY(): _javatypes.org.joml.Matrix3f;
                mapXZnY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapXnYnZ(): _javatypes.org.joml.Matrix3f;
                mapXnYnZ(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapXnZY(): _javatypes.org.joml.Matrix3f;
                mapXnZY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapXnZnY(): _javatypes.org.joml.Matrix3f;
                mapXnZnY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapYXZ(): _javatypes.org.joml.Matrix3f;
                mapYXZ(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapYXnZ(): _javatypes.org.joml.Matrix3f;
                mapYXnZ(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapYZX(): _javatypes.org.joml.Matrix3f;
                mapYZX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapYZnX(): _javatypes.org.joml.Matrix3f;
                mapYZnX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapYnXZ(): _javatypes.org.joml.Matrix3f;
                mapYnXZ(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapYnXnZ(): _javatypes.org.joml.Matrix3f;
                mapYnXnZ(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapYnZX(): _javatypes.org.joml.Matrix3f;
                mapYnZX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapYnZnX(): _javatypes.org.joml.Matrix3f;
                mapYnZnX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapZXY(): _javatypes.org.joml.Matrix3f;
                mapZXY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapZXnY(): _javatypes.org.joml.Matrix3f;
                mapZXnY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapZYX(): _javatypes.org.joml.Matrix3f;
                mapZYX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapZYnX(): _javatypes.org.joml.Matrix3f;
                mapZYnX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapZnXY(): _javatypes.org.joml.Matrix3f;
                mapZnXY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapZnXnY(): _javatypes.org.joml.Matrix3f;
                mapZnXnY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapZnYX(): _javatypes.org.joml.Matrix3f;
                mapZnYX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapZnYnX(): _javatypes.org.joml.Matrix3f;
                mapZnYnX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnXYnZ(): _javatypes.org.joml.Matrix3f;
                mapnXYnZ(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnXZY(): _javatypes.org.joml.Matrix3f;
                mapnXZY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnXZnY(): _javatypes.org.joml.Matrix3f;
                mapnXZnY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnXnYZ(): _javatypes.org.joml.Matrix3f;
                mapnXnYZ(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnXnYnZ(): _javatypes.org.joml.Matrix3f;
                mapnXnYnZ(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnXnZY(): _javatypes.org.joml.Matrix3f;
                mapnXnZY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnXnZnY(): _javatypes.org.joml.Matrix3f;
                mapnXnZnY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnYXZ(): _javatypes.org.joml.Matrix3f;
                mapnYXZ(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnYXnZ(): _javatypes.org.joml.Matrix3f;
                mapnYXnZ(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnYZX(): _javatypes.org.joml.Matrix3f;
                mapnYZX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnYZnX(): _javatypes.org.joml.Matrix3f;
                mapnYZnX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnYnXZ(): _javatypes.org.joml.Matrix3f;
                mapnYnXZ(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnYnXnZ(): _javatypes.org.joml.Matrix3f;
                mapnYnXnZ(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnYnZX(): _javatypes.org.joml.Matrix3f;
                mapnYnZX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnYnZnX(): _javatypes.org.joml.Matrix3f;
                mapnYnZnX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnZXY(): _javatypes.org.joml.Matrix3f;
                mapnZXY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnZXnY(): _javatypes.org.joml.Matrix3f;
                mapnZXnY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnZYX(): _javatypes.org.joml.Matrix3f;
                mapnZYX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnZYnX(): _javatypes.org.joml.Matrix3f;
                mapnZYnX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnZnXY(): _javatypes.org.joml.Matrix3f;
                mapnZnXY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnZnXnY(): _javatypes.org.joml.Matrix3f;
                mapnZnXnY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnZnYX(): _javatypes.org.joml.Matrix3f;
                mapnZnYX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                mapnZnYnX(): _javatypes.org.joml.Matrix3f;
                mapnZnYnX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                negateX(): _javatypes.org.joml.Matrix3f;
                negateX(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                negateY(): _javatypes.org.joml.Matrix3f;
                negateY(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                negateZ(): _javatypes.org.joml.Matrix3f;
                negateZ(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                clone(): any;
                
            }
            namespace Matrix3f {
                interface static {
                    new (): _javatypes.org.joml.Matrix3f;
                    new (arg0: _javatypes.org.joml.Matrix2fc): _javatypes.org.joml.Matrix3f;
                    new (arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Matrix3f;
                    new (arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Matrix3f;
                    new (arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix3f;
                    new (arg0: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Matrix3f;
                    new (arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix3f;
                    
                    
                    
                }
            }
            interface Vector4fc extends _javatypes.java.lang.Interface {
                
                x(): number;
                y(): number;
                z(): number;
                w(): number;
                get(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Vector4fc;
                sub(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                sub(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                add(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                add(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                fma(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4fc, arg2: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                fma(arg0: number, arg1: _javatypes.org.joml.Vector4fc, arg2: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                mulAdd(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4fc, arg2: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                mulAdd(arg0: number, arg1: _javatypes.org.joml.Vector4fc, arg2: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                mul(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                div(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                mul(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                mulTranspose(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                mulAffine(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                mulAffineTranspose(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                mul(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                mulProject(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                mulProject(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mul(arg0: number, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                mul(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                div(arg0: number, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                div(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                rotate(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                rotateAxis(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                rotateX(arg0: number, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                rotateY(arg0: number, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                rotateZ(arg0: number, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                lengthSquared(): number;
                length(): number;
                normalize(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                normalize(arg0: number, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                normalize3(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                distance(arg0: _javatypes.org.joml.Vector4fc): number;
                distance(arg0: number, arg1: number, arg2: number, arg3: number): number;
                distanceSquared(arg0: _javatypes.org.joml.Vector4fc): number;
                distanceSquared(arg0: number, arg1: number, arg2: number, arg3: number): number;
                dot(arg0: _javatypes.org.joml.Vector4fc): number;
                dot(arg0: number, arg1: number, arg2: number, arg3: number): number;
                angleCos(arg0: _javatypes.org.joml.Vector4fc): number;
                angle(arg0: _javatypes.org.joml.Vector4fc): number;
                negate(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                min(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                max(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                lerp(arg0: _javatypes.org.joml.Vector4fc, arg1: number, arg2: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                smoothStep(arg0: _javatypes.org.joml.Vector4fc, arg1: number, arg2: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                hermite(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4fc, arg2: _javatypes.org.joml.Vector4fc, arg3: number, arg4: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                get(arg0: number): number;
                get(arg0: number, arg1: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                get(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                get(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                maxComponent(): number;
                minComponent(): number;
                floor(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                ceil(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                round(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                isFinite(): boolean;
                absolute(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                equals(arg0: _javatypes.org.joml.Vector4fc, arg1: number): boolean;
                equals(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                
            }
            namespace Vector4fc {
                interface static {
                    
                    
                    
                }
            }
            interface Vector4f extends any, _javatypes.java.io.Externalizable, _javatypes.java.lang.Cloneable, _javatypes.org.joml.Vector4fc {
                x: number;
                y: number;
                z: number;
                w: number;
                
                x(): number;
                y(): number;
                z(): number;
                w(): number;
                set(arg0: _javatypes.org.joml.Vector4fc): _javatypes.org.joml.Vector4f;
                set(arg0: _javatypes.org.joml.Vector4ic): _javatypes.org.joml.Vector4f;
                set(arg0: _javatypes.org.joml.Vector4dc): _javatypes.org.joml.Vector4f;
                set(arg0: _javatypes.org.joml.Vector3fc, arg1: number): _javatypes.org.joml.Vector4f;
                set(arg0: _javatypes.org.joml.Vector3ic, arg1: number): _javatypes.org.joml.Vector4f;
                set(arg0: _javatypes.org.joml.Vector2fc, arg1: number, arg2: number): _javatypes.org.joml.Vector4f;
                set(arg0: _javatypes.org.joml.Vector2ic, arg1: number, arg2: number): _javatypes.org.joml.Vector4f;
                set(arg0: number): _javatypes.org.joml.Vector4f;
                set(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Vector4f;
                set(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector4f;
                set(arg0: number): _javatypes.org.joml.Vector4f;
                set(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Vector4f;
                set(arg0: number[]): _javatypes.org.joml.Vector4f;
                set(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector4f;
                set(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector4f;
                set(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Vector4f;
                set(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Vector4f;
                setFromAddress(arg0: number): _javatypes.org.joml.Vector4f;
                setComponent(arg0: number, arg1: number): _javatypes.org.joml.Vector4f;
                get(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Vector4fc;
                sub(arg0: _javatypes.org.joml.Vector4fc): _javatypes.org.joml.Vector4f;
                sub(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Vector4f;
                sub(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                sub(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                add(arg0: _javatypes.org.joml.Vector4fc): _javatypes.org.joml.Vector4f;
                add(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                add(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Vector4f;
                add(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                fma(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4fc): _javatypes.org.joml.Vector4f;
                fma(arg0: number, arg1: _javatypes.org.joml.Vector4fc): _javatypes.org.joml.Vector4f;
                fma(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4fc, arg2: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                fma(arg0: number, arg1: _javatypes.org.joml.Vector4fc, arg2: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                mulAdd(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4fc): _javatypes.org.joml.Vector4f;
                mulAdd(arg0: number, arg1: _javatypes.org.joml.Vector4fc): _javatypes.org.joml.Vector4f;
                mulAdd(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4fc, arg2: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                mulAdd(arg0: number, arg1: _javatypes.org.joml.Vector4fc, arg2: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                mul(arg0: _javatypes.org.joml.Vector4fc): _javatypes.org.joml.Vector4f;
                mul(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                div(arg0: _javatypes.org.joml.Vector4fc): _javatypes.org.joml.Vector4f;
                div(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                mul(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Vector4f;
                mul(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                mulTranspose(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Vector4f;
                mulTranspose(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                mulAffine(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                mulAffineTranspose(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                mul(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Vector4f;
                mul(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                mulProject(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                mulProject(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Vector4f;
                mulProject(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                mul(arg0: number): _javatypes.org.joml.Vector4f;
                mul(arg0: number, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                mul(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Vector4f;
                mul(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                div(arg0: number): _javatypes.org.joml.Vector4f;
                div(arg0: number, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                div(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Vector4f;
                div(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                rotate(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Vector4f;
                rotate(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                rotateAbout(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Vector4f;
                rotateAxis(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                rotateX(arg0: number): _javatypes.org.joml.Vector4f;
                rotateX(arg0: number, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                rotateY(arg0: number): _javatypes.org.joml.Vector4f;
                rotateY(arg0: number, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                rotateZ(arg0: number): _javatypes.org.joml.Vector4f;
                rotateZ(arg0: number, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                lengthSquared(): number;
                length(): number;
                normalize(): _javatypes.org.joml.Vector4f;
                normalize(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                normalize(arg0: number): _javatypes.org.joml.Vector4f;
                normalize(arg0: number, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                normalize3(): _javatypes.org.joml.Vector4f;
                normalize3(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                distance(arg0: _javatypes.org.joml.Vector4fc): number;
                distance(arg0: number, arg1: number, arg2: number, arg3: number): number;
                distanceSquared(arg0: _javatypes.org.joml.Vector4fc): number;
                distanceSquared(arg0: number, arg1: number, arg2: number, arg3: number): number;
                dot(arg0: _javatypes.org.joml.Vector4fc): number;
                dot(arg0: number, arg1: number, arg2: number, arg3: number): number;
                angleCos(arg0: _javatypes.org.joml.Vector4fc): number;
                angle(arg0: _javatypes.org.joml.Vector4fc): number;
                zero(): _javatypes.org.joml.Vector4f;
                negate(): _javatypes.org.joml.Vector4f;
                negate(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                toString(): string;
                toString(arg0: _javatypes.java.text.NumberFormat): string;
                writeExternal(arg0: _javatypes.java.io.ObjectOutput): void;
                readExternal(arg0: _javatypes.java.io.ObjectInput): void;
                min(arg0: _javatypes.org.joml.Vector4fc): _javatypes.org.joml.Vector4f;
                min(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                max(arg0: _javatypes.org.joml.Vector4fc): _javatypes.org.joml.Vector4f;
                max(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                hashCode(): number;
                equals(arg0: any): boolean;
                equals(arg0: _javatypes.org.joml.Vector4fc, arg1: number): boolean;
                equals(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                smoothStep(arg0: _javatypes.org.joml.Vector4fc, arg1: number, arg2: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                hermite(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4fc, arg2: _javatypes.org.joml.Vector4fc, arg3: number, arg4: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                lerp(arg0: _javatypes.org.joml.Vector4fc, arg1: number): _javatypes.org.joml.Vector4f;
                lerp(arg0: _javatypes.org.joml.Vector4fc, arg1: number, arg2: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                get(arg0: number): number;
                get(arg0: number, arg1: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                get(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                get(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                maxComponent(): number;
                minComponent(): number;
                floor(): _javatypes.org.joml.Vector4f;
                floor(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                ceil(): _javatypes.org.joml.Vector4f;
                ceil(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                round(): _javatypes.org.joml.Vector4f;
                round(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                isFinite(): boolean;
                absolute(): _javatypes.org.joml.Vector4f;
                absolute(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                clone(): any;
                
            }
            namespace Vector4f {
                interface static {
                    new (): _javatypes.org.joml.Vector4f;
                    new (arg0: _javatypes.org.joml.Vector4fc): _javatypes.org.joml.Vector4f;
                    new (arg0: _javatypes.org.joml.Vector4ic): _javatypes.org.joml.Vector4f;
                    new (arg0: _javatypes.org.joml.Vector3fc, arg1: number): _javatypes.org.joml.Vector4f;
                    new (arg0: _javatypes.org.joml.Vector3ic, arg1: number): _javatypes.org.joml.Vector4f;
                    new (arg0: _javatypes.org.joml.Vector2fc, arg1: number, arg2: number): _javatypes.org.joml.Vector4f;
                    new (arg0: _javatypes.org.joml.Vector2ic, arg1: number, arg2: number): _javatypes.org.joml.Vector4f;
                    new (arg0: number): _javatypes.org.joml.Vector4f;
                    new (arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Vector4f;
                    new (arg0: number[]): _javatypes.org.joml.Vector4f;
                    new (arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector4f;
                    new (arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector4f;
                    new (arg0: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Vector4f;
                    new (arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Vector4f;
                    
                    
                    lengthSquared(arg0: number, arg1: number, arg2: number, arg3: number): number;
                    lengthSquared(arg0: number, arg1: number, arg2: number, arg3: number): number;
                    length(arg0: number, arg1: number, arg2: number, arg3: number): number;
                    distance(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): number;
                    distanceSquared(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): number;
                    
                }
            }
            interface Matrix4x3f extends any, _javatypes.java.io.Externalizable, _javatypes.java.lang.Cloneable, _javatypes.org.joml.Matrix4x3fc {
                
                assume(arg0: number): _javatypes.org.joml.Matrix4x3f;
                determineProperties(): _javatypes.org.joml.Matrix4x3f;
                properties(): number;
                m00(): number;
                m01(): number;
                m02(): number;
                m10(): number;
                m11(): number;
                m12(): number;
                m20(): number;
                m21(): number;
                m22(): number;
                m30(): number;
                m31(): number;
                m32(): number;
                m00(arg0: number): _javatypes.org.joml.Matrix4x3f;
                m01(arg0: number): _javatypes.org.joml.Matrix4x3f;
                m02(arg0: number): _javatypes.org.joml.Matrix4x3f;
                m10(arg0: number): _javatypes.org.joml.Matrix4x3f;
                m11(arg0: number): _javatypes.org.joml.Matrix4x3f;
                m12(arg0: number): _javatypes.org.joml.Matrix4x3f;
                m20(arg0: number): _javatypes.org.joml.Matrix4x3f;
                m21(arg0: number): _javatypes.org.joml.Matrix4x3f;
                m22(arg0: number): _javatypes.org.joml.Matrix4x3f;
                m30(arg0: number): _javatypes.org.joml.Matrix4x3f;
                m31(arg0: number): _javatypes.org.joml.Matrix4x3f;
                m32(arg0: number): _javatypes.org.joml.Matrix4x3f;
                identity(): _javatypes.org.joml.Matrix4x3f;
                set(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Matrix4x3f;
                set(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Matrix4x3f;
                get(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                get(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                set(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Matrix4x3f;
                set(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.Matrix4x3f;
                set(arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.Matrix4x3f;
                set(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix4x3f;
                set(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Matrix4x3f;
                set(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc, arg3: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                set3x3(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Matrix4x3f;
                mul(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Matrix4x3f;
                mul(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mulTranslation(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mulOrtho(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Matrix4x3f;
                mulOrtho(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mul3x3(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix4x3f;
                mul3x3(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                fma(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: number): _javatypes.org.joml.Matrix4x3f;
                fma(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: number, arg2: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                add(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Matrix4x3f;
                add(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                sub(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Matrix4x3f;
                sub(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mulComponentWise(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Matrix4x3f;
                mulComponentWise(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                set(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: number): _javatypes.org.joml.Matrix4x3f;
                set(arg0: number[], arg1: number): _javatypes.org.joml.Matrix4x3f;
                set(arg0: number[]): _javatypes.org.joml.Matrix4x3f;
                set(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Matrix4x3f;
                set(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix4x3f;
                set(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Matrix4x3f;
                set(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix4x3f;
                setFromAddress(arg0: number): _javatypes.org.joml.Matrix4x3f;
                determinant(): number;
                invert(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                invert(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                invert(): _javatypes.org.joml.Matrix4x3f;
                invertOrtho(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                invertOrtho(): _javatypes.org.joml.Matrix4x3f;
                transpose3x3(): _javatypes.org.joml.Matrix4x3f;
                transpose3x3(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                transpose3x3(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                translation(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3f;
                translation(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                setTranslation(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3f;
                setTranslation(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                getTranslation(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                getScale(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                toString(): string;
                toString(arg0: _javatypes.java.text.NumberFormat): string;
                get(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                get(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                getRotation(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.AxisAngle4f;
                getRotation(arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.AxisAngle4d;
                getUnnormalizedRotation(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getNormalizedRotation(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getUnnormalizedRotation(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                getNormalizedRotation(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                get(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Matrix4x3fc;
                get(arg0: number[], arg1: number): number[];
                get(arg0: number[]): number[];
                get4x4(arg0: number[], arg1: number): number[];
                get4x4(arg0: number[]): number[];
                get4x4(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get4x4(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get4x4(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get4x4(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get3x4(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get3x4(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get3x4(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get3x4(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: number[], arg1: number): number[];
                getTransposed(arg0: number[]): number[];
                zero(): _javatypes.org.joml.Matrix4x3f;
                scaling(arg0: number): _javatypes.org.joml.Matrix4x3f;
                scaling(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3f;
                scaling(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                rotation(arg0: number, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                rotation(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.Matrix4x3f;
                rotation(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3f;
                rotationX(arg0: number): _javatypes.org.joml.Matrix4x3f;
                rotationY(arg0: number): _javatypes.org.joml.Matrix4x3f;
                rotationZ(arg0: number): _javatypes.org.joml.Matrix4x3f;
                rotationXYZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3f;
                rotationZYX(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3f;
                rotationYXZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3f;
                setRotationXYZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3f;
                setRotationZYX(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3f;
                setRotationYXZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3f;
                rotation(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix4x3f;
                translationRotateScale(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number): _javatypes.org.joml.Matrix4x3f;
                translationRotateScale(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Quaternionfc, arg2: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                translationRotateScaleMul(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                translationRotateScaleMul(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Quaternionfc, arg2: _javatypes.org.joml.Vector3fc, arg3: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                translationRotate(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix4x3f;
                translationRotate(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): _javatypes.org.joml.Matrix4x3f;
                translationRotate(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix4x3f;
                translationRotateMul(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Quaternionfc, arg4: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Matrix4x3f;
                translationRotateMul(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Matrix4x3f;
                translationRotateInvert(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): _javatypes.org.joml.Matrix4x3f;
                translationRotateInvert(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix4x3f;
                set3x3(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Matrix4x3f;
                transform(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transform(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformPosition(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPosition(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformDirection(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformDirection(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                scale(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                scale(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                scale(arg0: number, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                scale(arg0: number): _javatypes.org.joml.Matrix4x3f;
                scaleXY(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                scaleXY(arg0: number, arg1: number): _javatypes.org.joml.Matrix4x3f;
                scale(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                scale(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3f;
                scaleLocal(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4x3f;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3f;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                scaleLocal(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3f;
                rotateX(arg0: number, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateX(arg0: number): _javatypes.org.joml.Matrix4x3f;
                rotateY(arg0: number, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateY(arg0: number): _javatypes.org.joml.Matrix4x3f;
                rotateZ(arg0: number, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateZ(arg0: number): _javatypes.org.joml.Matrix4x3f;
                rotateXYZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix4x3f;
                rotateXYZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3f;
                rotateXYZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateZYX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix4x3f;
                rotateZYX(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3f;
                rotateZYX(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateYXZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix4x3f;
                rotateYXZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3f;
                rotateYXZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotate(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotate(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3f;
                rotateTranslation(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateAround(arg0: _javatypes.org.joml.Quaternionfc, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3f;
                rotateAround(arg0: _javatypes.org.joml.Quaternionfc, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotationAround(arg0: _javatypes.org.joml.Quaternionfc, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3f;
                rotateLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateLocal(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3f;
                rotateLocalX(arg0: number, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateLocalX(arg0: number): _javatypes.org.joml.Matrix4x3f;
                rotateLocalY(arg0: number, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateLocalY(arg0: number): _javatypes.org.joml.Matrix4x3f;
                rotateLocalZ(arg0: number, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateLocalZ(arg0: number): _javatypes.org.joml.Matrix4x3f;
                translate(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                translate(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                translate(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                translate(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3f;
                translateLocal(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                translateLocal(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                translateLocal(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                translateLocal(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3f;
                writeExternal(arg0: _javatypes.java.io.ObjectOutput): void;
                readExternal(arg0: _javatypes.java.io.ObjectInput): void;
                ortho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                ortho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                ortho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4x3f;
                ortho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4x3f;
                orthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                orthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                orthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4x3f;
                orthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4x3f;
                setOrtho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4x3f;
                setOrtho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4x3f;
                setOrthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4x3f;
                setOrthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4x3f;
                orthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                orthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                orthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4x3f;
                orthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3f;
                orthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                orthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                orthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4x3f;
                orthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3f;
                setOrthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4x3f;
                setOrthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3f;
                setOrthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4x3f;
                setOrthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3f;
                ortho2D(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                ortho2D(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3f;
                ortho2DLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                ortho2DLH(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3f;
                setOrtho2D(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3f;
                setOrtho2DLH(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3f;
                lookAlong(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                lookAlong(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                lookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                lookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4x3f;
                setLookAlong(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                setLookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4x3f;
                setLookAt(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                setLookAt(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix4x3f;
                lookAt(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc, arg3: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                lookAt(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                lookAt(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                lookAt(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix4x3f;
                setLookAtLH(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                setLookAtLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix4x3f;
                lookAtLH(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc, arg3: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                lookAtLH(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                lookAtLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                lookAtLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix4x3f;
                rotate(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotate(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix4x3f;
                rotateTranslation(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateLocal(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateLocal(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix4x3f;
                rotate(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.Matrix4x3f;
                rotate(arg0: _javatypes.org.joml.AxisAngle4f, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                reflect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                reflect(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3f;
                reflect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4x3f;
                reflect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                reflect(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                reflect(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                reflect(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                reflect(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                reflection(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3f;
                reflection(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4x3f;
                reflection(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                reflection(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                getRow(arg0: number, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                setRow(arg0: number, arg1: _javatypes.org.joml.Vector4fc): _javatypes.org.joml.Matrix4x3f;
                getColumn(arg0: number, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                setColumn(arg0: number, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                normal(): _javatypes.org.joml.Matrix4x3f;
                normal(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                normal(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                cofactor3x3(): _javatypes.org.joml.Matrix4x3f;
                cofactor3x3(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                cofactor3x3(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                normalize3x3(): _javatypes.org.joml.Matrix4x3f;
                normalize3x3(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                normalize3x3(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                frustumPlane(arg0: number, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                positiveZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normalizedPositiveZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                positiveX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normalizedPositiveX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                positiveY(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normalizedPositiveY(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                origin(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                shadow(arg0: _javatypes.org.joml.Vector4fc, arg1: number, arg2: number, arg3: number, arg4: number): _javatypes.org.joml.Matrix4x3f;
                shadow(arg0: _javatypes.org.joml.Vector4fc, arg1: number, arg2: number, arg3: number, arg4: number, arg5: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                shadow(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): _javatypes.org.joml.Matrix4x3f;
                shadow(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                shadow(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Matrix4x3fc, arg2: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                shadow(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Matrix4x3f;
                shadow(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3fc, arg5: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                shadow(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                billboardCylindrical(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                billboardSpherical(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                billboardSpherical(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                hashCode(): number;
                equals(arg0: any): boolean;
                equals(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: number): boolean;
                pick(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                pick(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[]): _javatypes.org.joml.Matrix4x3f;
                swap(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                arcball(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                arcball(arg0: number, arg1: _javatypes.org.joml.Vector3fc, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                arcball(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4x3f;
                arcball(arg0: number, arg1: _javatypes.org.joml.Vector3fc, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3f;
                transformAab(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Vector3f, arg7: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix4x3f;
                transformAab(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3f, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix4x3f;
                lerp(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: number): _javatypes.org.joml.Matrix4x3f;
                lerp(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: number, arg2: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateTowards(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotateTowards(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                rotateTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4x3f;
                rotateTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                rotationTowards(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                rotationTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4x3f;
                translationRotateTowards(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                translationRotateTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix4x3f;
                getEulerAnglesZYX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                getEulerAnglesXYZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                obliqueZ(arg0: number, arg1: number): _javatypes.org.joml.Matrix4x3f;
                obliqueZ(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                withLookAtUp(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                withLookAtUp(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                withLookAtUp(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3f;
                withLookAtUp(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapXZY(): _javatypes.org.joml.Matrix4x3f;
                mapXZY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapXZnY(): _javatypes.org.joml.Matrix4x3f;
                mapXZnY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapXnYnZ(): _javatypes.org.joml.Matrix4x3f;
                mapXnYnZ(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapXnZY(): _javatypes.org.joml.Matrix4x3f;
                mapXnZY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapXnZnY(): _javatypes.org.joml.Matrix4x3f;
                mapXnZnY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapYXZ(): _javatypes.org.joml.Matrix4x3f;
                mapYXZ(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapYXnZ(): _javatypes.org.joml.Matrix4x3f;
                mapYXnZ(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapYZX(): _javatypes.org.joml.Matrix4x3f;
                mapYZX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapYZnX(): _javatypes.org.joml.Matrix4x3f;
                mapYZnX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapYnXZ(): _javatypes.org.joml.Matrix4x3f;
                mapYnXZ(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapYnXnZ(): _javatypes.org.joml.Matrix4x3f;
                mapYnXnZ(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapYnZX(): _javatypes.org.joml.Matrix4x3f;
                mapYnZX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapYnZnX(): _javatypes.org.joml.Matrix4x3f;
                mapYnZnX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapZXY(): _javatypes.org.joml.Matrix4x3f;
                mapZXY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapZXnY(): _javatypes.org.joml.Matrix4x3f;
                mapZXnY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapZYX(): _javatypes.org.joml.Matrix4x3f;
                mapZYX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapZYnX(): _javatypes.org.joml.Matrix4x3f;
                mapZYnX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapZnXY(): _javatypes.org.joml.Matrix4x3f;
                mapZnXY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapZnXnY(): _javatypes.org.joml.Matrix4x3f;
                mapZnXnY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapZnYX(): _javatypes.org.joml.Matrix4x3f;
                mapZnYX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapZnYnX(): _javatypes.org.joml.Matrix4x3f;
                mapZnYnX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnXYnZ(): _javatypes.org.joml.Matrix4x3f;
                mapnXYnZ(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnXZY(): _javatypes.org.joml.Matrix4x3f;
                mapnXZY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnXZnY(): _javatypes.org.joml.Matrix4x3f;
                mapnXZnY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnXnYZ(): _javatypes.org.joml.Matrix4x3f;
                mapnXnYZ(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnXnYnZ(): _javatypes.org.joml.Matrix4x3f;
                mapnXnYnZ(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnXnZY(): _javatypes.org.joml.Matrix4x3f;
                mapnXnZY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnXnZnY(): _javatypes.org.joml.Matrix4x3f;
                mapnXnZnY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnYXZ(): _javatypes.org.joml.Matrix4x3f;
                mapnYXZ(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnYXnZ(): _javatypes.org.joml.Matrix4x3f;
                mapnYXnZ(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnYZX(): _javatypes.org.joml.Matrix4x3f;
                mapnYZX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnYZnX(): _javatypes.org.joml.Matrix4x3f;
                mapnYZnX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnYnXZ(): _javatypes.org.joml.Matrix4x3f;
                mapnYnXZ(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnYnXnZ(): _javatypes.org.joml.Matrix4x3f;
                mapnYnXnZ(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnYnZX(): _javatypes.org.joml.Matrix4x3f;
                mapnYnZX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnYnZnX(): _javatypes.org.joml.Matrix4x3f;
                mapnYnZnX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnZXY(): _javatypes.org.joml.Matrix4x3f;
                mapnZXY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnZXnY(): _javatypes.org.joml.Matrix4x3f;
                mapnZXnY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnZYX(): _javatypes.org.joml.Matrix4x3f;
                mapnZYX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnZYnX(): _javatypes.org.joml.Matrix4x3f;
                mapnZYnX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnZnXY(): _javatypes.org.joml.Matrix4x3f;
                mapnZnXY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnZnXnY(): _javatypes.org.joml.Matrix4x3f;
                mapnZnXnY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnZnYX(): _javatypes.org.joml.Matrix4x3f;
                mapnZnYX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                mapnZnYnX(): _javatypes.org.joml.Matrix4x3f;
                mapnZnYnX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                negateX(): _javatypes.org.joml.Matrix4x3f;
                negateX(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                negateY(): _javatypes.org.joml.Matrix4x3f;
                negateY(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                negateZ(): _javatypes.org.joml.Matrix4x3f;
                negateZ(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                isFinite(): boolean;
                clone(): any;
                
            }
            namespace Matrix4x3f {
                interface static {
                    new (): _javatypes.org.joml.Matrix4x3f;
                    new (arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Matrix4x3f;
                    new (arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Matrix4x3f;
                    new (arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: number): _javatypes.org.joml.Matrix4x3f;
                    new (arg0: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Matrix4x3f;
                    new (arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc, arg3: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3f;
                    
                    
                    
                }
            }
            interface Matrix4x3dc extends _javatypes.java.lang.Interface {
                
                properties(): number;
                m00(): number;
                m01(): number;
                m02(): number;
                m10(): number;
                m11(): number;
                m12(): number;
                m20(): number;
                m21(): number;
                m22(): number;
                m30(): number;
                m31(): number;
                m32(): number;
                get(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mul(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mul(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mulTranslation(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mulTranslation(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mulOrtho(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mul3x3(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                fma(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: number, arg2: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                fma(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: number, arg2: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                add(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                add(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                sub(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                sub(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mulComponentWise(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                determinant(): number;
                invert(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                invertOrtho(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                transpose3x3(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                transpose3x3(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                getTranslation(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                getScale(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                get(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                getUnnormalizedRotation(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getNormalizedRotation(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getUnnormalizedRotation(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                getNormalizedRotation(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                get(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getFloats(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getFloats(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Matrix4x3dc;
                get(arg0: number[], arg1: number): number[];
                get(arg0: number[]): number[];
                get(arg0: number[], arg1: number): number[];
                get(arg0: number[]): number[];
                get4x4(arg0: number[], arg1: number): number[];
                get4x4(arg0: number[]): number[];
                get4x4(arg0: number[], arg1: number): number[];
                get4x4(arg0: number[]): number[];
                get4x4(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get4x4(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get4x4(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get4x4(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                getTransposed(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposedFloats(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposedFloats(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: number[], arg1: number): number[];
                getTransposed(arg0: number[]): number[];
                transform(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transform(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformPosition(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPosition(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformDirection(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformDirection(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                scale(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                scale(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                scale(arg0: number, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                scaleXY(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                scaleLocal(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotate(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateTranslation(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateAround(arg0: _javatypes.org.joml.Quaterniondc, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                translate(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                translate(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                translate(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                translateLocal(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                translateLocal(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                translateLocal(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateX(arg0: number, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateY(arg0: number, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateZ(arg0: number, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateXYZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateZYX(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateYXZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotate(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotate(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateTranslation(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateTranslation(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateLocal(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateLocal(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotate(arg0: _javatypes.org.joml.AxisAngle4f, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotate(arg0: _javatypes.org.joml.AxisAngle4d, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                getRow(arg0: number, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                getColumn(arg0: number, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normal(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                normal(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                cofactor3x3(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                cofactor3x3(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                normalize3x3(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                normalize3x3(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                reflect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                reflect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                reflect(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                reflect(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                ortho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                ortho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                orthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                orthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                orthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                orthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                orthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                orthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                ortho2D(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                ortho2DLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                lookAlong(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                lookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                lookAt(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc, arg3: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                lookAt(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                lookAtLH(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc, arg3: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                lookAtLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                frustumPlane(arg0: number, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                positiveZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normalizedPositiveZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                positiveX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normalizedPositiveX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                positiveY(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normalizedPositiveY(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                origin(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                shadow(arg0: _javatypes.org.joml.Vector4dc, arg1: number, arg2: number, arg3: number, arg4: number, arg5: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                shadow(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                shadow(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Matrix4x3dc, arg2: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                shadow(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3dc, arg5: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                pick(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                arcball(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                arcball(arg0: number, arg1: _javatypes.org.joml.Vector3dc, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                transformAab(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Vector3d, arg7: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Matrix4x3d;
                transformAab(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3d, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Matrix4x3d;
                lerp(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: number, arg2: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateTowards(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                getEulerAnglesXYZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                getEulerAnglesZYX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                obliqueZ(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapXZY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapXZnY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapXnYnZ(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapXnZY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapXnZnY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapYXZ(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapYXnZ(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapYZX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapYZnX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapYnXZ(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapYnXnZ(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapYnZX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapYnZnX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapZXY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapZXnY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapZYX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapZYnX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapZnXY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapZnXnY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapZnYX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapZnYnX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnXYnZ(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnXZY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnXZnY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnXnYZ(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnXnYnZ(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnXnZY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnXnZnY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnYXZ(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnYXnZ(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnYZX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnYZnX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnYnXZ(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnYnXnZ(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnYnZX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnYnZnX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnZXY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnZXnY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnZYX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnZYnX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnZnXY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnZnXnY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnZnYX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnZnYnX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                negateX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                negateY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                negateZ(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                equals(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: number): boolean;
                isFinite(): boolean;
                
            }
            namespace Matrix4x3dc {
                interface static {
                    
                    readonly PLANE_NX: number;
                    readonly PLANE_PX: number;
                    readonly PLANE_NY: number;
                    readonly PLANE_PY: number;
                    readonly PLANE_NZ: number;
                    readonly PLANE_PZ: number;
                    readonly PROPERTY_IDENTITY: number;
                    readonly PROPERTY_TRANSLATION: number;
                    readonly PROPERTY_ORTHONORMAL: number;
                    
                    
                }
            }
            interface Matrix3x2dc extends _javatypes.java.lang.Interface {
                
                m00(): number;
                m01(): number;
                m10(): number;
                m11(): number;
                m20(): number;
                m21(): number;
                mul(arg0: _javatypes.org.joml.Matrix3x2dc, arg1: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                mulLocal(arg0: _javatypes.org.joml.Matrix3x2dc, arg1: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                determinant(): number;
                invert(arg0: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                translate(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                translate(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                translateLocal(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                translateLocal(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                get(arg0: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                get(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                getTransposed(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposedFloats(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposedFloats(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get3x3(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get3x3(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get3x3(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get3x3(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get4x4(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get4x4(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get4x4(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get4x4(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Matrix3x2dc;
                get(arg0: number[], arg1: number): number[];
                get(arg0: number[]): number[];
                get3x3(arg0: number[], arg1: number): number[];
                get3x3(arg0: number[]): number[];
                get4x4(arg0: number[], arg1: number): number[];
                get4x4(arg0: number[]): number[];
                scale(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                scale(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                scale(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                scaleLocal(arg0: number, arg1: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                scaleLocal(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                scaleAroundLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                scaleAroundLocal(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                scale(arg0: number, arg1: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                transform(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transform(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transform(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPosition(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                transformPosition(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                transformPosition(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                transformDirection(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                transformDirection(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                transformDirection(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                rotate(arg0: number, arg1: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                rotateLocal(arg0: number, arg1: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                rotateAbout(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                rotateTo(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2dc, arg2: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                view(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                origin(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                viewArea(arg0: number[]): number[];
                positiveX(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                normalizedPositiveX(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                positiveY(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                normalizedPositiveY(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                unproject(arg0: number, arg1: number, arg2: number[], arg3: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                unprojectInv(arg0: number, arg1: number, arg2: number[], arg3: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                testPoint(arg0: number, arg1: number): boolean;
                testCircle(arg0: number, arg1: number, arg2: number): boolean;
                testAar(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                equals(arg0: _javatypes.org.joml.Matrix3x2dc, arg1: number): boolean;
                isFinite(): boolean;
                
            }
            namespace Matrix3x2dc {
                interface static {
                    
                    
                    
                }
            }
            interface Vector2i extends any, _javatypes.java.io.Externalizable, _javatypes.java.lang.Cloneable, _javatypes.org.joml.Vector2ic {
                x: number;
                y: number;
                
                x(): number;
                y(): number;
                set(arg0: number): _javatypes.org.joml.Vector2i;
                set(arg0: number, arg1: number): _javatypes.org.joml.Vector2i;
                set(arg0: _javatypes.org.joml.Vector2ic): _javatypes.org.joml.Vector2i;
                set(arg0: _javatypes.org.joml.Vector2dc): _javatypes.org.joml.Vector2i;
                set(arg0: _javatypes.org.joml.Vector2dc, arg1: number): _javatypes.org.joml.Vector2i;
                set(arg0: _javatypes.org.joml.Vector2fc, arg1: number): _javatypes.org.joml.Vector2i;
                set(arg0: number[]): _javatypes.org.joml.Vector2i;
                set(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector2i;
                set(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector2i;
                set(arg0: _javatypes.java.nio.IntBuffer): _javatypes.org.joml.Vector2i;
                set(arg0: number, arg1: _javatypes.java.nio.IntBuffer): _javatypes.org.joml.Vector2i;
                setFromAddress(arg0: number): _javatypes.org.joml.Vector2i;
                get(arg0: number): number;
                setComponent(arg0: number, arg1: number): _javatypes.org.joml.Vector2i;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: _javatypes.java.nio.IntBuffer): _javatypes.java.nio.IntBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.IntBuffer): _javatypes.java.nio.IntBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Vector2ic;
                sub(arg0: _javatypes.org.joml.Vector2ic): _javatypes.org.joml.Vector2i;
                sub(arg0: _javatypes.org.joml.Vector2ic, arg1: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                sub(arg0: number, arg1: number): _javatypes.org.joml.Vector2i;
                sub(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                lengthSquared(): number;
                length(): number;
                distance(arg0: _javatypes.org.joml.Vector2ic): number;
                distance(arg0: number, arg1: number): number;
                distanceSquared(arg0: _javatypes.org.joml.Vector2ic): number;
                distanceSquared(arg0: number, arg1: number): number;
                gridDistance(arg0: _javatypes.org.joml.Vector2ic): number;
                gridDistance(arg0: number, arg1: number): number;
                add(arg0: _javatypes.org.joml.Vector2ic): _javatypes.org.joml.Vector2i;
                add(arg0: _javatypes.org.joml.Vector2ic, arg1: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                add(arg0: number, arg1: number): _javatypes.org.joml.Vector2i;
                add(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                mul(arg0: number): _javatypes.org.joml.Vector2i;
                mul(arg0: number, arg1: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                mul(arg0: _javatypes.org.joml.Vector2ic): _javatypes.org.joml.Vector2i;
                mul(arg0: _javatypes.org.joml.Vector2ic, arg1: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                mul(arg0: number, arg1: number): _javatypes.org.joml.Vector2i;
                mul(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                div(arg0: number): _javatypes.org.joml.Vector2i;
                div(arg0: number, arg1: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                div(arg0: number): _javatypes.org.joml.Vector2i;
                div(arg0: number, arg1: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                zero(): _javatypes.org.joml.Vector2i;
                writeExternal(arg0: _javatypes.java.io.ObjectOutput): void;
                readExternal(arg0: _javatypes.java.io.ObjectInput): void;
                negate(): _javatypes.org.joml.Vector2i;
                negate(arg0: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                min(arg0: _javatypes.org.joml.Vector2ic): _javatypes.org.joml.Vector2i;
                min(arg0: _javatypes.org.joml.Vector2ic, arg1: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                max(arg0: _javatypes.org.joml.Vector2ic): _javatypes.org.joml.Vector2i;
                max(arg0: _javatypes.org.joml.Vector2ic, arg1: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                maxComponent(): number;
                minComponent(): number;
                absolute(): _javatypes.org.joml.Vector2i;
                absolute(arg0: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                hashCode(): number;
                equals(arg0: any): boolean;
                equals(arg0: number, arg1: number): boolean;
                toString(): string;
                toString(arg0: _javatypes.java.text.NumberFormat): string;
                clone(): any;
                
            }
            namespace Vector2i {
                interface static {
                    new (): _javatypes.org.joml.Vector2i;
                    new (arg0: number): _javatypes.org.joml.Vector2i;
                    new (arg0: number, arg1: number): _javatypes.org.joml.Vector2i;
                    new (arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector2i;
                    new (arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector2i;
                    new (arg0: _javatypes.org.joml.Vector2ic): _javatypes.org.joml.Vector2i;
                    new (arg0: _javatypes.org.joml.Vector2fc, arg1: number): _javatypes.org.joml.Vector2i;
                    new (arg0: _javatypes.org.joml.Vector2dc, arg1: number): _javatypes.org.joml.Vector2i;
                    new (arg0: number[]): _javatypes.org.joml.Vector2i;
                    new (arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector2i;
                    new (arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector2i;
                    new (arg0: _javatypes.java.nio.IntBuffer): _javatypes.org.joml.Vector2i;
                    new (arg0: number, arg1: _javatypes.java.nio.IntBuffer): _javatypes.org.joml.Vector2i;
                    
                    
                    lengthSquared(arg0: number, arg1: number): number;
                    length(arg0: number, arg1: number): number;
                    distance(arg0: number, arg1: number, arg2: number, arg3: number): number;
                    distanceSquared(arg0: number, arg1: number, arg2: number, arg3: number): number;
                    
                }
            }
            interface Matrix4f extends any, _javatypes.java.io.Externalizable, _javatypes.java.lang.Cloneable, _javatypes.org.joml.Matrix4fc {
                
                assume(arg0: number): _javatypes.org.joml.Matrix4f;
                determineProperties(): _javatypes.org.joml.Matrix4f;
                properties(): number;
                m00(): number;
                m01(): number;
                m02(): number;
                m03(): number;
                m10(): number;
                m11(): number;
                m12(): number;
                m13(): number;
                m20(): number;
                m21(): number;
                m22(): number;
                m23(): number;
                m30(): number;
                m31(): number;
                m32(): number;
                m33(): number;
                m00(arg0: number): _javatypes.org.joml.Matrix4f;
                m01(arg0: number): _javatypes.org.joml.Matrix4f;
                m02(arg0: number): _javatypes.org.joml.Matrix4f;
                m03(arg0: number): _javatypes.org.joml.Matrix4f;
                m10(arg0: number): _javatypes.org.joml.Matrix4f;
                m11(arg0: number): _javatypes.org.joml.Matrix4f;
                m12(arg0: number): _javatypes.org.joml.Matrix4f;
                m13(arg0: number): _javatypes.org.joml.Matrix4f;
                m20(arg0: number): _javatypes.org.joml.Matrix4f;
                m21(arg0: number): _javatypes.org.joml.Matrix4f;
                m22(arg0: number): _javatypes.org.joml.Matrix4f;
                m23(arg0: number): _javatypes.org.joml.Matrix4f;
                m30(arg0: number): _javatypes.org.joml.Matrix4f;
                m31(arg0: number): _javatypes.org.joml.Matrix4f;
                m32(arg0: number): _javatypes.org.joml.Matrix4f;
                m33(arg0: number): _javatypes.org.joml.Matrix4f;
                identity(): _javatypes.org.joml.Matrix4f;
                set(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Matrix4f;
                setTransposed(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Matrix4f;
                set(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Matrix4f;
                set(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Matrix4f;
                set(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Matrix4f;
                set(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.Matrix4f;
                set(arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.Matrix4f;
                set(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix4f;
                set(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Matrix4f;
                set3x3(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                set4x3(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Matrix4f;
                set4x3(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mul(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Matrix4f;
                mul(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mul0(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Matrix4f;
                mul0(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mul(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: number, arg12: number, arg13: number, arg14: number, arg15: number): _javatypes.org.joml.Matrix4f;
                mul(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: number, arg12: number, arg13: number, arg14: number, arg15: number, arg16: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mul3x3(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix4f;
                mul3x3(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mulLocal(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Matrix4f;
                mulLocal(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mulLocalAffine(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Matrix4f;
                mulLocalAffine(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mul(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Matrix4f;
                mul(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mul(arg0: _javatypes.org.joml.Matrix3x2fc): _javatypes.org.joml.Matrix4f;
                mul(arg0: _javatypes.org.joml.Matrix3x2fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mulPerspectiveAffine(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Matrix4f;
                mulPerspectiveAffine(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mulPerspectiveAffine(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Matrix4f;
                mulPerspectiveAffine(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mulAffineR(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Matrix4f;
                mulAffineR(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mulAffine(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Matrix4f;
                mulAffine(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mulTranslationAffine(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mulOrthoAffine(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Matrix4f;
                mulOrthoAffine(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                fma4x3(arg0: _javatypes.org.joml.Matrix4fc, arg1: number): _javatypes.org.joml.Matrix4f;
                fma4x3(arg0: _javatypes.org.joml.Matrix4fc, arg1: number, arg2: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                add(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Matrix4f;
                add(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                sub(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Matrix4f;
                sub(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mulComponentWise(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Matrix4f;
                mulComponentWise(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                add4x3(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Matrix4f;
                add4x3(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                sub4x3(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                sub4x3(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mul4x3ComponentWise(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Matrix4f;
                mul4x3ComponentWise(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                set(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: number, arg12: number, arg13: number, arg14: number, arg15: number): _javatypes.org.joml.Matrix4f;
                set(arg0: number[], arg1: number): _javatypes.org.joml.Matrix4f;
                set(arg0: number[]): _javatypes.org.joml.Matrix4f;
                setTransposed(arg0: number[], arg1: number): _javatypes.org.joml.Matrix4f;
                setTransposed(arg0: number[]): _javatypes.org.joml.Matrix4f;
                set(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Matrix4f;
                set(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix4f;
                set(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Matrix4f;
                set(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix4f;
                setTransposed(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Matrix4f;
                setTransposed(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix4f;
                setFromAddress(arg0: number): _javatypes.org.joml.Matrix4f;
                setTransposedFromAddress(arg0: number): _javatypes.org.joml.Matrix4f;
                set(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4fc, arg2: _javatypes.org.joml.Vector4fc, arg3: _javatypes.org.joml.Vector4fc): _javatypes.org.joml.Matrix4f;
                determinant(): number;
                determinant3x3(): number;
                determinantAffine(): number;
                invert(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                invert(): _javatypes.org.joml.Matrix4f;
                invertPerspective(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                invertPerspective(): _javatypes.org.joml.Matrix4f;
                invertFrustum(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                invertFrustum(): _javatypes.org.joml.Matrix4f;
                invertOrtho(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                invertOrtho(): _javatypes.org.joml.Matrix4f;
                invertPerspectiveView(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                invertPerspectiveView(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                invertAffine(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                invertAffine(): _javatypes.org.joml.Matrix4f;
                transpose(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                transpose3x3(): _javatypes.org.joml.Matrix4f;
                transpose3x3(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                transpose3x3(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                transpose(): _javatypes.org.joml.Matrix4f;
                translation(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4f;
                translation(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                setTranslation(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4f;
                setTranslation(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                getTranslation(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                getScale(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                toString(): string;
                toString(arg0: _javatypes.java.text.NumberFormat): string;
                get(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                get4x3(arg0: _javatypes.org.joml.Matrix4x3f): _javatypes.org.joml.Matrix4x3f;
                get(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                get3x3(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                get3x3(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                getRotation(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.AxisAngle4f;
                getRotation(arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.AxisAngle4d;
                getUnnormalizedRotation(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getNormalizedRotation(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getUnnormalizedRotation(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                getNormalizedRotation(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                get(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get4x3(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get4x3(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get4x3(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get4x3(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get3x4(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get3x4(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get3x4(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get3x4(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get4x3Transposed(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get4x3Transposed(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get4x3Transposed(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get4x3Transposed(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Matrix4fc;
                get(arg0: number[], arg1: number): number[];
                get(arg0: number[]): number[];
                zero(): _javatypes.org.joml.Matrix4f;
                scaling(arg0: number): _javatypes.org.joml.Matrix4f;
                scaling(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4f;
                scaling(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                rotation(arg0: number, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                rotation(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.Matrix4f;
                rotation(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                rotationX(arg0: number): _javatypes.org.joml.Matrix4f;
                rotationY(arg0: number): _javatypes.org.joml.Matrix4f;
                rotationZ(arg0: number): _javatypes.org.joml.Matrix4f;
                rotationTowardsXY(arg0: number, arg1: number): _javatypes.org.joml.Matrix4f;
                rotationXYZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4f;
                rotationZYX(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4f;
                rotationYXZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4f;
                setRotationXYZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4f;
                setRotationZYX(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4f;
                setRotationYXZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4f;
                rotation(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix4f;
                translationRotateScale(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number): _javatypes.org.joml.Matrix4f;
                translationRotateScale(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Quaternionfc, arg2: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                translationRotateScale(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): _javatypes.org.joml.Matrix4f;
                translationRotateScale(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Quaternionfc, arg2: number): _javatypes.org.joml.Matrix4f;
                translationRotateScaleInvert(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number): _javatypes.org.joml.Matrix4f;
                translationRotateScaleInvert(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Quaternionfc, arg2: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                translationRotateScaleInvert(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Quaternionfc, arg2: number): _javatypes.org.joml.Matrix4f;
                translationRotateScaleMulAffine(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                translationRotateScaleMulAffine(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Quaternionfc, arg2: _javatypes.org.joml.Vector3fc, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                translationRotate(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): _javatypes.org.joml.Matrix4f;
                translationRotate(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix4f;
                translationRotate(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix4f;
                translationRotateInvert(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): _javatypes.org.joml.Matrix4f;
                translationRotateInvert(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix4f;
                set3x3(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Matrix4f;
                transform(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transform(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transform(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformTranspose(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformTranspose(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformTranspose(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformProject(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformProject(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformProject(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformProject(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformProject(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformProject(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformProject(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformProject(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPosition(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPosition(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPosition(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformDirection(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformDirection(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformDirection(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformAffine(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformAffine(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformAffine(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                scale(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                scale(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                scale(arg0: number, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                scale(arg0: number): _javatypes.org.joml.Matrix4f;
                scaleXY(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                scaleXY(arg0: number, arg1: number): _javatypes.org.joml.Matrix4f;
                scale(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                scale(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4f;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4f;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                scaleLocal(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                scaleLocal(arg0: number, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                scaleLocal(arg0: number): _javatypes.org.joml.Matrix4f;
                scaleLocal(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4f;
                scaleAroundLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                scaleAroundLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4f;
                scaleAroundLocal(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                scaleAroundLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateX(arg0: number, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateX(arg0: number): _javatypes.org.joml.Matrix4f;
                rotateY(arg0: number, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateY(arg0: number): _javatypes.org.joml.Matrix4f;
                rotateZ(arg0: number, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateZ(arg0: number): _javatypes.org.joml.Matrix4f;
                rotateTowardsXY(arg0: number, arg1: number): _javatypes.org.joml.Matrix4f;
                rotateTowardsXY(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateXYZ(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                rotateXYZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4f;
                rotateXYZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateAffineXYZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4f;
                rotateAffineXYZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateZYX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix4f;
                rotateZYX(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4f;
                rotateZYX(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateAffineZYX(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4f;
                rotateAffineZYX(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateYXZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix4f;
                rotateYXZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4f;
                rotateYXZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateAffineYXZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4f;
                rotateAffineYXZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotate(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotate(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                rotateTranslation(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateAffine(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateAffine(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                rotateLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateLocal(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                rotateLocalX(arg0: number, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateLocalX(arg0: number): _javatypes.org.joml.Matrix4f;
                rotateLocalY(arg0: number, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateLocalY(arg0: number): _javatypes.org.joml.Matrix4f;
                rotateLocalZ(arg0: number, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateLocalZ(arg0: number): _javatypes.org.joml.Matrix4f;
                translate(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                translate(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                translate(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                translate(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4f;
                translateLocal(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                translateLocal(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                translateLocal(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                translateLocal(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4f;
                writeExternal(arg0: _javatypes.java.io.ObjectOutput): void;
                readExternal(arg0: _javatypes.java.io.ObjectInput): void;
                ortho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                ortho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                ortho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4f;
                ortho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4f;
                orthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                orthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                orthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4f;
                orthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4f;
                setOrtho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4f;
                setOrtho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4f;
                setOrthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4f;
                setOrthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4f;
                orthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                orthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                orthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4f;
                orthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                orthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                orthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                orthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4f;
                orthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                setOrthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4f;
                setOrthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                setOrthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4f;
                setOrthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                ortho2D(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                ortho2D(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                ortho2DLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                ortho2DLH(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                setOrtho2D(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                setOrtho2DLH(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                lookAlong(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                lookAlong(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                lookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                lookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4f;
                setLookAlong(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                setLookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4f;
                setLookAt(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                setLookAt(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix4f;
                lookAt(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                lookAt(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                lookAt(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                lookAtPerspective(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                lookAt(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix4f;
                setLookAtLH(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                setLookAtLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix4f;
                lookAtLH(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                lookAtLH(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                lookAtLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                lookAtLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix4f;
                lookAtPerspectiveLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                tile(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                tile(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                perspective(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                perspective(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                perspective(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4f;
                perspective(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                perspectiveRect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                perspectiveRect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                perspectiveRect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4f;
                perspectiveRect(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                perspectiveOffCenter(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                perspectiveOffCenter(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                perspectiveOffCenter(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4f;
                perspectiveOffCenter(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4f;
                perspectiveOffCenterFov(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4f;
                perspectiveOffCenterFov(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                perspectiveOffCenterFov(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4f;
                perspectiveOffCenterFov(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                perspectiveOffCenterFovLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4f;
                perspectiveOffCenterFovLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                perspectiveOffCenterFovLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4f;
                perspectiveOffCenterFovLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                setPerspective(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4f;
                setPerspective(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                setPerspectiveRect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4f;
                setPerspectiveRect(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                setPerspectiveOffCenter(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4f;
                setPerspectiveOffCenter(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4f;
                setPerspectiveOffCenterFov(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4f;
                setPerspectiveOffCenterFov(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4f;
                setPerspectiveOffCenterFovLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4f;
                setPerspectiveOffCenterFovLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4f;
                perspectiveLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                perspectiveLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4f;
                perspectiveLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                perspectiveLH(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                setPerspectiveLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4f;
                setPerspectiveLH(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                frustum(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                frustum(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                frustum(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4f;
                frustum(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4f;
                setFrustum(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4f;
                setFrustum(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4f;
                frustumLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                frustumLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4f;
                frustumLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                frustumLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4f;
                setFrustumLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4f;
                setFrustumLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4f;
                setFromIntrinsic(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix4f;
                rotate(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotate(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix4f;
                rotateAffine(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateAffine(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix4f;
                rotateTranslation(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateAround(arg0: _javatypes.org.joml.Quaternionfc, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                rotateAroundAffine(arg0: _javatypes.org.joml.Quaternionfc, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateAround(arg0: _javatypes.org.joml.Quaternionfc, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotationAround(arg0: _javatypes.org.joml.Quaternionfc, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                rotateLocal(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateLocal(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix4f;
                rotateAroundLocal(arg0: _javatypes.org.joml.Quaternionfc, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateAroundLocal(arg0: _javatypes.org.joml.Quaternionfc, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                rotate(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.Matrix4f;
                rotate(arg0: _javatypes.org.joml.AxisAngle4f, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                unproject(arg0: number, arg1: number, arg2: number, arg3: number[], arg4: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                unproject(arg0: number, arg1: number, arg2: number, arg3: number[], arg4: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                unproject(arg0: _javatypes.org.joml.Vector3fc, arg1: number[], arg2: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                unproject(arg0: _javatypes.org.joml.Vector3fc, arg1: number[], arg2: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                unprojectRay(arg0: number, arg1: number, arg2: number[], arg3: _javatypes.org.joml.Vector3f, arg4: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix4f;
                unprojectRay(arg0: _javatypes.org.joml.Vector2fc, arg1: number[], arg2: _javatypes.org.joml.Vector3f, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix4f;
                unprojectInv(arg0: _javatypes.org.joml.Vector3fc, arg1: number[], arg2: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                unprojectInv(arg0: number, arg1: number, arg2: number, arg3: number[], arg4: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                unprojectInvRay(arg0: _javatypes.org.joml.Vector2fc, arg1: number[], arg2: _javatypes.org.joml.Vector3f, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix4f;
                unprojectInvRay(arg0: number, arg1: number, arg2: number[], arg3: _javatypes.org.joml.Vector3f, arg4: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix4f;
                unprojectInv(arg0: _javatypes.org.joml.Vector3fc, arg1: number[], arg2: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                unprojectInv(arg0: number, arg1: number, arg2: number, arg3: number[], arg4: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                project(arg0: number, arg1: number, arg2: number, arg3: number[], arg4: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                project(arg0: number, arg1: number, arg2: number, arg3: number[], arg4: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                project(arg0: _javatypes.org.joml.Vector3fc, arg1: number[], arg2: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                project(arg0: _javatypes.org.joml.Vector3fc, arg1: number[], arg2: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                reflect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                reflect(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                reflect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4f;
                reflect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                reflect(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                reflect(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                reflect(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                reflect(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                reflection(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                reflection(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4f;
                reflection(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                reflection(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                getRow(arg0: number, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                getRow(arg0: number, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                setRow(arg0: number, arg1: _javatypes.org.joml.Vector4fc): _javatypes.org.joml.Matrix4f;
                getColumn(arg0: number, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                getColumn(arg0: number, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                setColumn(arg0: number, arg1: _javatypes.org.joml.Vector4fc): _javatypes.org.joml.Matrix4f;
                get(arg0: number, arg1: number): number;
                set(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4f;
                getRowColumn(arg0: number, arg1: number): number;
                setRowColumn(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4f;
                normal(): _javatypes.org.joml.Matrix4f;
                normal(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                normal(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                cofactor3x3(): _javatypes.org.joml.Matrix4f;
                cofactor3x3(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                cofactor3x3(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                normalize3x3(): _javatypes.org.joml.Matrix4f;
                normalize3x3(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                normalize3x3(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                frustumPlane(arg0: number, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                frustumCorner(arg0: number, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                perspectiveOrigin(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                perspectiveInvOrigin(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                perspectiveFov(): number;
                perspectiveNear(): number;
                perspectiveFar(): number;
                frustumRayDir(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                positiveZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normalizedPositiveZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                positiveX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normalizedPositiveX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                positiveY(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                normalizedPositiveY(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                originAffine(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                origin(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                shadow(arg0: _javatypes.org.joml.Vector4f, arg1: number, arg2: number, arg3: number, arg4: number): _javatypes.org.joml.Matrix4f;
                shadow(arg0: _javatypes.org.joml.Vector4f, arg1: number, arg2: number, arg3: number, arg4: number, arg5: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                shadow(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): _javatypes.org.joml.Matrix4f;
                shadow(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                shadow(arg0: _javatypes.org.joml.Vector4f, arg1: _javatypes.org.joml.Matrix4fc, arg2: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                shadow(arg0: _javatypes.org.joml.Vector4f, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                shadow(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4fc, arg5: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                shadow(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                billboardCylindrical(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                billboardSpherical(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                billboardSpherical(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                hashCode(): number;
                equals(arg0: any): boolean;
                equals(arg0: _javatypes.org.joml.Matrix4fc, arg1: number): boolean;
                pick(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                pick(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[]): _javatypes.org.joml.Matrix4f;
                isAffine(): boolean;
                swap(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                arcball(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                arcball(arg0: number, arg1: _javatypes.org.joml.Vector3fc, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                arcball(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4f;
                arcball(arg0: number, arg1: _javatypes.org.joml.Vector3fc, arg2: number, arg3: number): _javatypes.org.joml.Matrix4f;
                frustumAabb(arg0: _javatypes.org.joml.Vector3f, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix4f;
                projectedGridRange(arg0: _javatypes.org.joml.Matrix4fc, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                perspectiveFrustumSlice(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                orthoCrop(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                trapezoidCrop(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): _javatypes.org.joml.Matrix4f;
                transformAab(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Vector3f, arg7: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix4f;
                transformAab(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3f, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix4f;
                lerp(arg0: _javatypes.org.joml.Matrix4fc, arg1: number): _javatypes.org.joml.Matrix4f;
                lerp(arg0: _javatypes.org.joml.Matrix4fc, arg1: number, arg2: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateTowards(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotateTowards(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                rotateTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4f;
                rotateTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                rotationTowards(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                rotationTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4f;
                translationRotateTowards(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                translationRotateTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix4f;
                getEulerAnglesZYX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                getEulerAnglesXYZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                affineSpan(arg0: _javatypes.org.joml.Vector3f, arg1: _javatypes.org.joml.Vector3f, arg2: _javatypes.org.joml.Vector3f, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Matrix4f;
                testPoint(arg0: number, arg1: number, arg2: number): boolean;
                testSphere(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                testAab(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
                obliqueZ(arg0: number, arg1: number): _javatypes.org.joml.Matrix4f;
                obliqueZ(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                withLookAtUp(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4f;
                withLookAtUp(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                withLookAtUp(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4f;
                withLookAtUp(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapXZY(): _javatypes.org.joml.Matrix4f;
                mapXZY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapXZnY(): _javatypes.org.joml.Matrix4f;
                mapXZnY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapXnYnZ(): _javatypes.org.joml.Matrix4f;
                mapXnYnZ(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapXnZY(): _javatypes.org.joml.Matrix4f;
                mapXnZY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapXnZnY(): _javatypes.org.joml.Matrix4f;
                mapXnZnY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapYXZ(): _javatypes.org.joml.Matrix4f;
                mapYXZ(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapYXnZ(): _javatypes.org.joml.Matrix4f;
                mapYXnZ(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapYZX(): _javatypes.org.joml.Matrix4f;
                mapYZX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapYZnX(): _javatypes.org.joml.Matrix4f;
                mapYZnX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapYnXZ(): _javatypes.org.joml.Matrix4f;
                mapYnXZ(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapYnXnZ(): _javatypes.org.joml.Matrix4f;
                mapYnXnZ(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapYnZX(): _javatypes.org.joml.Matrix4f;
                mapYnZX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapYnZnX(): _javatypes.org.joml.Matrix4f;
                mapYnZnX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapZXY(): _javatypes.org.joml.Matrix4f;
                mapZXY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapZXnY(): _javatypes.org.joml.Matrix4f;
                mapZXnY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapZYX(): _javatypes.org.joml.Matrix4f;
                mapZYX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapZYnX(): _javatypes.org.joml.Matrix4f;
                mapZYnX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapZnXY(): _javatypes.org.joml.Matrix4f;
                mapZnXY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapZnXnY(): _javatypes.org.joml.Matrix4f;
                mapZnXnY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapZnYX(): _javatypes.org.joml.Matrix4f;
                mapZnYX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapZnYnX(): _javatypes.org.joml.Matrix4f;
                mapZnYnX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnXYnZ(): _javatypes.org.joml.Matrix4f;
                mapnXYnZ(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnXZY(): _javatypes.org.joml.Matrix4f;
                mapnXZY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnXZnY(): _javatypes.org.joml.Matrix4f;
                mapnXZnY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnXnYZ(): _javatypes.org.joml.Matrix4f;
                mapnXnYZ(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnXnYnZ(): _javatypes.org.joml.Matrix4f;
                mapnXnYnZ(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnXnZY(): _javatypes.org.joml.Matrix4f;
                mapnXnZY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnXnZnY(): _javatypes.org.joml.Matrix4f;
                mapnXnZnY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnYXZ(): _javatypes.org.joml.Matrix4f;
                mapnYXZ(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnYXnZ(): _javatypes.org.joml.Matrix4f;
                mapnYXnZ(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnYZX(): _javatypes.org.joml.Matrix4f;
                mapnYZX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnYZnX(): _javatypes.org.joml.Matrix4f;
                mapnYZnX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnYnXZ(): _javatypes.org.joml.Matrix4f;
                mapnYnXZ(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnYnXnZ(): _javatypes.org.joml.Matrix4f;
                mapnYnXnZ(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnYnZX(): _javatypes.org.joml.Matrix4f;
                mapnYnZX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnYnZnX(): _javatypes.org.joml.Matrix4f;
                mapnYnZnX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnZXY(): _javatypes.org.joml.Matrix4f;
                mapnZXY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnZXnY(): _javatypes.org.joml.Matrix4f;
                mapnZXnY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnZYX(): _javatypes.org.joml.Matrix4f;
                mapnZYX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnZYnX(): _javatypes.org.joml.Matrix4f;
                mapnZYnX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnZnXY(): _javatypes.org.joml.Matrix4f;
                mapnZnXY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnZnXnY(): _javatypes.org.joml.Matrix4f;
                mapnZnXnY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnZnYX(): _javatypes.org.joml.Matrix4f;
                mapnZnYX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                mapnZnYnX(): _javatypes.org.joml.Matrix4f;
                mapnZnYnX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                negateX(): _javatypes.org.joml.Matrix4f;
                negateX(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                negateY(): _javatypes.org.joml.Matrix4f;
                negateY(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                negateZ(): _javatypes.org.joml.Matrix4f;
                negateZ(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                isFinite(): boolean;
                clone(): any;
                
            }
            namespace Matrix4f {
                interface static {
                    new (): _javatypes.org.joml.Matrix4f;
                    new (arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Matrix4f;
                    new (arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Matrix4f;
                    new (arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Matrix4f;
                    new (arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Matrix4f;
                    new (arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: number, arg12: number, arg13: number, arg14: number, arg15: number): _javatypes.org.joml.Matrix4f;
                    new (arg0: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Matrix4f;
                    new (arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4fc, arg2: _javatypes.org.joml.Vector4fc, arg3: _javatypes.org.joml.Vector4fc): _javatypes.org.joml.Matrix4f;
                    
                    
                    perspectiveOffCenterViewFromRectangle(arg0: _javatypes.org.joml.Vector3f, arg1: _javatypes.org.joml.Vector3f, arg2: _javatypes.org.joml.Vector3f, arg3: _javatypes.org.joml.Vector3f, arg4: number, arg5: boolean, arg6: _javatypes.org.joml.Matrix4f, arg7: _javatypes.org.joml.Matrix4f): void;
                    
                }
            }
            interface Matrix3d extends any, _javatypes.java.io.Externalizable, _javatypes.java.lang.Cloneable, _javatypes.org.joml.Matrix3dc {
                m00: number;
                m01: number;
                m02: number;
                m10: number;
                m11: number;
                m12: number;
                m20: number;
                m21: number;
                m22: number;
                
                m00(): number;
                m01(): number;
                m02(): number;
                m10(): number;
                m11(): number;
                m12(): number;
                m20(): number;
                m21(): number;
                m22(): number;
                m00(arg0: number): _javatypes.org.joml.Matrix3d;
                m01(arg0: number): _javatypes.org.joml.Matrix3d;
                m02(arg0: number): _javatypes.org.joml.Matrix3d;
                m10(arg0: number): _javatypes.org.joml.Matrix3d;
                m11(arg0: number): _javatypes.org.joml.Matrix3d;
                m12(arg0: number): _javatypes.org.joml.Matrix3d;
                m20(arg0: number): _javatypes.org.joml.Matrix3d;
                m21(arg0: number): _javatypes.org.joml.Matrix3d;
                m22(arg0: number): _javatypes.org.joml.Matrix3d;
                set(arg0: _javatypes.org.joml.Matrix3dc): _javatypes.org.joml.Matrix3d;
                setTransposed(arg0: _javatypes.org.joml.Matrix3dc): _javatypes.org.joml.Matrix3d;
                set(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Matrix3d;
                setTransposed(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Matrix3d;
                set(arg0: _javatypes.org.joml.Matrix4x3dc): _javatypes.org.joml.Matrix3d;
                set(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Matrix3d;
                set(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Matrix3d;
                set(arg0: _javatypes.org.joml.Matrix2fc): _javatypes.org.joml.Matrix3d;
                set(arg0: _javatypes.org.joml.Matrix2dc): _javatypes.org.joml.Matrix3d;
                set(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.Matrix3d;
                set(arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.Matrix3d;
                set(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix3d;
                set(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Matrix3d;
                mul(arg0: _javatypes.org.joml.Matrix3dc): _javatypes.org.joml.Matrix3d;
                mul(arg0: _javatypes.org.joml.Matrix3dc, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mulLocal(arg0: _javatypes.org.joml.Matrix3dc): _javatypes.org.joml.Matrix3d;
                mulLocal(arg0: _javatypes.org.joml.Matrix3dc, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mul(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Matrix3d;
                mul(arg0: _javatypes.org.joml.Matrix3fc, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                set(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix3d;
                set(arg0: number[]): _javatypes.org.joml.Matrix3d;
                set(arg0: number[]): _javatypes.org.joml.Matrix3d;
                determinant(): number;
                invert(): _javatypes.org.joml.Matrix3d;
                invert(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                transpose(): _javatypes.org.joml.Matrix3d;
                transpose(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                toString(): string;
                toString(arg0: _javatypes.java.text.NumberFormat): string;
                get(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                getRotation(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.AxisAngle4f;
                getUnnormalizedRotation(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getNormalizedRotation(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getUnnormalizedRotation(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                getNormalizedRotation(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                get(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getFloats(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getFloats(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                getTransposed(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposedFloats(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposedFloats(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Matrix3dc;
                get(arg0: number[], arg1: number): number[];
                get(arg0: number[]): number[];
                get(arg0: number[], arg1: number): number[];
                get(arg0: number[]): number[];
                set(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Matrix3d;
                set(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Matrix3d;
                set(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix3d;
                setFloats(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix3d;
                set(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Matrix3d;
                set(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Matrix3d;
                set(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix3d;
                setFloats(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix3d;
                setFromAddress(arg0: number): _javatypes.org.joml.Matrix3d;
                set(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix3d;
                zero(): _javatypes.org.joml.Matrix3d;
                identity(): _javatypes.org.joml.Matrix3d;
                scaling(arg0: number): _javatypes.org.joml.Matrix3d;
                scaling(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3d;
                scaling(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix3d;
                scale(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                scale(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix3d;
                scale(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                scale(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3d;
                scale(arg0: number, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                scale(arg0: number): _javatypes.org.joml.Matrix3d;
                scaleLocal(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                scaleLocal(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3d;
                rotation(arg0: number, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix3d;
                rotation(arg0: number, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix3d;
                rotation(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.Matrix3d;
                rotation(arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.Matrix3d;
                rotation(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix3d;
                rotationX(arg0: number): _javatypes.org.joml.Matrix3d;
                rotationY(arg0: number): _javatypes.org.joml.Matrix3d;
                rotationZ(arg0: number): _javatypes.org.joml.Matrix3d;
                rotationXYZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3d;
                rotationZYX(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3d;
                rotationYXZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3d;
                rotation(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Matrix3d;
                rotation(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix3d;
                transform(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transform(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transform(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transform(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transform(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformTranspose(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformTranspose(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformTranspose(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                writeExternal(arg0: _javatypes.java.io.ObjectOutput): void;
                readExternal(arg0: _javatypes.java.io.ObjectInput): void;
                rotateX(arg0: number, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateX(arg0: number): _javatypes.org.joml.Matrix3d;
                rotateY(arg0: number, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateY(arg0: number): _javatypes.org.joml.Matrix3d;
                rotateZ(arg0: number, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateZ(arg0: number): _javatypes.org.joml.Matrix3d;
                rotateXYZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3d;
                rotateXYZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateZYX(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3d;
                rotateZYX(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateYXZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Matrix3d;
                rotateYXZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3d;
                rotateYXZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotate(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix3d;
                rotate(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateLocal(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix3d;
                rotateLocalX(arg0: number, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateLocalX(arg0: number): _javatypes.org.joml.Matrix3d;
                rotateLocalY(arg0: number, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateLocalY(arg0: number): _javatypes.org.joml.Matrix3d;
                rotateLocalZ(arg0: number, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateLocalZ(arg0: number): _javatypes.org.joml.Matrix3d;
                rotateLocal(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateLocal(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Matrix3d;
                rotateLocal(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateLocal(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix3d;
                rotate(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Matrix3d;
                rotate(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotate(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix3d;
                rotate(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotate(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.Matrix3d;
                rotate(arg0: _javatypes.org.joml.AxisAngle4f, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotate(arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.Matrix3d;
                rotate(arg0: _javatypes.org.joml.AxisAngle4d, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix3d;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix3d;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                getRow(arg0: number, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                setRow(arg0: number, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix3d;
                setRow(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix3d;
                getColumn(arg0: number, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                setColumn(arg0: number, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix3d;
                setColumn(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix3d;
                get(arg0: number, arg1: number): number;
                set(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3d;
                getRowColumn(arg0: number, arg1: number): number;
                setRowColumn(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3d;
                normal(): _javatypes.org.joml.Matrix3d;
                normal(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                cofactor(): _javatypes.org.joml.Matrix3d;
                cofactor(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                lookAlong(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix3d;
                lookAlong(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                lookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                lookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix3d;
                setLookAlong(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix3d;
                setLookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix3d;
                getScale(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                positiveZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normalizedPositiveZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                positiveX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normalizedPositiveX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                positiveY(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normalizedPositiveY(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                hashCode(): number;
                equals(arg0: any): boolean;
                equals(arg0: _javatypes.org.joml.Matrix3dc, arg1: number): boolean;
                swap(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                add(arg0: _javatypes.org.joml.Matrix3dc): _javatypes.org.joml.Matrix3d;
                add(arg0: _javatypes.org.joml.Matrix3dc, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                sub(arg0: _javatypes.org.joml.Matrix3dc): _javatypes.org.joml.Matrix3d;
                sub(arg0: _javatypes.org.joml.Matrix3dc, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mulComponentWise(arg0: _javatypes.org.joml.Matrix3dc): _javatypes.org.joml.Matrix3d;
                mulComponentWise(arg0: _javatypes.org.joml.Matrix3dc, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                setSkewSymmetric(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3d;
                lerp(arg0: _javatypes.org.joml.Matrix3dc, arg1: number): _javatypes.org.joml.Matrix3d;
                lerp(arg0: _javatypes.org.joml.Matrix3dc, arg1: number, arg2: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateTowards(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotateTowards(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix3d;
                rotateTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix3d;
                rotateTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                rotationTowards(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix3d;
                rotationTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix3d;
                getEulerAnglesZYX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                getEulerAnglesXYZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                obliqueZ(arg0: number, arg1: number): _javatypes.org.joml.Matrix3d;
                obliqueZ(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                reflect(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                reflect(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3d;
                reflect(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix3d;
                reflect(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Matrix3d;
                reflect(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                reflect(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                reflection(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3d;
                reflection(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix3d;
                reflection(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Matrix3d;
                isFinite(): boolean;
                quadraticFormProduct(arg0: number, arg1: number, arg2: number): number;
                quadraticFormProduct(arg0: _javatypes.org.joml.Vector3dc): number;
                quadraticFormProduct(arg0: _javatypes.org.joml.Vector3fc): number;
                mapXZY(): _javatypes.org.joml.Matrix3d;
                mapXZY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapXZnY(): _javatypes.org.joml.Matrix3d;
                mapXZnY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapXnYnZ(): _javatypes.org.joml.Matrix3d;
                mapXnYnZ(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapXnZY(): _javatypes.org.joml.Matrix3d;
                mapXnZY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapXnZnY(): _javatypes.org.joml.Matrix3d;
                mapXnZnY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapYXZ(): _javatypes.org.joml.Matrix3d;
                mapYXZ(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapYXnZ(): _javatypes.org.joml.Matrix3d;
                mapYXnZ(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapYZX(): _javatypes.org.joml.Matrix3d;
                mapYZX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapYZnX(): _javatypes.org.joml.Matrix3d;
                mapYZnX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapYnXZ(): _javatypes.org.joml.Matrix3d;
                mapYnXZ(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapYnXnZ(): _javatypes.org.joml.Matrix3d;
                mapYnXnZ(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapYnZX(): _javatypes.org.joml.Matrix3d;
                mapYnZX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapYnZnX(): _javatypes.org.joml.Matrix3d;
                mapYnZnX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapZXY(): _javatypes.org.joml.Matrix3d;
                mapZXY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapZXnY(): _javatypes.org.joml.Matrix3d;
                mapZXnY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapZYX(): _javatypes.org.joml.Matrix3d;
                mapZYX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapZYnX(): _javatypes.org.joml.Matrix3d;
                mapZYnX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapZnXY(): _javatypes.org.joml.Matrix3d;
                mapZnXY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapZnXnY(): _javatypes.org.joml.Matrix3d;
                mapZnXnY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapZnYX(): _javatypes.org.joml.Matrix3d;
                mapZnYX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapZnYnX(): _javatypes.org.joml.Matrix3d;
                mapZnYnX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnXYnZ(): _javatypes.org.joml.Matrix3d;
                mapnXYnZ(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnXZY(): _javatypes.org.joml.Matrix3d;
                mapnXZY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnXZnY(): _javatypes.org.joml.Matrix3d;
                mapnXZnY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnXnYZ(): _javatypes.org.joml.Matrix3d;
                mapnXnYZ(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnXnYnZ(): _javatypes.org.joml.Matrix3d;
                mapnXnYnZ(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnXnZY(): _javatypes.org.joml.Matrix3d;
                mapnXnZY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnXnZnY(): _javatypes.org.joml.Matrix3d;
                mapnXnZnY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnYXZ(): _javatypes.org.joml.Matrix3d;
                mapnYXZ(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnYXnZ(): _javatypes.org.joml.Matrix3d;
                mapnYXnZ(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnYZX(): _javatypes.org.joml.Matrix3d;
                mapnYZX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnYZnX(): _javatypes.org.joml.Matrix3d;
                mapnYZnX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnYnXZ(): _javatypes.org.joml.Matrix3d;
                mapnYnXZ(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnYnXnZ(): _javatypes.org.joml.Matrix3d;
                mapnYnXnZ(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnYnZX(): _javatypes.org.joml.Matrix3d;
                mapnYnZX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnYnZnX(): _javatypes.org.joml.Matrix3d;
                mapnYnZnX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnZXY(): _javatypes.org.joml.Matrix3d;
                mapnZXY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnZXnY(): _javatypes.org.joml.Matrix3d;
                mapnZXnY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnZYX(): _javatypes.org.joml.Matrix3d;
                mapnZYX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnZYnX(): _javatypes.org.joml.Matrix3d;
                mapnZYnX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnZnXY(): _javatypes.org.joml.Matrix3d;
                mapnZnXY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnZnXnY(): _javatypes.org.joml.Matrix3d;
                mapnZnXnY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnZnYX(): _javatypes.org.joml.Matrix3d;
                mapnZnYX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                mapnZnYnX(): _javatypes.org.joml.Matrix3d;
                mapnZnYnX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                negateX(): _javatypes.org.joml.Matrix3d;
                negateX(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                negateY(): _javatypes.org.joml.Matrix3d;
                negateY(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                negateZ(): _javatypes.org.joml.Matrix3d;
                negateZ(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                clone(): any;
                
            }
            namespace Matrix3d {
                interface static {
                    new (): _javatypes.org.joml.Matrix3d;
                    new (arg0: _javatypes.org.joml.Matrix2dc): _javatypes.org.joml.Matrix3d;
                    new (arg0: _javatypes.org.joml.Matrix2fc): _javatypes.org.joml.Matrix3d;
                    new (arg0: _javatypes.org.joml.Matrix3dc): _javatypes.org.joml.Matrix3d;
                    new (arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Matrix3d;
                    new (arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Matrix3d;
                    new (arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Matrix3d;
                    new (arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix3d;
                    new (arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Matrix3d;
                    new (arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix3d;
                    
                    
                    
                }
            }
            interface Matrix2dc extends _javatypes.java.lang.Interface {
                
                m00(): number;
                m01(): number;
                m10(): number;
                m11(): number;
                mul(arg0: _javatypes.org.joml.Matrix2dc, arg1: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                mul(arg0: _javatypes.org.joml.Matrix2fc, arg1: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                mulLocal(arg0: _javatypes.org.joml.Matrix2dc, arg1: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                determinant(): number;
                invert(arg0: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                transpose(arg0: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                get(arg0: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                get(arg0: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                get(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                getRotation(): number;
                get(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getFloats(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getFloats(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                getTransposed(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposedFloats(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposedFloats(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Matrix2dc;
                get(arg0: number[], arg1: number): number[];
                get(arg0: number[]): number[];
                scale(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                scale(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                scale(arg0: number, arg1: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                scaleLocal(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                transform(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                transform(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                transform(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                transformTranspose(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                transformTranspose(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                transformTranspose(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                rotate(arg0: number, arg1: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                rotateLocal(arg0: number, arg1: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                getRow(arg0: number, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                getColumn(arg0: number, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                get(arg0: number, arg1: number): number;
                normal(arg0: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                getScale(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                positiveX(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                normalizedPositiveX(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                positiveY(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                normalizedPositiveY(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                add(arg0: _javatypes.org.joml.Matrix2dc, arg1: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                sub(arg0: _javatypes.org.joml.Matrix2dc, arg1: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                mulComponentWise(arg0: _javatypes.org.joml.Matrix2dc, arg1: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                lerp(arg0: _javatypes.org.joml.Matrix2dc, arg1: number, arg2: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                equals(arg0: _javatypes.org.joml.Matrix2dc, arg1: number): boolean;
                isFinite(): boolean;
                
            }
            namespace Matrix2dc {
                interface static {
                    
                    
                    
                }
            }
            interface Matrix3x2f extends any, _javatypes.org.joml.Matrix3x2fc, _javatypes.java.io.Externalizable, _javatypes.java.lang.Cloneable {
                m00: number;
                m01: number;
                m10: number;
                m11: number;
                m20: number;
                m21: number;
                
                m00(): number;
                m01(): number;
                m10(): number;
                m11(): number;
                m20(): number;
                m21(): number;
                set(arg0: _javatypes.org.joml.Matrix3x2fc): _javatypes.org.joml.Matrix3x2f;
                set(arg0: _javatypes.org.joml.Matrix2fc): _javatypes.org.joml.Matrix3x2f;
                mul(arg0: _javatypes.org.joml.Matrix3x2fc): _javatypes.org.joml.Matrix3x2f;
                mul(arg0: _javatypes.org.joml.Matrix3x2fc, arg1: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                mulLocal(arg0: _javatypes.org.joml.Matrix3x2fc): _javatypes.org.joml.Matrix3x2f;
                mulLocal(arg0: _javatypes.org.joml.Matrix3x2fc, arg1: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                set(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix3x2f;
                set(arg0: number[]): _javatypes.org.joml.Matrix3x2f;
                determinant(): number;
                invert(): _javatypes.org.joml.Matrix3x2f;
                invert(arg0: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                translation(arg0: number, arg1: number): _javatypes.org.joml.Matrix3x2f;
                translation(arg0: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Matrix3x2f;
                setTranslation(arg0: number, arg1: number): _javatypes.org.joml.Matrix3x2f;
                setTranslation(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Matrix3x2f;
                translate(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                translate(arg0: number, arg1: number): _javatypes.org.joml.Matrix3x2f;
                translate(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                translate(arg0: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Matrix3x2f;
                translateLocal(arg0: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Matrix3x2f;
                translateLocal(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                translateLocal(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                translateLocal(arg0: number, arg1: number): _javatypes.org.joml.Matrix3x2f;
                toString(): string;
                toString(arg0: _javatypes.java.text.NumberFormat): string;
                get(arg0: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                get(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get3x3(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get3x3(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get3x3(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get3x3(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get4x4(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get4x4(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get4x4(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get4x4(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Matrix3x2fc;
                get(arg0: number[], arg1: number): number[];
                get(arg0: number[]): number[];
                get3x3(arg0: number[], arg1: number): number[];
                get3x3(arg0: number[]): number[];
                get4x4(arg0: number[], arg1: number): number[];
                get4x4(arg0: number[]): number[];
                set(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Matrix3x2f;
                set(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix3x2f;
                set(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Matrix3x2f;
                set(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix3x2f;
                setFromAddress(arg0: number): _javatypes.org.joml.Matrix3x2f;
                zero(): _javatypes.org.joml.Matrix3x2f;
                identity(): _javatypes.org.joml.Matrix3x2f;
                scale(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                scale(arg0: number, arg1: number): _javatypes.org.joml.Matrix3x2f;
                scale(arg0: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Matrix3x2f;
                scale(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                scale(arg0: number, arg1: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                scale(arg0: number): _javatypes.org.joml.Matrix3x2f;
                scaleLocal(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                scaleLocal(arg0: number, arg1: number): _javatypes.org.joml.Matrix3x2f;
                scaleLocal(arg0: number, arg1: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                scaleLocal(arg0: number): _javatypes.org.joml.Matrix3x2f;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix3x2f;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                scaleAround(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3x2f;
                scaleAroundLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                scaleAroundLocal(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                scaleAroundLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix3x2f;
                scaleAroundLocal(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3x2f;
                scaling(arg0: number): _javatypes.org.joml.Matrix3x2f;
                scaling(arg0: number, arg1: number): _javatypes.org.joml.Matrix3x2f;
                rotation(arg0: number): _javatypes.org.joml.Matrix3x2f;
                transform(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transform(arg0: _javatypes.org.joml.Vector3f, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transform(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPosition(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                transformPosition(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                transformPosition(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                transformDirection(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                transformDirection(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                transformDirection(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                writeExternal(arg0: _javatypes.java.io.ObjectOutput): void;
                readExternal(arg0: _javatypes.java.io.ObjectInput): void;
                rotate(arg0: number): _javatypes.org.joml.Matrix3x2f;
                rotate(arg0: number, arg1: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                rotateLocal(arg0: number, arg1: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                rotateLocal(arg0: number): _javatypes.org.joml.Matrix3x2f;
                rotateAbout(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3x2f;
                rotateAbout(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                rotateTo(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2fc, arg2: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                rotateTo(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Matrix3x2f;
                view(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                view(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix3x2f;
                setView(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix3x2f;
                origin(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                viewArea(arg0: number[]): number[];
                positiveX(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                normalizedPositiveX(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                positiveY(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                normalizedPositiveY(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                unproject(arg0: number, arg1: number, arg2: number[], arg3: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                unprojectInv(arg0: number, arg1: number, arg2: number[], arg3: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                shearX(arg0: number): _javatypes.org.joml.Matrix3x2f;
                shearX(arg0: number, arg1: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                shearY(arg0: number): _javatypes.org.joml.Matrix3x2f;
                shearY(arg0: number, arg1: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                span(arg0: _javatypes.org.joml.Vector2f, arg1: _javatypes.org.joml.Vector2f, arg2: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Matrix3x2f;
                testPoint(arg0: number, arg1: number): boolean;
                testCircle(arg0: number, arg1: number, arg2: number): boolean;
                testAar(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                hashCode(): number;
                equals(arg0: any): boolean;
                equals(arg0: _javatypes.org.joml.Matrix3x2fc, arg1: number): boolean;
                isFinite(): boolean;
                clone(): any;
                
            }
            namespace Matrix3x2f {
                interface static {
                    new (): _javatypes.org.joml.Matrix3x2f;
                    new (arg0: _javatypes.org.joml.Matrix3x2fc): _javatypes.org.joml.Matrix3x2f;
                    new (arg0: _javatypes.org.joml.Matrix2fc): _javatypes.org.joml.Matrix3x2f;
                    new (arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix3x2f;
                    new (arg0: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Matrix3x2f;
                    
                    
                    
                }
            }
            interface AxisAngle4d extends any, _javatypes.java.io.Externalizable, _javatypes.java.lang.Cloneable {
                angle: number;
                x: number;
                y: number;
                z: number;
                
                set(arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.AxisAngle4d;
                set(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.AxisAngle4d;
                set(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.AxisAngle4d;
                set(arg0: number, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.AxisAngle4d;
                set(arg0: number, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.AxisAngle4d;
                set(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.AxisAngle4d;
                set(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.AxisAngle4d;
                set(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.AxisAngle4d;
                set(arg0: _javatypes.org.joml.Matrix3dc): _javatypes.org.joml.AxisAngle4d;
                set(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.AxisAngle4d;
                set(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.AxisAngle4d;
                set(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.AxisAngle4d;
                get(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                get(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                get(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                get(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                get(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                get(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                get(arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.AxisAngle4d;
                get(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.AxisAngle4f;
                writeExternal(arg0: _javatypes.java.io.ObjectOutput): void;
                readExternal(arg0: _javatypes.java.io.ObjectInput): void;
                normalize(): _javatypes.org.joml.AxisAngle4d;
                rotate(arg0: number): _javatypes.org.joml.AxisAngle4d;
                transform(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transform(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transform(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transform(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transform(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transform(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                toString(): string;
                toString(arg0: _javatypes.java.text.NumberFormat): string;
                hashCode(): number;
                equals(arg0: any): boolean;
                clone(): any;
                
            }
            namespace AxisAngle4d {
                interface static {
                    new (): _javatypes.org.joml.AxisAngle4d;
                    new (arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.AxisAngle4d;
                    new (arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.AxisAngle4d;
                    new (arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.AxisAngle4d;
                    new (arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.AxisAngle4d;
                    new (arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.AxisAngle4d;
                    new (arg0: number, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.AxisAngle4d;
                    new (arg0: number, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.AxisAngle4d;
                    
                    
                    
                }
            }
            interface Vector4d extends any, _javatypes.java.io.Externalizable, _javatypes.java.lang.Cloneable, _javatypes.org.joml.Vector4dc {
                x: number;
                y: number;
                z: number;
                w: number;
                
                x(): number;
                y(): number;
                z(): number;
                w(): number;
                set(arg0: _javatypes.org.joml.Vector4dc): _javatypes.org.joml.Vector4d;
                set(arg0: _javatypes.org.joml.Vector4fc): _javatypes.org.joml.Vector4d;
                set(arg0: _javatypes.org.joml.Vector4ic): _javatypes.org.joml.Vector4d;
                set(arg0: _javatypes.org.joml.Vector3dc, arg1: number): _javatypes.org.joml.Vector4d;
                set(arg0: _javatypes.org.joml.Vector3ic, arg1: number): _javatypes.org.joml.Vector4d;
                set(arg0: _javatypes.org.joml.Vector3fc, arg1: number): _javatypes.org.joml.Vector4d;
                set(arg0: _javatypes.org.joml.Vector2dc, arg1: number, arg2: number): _javatypes.org.joml.Vector4d;
                set(arg0: _javatypes.org.joml.Vector2ic, arg1: number, arg2: number): _javatypes.org.joml.Vector4d;
                set(arg0: number): _javatypes.org.joml.Vector4d;
                set(arg0: _javatypes.org.joml.Vector2fc, arg1: number, arg2: number): _javatypes.org.joml.Vector4d;
                set(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Vector4d;
                set(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Vector4d;
                set(arg0: number[]): _javatypes.org.joml.Vector4d;
                set(arg0: number[]): _javatypes.org.joml.Vector4d;
                set(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector4d;
                set(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector4d;
                set(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Vector4d;
                set(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Vector4d;
                setFromAddress(arg0: number): _javatypes.org.joml.Vector4d;
                setComponent(arg0: number, arg1: number): _javatypes.org.joml.Vector4d;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                getf(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getf(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Vector4dc;
                sub(arg0: _javatypes.org.joml.Vector4dc): _javatypes.org.joml.Vector4d;
                sub(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                sub(arg0: _javatypes.org.joml.Vector4fc): _javatypes.org.joml.Vector4d;
                sub(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                sub(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Vector4d;
                sub(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                add(arg0: _javatypes.org.joml.Vector4dc): _javatypes.org.joml.Vector4d;
                add(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                add(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                add(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Vector4d;
                add(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                add(arg0: _javatypes.org.joml.Vector4fc): _javatypes.org.joml.Vector4d;
                fma(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4dc): _javatypes.org.joml.Vector4d;
                fma(arg0: number, arg1: _javatypes.org.joml.Vector4dc): _javatypes.org.joml.Vector4d;
                fma(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4dc, arg2: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                fma(arg0: number, arg1: _javatypes.org.joml.Vector4dc, arg2: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                mulAdd(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4dc): _javatypes.org.joml.Vector4d;
                mulAdd(arg0: number, arg1: _javatypes.org.joml.Vector4dc): _javatypes.org.joml.Vector4d;
                mulAdd(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4dc, arg2: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                mulAdd(arg0: number, arg1: _javatypes.org.joml.Vector4dc, arg2: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                mul(arg0: _javatypes.org.joml.Vector4dc): _javatypes.org.joml.Vector4d;
                mul(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                div(arg0: _javatypes.org.joml.Vector4dc): _javatypes.org.joml.Vector4d;
                div(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                mul(arg0: _javatypes.org.joml.Vector4fc): _javatypes.org.joml.Vector4d;
                mul(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                mul(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Vector4d;
                mul(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                mulTranspose(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Vector4d;
                mulTranspose(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                mulAffine(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                mulAffineTranspose(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                mul(arg0: _javatypes.org.joml.Matrix4x3dc): _javatypes.org.joml.Vector4d;
                mul(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                mul(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Vector4d;
                mul(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                mul(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Vector4d;
                mul(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                mulProject(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                mulProject(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Vector4d;
                mulProject(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mul(arg0: number): _javatypes.org.joml.Vector4d;
                mul(arg0: number, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                div(arg0: number): _javatypes.org.joml.Vector4d;
                div(arg0: number, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                rotate(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Vector4d;
                rotate(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                rotateAxis(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Vector4d;
                rotateAxis(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                rotateX(arg0: number): _javatypes.org.joml.Vector4d;
                rotateX(arg0: number, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                rotateY(arg0: number): _javatypes.org.joml.Vector4d;
                rotateY(arg0: number, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                rotateZ(arg0: number): _javatypes.org.joml.Vector4d;
                rotateZ(arg0: number, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                lengthSquared(): number;
                length(): number;
                normalize(): _javatypes.org.joml.Vector4d;
                normalize(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                normalize(arg0: number): _javatypes.org.joml.Vector4d;
                normalize(arg0: number, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                normalize3(): _javatypes.org.joml.Vector4d;
                normalize3(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                distance(arg0: _javatypes.org.joml.Vector4dc): number;
                distance(arg0: number, arg1: number, arg2: number, arg3: number): number;
                distanceSquared(arg0: _javatypes.org.joml.Vector4dc): number;
                distanceSquared(arg0: number, arg1: number, arg2: number, arg3: number): number;
                dot(arg0: _javatypes.org.joml.Vector4dc): number;
                dot(arg0: number, arg1: number, arg2: number, arg3: number): number;
                angleCos(arg0: _javatypes.org.joml.Vector4dc): number;
                angle(arg0: _javatypes.org.joml.Vector4dc): number;
                zero(): _javatypes.org.joml.Vector4d;
                negate(): _javatypes.org.joml.Vector4d;
                negate(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                min(arg0: _javatypes.org.joml.Vector4dc): _javatypes.org.joml.Vector4d;
                min(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                max(arg0: _javatypes.org.joml.Vector4dc): _javatypes.org.joml.Vector4d;
                max(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                toString(): string;
                toString(arg0: _javatypes.java.text.NumberFormat): string;
                writeExternal(arg0: _javatypes.java.io.ObjectOutput): void;
                readExternal(arg0: _javatypes.java.io.ObjectInput): void;
                hashCode(): number;
                equals(arg0: any): boolean;
                equals(arg0: _javatypes.org.joml.Vector4dc, arg1: number): boolean;
                equals(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                smoothStep(arg0: _javatypes.org.joml.Vector4dc, arg1: number, arg2: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                hermite(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4dc, arg2: _javatypes.org.joml.Vector4dc, arg3: number, arg4: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                lerp(arg0: _javatypes.org.joml.Vector4dc, arg1: number): _javatypes.org.joml.Vector4d;
                lerp(arg0: _javatypes.org.joml.Vector4dc, arg1: number, arg2: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                get(arg0: number): number;
                get(arg0: number, arg1: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                get(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                get(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                maxComponent(): number;
                minComponent(): number;
                floor(): _javatypes.org.joml.Vector4d;
                floor(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                ceil(): _javatypes.org.joml.Vector4d;
                ceil(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                round(): _javatypes.org.joml.Vector4d;
                round(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                isFinite(): boolean;
                absolute(): _javatypes.org.joml.Vector4d;
                absolute(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                clone(): any;
                
            }
            namespace Vector4d {
                interface static {
                    new (): _javatypes.org.joml.Vector4d;
                    new (arg0: _javatypes.org.joml.Vector4dc): _javatypes.org.joml.Vector4d;
                    new (arg0: _javatypes.org.joml.Vector4ic): _javatypes.org.joml.Vector4d;
                    new (arg0: _javatypes.org.joml.Vector3dc, arg1: number): _javatypes.org.joml.Vector4d;
                    new (arg0: _javatypes.org.joml.Vector3ic, arg1: number): _javatypes.org.joml.Vector4d;
                    new (arg0: _javatypes.org.joml.Vector2dc, arg1: number, arg2: number): _javatypes.org.joml.Vector4d;
                    new (arg0: _javatypes.org.joml.Vector2ic, arg1: number, arg2: number): _javatypes.org.joml.Vector4d;
                    new (arg0: number): _javatypes.org.joml.Vector4d;
                    new (arg0: _javatypes.org.joml.Vector4fc): _javatypes.org.joml.Vector4d;
                    new (arg0: _javatypes.org.joml.Vector3fc, arg1: number): _javatypes.org.joml.Vector4d;
                    new (arg0: _javatypes.org.joml.Vector2fc, arg1: number, arg2: number): _javatypes.org.joml.Vector4d;
                    new (arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Vector4d;
                    new (arg0: number[]): _javatypes.org.joml.Vector4d;
                    new (arg0: number[]): _javatypes.org.joml.Vector4d;
                    new (arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector4d;
                    new (arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector4d;
                    new (arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Vector4d;
                    new (arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Vector4d;
                    
                    
                    lengthSquared(arg0: number, arg1: number, arg2: number, arg3: number): number;
                    length(arg0: number, arg1: number, arg2: number, arg3: number): number;
                    distance(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): number;
                    distanceSquared(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): number;
                    
                }
            }
            interface AxisAngle4f extends any, _javatypes.java.io.Externalizable, _javatypes.java.lang.Cloneable {
                angle: number;
                x: number;
                y: number;
                z: number;
                
                set(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.AxisAngle4f;
                set(arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.AxisAngle4f;
                set(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.AxisAngle4f;
                set(arg0: number, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.AxisAngle4f;
                set(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.AxisAngle4f;
                set(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.AxisAngle4f;
                set(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.AxisAngle4f;
                set(arg0: _javatypes.org.joml.Matrix3dc): _javatypes.org.joml.AxisAngle4f;
                set(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.AxisAngle4f;
                set(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.AxisAngle4f;
                set(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.AxisAngle4f;
                get(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                get(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                get(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                get(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                get(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                get(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                get(arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.AxisAngle4d;
                get(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.AxisAngle4f;
                writeExternal(arg0: _javatypes.java.io.ObjectOutput): void;
                readExternal(arg0: _javatypes.java.io.ObjectInput): void;
                normalize(): _javatypes.org.joml.AxisAngle4f;
                rotate(arg0: number): _javatypes.org.joml.AxisAngle4f;
                transform(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transform(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transform(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transform(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                toString(): string;
                toString(arg0: _javatypes.java.text.NumberFormat): string;
                hashCode(): number;
                equals(arg0: any): boolean;
                clone(): any;
                
            }
            namespace AxisAngle4f {
                interface static {
                    new (): _javatypes.org.joml.AxisAngle4f;
                    new (arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.AxisAngle4f;
                    new (arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.AxisAngle4f;
                    new (arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.AxisAngle4f;
                    new (arg0: number, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.AxisAngle4f;
                    
                    
                    
                }
            }
            interface Vector4dc extends _javatypes.java.lang.Interface {
                
                x(): number;
                y(): number;
                z(): number;
                w(): number;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getf(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getf(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Vector4dc;
                sub(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                sub(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                sub(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                add(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                add(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                add(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                fma(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4dc, arg2: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                fma(arg0: number, arg1: _javatypes.org.joml.Vector4dc, arg2: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                mul(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                mul(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                div(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                mul(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                mul(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                mul(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                mul(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                mulTranspose(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                mulAffine(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                mulAffineTranspose(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                mulProject(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                mulProject(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                mulAdd(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4dc, arg2: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                mulAdd(arg0: number, arg1: _javatypes.org.joml.Vector4dc, arg2: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                mul(arg0: number, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                div(arg0: number, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                rotate(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                rotateAxis(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                rotateX(arg0: number, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                rotateY(arg0: number, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                rotateZ(arg0: number, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                lengthSquared(): number;
                length(): number;
                normalize(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                normalize(arg0: number, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                normalize3(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                distance(arg0: _javatypes.org.joml.Vector4dc): number;
                distance(arg0: number, arg1: number, arg2: number, arg3: number): number;
                distanceSquared(arg0: _javatypes.org.joml.Vector4dc): number;
                distanceSquared(arg0: number, arg1: number, arg2: number, arg3: number): number;
                dot(arg0: _javatypes.org.joml.Vector4dc): number;
                dot(arg0: number, arg1: number, arg2: number, arg3: number): number;
                angleCos(arg0: _javatypes.org.joml.Vector4dc): number;
                angle(arg0: _javatypes.org.joml.Vector4dc): number;
                negate(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                min(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                max(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                smoothStep(arg0: _javatypes.org.joml.Vector4dc, arg1: number, arg2: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                hermite(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4dc, arg2: _javatypes.org.joml.Vector4dc, arg3: number, arg4: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                lerp(arg0: _javatypes.org.joml.Vector4dc, arg1: number, arg2: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                get(arg0: number): number;
                get(arg0: number, arg1: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                get(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                get(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                maxComponent(): number;
                minComponent(): number;
                floor(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                ceil(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                round(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                isFinite(): boolean;
                absolute(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                equals(arg0: _javatypes.org.joml.Vector4dc, arg1: number): boolean;
                equals(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                
            }
            namespace Vector4dc {
                interface static {
                    
                    
                    
                }
            }
            interface Matrix4d extends any, _javatypes.java.io.Externalizable, _javatypes.java.lang.Cloneable, _javatypes.org.joml.Matrix4dc {
                
                assume(arg0: number): _javatypes.org.joml.Matrix4d;
                determineProperties(): _javatypes.org.joml.Matrix4d;
                properties(): number;
                m00(): number;
                m01(): number;
                m02(): number;
                m03(): number;
                m10(): number;
                m11(): number;
                m12(): number;
                m13(): number;
                m20(): number;
                m21(): number;
                m22(): number;
                m23(): number;
                m30(): number;
                m31(): number;
                m32(): number;
                m33(): number;
                m00(arg0: number): _javatypes.org.joml.Matrix4d;
                m01(arg0: number): _javatypes.org.joml.Matrix4d;
                m02(arg0: number): _javatypes.org.joml.Matrix4d;
                m03(arg0: number): _javatypes.org.joml.Matrix4d;
                m10(arg0: number): _javatypes.org.joml.Matrix4d;
                m11(arg0: number): _javatypes.org.joml.Matrix4d;
                m12(arg0: number): _javatypes.org.joml.Matrix4d;
                m13(arg0: number): _javatypes.org.joml.Matrix4d;
                m20(arg0: number): _javatypes.org.joml.Matrix4d;
                m21(arg0: number): _javatypes.org.joml.Matrix4d;
                m22(arg0: number): _javatypes.org.joml.Matrix4d;
                m23(arg0: number): _javatypes.org.joml.Matrix4d;
                m30(arg0: number): _javatypes.org.joml.Matrix4d;
                m31(arg0: number): _javatypes.org.joml.Matrix4d;
                m32(arg0: number): _javatypes.org.joml.Matrix4d;
                m33(arg0: number): _javatypes.org.joml.Matrix4d;
                identity(): _javatypes.org.joml.Matrix4d;
                set(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Matrix4d;
                set(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Matrix4d;
                setTransposed(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Matrix4d;
                set(arg0: _javatypes.org.joml.Matrix4x3dc): _javatypes.org.joml.Matrix4d;
                set(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Matrix4d;
                set(arg0: _javatypes.org.joml.Matrix3dc): _javatypes.org.joml.Matrix4d;
                set3x3(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Matrix4d;
                set4x3(arg0: _javatypes.org.joml.Matrix4x3dc): _javatypes.org.joml.Matrix4d;
                set4x3(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Matrix4d;
                set4x3(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Matrix4d;
                set(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.Matrix4d;
                set(arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.Matrix4d;
                set(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix4d;
                set(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Matrix4d;
                mul(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Matrix4d;
                mul(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mul0(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Matrix4d;
                mul0(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mul(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: number, arg12: number, arg13: number, arg14: number, arg15: number): _javatypes.org.joml.Matrix4d;
                mul(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: number, arg12: number, arg13: number, arg14: number, arg15: number, arg16: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mul3x3(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix4d;
                mul3x3(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mulLocal(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Matrix4d;
                mulLocal(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mulLocalAffine(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Matrix4d;
                mulLocalAffine(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mul(arg0: _javatypes.org.joml.Matrix4x3dc): _javatypes.org.joml.Matrix4d;
                mul(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mulPerspectiveAffine(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mul(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mul(arg0: _javatypes.org.joml.Matrix3x2dc): _javatypes.org.joml.Matrix4d;
                mul(arg0: _javatypes.org.joml.Matrix3x2dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mul(arg0: _javatypes.org.joml.Matrix3x2fc): _javatypes.org.joml.Matrix4d;
                mul(arg0: _javatypes.org.joml.Matrix3x2fc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mul(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4d;
                mul(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mulPerspectiveAffine(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Matrix4d;
                mulPerspectiveAffine(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mulAffineR(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Matrix4d;
                mulAffineR(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mulAffine(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Matrix4d;
                mulAffine(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mulTranslationAffine(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mulOrthoAffine(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Matrix4d;
                mulOrthoAffine(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                fma4x3(arg0: _javatypes.org.joml.Matrix4dc, arg1: number): _javatypes.org.joml.Matrix4d;
                fma4x3(arg0: _javatypes.org.joml.Matrix4dc, arg1: number, arg2: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                add(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Matrix4d;
                add(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                sub(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Matrix4d;
                sub(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mulComponentWise(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Matrix4d;
                mulComponentWise(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                add4x3(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Matrix4d;
                add4x3(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                add4x3(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Matrix4d;
                add4x3(arg0: _javatypes.org.joml.Matrix4fc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                sub4x3(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Matrix4d;
                sub4x3(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mul4x3ComponentWise(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Matrix4d;
                mul4x3ComponentWise(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                set(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: number, arg12: number, arg13: number, arg14: number, arg15: number): _javatypes.org.joml.Matrix4d;
                set(arg0: number[], arg1: number): _javatypes.org.joml.Matrix4d;
                set(arg0: number[]): _javatypes.org.joml.Matrix4d;
                set(arg0: number[], arg1: number): _javatypes.org.joml.Matrix4d;
                set(arg0: number[]): _javatypes.org.joml.Matrix4d;
                set(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Matrix4d;
                set(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Matrix4d;
                set(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix4d;
                set(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Matrix4d;
                set(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Matrix4d;
                set(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix4d;
                setFloats(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix4d;
                setFloats(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix4d;
                setFromAddress(arg0: number): _javatypes.org.joml.Matrix4d;
                set(arg0: _javatypes.org.joml.Vector4d, arg1: _javatypes.org.joml.Vector4d, arg2: _javatypes.org.joml.Vector4d, arg3: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Matrix4d;
                determinant(): number;
                determinant3x3(): number;
                determinantAffine(): number;
                invert(): _javatypes.org.joml.Matrix4d;
                invert(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                invertPerspective(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                invertPerspective(): _javatypes.org.joml.Matrix4d;
                invertFrustum(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                invertFrustum(): _javatypes.org.joml.Matrix4d;
                invertOrtho(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                invertOrtho(): _javatypes.org.joml.Matrix4d;
                invertPerspectiveView(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                invertPerspectiveView(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                invertAffine(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                invertAffine(): _javatypes.org.joml.Matrix4d;
                transpose(): _javatypes.org.joml.Matrix4d;
                transpose(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                transpose3x3(): _javatypes.org.joml.Matrix4d;
                transpose3x3(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                transpose3x3(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                translation(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4d;
                translation(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4d;
                translation(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                setTranslation(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4d;
                setTranslation(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                getTranslation(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                getScale(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                toString(): string;
                toString(arg0: _javatypes.java.text.NumberFormat): string;
                get(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                get4x3(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                get3x3(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                getUnnormalizedRotation(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getNormalizedRotation(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getUnnormalizedRotation(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                getNormalizedRotation(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                get(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getFloats(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getFloats(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Matrix4dc;
                get(arg0: number[], arg1: number): number[];
                get(arg0: number[]): number[];
                get(arg0: number[], arg1: number): number[];
                get(arg0: number[]): number[];
                getTransposed(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                getTransposed(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get4x3Transposed(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get4x3Transposed(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get4x3Transposed(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get4x3Transposed(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposedFloats(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposedFloats(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                zero(): _javatypes.org.joml.Matrix4d;
                scaling(arg0: number): _javatypes.org.joml.Matrix4d;
                scaling(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4d;
                scaling(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                rotation(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                rotationX(arg0: number): _javatypes.org.joml.Matrix4d;
                rotationY(arg0: number): _javatypes.org.joml.Matrix4d;
                rotationZ(arg0: number): _javatypes.org.joml.Matrix4d;
                rotationTowardsXY(arg0: number, arg1: number): _javatypes.org.joml.Matrix4d;
                rotationXYZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4d;
                rotationZYX(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4d;
                rotationYXZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4d;
                setRotationXYZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4d;
                setRotationZYX(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4d;
                setRotationYXZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4d;
                rotation(arg0: number, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                rotation(arg0: number, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4d;
                transform(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transform(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transform(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformTranspose(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformTranspose(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformTranspose(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformProject(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformProject(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformProject(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformProject(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformProject(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformProject(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformProject(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformProject(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPosition(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPosition(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPosition(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformDirection(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformDirection(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformDirection(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformDirection(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformDirection(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformDirection(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformAffine(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformAffine(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformAffine(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                set3x3(arg0: _javatypes.org.joml.Matrix3dc): _javatypes.org.joml.Matrix4d;
                scale(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                scale(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                scale(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                scale(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4d;
                scale(arg0: number, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                scale(arg0: number): _javatypes.org.joml.Matrix4d;
                scaleXY(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                scaleXY(arg0: number, arg1: number): _javatypes.org.joml.Matrix4d;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4d;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                scaleLocal(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                scaleLocal(arg0: number, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                scaleLocal(arg0: number): _javatypes.org.joml.Matrix4d;
                scaleLocal(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4d;
                scaleAroundLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                scaleAroundLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4d;
                scaleAroundLocal(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                scaleAroundLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotate(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotate(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                rotateTranslation(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateAffine(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateAffine(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                rotateAround(arg0: _javatypes.org.joml.Quaterniondc, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                rotateAroundAffine(arg0: _javatypes.org.joml.Quaterniondc, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateAround(arg0: _javatypes.org.joml.Quaterniondc, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotationAround(arg0: _javatypes.org.joml.Quaterniondc, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                rotateLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateLocal(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                rotateAroundLocal(arg0: _javatypes.org.joml.Quaterniondc, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateAroundLocal(arg0: _javatypes.org.joml.Quaterniondc, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                translate(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                translate(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                translate(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4d;
                translate(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                translate(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                translate(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4d;
                translateLocal(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4d;
                translateLocal(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                translateLocal(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                translateLocal(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                translateLocal(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                translateLocal(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4d;
                rotateLocalX(arg0: number, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateLocalX(arg0: number): _javatypes.org.joml.Matrix4d;
                rotateLocalY(arg0: number, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateLocalY(arg0: number): _javatypes.org.joml.Matrix4d;
                rotateLocalZ(arg0: number, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateLocalZ(arg0: number): _javatypes.org.joml.Matrix4d;
                writeExternal(arg0: _javatypes.java.io.ObjectOutput): void;
                readExternal(arg0: _javatypes.java.io.ObjectInput): void;
                rotateX(arg0: number, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateX(arg0: number): _javatypes.org.joml.Matrix4d;
                rotateY(arg0: number, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateY(arg0: number): _javatypes.org.joml.Matrix4d;
                rotateZ(arg0: number, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateZ(arg0: number): _javatypes.org.joml.Matrix4d;
                rotateTowardsXY(arg0: number, arg1: number): _javatypes.org.joml.Matrix4d;
                rotateTowardsXY(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateXYZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Matrix4d;
                rotateXYZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4d;
                rotateXYZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateAffineXYZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4d;
                rotateAffineXYZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateZYX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Matrix4d;
                rotateZYX(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4d;
                rotateZYX(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateAffineZYX(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4d;
                rotateAffineZYX(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateYXZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Matrix4d;
                rotateYXZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4d;
                rotateYXZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateAffineYXZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4d;
                rotateAffineYXZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotation(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.Matrix4d;
                rotation(arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.Matrix4d;
                rotation(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Matrix4d;
                rotation(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix4d;
                translationRotateScale(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number): _javatypes.org.joml.Matrix4d;
                translationRotateScale(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Quaternionfc, arg2: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4d;
                translationRotateScale(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Quaterniondc, arg2: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                translationRotateScale(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): _javatypes.org.joml.Matrix4d;
                translationRotateScale(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Quaterniondc, arg2: number): _javatypes.org.joml.Matrix4d;
                translationRotateScale(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Quaternionfc, arg2: number): _javatypes.org.joml.Matrix4d;
                translationRotateScaleInvert(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number): _javatypes.org.joml.Matrix4d;
                translationRotateScaleInvert(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Quaterniondc, arg2: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                translationRotateScaleInvert(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Quaternionfc, arg2: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4d;
                translationRotateScaleInvert(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Quaterniondc, arg2: number): _javatypes.org.joml.Matrix4d;
                translationRotateScaleInvert(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Quaternionfc, arg2: number): _javatypes.org.joml.Matrix4d;
                translationRotateScaleMulAffine(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                translationRotateScaleMulAffine(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Quaterniondc, arg2: _javatypes.org.joml.Vector3fc, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                translationRotate(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): _javatypes.org.joml.Matrix4d;
                translationRotate(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Matrix4d;
                translationRotate(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Matrix4d;
                translationRotateInvert(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): _javatypes.org.joml.Matrix4d;
                translationRotateInvert(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix4d;
                rotate(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotate(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotate(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Matrix4d;
                rotate(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix4d;
                rotateAffine(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateAffine(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Matrix4d;
                rotateTranslation(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateTranslation(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateLocal(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateLocal(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Matrix4d;
                rotateAffine(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateAffine(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix4d;
                rotateLocal(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateLocal(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix4d;
                rotate(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.Matrix4d;
                rotate(arg0: _javatypes.org.joml.AxisAngle4f, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotate(arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.Matrix4d;
                rotate(arg0: _javatypes.org.joml.AxisAngle4d, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4d;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                getRow(arg0: number, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                getRow(arg0: number, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                setRow(arg0: number, arg1: _javatypes.org.joml.Vector4dc): _javatypes.org.joml.Matrix4d;
                getColumn(arg0: number, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                getColumn(arg0: number, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                setColumn(arg0: number, arg1: _javatypes.org.joml.Vector4dc): _javatypes.org.joml.Matrix4d;
                get(arg0: number, arg1: number): number;
                set(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4d;
                getRowColumn(arg0: number, arg1: number): number;
                setRowColumn(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4d;
                normal(): _javatypes.org.joml.Matrix4d;
                normal(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                normal(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                cofactor3x3(): _javatypes.org.joml.Matrix4d;
                cofactor3x3(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                cofactor3x3(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                normalize3x3(): _javatypes.org.joml.Matrix4d;
                normalize3x3(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                normalize3x3(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                unproject(arg0: number, arg1: number, arg2: number, arg3: number[], arg4: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                unproject(arg0: number, arg1: number, arg2: number, arg3: number[], arg4: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                unproject(arg0: _javatypes.org.joml.Vector3dc, arg1: number[], arg2: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                unproject(arg0: _javatypes.org.joml.Vector3dc, arg1: number[], arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                unprojectRay(arg0: number, arg1: number, arg2: number[], arg3: _javatypes.org.joml.Vector3d, arg4: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Matrix4d;
                unprojectRay(arg0: _javatypes.org.joml.Vector2dc, arg1: number[], arg2: _javatypes.org.joml.Vector3d, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Matrix4d;
                unprojectInv(arg0: _javatypes.org.joml.Vector3dc, arg1: number[], arg2: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                unprojectInv(arg0: number, arg1: number, arg2: number, arg3: number[], arg4: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                unprojectInv(arg0: _javatypes.org.joml.Vector3dc, arg1: number[], arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                unprojectInv(arg0: number, arg1: number, arg2: number, arg3: number[], arg4: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                unprojectInvRay(arg0: _javatypes.org.joml.Vector2dc, arg1: number[], arg2: _javatypes.org.joml.Vector3d, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Matrix4d;
                unprojectInvRay(arg0: number, arg1: number, arg2: number[], arg3: _javatypes.org.joml.Vector3d, arg4: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Matrix4d;
                project(arg0: number, arg1: number, arg2: number, arg3: number[], arg4: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                project(arg0: number, arg1: number, arg2: number, arg3: number[], arg4: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                project(arg0: _javatypes.org.joml.Vector3dc, arg1: number[], arg2: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                project(arg0: _javatypes.org.joml.Vector3dc, arg1: number[], arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                reflect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                reflect(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                reflect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4d;
                reflect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                reflect(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                reflect(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                reflect(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                reflect(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                reflection(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                reflection(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4d;
                reflection(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                reflection(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                ortho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                ortho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                ortho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4d;
                ortho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4d;
                orthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                orthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                orthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4d;
                orthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4d;
                setOrtho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4d;
                setOrtho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4d;
                setOrthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4d;
                setOrthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4d;
                orthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                orthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                orthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4d;
                orthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                orthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                orthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                orthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4d;
                orthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                setOrthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4d;
                setOrthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                setOrthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4d;
                setOrthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                ortho2D(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                ortho2D(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                ortho2DLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                ortho2DLH(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                setOrtho2D(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                setOrtho2DLH(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                lookAlong(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                lookAlong(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                lookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                lookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4d;
                setLookAlong(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                setLookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4d;
                setLookAt(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                setLookAt(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix4d;
                lookAt(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                lookAt(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                lookAt(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                lookAt(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix4d;
                lookAtPerspective(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                setLookAtLH(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                setLookAtLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix4d;
                lookAtLH(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                lookAtLH(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                lookAtLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                lookAtLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix4d;
                lookAtPerspectiveLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                tile(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                tile(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                perspective(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                perspective(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                perspective(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4d;
                perspective(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                perspectiveRect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                perspectiveRect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                perspectiveRect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4d;
                perspectiveRect(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                perspectiveOffCenter(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                perspectiveOffCenter(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                perspectiveOffCenter(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4d;
                perspectiveOffCenter(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4d;
                perspectiveOffCenterFov(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4d;
                perspectiveOffCenterFov(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                perspectiveOffCenterFov(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4d;
                perspectiveOffCenterFov(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                perspectiveOffCenterFovLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4d;
                perspectiveOffCenterFovLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                perspectiveOffCenterFovLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4d;
                perspectiveOffCenterFovLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                setPerspective(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4d;
                setPerspective(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                setPerspectiveRect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4d;
                setPerspectiveRect(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                setPerspectiveOffCenter(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4d;
                setPerspectiveOffCenter(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4d;
                setPerspectiveOffCenterFov(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4d;
                setPerspectiveOffCenterFov(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4d;
                setPerspectiveOffCenterFovLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4d;
                setPerspectiveOffCenterFovLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4d;
                perspectiveLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                perspectiveLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4d;
                perspectiveLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                perspectiveLH(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                setPerspectiveLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4d;
                setPerspectiveLH(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                frustum(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                frustum(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                frustum(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4d;
                frustum(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4d;
                setFrustum(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4d;
                setFrustum(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4d;
                frustumLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                frustumLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4d;
                frustumLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                frustumLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4d;
                setFrustumLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4d;
                setFrustumLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4d;
                setFromIntrinsic(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix4d;
                frustumPlane(arg0: number, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                frustumCorner(arg0: number, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                perspectiveOrigin(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                perspectiveInvOrigin(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                perspectiveFov(): number;
                perspectiveNear(): number;
                perspectiveFar(): number;
                frustumRayDir(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                positiveZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normalizedPositiveZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                positiveX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normalizedPositiveX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                positiveY(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normalizedPositiveY(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                originAffine(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                origin(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                shadow(arg0: _javatypes.org.joml.Vector4dc, arg1: number, arg2: number, arg3: number, arg4: number): _javatypes.org.joml.Matrix4d;
                shadow(arg0: _javatypes.org.joml.Vector4dc, arg1: number, arg2: number, arg3: number, arg4: number, arg5: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                shadow(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): _javatypes.org.joml.Matrix4d;
                shadow(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                shadow(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Matrix4dc, arg2: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                shadow(arg0: _javatypes.org.joml.Vector4d, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                shadow(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4dc, arg5: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                shadow(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Matrix4d;
                billboardCylindrical(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                billboardSpherical(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                billboardSpherical(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                hashCode(): number;
                equals(arg0: any): boolean;
                equals(arg0: _javatypes.org.joml.Matrix4dc, arg1: number): boolean;
                pick(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                pick(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[]): _javatypes.org.joml.Matrix4d;
                isAffine(): boolean;
                swap(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                arcball(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                arcball(arg0: number, arg1: _javatypes.org.joml.Vector3dc, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                arcball(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4d;
                arcball(arg0: number, arg1: _javatypes.org.joml.Vector3dc, arg2: number, arg3: number): _javatypes.org.joml.Matrix4d;
                frustumAabb(arg0: _javatypes.org.joml.Vector3d, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Matrix4d;
                projectedGridRange(arg0: _javatypes.org.joml.Matrix4dc, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                perspectiveFrustumSlice(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                orthoCrop(arg0: _javatypes.org.joml.Matrix4dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                trapezoidCrop(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): _javatypes.org.joml.Matrix4d;
                transformAab(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Vector3d, arg7: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Matrix4d;
                transformAab(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3d, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Matrix4d;
                lerp(arg0: _javatypes.org.joml.Matrix4dc, arg1: number): _javatypes.org.joml.Matrix4d;
                lerp(arg0: _javatypes.org.joml.Matrix4dc, arg1: number, arg2: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateTowards(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotateTowards(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                rotateTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4d;
                rotateTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                rotationTowards(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                rotationTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4d;
                translationRotateTowards(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                translationRotateTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix4d;
                getEulerAnglesZYX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                getEulerAnglesXYZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                affineSpan(arg0: _javatypes.org.joml.Vector3d, arg1: _javatypes.org.joml.Vector3d, arg2: _javatypes.org.joml.Vector3d, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Matrix4d;
                testPoint(arg0: number, arg1: number, arg2: number): boolean;
                testSphere(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                testAab(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): boolean;
                obliqueZ(arg0: number, arg1: number): _javatypes.org.joml.Matrix4d;
                obliqueZ(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                withLookAtUp(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4d;
                withLookAtUp(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                withLookAtUp(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4d;
                withLookAtUp(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapXZY(): _javatypes.org.joml.Matrix4d;
                mapXZY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapXZnY(): _javatypes.org.joml.Matrix4d;
                mapXZnY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapXnYnZ(): _javatypes.org.joml.Matrix4d;
                mapXnYnZ(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapXnZY(): _javatypes.org.joml.Matrix4d;
                mapXnZY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapXnZnY(): _javatypes.org.joml.Matrix4d;
                mapXnZnY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapYXZ(): _javatypes.org.joml.Matrix4d;
                mapYXZ(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapYXnZ(): _javatypes.org.joml.Matrix4d;
                mapYXnZ(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapYZX(): _javatypes.org.joml.Matrix4d;
                mapYZX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapYZnX(): _javatypes.org.joml.Matrix4d;
                mapYZnX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapYnXZ(): _javatypes.org.joml.Matrix4d;
                mapYnXZ(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapYnXnZ(): _javatypes.org.joml.Matrix4d;
                mapYnXnZ(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapYnZX(): _javatypes.org.joml.Matrix4d;
                mapYnZX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapYnZnX(): _javatypes.org.joml.Matrix4d;
                mapYnZnX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapZXY(): _javatypes.org.joml.Matrix4d;
                mapZXY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapZXnY(): _javatypes.org.joml.Matrix4d;
                mapZXnY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapZYX(): _javatypes.org.joml.Matrix4d;
                mapZYX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapZYnX(): _javatypes.org.joml.Matrix4d;
                mapZYnX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapZnXY(): _javatypes.org.joml.Matrix4d;
                mapZnXY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapZnXnY(): _javatypes.org.joml.Matrix4d;
                mapZnXnY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapZnYX(): _javatypes.org.joml.Matrix4d;
                mapZnYX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapZnYnX(): _javatypes.org.joml.Matrix4d;
                mapZnYnX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnXYnZ(): _javatypes.org.joml.Matrix4d;
                mapnXYnZ(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnXZY(): _javatypes.org.joml.Matrix4d;
                mapnXZY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnXZnY(): _javatypes.org.joml.Matrix4d;
                mapnXZnY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnXnYZ(): _javatypes.org.joml.Matrix4d;
                mapnXnYZ(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnXnYnZ(): _javatypes.org.joml.Matrix4d;
                mapnXnYnZ(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnXnZY(): _javatypes.org.joml.Matrix4d;
                mapnXnZY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnXnZnY(): _javatypes.org.joml.Matrix4d;
                mapnXnZnY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnYXZ(): _javatypes.org.joml.Matrix4d;
                mapnYXZ(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnYXnZ(): _javatypes.org.joml.Matrix4d;
                mapnYXnZ(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnYZX(): _javatypes.org.joml.Matrix4d;
                mapnYZX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnYZnX(): _javatypes.org.joml.Matrix4d;
                mapnYZnX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnYnXZ(): _javatypes.org.joml.Matrix4d;
                mapnYnXZ(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnYnXnZ(): _javatypes.org.joml.Matrix4d;
                mapnYnXnZ(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnYnZX(): _javatypes.org.joml.Matrix4d;
                mapnYnZX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnYnZnX(): _javatypes.org.joml.Matrix4d;
                mapnYnZnX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnZXY(): _javatypes.org.joml.Matrix4d;
                mapnZXY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnZXnY(): _javatypes.org.joml.Matrix4d;
                mapnZXnY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnZYX(): _javatypes.org.joml.Matrix4d;
                mapnZYX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnZYnX(): _javatypes.org.joml.Matrix4d;
                mapnZYnX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnZnXY(): _javatypes.org.joml.Matrix4d;
                mapnZnXY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnZnXnY(): _javatypes.org.joml.Matrix4d;
                mapnZnXnY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnZnYX(): _javatypes.org.joml.Matrix4d;
                mapnZnYX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                mapnZnYnX(): _javatypes.org.joml.Matrix4d;
                mapnZnYnX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                negateX(): _javatypes.org.joml.Matrix4d;
                negateX(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                negateY(): _javatypes.org.joml.Matrix4d;
                negateY(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                negateZ(): _javatypes.org.joml.Matrix4d;
                negateZ(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                isFinite(): boolean;
                clone(): any;
                
            }
            namespace Matrix4d {
                interface static {
                    new (): _javatypes.org.joml.Matrix4d;
                    new (arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Matrix4d;
                    new (arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Matrix4d;
                    new (arg0: _javatypes.org.joml.Matrix4x3dc): _javatypes.org.joml.Matrix4d;
                    new (arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Matrix4d;
                    new (arg0: _javatypes.org.joml.Matrix3dc): _javatypes.org.joml.Matrix4d;
                    new (arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: number, arg12: number, arg13: number, arg14: number, arg15: number): _javatypes.org.joml.Matrix4d;
                    new (arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Matrix4d;
                    new (arg0: _javatypes.org.joml.Vector4d, arg1: _javatypes.org.joml.Vector4d, arg2: _javatypes.org.joml.Vector4d, arg3: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Matrix4d;
                    
                    
                    perspectiveOffCenterViewFromRectangle(arg0: _javatypes.org.joml.Vector3d, arg1: _javatypes.org.joml.Vector3d, arg2: _javatypes.org.joml.Vector3d, arg3: _javatypes.org.joml.Vector3d, arg4: number, arg5: boolean, arg6: _javatypes.org.joml.Matrix4d, arg7: _javatypes.org.joml.Matrix4d): void;
                    
                }
            }
            interface Matrix2fc extends _javatypes.java.lang.Interface {
                
                m00(): number;
                m01(): number;
                m10(): number;
                m11(): number;
                mul(arg0: _javatypes.org.joml.Matrix2fc, arg1: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                mulLocal(arg0: _javatypes.org.joml.Matrix2fc, arg1: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                determinant(): number;
                invert(arg0: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                transpose(arg0: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                get(arg0: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                get(arg0: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                get(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                getRotation(): number;
                get(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Matrix2fc;
                get(arg0: number[], arg1: number): number[];
                get(arg0: number[]): number[];
                scale(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                scale(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                scale(arg0: number, arg1: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                scaleLocal(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                transform(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                transform(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                transform(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                transformTranspose(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                transformTranspose(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                transformTranspose(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                rotate(arg0: number, arg1: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                rotateLocal(arg0: number, arg1: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                getRow(arg0: number, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                getColumn(arg0: number, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                get(arg0: number, arg1: number): number;
                normal(arg0: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                getScale(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                positiveX(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                normalizedPositiveX(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                positiveY(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                normalizedPositiveY(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                add(arg0: _javatypes.org.joml.Matrix2fc, arg1: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                sub(arg0: _javatypes.org.joml.Matrix2fc, arg1: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                mulComponentWise(arg0: _javatypes.org.joml.Matrix2fc, arg1: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                lerp(arg0: _javatypes.org.joml.Matrix2fc, arg1: number, arg2: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                equals(arg0: _javatypes.org.joml.Matrix2fc, arg1: number): boolean;
                isFinite(): boolean;
                
            }
            namespace Matrix2fc {
                interface static {
                    
                    
                    
                }
            }
            interface Quaterniond extends any, _javatypes.java.io.Externalizable, _javatypes.java.lang.Cloneable, _javatypes.org.joml.Quaterniondc {
                x: number;
                y: number;
                z: number;
                w: number;
                
                x(): number;
                y(): number;
                z(): number;
                w(): number;
                normalize(): _javatypes.org.joml.Quaterniond;
                normalize(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                add(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Quaterniond;
                add(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                add(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Quaterniond;
                add(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                dot(arg0: _javatypes.org.joml.Quaterniondc): number;
                angle(): number;
                get(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                get(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                get(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                get(arg0: _javatypes.org.joml.Matrix4f): _javatypes.org.joml.Matrix4f;
                get(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.AxisAngle4f;
                get(arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.AxisAngle4d;
                get(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                get(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                set(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Quaterniond;
                set(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Quaterniond;
                set(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Quaterniond;
                set(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.Quaterniond;
                set(arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.Quaterniond;
                setAngleAxis(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Quaterniond;
                setAngleAxis(arg0: number, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Quaterniond;
                setFromUnnormalized(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Quaterniond;
                setFromUnnormalized(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Quaterniond;
                setFromUnnormalized(arg0: _javatypes.org.joml.Matrix4x3dc): _javatypes.org.joml.Quaterniond;
                setFromNormalized(arg0: _javatypes.org.joml.Matrix4fc): _javatypes.org.joml.Quaterniond;
                setFromNormalized(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Quaterniond;
                setFromNormalized(arg0: _javatypes.org.joml.Matrix4x3dc): _javatypes.org.joml.Quaterniond;
                setFromUnnormalized(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Quaterniond;
                setFromNormalized(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Quaterniond;
                setFromUnnormalized(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Quaterniond;
                setFromNormalized(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Quaterniond;
                setFromUnnormalized(arg0: _javatypes.org.joml.Matrix3dc): _javatypes.org.joml.Quaterniond;
                setFromNormalized(arg0: _javatypes.org.joml.Matrix3dc): _javatypes.org.joml.Quaterniond;
                fromAxisAngleRad(arg0: _javatypes.org.joml.Vector3dc, arg1: number): _javatypes.org.joml.Quaterniond;
                fromAxisAngleRad(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Quaterniond;
                fromAxisAngleDeg(arg0: _javatypes.org.joml.Vector3dc, arg1: number): _javatypes.org.joml.Quaterniond;
                fromAxisAngleDeg(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Quaterniond;
                mul(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Quaterniond;
                mul(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                mul(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Quaterniond;
                mul(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                mul(arg0: number): _javatypes.org.joml.Quaterniond;
                mul(arg0: number, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                premul(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Quaterniond;
                premul(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                premul(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Quaterniond;
                premul(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                transform(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverse(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformUnit(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPositiveX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPositiveX(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnitPositiveX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformUnitPositiveX(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformPositiveY(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPositiveY(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnitPositiveY(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnitPositiveY(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPositiveZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPositiveZ(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnitPositiveZ(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnitPositiveZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transform(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformInverse(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transform(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverse(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transform(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverse(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transform(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformInverse(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transform(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformInverse(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transform(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformInverse(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformUnit(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnit(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformInverseUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformUnit(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformInverseUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformUnit(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPositiveX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPositiveX(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnitPositiveX(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformUnitPositiveX(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformPositiveY(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPositiveY(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnitPositiveY(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnitPositiveY(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPositiveZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformPositiveZ(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnitPositiveZ(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnitPositiveZ(arg0: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transform(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformInverse(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transform(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformInverse(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transform(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformInverse(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transform(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformInverse(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transform(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformInverse(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnit(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnit(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformInverseUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3f): _javatypes.org.joml.Vector3f;
                transformUnit(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformInverseUnit(arg0: _javatypes.org.joml.Vector4fc, arg1: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                transformInverseUnit(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector4f): _javatypes.org.joml.Vector4f;
                invert(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                invert(): _javatypes.org.joml.Quaterniond;
                div(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                div(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Quaterniond;
                conjugate(): _javatypes.org.joml.Quaterniond;
                conjugate(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                identity(): _javatypes.org.joml.Quaterniond;
                lengthSquared(): number;
                rotationXYZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Quaterniond;
                rotationZYX(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Quaterniond;
                rotationYXZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Quaterniond;
                slerp(arg0: _javatypes.org.joml.Quaterniondc, arg1: number): _javatypes.org.joml.Quaterniond;
                slerp(arg0: _javatypes.org.joml.Quaterniondc, arg1: number, arg2: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                scale(arg0: number): _javatypes.org.joml.Quaterniond;
                scale(arg0: number, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                scaling(arg0: number): _javatypes.org.joml.Quaterniond;
                integrate(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Quaterniond;
                integrate(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                nlerp(arg0: _javatypes.org.joml.Quaterniondc, arg1: number): _javatypes.org.joml.Quaterniond;
                nlerp(arg0: _javatypes.org.joml.Quaterniondc, arg1: number, arg2: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                nlerpIterative(arg0: _javatypes.org.joml.Quaterniondc, arg1: number, arg2: number, arg3: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                nlerpIterative(arg0: _javatypes.org.joml.Quaterniondc, arg1: number, arg2: number): _javatypes.org.joml.Quaterniond;
                lookAlong(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Quaterniond;
                lookAlong(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                lookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Quaterniond;
                lookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                toString(): string;
                toString(arg0: _javatypes.java.text.NumberFormat): string;
                writeExternal(arg0: _javatypes.java.io.ObjectOutput): void;
                readExternal(arg0: _javatypes.java.io.ObjectInput): void;
                hashCode(): number;
                equals(arg0: any): boolean;
                difference(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Quaterniond;
                difference(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotationTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Quaterniond;
                rotationTo(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Quaterniond;
                rotateTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotationAxis(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.Quaterniond;
                rotationAxis(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Quaterniond;
                rotationX(arg0: number): _javatypes.org.joml.Quaterniond;
                rotationY(arg0: number): _javatypes.org.joml.Quaterniond;
                rotationZ(arg0: number): _javatypes.org.joml.Quaterniond;
                rotateTo(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Quaterniond;
                rotateTo(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotateTo(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Quaterniond;
                rotateX(arg0: number): _javatypes.org.joml.Quaterniond;
                rotateX(arg0: number, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotateY(arg0: number): _javatypes.org.joml.Quaterniond;
                rotateY(arg0: number, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotateZ(arg0: number): _javatypes.org.joml.Quaterniond;
                rotateZ(arg0: number, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotateLocalX(arg0: number): _javatypes.org.joml.Quaterniond;
                rotateLocalX(arg0: number, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotateLocalY(arg0: number): _javatypes.org.joml.Quaterniond;
                rotateLocalY(arg0: number, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotateLocalZ(arg0: number): _javatypes.org.joml.Quaterniond;
                rotateLocalZ(arg0: number, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotateXYZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Quaterniond;
                rotateXYZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotateZYX(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Quaterniond;
                rotateZYX(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotateYXZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Quaterniond;
                rotateYXZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                getEulerAnglesXYZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                getEulerAnglesZYX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                getEulerAnglesZXY(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                getEulerAnglesYXZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                rotateAxis(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotateAxis(arg0: number, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                rotateAxis(arg0: number, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Quaterniond;
                rotateAxis(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Quaterniond;
                positiveX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normalizedPositiveX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                positiveY(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normalizedPositiveY(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                positiveZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normalizedPositiveZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                conjugateBy(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Quaterniond;
                conjugateBy(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                isFinite(): boolean;
                equals(arg0: _javatypes.org.joml.Quaterniondc, arg1: number): boolean;
                equals(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                clone(): any;
                
            }
            namespace Quaterniond {
                interface static {
                    new (): _javatypes.org.joml.Quaterniond;
                    new (arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Quaterniond;
                    new (arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Quaterniond;
                    new (arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Quaterniond;
                    new (arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.Quaterniond;
                    new (arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.Quaterniond;
                    
                    
                    slerp(arg0: _javatypes.org.joml.Quaterniond[], arg1: number[], arg2: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniondc;
                    nlerp(arg0: _javatypes.org.joml.Quaterniond[], arg1: number[], arg2: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniondc;
                    nlerpIterative(arg0: _javatypes.org.joml.Quaterniondc[], arg1: number[], arg2: number, arg3: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                    
                }
            }
            interface Matrix4x3d extends any, _javatypes.java.io.Externalizable, _javatypes.java.lang.Cloneable, _javatypes.org.joml.Matrix4x3dc {
                
                assume(arg0: number): _javatypes.org.joml.Matrix4x3d;
                determineProperties(): _javatypes.org.joml.Matrix4x3d;
                properties(): number;
                m00(): number;
                m01(): number;
                m02(): number;
                m10(): number;
                m11(): number;
                m12(): number;
                m20(): number;
                m21(): number;
                m22(): number;
                m30(): number;
                m31(): number;
                m32(): number;
                m00(arg0: number): _javatypes.org.joml.Matrix4x3d;
                m01(arg0: number): _javatypes.org.joml.Matrix4x3d;
                m02(arg0: number): _javatypes.org.joml.Matrix4x3d;
                m10(arg0: number): _javatypes.org.joml.Matrix4x3d;
                m11(arg0: number): _javatypes.org.joml.Matrix4x3d;
                m12(arg0: number): _javatypes.org.joml.Matrix4x3d;
                m20(arg0: number): _javatypes.org.joml.Matrix4x3d;
                m21(arg0: number): _javatypes.org.joml.Matrix4x3d;
                m22(arg0: number): _javatypes.org.joml.Matrix4x3d;
                m30(arg0: number): _javatypes.org.joml.Matrix4x3d;
                m31(arg0: number): _javatypes.org.joml.Matrix4x3d;
                m32(arg0: number): _javatypes.org.joml.Matrix4x3d;
                identity(): _javatypes.org.joml.Matrix4x3d;
                set(arg0: _javatypes.org.joml.Matrix4x3dc): _javatypes.org.joml.Matrix4x3d;
                set(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Matrix4x3d;
                set(arg0: _javatypes.org.joml.Matrix4dc): _javatypes.org.joml.Matrix4x3d;
                get(arg0: _javatypes.org.joml.Matrix4d): _javatypes.org.joml.Matrix4d;
                set(arg0: _javatypes.org.joml.Matrix3dc): _javatypes.org.joml.Matrix4x3d;
                set(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Matrix4x3d;
                set(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc, arg3: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                set3x3(arg0: _javatypes.org.joml.Matrix4x3dc): _javatypes.org.joml.Matrix4x3d;
                set(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.Matrix4x3d;
                set(arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.Matrix4x3d;
                set(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix4x3d;
                set(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Matrix4x3d;
                mul(arg0: _javatypes.org.joml.Matrix4x3dc): _javatypes.org.joml.Matrix4x3d;
                mul(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mul(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Matrix4x3d;
                mul(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mulTranslation(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mulTranslation(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mulOrtho(arg0: _javatypes.org.joml.Matrix4x3dc): _javatypes.org.joml.Matrix4x3d;
                mulOrtho(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mul3x3(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix4x3d;
                mul3x3(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                fma(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: number): _javatypes.org.joml.Matrix4x3d;
                fma(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: number, arg2: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                fma(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: number): _javatypes.org.joml.Matrix4x3d;
                fma(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: number, arg2: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                add(arg0: _javatypes.org.joml.Matrix4x3dc): _javatypes.org.joml.Matrix4x3d;
                add(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                add(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Matrix4x3d;
                add(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                sub(arg0: _javatypes.org.joml.Matrix4x3dc): _javatypes.org.joml.Matrix4x3d;
                sub(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                sub(arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Matrix4x3d;
                sub(arg0: _javatypes.org.joml.Matrix4x3fc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mulComponentWise(arg0: _javatypes.org.joml.Matrix4x3dc): _javatypes.org.joml.Matrix4x3d;
                mulComponentWise(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                set(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: number): _javatypes.org.joml.Matrix4x3d;
                set(arg0: number[], arg1: number): _javatypes.org.joml.Matrix4x3d;
                set(arg0: number[]): _javatypes.org.joml.Matrix4x3d;
                set(arg0: number[], arg1: number): _javatypes.org.joml.Matrix4x3d;
                set(arg0: number[]): _javatypes.org.joml.Matrix4x3d;
                set(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Matrix4x3d;
                set(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Matrix4x3d;
                set(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix4x3d;
                set(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Matrix4x3d;
                set(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Matrix4x3d;
                set(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix4x3d;
                setFloats(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix4x3d;
                setFloats(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix4x3d;
                setFromAddress(arg0: number): _javatypes.org.joml.Matrix4x3d;
                determinant(): number;
                invert(): _javatypes.org.joml.Matrix4x3d;
                invert(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                invertOrtho(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                invertOrtho(): _javatypes.org.joml.Matrix4x3d;
                transpose3x3(): _javatypes.org.joml.Matrix4x3d;
                transpose3x3(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                transpose3x3(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                translation(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3d;
                translation(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3d;
                translation(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                setTranslation(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3d;
                setTranslation(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                getTranslation(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                getScale(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                toString(): string;
                toString(arg0: _javatypes.java.text.NumberFormat): string;
                get(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                getUnnormalizedRotation(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getNormalizedRotation(arg0: _javatypes.org.joml.Quaternionf): _javatypes.org.joml.Quaternionf;
                getUnnormalizedRotation(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                getNormalizedRotation(arg0: _javatypes.org.joml.Quaterniond): _javatypes.org.joml.Quaterniond;
                get(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getFloats(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getFloats(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Matrix4x3dc;
                get(arg0: number[], arg1: number): number[];
                get(arg0: number[]): number[];
                get(arg0: number[], arg1: number): number[];
                get(arg0: number[]): number[];
                get4x4(arg0: number[], arg1: number): number[];
                get4x4(arg0: number[]): number[];
                get4x4(arg0: number[], arg1: number): number[];
                get4x4(arg0: number[]): number[];
                get4x4(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get4x4(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get4x4(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get4x4(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                getTransposed(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposedFloats(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposedFloats(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: number[], arg1: number): number[];
                getTransposed(arg0: number[]): number[];
                zero(): _javatypes.org.joml.Matrix4x3d;
                scaling(arg0: number): _javatypes.org.joml.Matrix4x3d;
                scaling(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3d;
                scaling(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                rotation(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3d;
                rotationX(arg0: number): _javatypes.org.joml.Matrix4x3d;
                rotationY(arg0: number): _javatypes.org.joml.Matrix4x3d;
                rotationZ(arg0: number): _javatypes.org.joml.Matrix4x3d;
                rotationXYZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3d;
                rotationZYX(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3d;
                rotationYXZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3d;
                setRotationXYZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3d;
                setRotationZYX(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3d;
                setRotationYXZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3d;
                rotation(arg0: number, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                rotation(arg0: number, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3d;
                transform(arg0: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transform(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                transformPosition(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPosition(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformDirection(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformDirection(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                set3x3(arg0: _javatypes.org.joml.Matrix3dc): _javatypes.org.joml.Matrix4x3d;
                set3x3(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Matrix4x3d;
                scale(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                scale(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                scale(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                scale(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3d;
                scale(arg0: number, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                scale(arg0: number): _javatypes.org.joml.Matrix4x3d;
                scaleXY(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                scaleXY(arg0: number, arg1: number): _javatypes.org.joml.Matrix4x3d;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4x3d;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3d;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                scaleLocal(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                scaleLocal(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3d;
                rotate(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotate(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3d;
                rotateTranslation(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateAround(arg0: _javatypes.org.joml.Quaterniondc, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3d;
                rotateAround(arg0: _javatypes.org.joml.Quaterniondc, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotationAround(arg0: _javatypes.org.joml.Quaterniondc, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3d;
                rotateLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateLocal(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3d;
                rotateLocalX(arg0: number, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateLocalX(arg0: number): _javatypes.org.joml.Matrix4x3d;
                rotateLocalY(arg0: number, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateLocalY(arg0: number): _javatypes.org.joml.Matrix4x3d;
                rotateLocalZ(arg0: number, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateLocalZ(arg0: number): _javatypes.org.joml.Matrix4x3d;
                translate(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                translate(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                translate(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3d;
                translate(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                translate(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                translate(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3d;
                translateLocal(arg0: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3d;
                translateLocal(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                translateLocal(arg0: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                translateLocal(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                translateLocal(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                translateLocal(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3d;
                writeExternal(arg0: _javatypes.java.io.ObjectOutput): void;
                readExternal(arg0: _javatypes.java.io.ObjectInput): void;
                rotateX(arg0: number, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateX(arg0: number): _javatypes.org.joml.Matrix4x3d;
                rotateY(arg0: number, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateY(arg0: number): _javatypes.org.joml.Matrix4x3d;
                rotateZ(arg0: number, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateZ(arg0: number): _javatypes.org.joml.Matrix4x3d;
                rotateXYZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Matrix4x3d;
                rotateXYZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3d;
                rotateXYZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateZYX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Matrix4x3d;
                rotateZYX(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3d;
                rotateZYX(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateYXZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Matrix4x3d;
                rotateYXZ(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix4x3d;
                rotateYXZ(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotation(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.Matrix4x3d;
                rotation(arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.Matrix4x3d;
                rotation(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Matrix4x3d;
                rotation(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix4x3d;
                translationRotateScale(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number): _javatypes.org.joml.Matrix4x3d;
                translationRotateScale(arg0: _javatypes.org.joml.Vector3fc, arg1: _javatypes.org.joml.Quaternionfc, arg2: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3d;
                translationRotateScale(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Quaterniondc, arg2: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                translationRotateScaleMul(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: _javatypes.org.joml.Matrix4x3dc): _javatypes.org.joml.Matrix4x3d;
                translationRotateScaleMul(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Quaterniondc, arg2: _javatypes.org.joml.Vector3dc, arg3: _javatypes.org.joml.Matrix4x3dc): _javatypes.org.joml.Matrix4x3d;
                translationRotate(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Matrix4x3d;
                translationRotate(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): _javatypes.org.joml.Matrix4x3d;
                translationRotate(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Matrix4x3d;
                translationRotateMul(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Quaternionfc, arg4: _javatypes.org.joml.Matrix4x3dc): _javatypes.org.joml.Matrix4x3d;
                translationRotateMul(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: _javatypes.org.joml.Matrix4x3dc): _javatypes.org.joml.Matrix4x3d;
                translationRotateInvert(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number): _javatypes.org.joml.Matrix4x3d;
                translationRotateInvert(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Matrix4x3d;
                rotate(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotate(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotate(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Matrix4x3d;
                rotate(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix4x3d;
                rotateTranslation(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateTranslation(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateLocal(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateLocal(arg0: _javatypes.org.joml.Quaterniondc): _javatypes.org.joml.Matrix4x3d;
                rotateLocal(arg0: _javatypes.org.joml.Quaternionfc, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateLocal(arg0: _javatypes.org.joml.Quaternionfc): _javatypes.org.joml.Matrix4x3d;
                rotate(arg0: _javatypes.org.joml.AxisAngle4f): _javatypes.org.joml.Matrix4x3d;
                rotate(arg0: _javatypes.org.joml.AxisAngle4f, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotate(arg0: _javatypes.org.joml.AxisAngle4d): _javatypes.org.joml.Matrix4x3d;
                rotate(arg0: _javatypes.org.joml.AxisAngle4d, arg1: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3fc): _javatypes.org.joml.Matrix4x3d;
                rotate(arg0: number, arg1: _javatypes.org.joml.Vector3fc, arg2: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                getRow(arg0: number, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                setRow(arg0: number, arg1: _javatypes.org.joml.Vector4dc): _javatypes.org.joml.Matrix4x3d;
                getColumn(arg0: number, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                setColumn(arg0: number, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                normal(): _javatypes.org.joml.Matrix4x3d;
                normal(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                normal(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                cofactor3x3(): _javatypes.org.joml.Matrix4x3d;
                cofactor3x3(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                cofactor3x3(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                normalize3x3(): _javatypes.org.joml.Matrix4x3d;
                normalize3x3(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                normalize3x3(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                reflect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                reflect(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3d;
                reflect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4x3d;
                reflect(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                reflect(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                reflect(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                reflect(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                reflect(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                reflection(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3d;
                reflection(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4x3d;
                reflection(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                reflection(arg0: _javatypes.org.joml.Quaterniondc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                ortho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                ortho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                ortho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4x3d;
                ortho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4x3d;
                orthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                orthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                orthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4x3d;
                orthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4x3d;
                setOrtho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4x3d;
                setOrtho(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4x3d;
                setOrthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.org.joml.Matrix4x3d;
                setOrthoLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4x3d;
                orthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                orthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                orthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4x3d;
                orthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3d;
                orthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean, arg5: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                orthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                orthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4x3d;
                orthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3d;
                setOrthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4x3d;
                setOrthoSymmetric(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3d;
                setOrthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: boolean): _javatypes.org.joml.Matrix4x3d;
                setOrthoSymmetricLH(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3d;
                ortho2D(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                ortho2D(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3d;
                ortho2DLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                ortho2DLH(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3d;
                setOrtho2D(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3d;
                setOrtho2DLH(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3d;
                lookAlong(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                lookAlong(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                lookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                lookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4x3d;
                setLookAlong(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                setLookAlong(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4x3d;
                setLookAt(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                setLookAt(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix4x3d;
                lookAt(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc, arg3: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                lookAt(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                lookAt(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                lookAt(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix4x3d;
                setLookAtLH(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                setLookAtLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix4x3d;
                lookAtLH(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc, arg3: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                lookAtLH(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                lookAtLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                lookAtLH(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix4x3d;
                frustumPlane(arg0: number, arg1: _javatypes.org.joml.Vector4d): _javatypes.org.joml.Vector4d;
                positiveZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normalizedPositiveZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                positiveX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normalizedPositiveX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                positiveY(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                normalizedPositiveY(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                origin(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                shadow(arg0: _javatypes.org.joml.Vector4dc, arg1: number, arg2: number, arg3: number, arg4: number): _javatypes.org.joml.Matrix4x3d;
                shadow(arg0: _javatypes.org.joml.Vector4dc, arg1: number, arg2: number, arg3: number, arg4: number, arg5: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                shadow(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): _javatypes.org.joml.Matrix4x3d;
                shadow(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                shadow(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Matrix4x3dc, arg2: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                shadow(arg0: _javatypes.org.joml.Vector4dc, arg1: _javatypes.org.joml.Matrix4x3dc): _javatypes.org.joml.Matrix4x3d;
                shadow(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3dc, arg5: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                shadow(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3dc): _javatypes.org.joml.Matrix4x3d;
                billboardCylindrical(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                billboardSpherical(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                billboardSpherical(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                hashCode(): number;
                equals(arg0: any): boolean;
                equals(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: number): boolean;
                pick(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[], arg5: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                pick(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number[]): _javatypes.org.joml.Matrix4x3d;
                swap(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                arcball(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                arcball(arg0: number, arg1: _javatypes.org.joml.Vector3dc, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                arcball(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4x3d;
                arcball(arg0: number, arg1: _javatypes.org.joml.Vector3dc, arg2: number, arg3: number): _javatypes.org.joml.Matrix4x3d;
                transformAab(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Vector3d, arg7: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Matrix4x3d;
                transformAab(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3d, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Matrix4x3d;
                lerp(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: number): _javatypes.org.joml.Matrix4x3d;
                lerp(arg0: _javatypes.org.joml.Matrix4x3dc, arg1: number, arg2: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateTowards(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotateTowards(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                rotateTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4x3d;
                rotateTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                rotationTowards(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                rotationTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix4x3d;
                translationRotateTowards(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3dc, arg2: _javatypes.org.joml.Vector3dc): _javatypes.org.joml.Matrix4x3d;
                translationRotateTowards(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number): _javatypes.org.joml.Matrix4x3d;
                getEulerAnglesZYX(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                getEulerAnglesXYZ(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                obliqueZ(arg0: number, arg1: number): _javatypes.org.joml.Matrix4x3d;
                obliqueZ(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapXZY(): _javatypes.org.joml.Matrix4x3d;
                mapXZY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapXZnY(): _javatypes.org.joml.Matrix4x3d;
                mapXZnY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapXnYnZ(): _javatypes.org.joml.Matrix4x3d;
                mapXnYnZ(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapXnZY(): _javatypes.org.joml.Matrix4x3d;
                mapXnZY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapXnZnY(): _javatypes.org.joml.Matrix4x3d;
                mapXnZnY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapYXZ(): _javatypes.org.joml.Matrix4x3d;
                mapYXZ(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapYXnZ(): _javatypes.org.joml.Matrix4x3d;
                mapYXnZ(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapYZX(): _javatypes.org.joml.Matrix4x3d;
                mapYZX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapYZnX(): _javatypes.org.joml.Matrix4x3d;
                mapYZnX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapYnXZ(): _javatypes.org.joml.Matrix4x3d;
                mapYnXZ(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapYnXnZ(): _javatypes.org.joml.Matrix4x3d;
                mapYnXnZ(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapYnZX(): _javatypes.org.joml.Matrix4x3d;
                mapYnZX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapYnZnX(): _javatypes.org.joml.Matrix4x3d;
                mapYnZnX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapZXY(): _javatypes.org.joml.Matrix4x3d;
                mapZXY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapZXnY(): _javatypes.org.joml.Matrix4x3d;
                mapZXnY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapZYX(): _javatypes.org.joml.Matrix4x3d;
                mapZYX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapZYnX(): _javatypes.org.joml.Matrix4x3d;
                mapZYnX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapZnXY(): _javatypes.org.joml.Matrix4x3d;
                mapZnXY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapZnXnY(): _javatypes.org.joml.Matrix4x3d;
                mapZnXnY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapZnYX(): _javatypes.org.joml.Matrix4x3d;
                mapZnYX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapZnYnX(): _javatypes.org.joml.Matrix4x3d;
                mapZnYnX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnXYnZ(): _javatypes.org.joml.Matrix4x3d;
                mapnXYnZ(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnXZY(): _javatypes.org.joml.Matrix4x3d;
                mapnXZY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnXZnY(): _javatypes.org.joml.Matrix4x3d;
                mapnXZnY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnXnYZ(): _javatypes.org.joml.Matrix4x3d;
                mapnXnYZ(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnXnYnZ(): _javatypes.org.joml.Matrix4x3d;
                mapnXnYnZ(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnXnZY(): _javatypes.org.joml.Matrix4x3d;
                mapnXnZY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnXnZnY(): _javatypes.org.joml.Matrix4x3d;
                mapnXnZnY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnYXZ(): _javatypes.org.joml.Matrix4x3d;
                mapnYXZ(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnYXnZ(): _javatypes.org.joml.Matrix4x3d;
                mapnYXnZ(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnYZX(): _javatypes.org.joml.Matrix4x3d;
                mapnYZX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnYZnX(): _javatypes.org.joml.Matrix4x3d;
                mapnYZnX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnYnXZ(): _javatypes.org.joml.Matrix4x3d;
                mapnYnXZ(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnYnXnZ(): _javatypes.org.joml.Matrix4x3d;
                mapnYnXnZ(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnYnZX(): _javatypes.org.joml.Matrix4x3d;
                mapnYnZX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnYnZnX(): _javatypes.org.joml.Matrix4x3d;
                mapnYnZnX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnZXY(): _javatypes.org.joml.Matrix4x3d;
                mapnZXY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnZXnY(): _javatypes.org.joml.Matrix4x3d;
                mapnZXnY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnZYX(): _javatypes.org.joml.Matrix4x3d;
                mapnZYX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnZYnX(): _javatypes.org.joml.Matrix4x3d;
                mapnZYnX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnZnXY(): _javatypes.org.joml.Matrix4x3d;
                mapnZnXY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnZnXnY(): _javatypes.org.joml.Matrix4x3d;
                mapnZnXnY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnZnYX(): _javatypes.org.joml.Matrix4x3d;
                mapnZnYX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                mapnZnYnX(): _javatypes.org.joml.Matrix4x3d;
                mapnZnYnX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                negateX(): _javatypes.org.joml.Matrix4x3d;
                negateX(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                negateY(): _javatypes.org.joml.Matrix4x3d;
                negateY(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                negateZ(): _javatypes.org.joml.Matrix4x3d;
                negateZ(arg0: _javatypes.org.joml.Matrix4x3d): _javatypes.org.joml.Matrix4x3d;
                isFinite(): boolean;
                clone(): any;
                
            }
            namespace Matrix4x3d {
                interface static {
                    new (): _javatypes.org.joml.Matrix4x3d;
                    new (arg0: _javatypes.org.joml.Matrix4x3dc): _javatypes.org.joml.Matrix4x3d;
                    new (arg0: _javatypes.org.joml.Matrix4x3fc): _javatypes.org.joml.Matrix4x3d;
                    new (arg0: _javatypes.org.joml.Matrix3dc): _javatypes.org.joml.Matrix4x3d;
                    new (arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Matrix4x3d;
                    new (arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number, arg8: number, arg9: number, arg10: number, arg11: number): _javatypes.org.joml.Matrix4x3d;
                    new (arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Matrix4x3d;
                    
                    
                    
                }
            }
            interface Vector2d extends any, _javatypes.java.io.Externalizable, _javatypes.java.lang.Cloneable, _javatypes.org.joml.Vector2dc {
                x: number;
                y: number;
                
                x(): number;
                y(): number;
                set(arg0: number): _javatypes.org.joml.Vector2d;
                set(arg0: number, arg1: number): _javatypes.org.joml.Vector2d;
                set(arg0: _javatypes.org.joml.Vector2dc): _javatypes.org.joml.Vector2d;
                set(arg0: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Vector2d;
                set(arg0: _javatypes.org.joml.Vector2ic): _javatypes.org.joml.Vector2d;
                set(arg0: number[]): _javatypes.org.joml.Vector2d;
                set(arg0: number[]): _javatypes.org.joml.Vector2d;
                set(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector2d;
                set(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector2d;
                set(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Vector2d;
                set(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Vector2d;
                setFromAddress(arg0: number): _javatypes.org.joml.Vector2d;
                get(arg0: number): number;
                get(arg0: number, arg1: _javatypes.org.joml.Vector2i): _javatypes.org.joml.Vector2i;
                get(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                get(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                setComponent(arg0: number, arg1: number): _javatypes.org.joml.Vector2d;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Vector2dc;
                perpendicular(): _javatypes.org.joml.Vector2d;
                sub(arg0: _javatypes.org.joml.Vector2dc): _javatypes.org.joml.Vector2d;
                sub(arg0: number, arg1: number): _javatypes.org.joml.Vector2d;
                sub(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                sub(arg0: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Vector2d;
                sub(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                sub(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                mul(arg0: number): _javatypes.org.joml.Vector2d;
                mul(arg0: number, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                mul(arg0: number, arg1: number): _javatypes.org.joml.Vector2d;
                mul(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                mul(arg0: _javatypes.org.joml.Vector2dc): _javatypes.org.joml.Vector2d;
                mul(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                div(arg0: number): _javatypes.org.joml.Vector2d;
                div(arg0: number, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                div(arg0: number, arg1: number): _javatypes.org.joml.Vector2d;
                div(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                div(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                div(arg0: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Vector2d;
                div(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                div(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                mul(arg0: _javatypes.org.joml.Matrix2fc): _javatypes.org.joml.Vector2d;
                mul(arg0: _javatypes.org.joml.Matrix2dc): _javatypes.org.joml.Vector2d;
                mul(arg0: _javatypes.org.joml.Matrix2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                mul(arg0: _javatypes.org.joml.Matrix2fc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                mulTranspose(arg0: _javatypes.org.joml.Matrix2dc): _javatypes.org.joml.Vector2d;
                mulTranspose(arg0: _javatypes.org.joml.Matrix2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                mulTranspose(arg0: _javatypes.org.joml.Matrix2fc): _javatypes.org.joml.Vector2d;
                mulTranspose(arg0: _javatypes.org.joml.Matrix2fc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                mulPosition(arg0: _javatypes.org.joml.Matrix3x2dc): _javatypes.org.joml.Vector2d;
                mulPosition(arg0: _javatypes.org.joml.Matrix3x2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                mulDirection(arg0: _javatypes.org.joml.Matrix3x2dc): _javatypes.org.joml.Vector2d;
                mulDirection(arg0: _javatypes.org.joml.Matrix3x2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                dot(arg0: _javatypes.org.joml.Vector2dc): number;
                angle(arg0: _javatypes.org.joml.Vector2dc): number;
                lengthSquared(): number;
                length(): number;
                distance(arg0: _javatypes.org.joml.Vector2dc): number;
                distanceSquared(arg0: _javatypes.org.joml.Vector2dc): number;
                distance(arg0: _javatypes.org.joml.Vector2fc): number;
                distanceSquared(arg0: _javatypes.org.joml.Vector2fc): number;
                distance(arg0: number, arg1: number): number;
                distanceSquared(arg0: number, arg1: number): number;
                normalize(): _javatypes.org.joml.Vector2d;
                normalize(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                normalize(arg0: number): _javatypes.org.joml.Vector2d;
                normalize(arg0: number, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                add(arg0: _javatypes.org.joml.Vector2dc): _javatypes.org.joml.Vector2d;
                add(arg0: number, arg1: number): _javatypes.org.joml.Vector2d;
                add(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                add(arg0: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Vector2d;
                add(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                add(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                zero(): _javatypes.org.joml.Vector2d;
                writeExternal(arg0: _javatypes.java.io.ObjectOutput): void;
                readExternal(arg0: _javatypes.java.io.ObjectInput): void;
                negate(): _javatypes.org.joml.Vector2d;
                negate(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                lerp(arg0: _javatypes.org.joml.Vector2dc, arg1: number): _javatypes.org.joml.Vector2d;
                lerp(arg0: _javatypes.org.joml.Vector2dc, arg1: number, arg2: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                hashCode(): number;
                equals(arg0: any): boolean;
                equals(arg0: _javatypes.org.joml.Vector2dc, arg1: number): boolean;
                equals(arg0: number, arg1: number): boolean;
                toString(): string;
                toString(arg0: _javatypes.java.text.NumberFormat): string;
                fma(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2dc): _javatypes.org.joml.Vector2d;
                fma(arg0: number, arg1: _javatypes.org.joml.Vector2dc): _javatypes.org.joml.Vector2d;
                fma(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2dc, arg2: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                fma(arg0: number, arg1: _javatypes.org.joml.Vector2dc, arg2: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                min(arg0: _javatypes.org.joml.Vector2dc): _javatypes.org.joml.Vector2d;
                min(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                max(arg0: _javatypes.org.joml.Vector2dc): _javatypes.org.joml.Vector2d;
                max(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                maxComponent(): number;
                minComponent(): number;
                floor(): _javatypes.org.joml.Vector2d;
                floor(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                ceil(): _javatypes.org.joml.Vector2d;
                ceil(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                round(): _javatypes.org.joml.Vector2d;
                round(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                isFinite(): boolean;
                absolute(): _javatypes.org.joml.Vector2d;
                absolute(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                clone(): any;
                
            }
            namespace Vector2d {
                interface static {
                    new (): _javatypes.org.joml.Vector2d;
                    new (arg0: number): _javatypes.org.joml.Vector2d;
                    new (arg0: number, arg1: number): _javatypes.org.joml.Vector2d;
                    new (arg0: _javatypes.org.joml.Vector2dc): _javatypes.org.joml.Vector2d;
                    new (arg0: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Vector2d;
                    new (arg0: _javatypes.org.joml.Vector2ic): _javatypes.org.joml.Vector2d;
                    new (arg0: number[]): _javatypes.org.joml.Vector2d;
                    new (arg0: number[]): _javatypes.org.joml.Vector2d;
                    new (arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector2d;
                    new (arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector2d;
                    new (arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Vector2d;
                    new (arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Vector2d;
                    
                    
                    lengthSquared(arg0: number, arg1: number): number;
                    length(arg0: number, arg1: number): number;
                    distance(arg0: number, arg1: number, arg2: number, arg3: number): number;
                    distanceSquared(arg0: number, arg1: number, arg2: number, arg3: number): number;
                    
                }
            }
            interface Vector4i extends any, _javatypes.java.io.Externalizable, _javatypes.java.lang.Cloneable, _javatypes.org.joml.Vector4ic {
                x: number;
                y: number;
                z: number;
                w: number;
                
                x(): number;
                y(): number;
                z(): number;
                w(): number;
                set(arg0: _javatypes.org.joml.Vector4ic): _javatypes.org.joml.Vector4i;
                set(arg0: _javatypes.org.joml.Vector4dc): _javatypes.org.joml.Vector4i;
                set(arg0: _javatypes.org.joml.Vector4dc, arg1: number): _javatypes.org.joml.Vector4i;
                set(arg0: _javatypes.org.joml.Vector4fc, arg1: number): _javatypes.org.joml.Vector4i;
                set(arg0: _javatypes.org.joml.Vector3ic, arg1: number): _javatypes.org.joml.Vector4i;
                set(arg0: _javatypes.org.joml.Vector2ic, arg1: number, arg2: number): _javatypes.org.joml.Vector4i;
                set(arg0: number): _javatypes.org.joml.Vector4i;
                set(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Vector4i;
                set(arg0: number[]): _javatypes.org.joml.Vector4i;
                set(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector4i;
                set(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector4i;
                set(arg0: _javatypes.java.nio.IntBuffer): _javatypes.org.joml.Vector4i;
                set(arg0: number, arg1: _javatypes.java.nio.IntBuffer): _javatypes.org.joml.Vector4i;
                setFromAddress(arg0: number): _javatypes.org.joml.Vector4i;
                get(arg0: number): number;
                maxComponent(): number;
                minComponent(): number;
                setComponent(arg0: number, arg1: number): _javatypes.org.joml.Vector4i;
                get(arg0: _javatypes.java.nio.IntBuffer): _javatypes.java.nio.IntBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.IntBuffer): _javatypes.java.nio.IntBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Vector4ic;
                sub(arg0: _javatypes.org.joml.Vector4ic): _javatypes.org.joml.Vector4i;
                sub(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Vector4i;
                sub(arg0: _javatypes.org.joml.Vector4ic, arg1: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                sub(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                add(arg0: _javatypes.org.joml.Vector4ic): _javatypes.org.joml.Vector4i;
                add(arg0: _javatypes.org.joml.Vector4ic, arg1: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                add(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Vector4i;
                add(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                mul(arg0: _javatypes.org.joml.Vector4ic): _javatypes.org.joml.Vector4i;
                mul(arg0: _javatypes.org.joml.Vector4ic, arg1: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                div(arg0: _javatypes.org.joml.Vector4ic): _javatypes.org.joml.Vector4i;
                div(arg0: _javatypes.org.joml.Vector4ic, arg1: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                mul(arg0: number): _javatypes.org.joml.Vector4i;
                mul(arg0: number, arg1: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                div(arg0: number): _javatypes.org.joml.Vector4i;
                div(arg0: number, arg1: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                div(arg0: number): _javatypes.org.joml.Vector4i;
                div(arg0: number, arg1: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                lengthSquared(): number;
                length(): number;
                distance(arg0: _javatypes.org.joml.Vector4ic): number;
                distance(arg0: number, arg1: number, arg2: number, arg3: number): number;
                gridDistance(arg0: _javatypes.org.joml.Vector4ic): number;
                gridDistance(arg0: number, arg1: number, arg2: number, arg3: number): number;
                distanceSquared(arg0: _javatypes.org.joml.Vector4ic): number;
                distanceSquared(arg0: number, arg1: number, arg2: number, arg3: number): number;
                dot(arg0: _javatypes.org.joml.Vector4ic): number;
                zero(): _javatypes.org.joml.Vector4i;
                negate(): _javatypes.org.joml.Vector4i;
                negate(arg0: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                toString(): string;
                toString(arg0: _javatypes.java.text.NumberFormat): string;
                writeExternal(arg0: _javatypes.java.io.ObjectOutput): void;
                readExternal(arg0: _javatypes.java.io.ObjectInput): void;
                min(arg0: _javatypes.org.joml.Vector4ic): _javatypes.org.joml.Vector4i;
                min(arg0: _javatypes.org.joml.Vector4ic, arg1: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                max(arg0: _javatypes.org.joml.Vector4ic): _javatypes.org.joml.Vector4i;
                max(arg0: _javatypes.org.joml.Vector4ic, arg1: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                absolute(): _javatypes.org.joml.Vector4i;
                absolute(arg0: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                hashCode(): number;
                equals(arg0: any): boolean;
                equals(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                clone(): any;
                
            }
            namespace Vector4i {
                interface static {
                    new (): _javatypes.org.joml.Vector4i;
                    new (arg0: _javatypes.org.joml.Vector4ic): _javatypes.org.joml.Vector4i;
                    new (arg0: _javatypes.org.joml.Vector3ic, arg1: number): _javatypes.org.joml.Vector4i;
                    new (arg0: _javatypes.org.joml.Vector2ic, arg1: number, arg2: number): _javatypes.org.joml.Vector4i;
                    new (arg0: _javatypes.org.joml.Vector3fc, arg1: number, arg2: number): _javatypes.org.joml.Vector4i;
                    new (arg0: _javatypes.org.joml.Vector4fc, arg1: number): _javatypes.org.joml.Vector4i;
                    new (arg0: _javatypes.org.joml.Vector4dc, arg1: number): _javatypes.org.joml.Vector4i;
                    new (arg0: number): _javatypes.org.joml.Vector4i;
                    new (arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Vector4i;
                    new (arg0: number[]): _javatypes.org.joml.Vector4i;
                    new (arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector4i;
                    new (arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Vector4i;
                    new (arg0: _javatypes.java.nio.IntBuffer): _javatypes.org.joml.Vector4i;
                    new (arg0: number, arg1: _javatypes.java.nio.IntBuffer): _javatypes.org.joml.Vector4i;
                    
                    
                    lengthSquared(arg0: number, arg1: number, arg2: number, arg3: number): number;
                    length(arg0: number, arg1: number, arg2: number, arg3: number): number;
                    distance(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): number;
                    distanceSquared(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: number, arg7: number): number;
                    
                }
            }
            interface Matrix2d extends any, _javatypes.java.io.Externalizable, _javatypes.java.lang.Cloneable, _javatypes.org.joml.Matrix2dc {
                m00: number;
                m01: number;
                m10: number;
                m11: number;
                
                m00(): number;
                m01(): number;
                m10(): number;
                m11(): number;
                m00(arg0: number): _javatypes.org.joml.Matrix2d;
                m01(arg0: number): _javatypes.org.joml.Matrix2d;
                m10(arg0: number): _javatypes.org.joml.Matrix2d;
                m11(arg0: number): _javatypes.org.joml.Matrix2d;
                set(arg0: _javatypes.org.joml.Matrix2dc): _javatypes.org.joml.Matrix2d;
                set(arg0: _javatypes.org.joml.Matrix2fc): _javatypes.org.joml.Matrix2d;
                set(arg0: _javatypes.org.joml.Matrix3x2dc): _javatypes.org.joml.Matrix2d;
                set(arg0: _javatypes.org.joml.Matrix3x2fc): _javatypes.org.joml.Matrix2d;
                set(arg0: _javatypes.org.joml.Matrix3dc): _javatypes.org.joml.Matrix2d;
                set(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Matrix2d;
                mul(arg0: _javatypes.org.joml.Matrix2dc): _javatypes.org.joml.Matrix2d;
                mul(arg0: _javatypes.org.joml.Matrix2dc, arg1: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                mul(arg0: _javatypes.org.joml.Matrix2fc): _javatypes.org.joml.Matrix2d;
                mul(arg0: _javatypes.org.joml.Matrix2fc, arg1: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                mulLocal(arg0: _javatypes.org.joml.Matrix2dc): _javatypes.org.joml.Matrix2d;
                mulLocal(arg0: _javatypes.org.joml.Matrix2dc, arg1: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                set(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix2d;
                set(arg0: number[]): _javatypes.org.joml.Matrix2d;
                set(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2dc): _javatypes.org.joml.Matrix2d;
                determinant(): number;
                invert(): _javatypes.org.joml.Matrix2d;
                invert(arg0: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                transpose(): _javatypes.org.joml.Matrix2d;
                transpose(arg0: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                toString(): string;
                toString(arg0: _javatypes.java.text.NumberFormat): string;
                get(arg0: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                get(arg0: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                get(arg0: _javatypes.org.joml.Matrix3d): _javatypes.org.joml.Matrix3d;
                getRotation(): number;
                get(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getFloats(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getFloats(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                getTransposed(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposedFloats(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposedFloats(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Matrix2dc;
                get(arg0: number[], arg1: number): number[];
                get(arg0: number[]): number[];
                set(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Matrix2d;
                set(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix2d;
                set(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Matrix2d;
                set(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix2d;
                setFromAddress(arg0: number): _javatypes.org.joml.Matrix2d;
                zero(): _javatypes.org.joml.Matrix2d;
                identity(): _javatypes.org.joml.Matrix2d;
                scale(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                scale(arg0: _javatypes.org.joml.Vector2dc): _javatypes.org.joml.Matrix2d;
                scale(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                scale(arg0: number, arg1: number): _javatypes.org.joml.Matrix2d;
                scale(arg0: number, arg1: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                scale(arg0: number): _javatypes.org.joml.Matrix2d;
                scaleLocal(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                scaleLocal(arg0: number, arg1: number): _javatypes.org.joml.Matrix2d;
                scaling(arg0: number): _javatypes.org.joml.Matrix2d;
                scaling(arg0: number, arg1: number): _javatypes.org.joml.Matrix2d;
                scaling(arg0: _javatypes.org.joml.Vector2dc): _javatypes.org.joml.Matrix2d;
                rotation(arg0: number): _javatypes.org.joml.Matrix2d;
                transform(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                transform(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                transform(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                transformTranspose(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                transformTranspose(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                transformTranspose(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                writeExternal(arg0: _javatypes.java.io.ObjectOutput): void;
                readExternal(arg0: _javatypes.java.io.ObjectInput): void;
                rotate(arg0: number): _javatypes.org.joml.Matrix2d;
                rotate(arg0: number, arg1: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                rotateLocal(arg0: number): _javatypes.org.joml.Matrix2d;
                rotateLocal(arg0: number, arg1: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                getRow(arg0: number, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                setRow(arg0: number, arg1: _javatypes.org.joml.Vector2dc): _javatypes.org.joml.Matrix2d;
                setRow(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix2d;
                getColumn(arg0: number, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                setColumn(arg0: number, arg1: _javatypes.org.joml.Vector2dc): _javatypes.org.joml.Matrix2d;
                setColumn(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix2d;
                get(arg0: number, arg1: number): number;
                set(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix2d;
                normal(): _javatypes.org.joml.Matrix2d;
                normal(arg0: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                getScale(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                positiveX(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                normalizedPositiveX(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                positiveY(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                normalizedPositiveY(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                hashCode(): number;
                equals(arg0: any): boolean;
                equals(arg0: _javatypes.org.joml.Matrix2dc, arg1: number): boolean;
                swap(arg0: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                add(arg0: _javatypes.org.joml.Matrix2dc): _javatypes.org.joml.Matrix2d;
                add(arg0: _javatypes.org.joml.Matrix2dc, arg1: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                sub(arg0: _javatypes.org.joml.Matrix2dc): _javatypes.org.joml.Matrix2d;
                sub(arg0: _javatypes.org.joml.Matrix2dc, arg1: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                mulComponentWise(arg0: _javatypes.org.joml.Matrix2dc): _javatypes.org.joml.Matrix2d;
                mulComponentWise(arg0: _javatypes.org.joml.Matrix2dc, arg1: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                lerp(arg0: _javatypes.org.joml.Matrix2dc, arg1: number): _javatypes.org.joml.Matrix2d;
                lerp(arg0: _javatypes.org.joml.Matrix2dc, arg1: number, arg2: _javatypes.org.joml.Matrix2d): _javatypes.org.joml.Matrix2d;
                isFinite(): boolean;
                clone(): any;
                
            }
            namespace Matrix2d {
                interface static {
                    new (): _javatypes.org.joml.Matrix2d;
                    new (arg0: _javatypes.org.joml.Matrix2dc): _javatypes.org.joml.Matrix2d;
                    new (arg0: _javatypes.org.joml.Matrix2fc): _javatypes.org.joml.Matrix2d;
                    new (arg0: _javatypes.org.joml.Matrix3dc): _javatypes.org.joml.Matrix2d;
                    new (arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Matrix2d;
                    new (arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix2d;
                    new (arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Matrix2d;
                    new (arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2dc): _javatypes.org.joml.Matrix2d;
                    
                    
                    
                }
            }
            interface Matrix3x2d extends any, _javatypes.org.joml.Matrix3x2dc, _javatypes.java.lang.Cloneable, _javatypes.java.io.Externalizable {
                m00: number;
                m01: number;
                m10: number;
                m11: number;
                m20: number;
                m21: number;
                
                m00(): number;
                m01(): number;
                m10(): number;
                m11(): number;
                m20(): number;
                m21(): number;
                set(arg0: _javatypes.org.joml.Matrix3x2dc): _javatypes.org.joml.Matrix3x2d;
                set(arg0: _javatypes.org.joml.Matrix2dc): _javatypes.org.joml.Matrix3x2d;
                set(arg0: _javatypes.org.joml.Matrix2fc): _javatypes.org.joml.Matrix3x2d;
                mul(arg0: _javatypes.org.joml.Matrix3x2dc): _javatypes.org.joml.Matrix3x2d;
                mul(arg0: _javatypes.org.joml.Matrix3x2dc, arg1: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                mulLocal(arg0: _javatypes.org.joml.Matrix3x2dc): _javatypes.org.joml.Matrix3x2d;
                mulLocal(arg0: _javatypes.org.joml.Matrix3x2dc, arg1: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                set(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix3x2d;
                set(arg0: number[]): _javatypes.org.joml.Matrix3x2d;
                determinant(): number;
                invert(): _javatypes.org.joml.Matrix3x2d;
                invert(arg0: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                translation(arg0: number, arg1: number): _javatypes.org.joml.Matrix3x2d;
                translation(arg0: _javatypes.org.joml.Vector2dc): _javatypes.org.joml.Matrix3x2d;
                setTranslation(arg0: number, arg1: number): _javatypes.org.joml.Matrix3x2d;
                setTranslation(arg0: _javatypes.org.joml.Vector2dc): _javatypes.org.joml.Matrix3x2d;
                translate(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                translate(arg0: number, arg1: number): _javatypes.org.joml.Matrix3x2d;
                translate(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                translate(arg0: _javatypes.org.joml.Vector2dc): _javatypes.org.joml.Matrix3x2d;
                translateLocal(arg0: _javatypes.org.joml.Vector2dc): _javatypes.org.joml.Matrix3x2d;
                translateLocal(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                translateLocal(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                translateLocal(arg0: number, arg1: number): _javatypes.org.joml.Matrix3x2d;
                toString(): string;
                toString(arg0: _javatypes.java.text.NumberFormat): string;
                get(arg0: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                get(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get3x3(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get3x3(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get3x3(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get3x3(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get4x4(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get4x4(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                get4x4(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get4x4(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.java.nio.DoubleBuffer;
                getTransposed(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposedFloats(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposedFloats(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Matrix3x2dc;
                get(arg0: number[], arg1: number): number[];
                get(arg0: number[]): number[];
                get3x3(arg0: number[], arg1: number): number[];
                get3x3(arg0: number[]): number[];
                get4x4(arg0: number[], arg1: number): number[];
                get4x4(arg0: number[]): number[];
                set(arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Matrix3x2d;
                set(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix3x2d;
                set(arg0: number, arg1: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Matrix3x2d;
                set(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix3x2d;
                setFromAddress(arg0: number): _javatypes.org.joml.Matrix3x2d;
                zero(): _javatypes.org.joml.Matrix3x2d;
                identity(): _javatypes.org.joml.Matrix3x2d;
                scale(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                scale(arg0: number, arg1: number): _javatypes.org.joml.Matrix3x2d;
                scale(arg0: _javatypes.org.joml.Vector2dc): _javatypes.org.joml.Matrix3x2d;
                scale(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                scale(arg0: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Matrix3x2d;
                scale(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                scale(arg0: number, arg1: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                scale(arg0: number): _javatypes.org.joml.Matrix3x2d;
                scaleLocal(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                scaleLocal(arg0: number, arg1: number): _javatypes.org.joml.Matrix3x2d;
                scaleLocal(arg0: number, arg1: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                scaleLocal(arg0: number): _javatypes.org.joml.Matrix3x2d;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix3x2d;
                scaleAround(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                scaleAround(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3x2d;
                scaleAroundLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                scaleAroundLocal(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                scaleAroundLocal(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix3x2d;
                scaleAroundLocal(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3x2d;
                scaling(arg0: number): _javatypes.org.joml.Matrix3x2d;
                scaling(arg0: number, arg1: number): _javatypes.org.joml.Matrix3x2d;
                rotation(arg0: number): _javatypes.org.joml.Matrix3x2d;
                transform(arg0: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transform(arg0: _javatypes.org.joml.Vector3dc, arg1: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transform(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Vector3d): _javatypes.org.joml.Vector3d;
                transformPosition(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                transformPosition(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                transformPosition(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                transformDirection(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                transformDirection(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                transformDirection(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                writeExternal(arg0: _javatypes.java.io.ObjectOutput): void;
                readExternal(arg0: _javatypes.java.io.ObjectInput): void;
                rotate(arg0: number): _javatypes.org.joml.Matrix3x2d;
                rotate(arg0: number, arg1: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                rotateLocal(arg0: number, arg1: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                rotateLocal(arg0: number): _javatypes.org.joml.Matrix3x2d;
                rotateAbout(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix3x2d;
                rotateAbout(arg0: number, arg1: number, arg2: number, arg3: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                rotateTo(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2dc, arg2: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                rotateTo(arg0: _javatypes.org.joml.Vector2dc, arg1: _javatypes.org.joml.Vector2dc): _javatypes.org.joml.Matrix3x2d;
                view(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Matrix3x2d): _javatypes.org.joml.Matrix3x2d;
                view(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix3x2d;
                setView(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix3x2d;
                origin(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                viewArea(arg0: number[]): number[];
                positiveX(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                normalizedPositiveX(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                positiveY(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                normalizedPositiveY(arg0: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                unproject(arg0: number, arg1: number, arg2: number[], arg3: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                unprojectInv(arg0: number, arg1: number, arg2: number[], arg3: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Vector2d;
                span(arg0: _javatypes.org.joml.Vector2d, arg1: _javatypes.org.joml.Vector2d, arg2: _javatypes.org.joml.Vector2d): _javatypes.org.joml.Matrix3x2d;
                testPoint(arg0: number, arg1: number): boolean;
                testCircle(arg0: number, arg1: number, arg2: number): boolean;
                testAar(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                hashCode(): number;
                equals(arg0: any): boolean;
                equals(arg0: _javatypes.org.joml.Matrix3x2dc, arg1: number): boolean;
                isFinite(): boolean;
                clone(): any;
                
            }
            namespace Matrix3x2d {
                interface static {
                    new (): _javatypes.org.joml.Matrix3x2d;
                    new (arg0: _javatypes.org.joml.Matrix2dc): _javatypes.org.joml.Matrix3x2d;
                    new (arg0: _javatypes.org.joml.Matrix2fc): _javatypes.org.joml.Matrix3x2d;
                    new (arg0: _javatypes.org.joml.Matrix3x2dc): _javatypes.org.joml.Matrix3x2d;
                    new (arg0: number, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number): _javatypes.org.joml.Matrix3x2d;
                    new (arg0: _javatypes.java.nio.DoubleBuffer): _javatypes.org.joml.Matrix3x2d;
                    
                    
                    
                }
            }
            interface Vector4ic extends _javatypes.java.lang.Interface {
                
                x(): number;
                y(): number;
                z(): number;
                w(): number;
                get(arg0: _javatypes.java.nio.IntBuffer): _javatypes.java.nio.IntBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.IntBuffer): _javatypes.java.nio.IntBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Vector4ic;
                sub(arg0: _javatypes.org.joml.Vector4ic, arg1: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                sub(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                add(arg0: _javatypes.org.joml.Vector4ic, arg1: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                add(arg0: number, arg1: number, arg2: number, arg3: number, arg4: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                mul(arg0: _javatypes.org.joml.Vector4ic, arg1: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                div(arg0: _javatypes.org.joml.Vector4ic, arg1: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                mul(arg0: number, arg1: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                div(arg0: number, arg1: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                div(arg0: number, arg1: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                lengthSquared(): number;
                length(): number;
                distance(arg0: _javatypes.org.joml.Vector4ic): number;
                distance(arg0: number, arg1: number, arg2: number, arg3: number): number;
                gridDistance(arg0: _javatypes.org.joml.Vector4ic): number;
                gridDistance(arg0: number, arg1: number, arg2: number, arg3: number): number;
                distanceSquared(arg0: _javatypes.org.joml.Vector4ic): number;
                distanceSquared(arg0: number, arg1: number, arg2: number, arg3: number): number;
                dot(arg0: _javatypes.org.joml.Vector4ic): number;
                negate(arg0: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                min(arg0: _javatypes.org.joml.Vector4ic, arg1: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                max(arg0: _javatypes.org.joml.Vector4ic, arg1: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                get(arg0: number): number;
                maxComponent(): number;
                minComponent(): number;
                absolute(arg0: _javatypes.org.joml.Vector4i): _javatypes.org.joml.Vector4i;
                equals(arg0: number, arg1: number, arg2: number, arg3: number): boolean;
                
            }
            namespace Vector4ic {
                interface static {
                    
                    
                    
                }
            }
            interface Matrix2f extends any, _javatypes.java.io.Externalizable, _javatypes.java.lang.Cloneable, _javatypes.org.joml.Matrix2fc {
                m00: number;
                m01: number;
                m10: number;
                m11: number;
                
                m00(): number;
                m01(): number;
                m10(): number;
                m11(): number;
                m00(arg0: number): _javatypes.org.joml.Matrix2f;
                m01(arg0: number): _javatypes.org.joml.Matrix2f;
                m10(arg0: number): _javatypes.org.joml.Matrix2f;
                m11(arg0: number): _javatypes.org.joml.Matrix2f;
                set(arg0: _javatypes.org.joml.Matrix2fc): _javatypes.org.joml.Matrix2f;
                set(arg0: _javatypes.org.joml.Matrix3x2fc): _javatypes.org.joml.Matrix2f;
                set(arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Matrix2f;
                mul(arg0: _javatypes.org.joml.Matrix2fc): _javatypes.org.joml.Matrix2f;
                mul(arg0: _javatypes.org.joml.Matrix2fc, arg1: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                mulLocal(arg0: _javatypes.org.joml.Matrix2fc): _javatypes.org.joml.Matrix2f;
                mulLocal(arg0: _javatypes.org.joml.Matrix2fc, arg1: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                set(arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix2f;
                set(arg0: number[]): _javatypes.org.joml.Matrix2f;
                set(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Matrix2f;
                determinant(): number;
                invert(): _javatypes.org.joml.Matrix2f;
                invert(arg0: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                transpose(): _javatypes.org.joml.Matrix2f;
                transpose(arg0: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                toString(): string;
                toString(arg0: _javatypes.java.text.NumberFormat): string;
                get(arg0: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                get(arg0: _javatypes.org.joml.Matrix3x2f): _javatypes.org.joml.Matrix3x2f;
                get(arg0: _javatypes.org.joml.Matrix3f): _javatypes.org.joml.Matrix3f;
                getRotation(): number;
                get(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                get(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                get(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.java.nio.FloatBuffer;
                getTransposed(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getTransposed(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.java.nio.ByteBuffer;
                getToAddress(arg0: number): _javatypes.org.joml.Matrix2fc;
                get(arg0: number[], arg1: number): number[];
                get(arg0: number[]): number[];
                set(arg0: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Matrix2f;
                set(arg0: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix2f;
                set(arg0: number, arg1: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Matrix2f;
                set(arg0: number, arg1: _javatypes.java.nio.ByteBuffer): _javatypes.org.joml.Matrix2f;
                setFromAddress(arg0: number): _javatypes.org.joml.Matrix2f;
                zero(): _javatypes.org.joml.Matrix2f;
                identity(): _javatypes.org.joml.Matrix2f;
                scale(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                scale(arg0: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Matrix2f;
                scale(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                scale(arg0: number, arg1: number): _javatypes.org.joml.Matrix2f;
                scale(arg0: number, arg1: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                scale(arg0: number): _javatypes.org.joml.Matrix2f;
                scaleLocal(arg0: number, arg1: number, arg2: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                scaleLocal(arg0: number, arg1: number): _javatypes.org.joml.Matrix2f;
                scaling(arg0: number): _javatypes.org.joml.Matrix2f;
                scaling(arg0: number, arg1: number): _javatypes.org.joml.Matrix2f;
                scaling(arg0: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Matrix2f;
                rotation(arg0: number): _javatypes.org.joml.Matrix2f;
                transform(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                transform(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                transform(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                transformTranspose(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                transformTranspose(arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                transformTranspose(arg0: number, arg1: number, arg2: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                writeExternal(arg0: _javatypes.java.io.ObjectOutput): void;
                readExternal(arg0: _javatypes.java.io.ObjectInput): void;
                rotate(arg0: number): _javatypes.org.joml.Matrix2f;
                rotate(arg0: number, arg1: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                rotateLocal(arg0: number): _javatypes.org.joml.Matrix2f;
                rotateLocal(arg0: number, arg1: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                getRow(arg0: number, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                setRow(arg0: number, arg1: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Matrix2f;
                setRow(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix2f;
                getColumn(arg0: number, arg1: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                setColumn(arg0: number, arg1: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Matrix2f;
                setColumn(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix2f;
                get(arg0: number, arg1: number): number;
                set(arg0: number, arg1: number, arg2: number): _javatypes.org.joml.Matrix2f;
                normal(): _javatypes.org.joml.Matrix2f;
                normal(arg0: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                getScale(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                positiveX(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                normalizedPositiveX(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                positiveY(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                normalizedPositiveY(arg0: _javatypes.org.joml.Vector2f): _javatypes.org.joml.Vector2f;
                hashCode(): number;
                equals(arg0: any): boolean;
                equals(arg0: _javatypes.org.joml.Matrix2fc, arg1: number): boolean;
                swap(arg0: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                add(arg0: _javatypes.org.joml.Matrix2fc): _javatypes.org.joml.Matrix2f;
                add(arg0: _javatypes.org.joml.Matrix2fc, arg1: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                sub(arg0: _javatypes.org.joml.Matrix2fc): _javatypes.org.joml.Matrix2f;
                sub(arg0: _javatypes.org.joml.Matrix2fc, arg1: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                mulComponentWise(arg0: _javatypes.org.joml.Matrix2fc): _javatypes.org.joml.Matrix2f;
                mulComponentWise(arg0: _javatypes.org.joml.Matrix2fc, arg1: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                lerp(arg0: _javatypes.org.joml.Matrix2fc, arg1: number): _javatypes.org.joml.Matrix2f;
                lerp(arg0: _javatypes.org.joml.Matrix2fc, arg1: number, arg2: _javatypes.org.joml.Matrix2f): _javatypes.org.joml.Matrix2f;
                isFinite(): boolean;
                clone(): any;
                
            }
            namespace Matrix2f {
                interface static {
                    new (): _javatypes.org.joml.Matrix2f;
                    new (arg0: _javatypes.org.joml.Matrix2fc): _javatypes.org.joml.Matrix2f;
                    new (arg0: _javatypes.org.joml.Matrix3fc): _javatypes.org.joml.Matrix2f;
                    new (arg0: number, arg1: number, arg2: number, arg3: number): _javatypes.org.joml.Matrix2f;
                    new (arg0: _javatypes.java.nio.FloatBuffer): _javatypes.org.joml.Matrix2f;
                    new (arg0: _javatypes.org.joml.Vector2fc, arg1: _javatypes.org.joml.Vector2fc): _javatypes.org.joml.Matrix2f;
                    
                    
                    
                }
            }
        }
    }

    namespace javax {
    
    
        namespace sound.sampled {
        
            interface Clip extends _javatypes.java.lang.Interface, _javatypes.javax.sound.sampled.DataLine {
                
                open(arg0: _javatypes.javax.sound.sampled.AudioFormat, arg1: number[], arg2: number, arg3: number): void;
                open(arg0: _javatypes.javax.sound.sampled.AudioInputStream): void;
                getFrameLength(): number;
                getMicrosecondLength(): number;
                setFramePosition(arg0: number): void;
                setMicrosecondPosition(arg0: number): void;
                setLoopPoints(arg0: number, arg1: number): void;
                loop(arg0: number): void;
                
            }
            namespace Clip {
                interface static {
                    
                    readonly LOOP_CONTINUOUSLY: number;
                    
                    
                }
            }
            interface AudioFormat extends any {
                
                getEncoding(): _javatypes.javax.sound.sampled.AudioFormat$Encoding;
                getSampleRate(): number;
                getSampleSizeInBits(): number;
                getChannels(): number;
                getFrameSize(): number;
                getFrameRate(): number;
                isBigEndian(): boolean;
                properties(): _javatypes.java.util.Map<string, any>;
                getProperty(arg0: string): any;
                matches(arg0: _javatypes.javax.sound.sampled.AudioFormat): boolean;
                toString(): string;
                
            }
            namespace AudioFormat {
                interface static {
                    new (arg0: _javatypes.javax.sound.sampled.AudioFormat$Encoding, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean): _javatypes.javax.sound.sampled.AudioFormat;
                    new (arg0: _javatypes.javax.sound.sampled.AudioFormat$Encoding, arg1: number, arg2: number, arg3: number, arg4: number, arg5: number, arg6: boolean, arg7: _javatypes.java.util.Map<string, any>): _javatypes.javax.sound.sampled.AudioFormat;
                    new (arg0: number, arg1: number, arg2: number, arg3: boolean, arg4: boolean): _javatypes.javax.sound.sampled.AudioFormat;
                    
                    
                    
                }
            }
            interface AudioInputStream extends _javatypes.java.io.InputStream {
                
                getFormat(): _javatypes.javax.sound.sampled.AudioFormat;
                getFrameLength(): number;
                read(): number;
                read(arg0: number[]): number;
                read(arg0: number[], arg1: number, arg2: number): number;
                skip(arg0: number): number;
                available(): number;
                close(): void;
                mark(arg0: number): void;
                reset(): void;
                markSupported(): boolean;
                
            }
            namespace AudioInputStream {
                interface static {
                    new (arg0: _javatypes.java.io.InputStream, arg1: _javatypes.javax.sound.sampled.AudioFormat, arg2: number): _javatypes.javax.sound.sampled.AudioInputStream;
                    new (arg0: _javatypes.javax.sound.sampled.TargetDataLine): _javatypes.javax.sound.sampled.AudioInputStream;
                    
                    
                    
                }
            }
            interface DataLine extends _javatypes.java.lang.Interface, _javatypes.javax.sound.sampled.Line {
                
                drain(): void;
                flush(): void;
                start(): void;
                stop(): void;
                isRunning(): boolean;
                isActive(): boolean;
                getFormat(): _javatypes.javax.sound.sampled.AudioFormat;
                getBufferSize(): number;
                available(): number;
                getFramePosition(): number;
                getLongFramePosition(): number;
                getMicrosecondPosition(): number;
                getLevel(): number;
                
            }
            namespace DataLine {
                interface static {
                    
                    
                    
                }
            }
            interface AudioFormat$Encoding extends any {
                
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace AudioFormat$Encoding {
                interface static {
                    new (arg0: string): _javatypes.javax.sound.sampled.AudioFormat$Encoding;
                    
                    readonly PCM_SIGNED: _javatypes.javax.sound.sampled.AudioFormat$Encoding;
                    readonly PCM_UNSIGNED: _javatypes.javax.sound.sampled.AudioFormat$Encoding;
                    readonly PCM_FLOAT: _javatypes.javax.sound.sampled.AudioFormat$Encoding;
                    readonly ULAW: _javatypes.javax.sound.sampled.AudioFormat$Encoding;
                    readonly ALAW: _javatypes.javax.sound.sampled.AudioFormat$Encoding;
                    
                    
                }
            }
            interface Line extends _javatypes.java.lang.Interface, _javatypes.java.lang.AutoCloseable {
                
                getLineInfo(): _javatypes.javax.sound.sampled.Line$Info;
                open(): void;
                close(): void;
                isOpen(): boolean;
                getControls(): _javatypes.javax.sound.sampled.Control[];
                isControlSupported(arg0: _javatypes.javax.sound.sampled.Control$Type): boolean;
                getControl(arg0: _javatypes.javax.sound.sampled.Control$Type): _javatypes.javax.sound.sampled.Control;
                addLineListener(arg0: _javatypes.javax.sound.sampled.LineListener): void;
                removeLineListener(arg0: _javatypes.javax.sound.sampled.LineListener): void;
                
            }
            namespace Line {
                interface static {
                    
                    
                    
                }
            }
            interface TargetDataLine extends _javatypes.java.lang.Interface, _javatypes.javax.sound.sampled.DataLine {
                
                open(arg0: _javatypes.javax.sound.sampled.AudioFormat, arg1: number): void;
                open(arg0: _javatypes.javax.sound.sampled.AudioFormat): void;
                read(arg0: number[], arg1: number, arg2: number): number;
                
            }
            namespace TargetDataLine {
                interface static {
                    
                    
                    
                }
            }
            interface Control extends any {
                
                getType(): _javatypes.javax.sound.sampled.Control$Type;
                toString(): string;
                
            }
            namespace Control {
                interface static {
                    
                    
                    
                }
            }
            interface Control$Type extends any {
                
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace Control$Type {
                interface static {
                    
                    
                    
                }
            }
            interface Line$Info extends any {
                
                getLineClass(): _javatypes.java.lang.Class<any>;
                matches(arg0: _javatypes.javax.sound.sampled.Line$Info): boolean;
                toString(): string;
                
            }
            namespace Line$Info {
                interface static {
                    new (arg0: _javatypes.java.lang.Class<any>): _javatypes.javax.sound.sampled.Line$Info;
                    
                    
                    
                }
            }
            interface LineListener extends _javatypes.java.lang.Interface, _javatypes.java.util.EventListener {
                
                update(arg0: _javatypes.javax.sound.sampled.LineEvent): void;
                
            }
            namespace LineListener {
                interface static {
                    
                    
                    
                }
            }
            interface LineEvent extends _javatypes.java.util.EventObject {
                
                getLine(): _javatypes.javax.sound.sampled.Line;
                getType(): _javatypes.javax.sound.sampled.LineEvent$Type;
                getFramePosition(): number;
                toString(): string;
                
            }
            namespace LineEvent {
                interface static {
                    new (arg0: _javatypes.javax.sound.sampled.Line, arg1: _javatypes.javax.sound.sampled.LineEvent$Type, arg2: number): _javatypes.javax.sound.sampled.LineEvent;
                    
                    
                    
                }
            }
            interface LineEvent$Type extends any {
                
                equals(arg0: any): boolean;
                hashCode(): number;
                toString(): string;
                
            }
            namespace LineEvent$Type {
                interface static {
                    
                    readonly OPEN: _javatypes.javax.sound.sampled.LineEvent$Type;
                    readonly CLOSE: _javatypes.javax.sound.sampled.LineEvent$Type;
                    readonly START: _javatypes.javax.sound.sampled.LineEvent$Type;
                    readonly STOP: _javatypes.javax.sound.sampled.LineEvent$Type;
                    
                    
                }
            }
        }
    
        namespace accessibility {
        
            interface AccessibleContext extends any {
                
                getAccessibleName(): string;
                setAccessibleName(arg0: string): void;
                getAccessibleDescription(): string;
                setAccessibleDescription(arg0: string): void;
                getAccessibleRole(): _javatypes.javax.accessibility.AccessibleRole;
                getAccessibleStateSet(): _javatypes.javax.accessibility.AccessibleStateSet;
                getAccessibleParent(): _javatypes.javax.accessibility.Accessible;
                setAccessibleParent(arg0: _javatypes.javax.accessibility.Accessible): void;
                getAccessibleIndexInParent(): number;
                getAccessibleChildrenCount(): number;
                getAccessibleChild(arg0: number): _javatypes.javax.accessibility.Accessible;
                getLocale(): _javatypes.java.util.Locale;
                addPropertyChangeListener(arg0: _javatypes.java.beans.PropertyChangeListener): void;
                removePropertyChangeListener(arg0: _javatypes.java.beans.PropertyChangeListener): void;
                getAccessibleAction(): _javatypes.javax.accessibility.AccessibleAction;
                getAccessibleComponent(): _javatypes.javax.accessibility.AccessibleComponent;
                getAccessibleSelection(): _javatypes.javax.accessibility.AccessibleSelection;
                getAccessibleText(): _javatypes.javax.accessibility.AccessibleText;
                getAccessibleEditableText(): _javatypes.javax.accessibility.AccessibleEditableText;
                getAccessibleValue(): _javatypes.javax.accessibility.AccessibleValue;
                getAccessibleIcon(): _javatypes.javax.accessibility.AccessibleIcon[];
                getAccessibleRelationSet(): _javatypes.javax.accessibility.AccessibleRelationSet;
                getAccessibleTable(): _javatypes.javax.accessibility.AccessibleTable;
                firePropertyChange(arg0: string, arg1: any, arg2: any): void;
                
            }
            namespace AccessibleContext {
                interface static {
                    
                    readonly ACCESSIBLE_NAME_PROPERTY: string;
                    readonly ACCESSIBLE_DESCRIPTION_PROPERTY: string;
                    readonly ACCESSIBLE_STATE_PROPERTY: string;
                    readonly ACCESSIBLE_VALUE_PROPERTY: string;
                    readonly ACCESSIBLE_SELECTION_PROPERTY: string;
                    readonly ACCESSIBLE_CARET_PROPERTY: string;
                    readonly ACCESSIBLE_VISIBLE_DATA_PROPERTY: string;
                    readonly ACCESSIBLE_CHILD_PROPERTY: string;
                    readonly ACCESSIBLE_ACTIVE_DESCENDANT_PROPERTY: string;
                    readonly ACCESSIBLE_TABLE_CAPTION_CHANGED: string;
                    readonly ACCESSIBLE_TABLE_SUMMARY_CHANGED: string;
                    readonly ACCESSIBLE_TABLE_MODEL_CHANGED: string;
                    readonly ACCESSIBLE_TABLE_ROW_HEADER_CHANGED: string;
                    readonly ACCESSIBLE_TABLE_ROW_DESCRIPTION_CHANGED: string;
                    readonly ACCESSIBLE_TABLE_COLUMN_HEADER_CHANGED: string;
                    readonly ACCESSIBLE_TABLE_COLUMN_DESCRIPTION_CHANGED: string;
                    readonly ACCESSIBLE_ACTION_PROPERTY: string;
                    readonly ACCESSIBLE_HYPERTEXT_OFFSET: string;
                    readonly ACCESSIBLE_TEXT_PROPERTY: string;
                    readonly ACCESSIBLE_INVALIDATE_CHILDREN: string;
                    readonly ACCESSIBLE_TEXT_ATTRIBUTES_CHANGED: string;
                    readonly ACCESSIBLE_COMPONENT_BOUNDS_CHANGED: string;
                    
                    
                }
            }
            interface Accessible extends _javatypes.java.lang.Interface {
                
                getAccessibleContext(): _javatypes.javax.accessibility.AccessibleContext;
                
            }
            namespace Accessible {
                interface static {
                    
                    
                    
                }
            }
            interface AccessibleStateSet extends any {
                
                add(arg0: _javatypes.javax.accessibility.AccessibleState): boolean;
                addAll(arg0: _javatypes.javax.accessibility.AccessibleState[]): void;
                remove(arg0: _javatypes.javax.accessibility.AccessibleState): boolean;
                clear(): void;
                contains(arg0: _javatypes.javax.accessibility.AccessibleState): boolean;
                toArray(): _javatypes.javax.accessibility.AccessibleState[];
                toString(): string;
                
            }
            namespace AccessibleStateSet {
                interface static {
                    new (): _javatypes.javax.accessibility.AccessibleStateSet;
                    new (arg0: _javatypes.javax.accessibility.AccessibleState[]): _javatypes.javax.accessibility.AccessibleStateSet;
                    
                    
                    
                }
            }
            interface AccessibleTable extends _javatypes.java.lang.Interface {
                
                getAccessibleCaption(): _javatypes.javax.accessibility.Accessible;
                setAccessibleCaption(arg0: _javatypes.javax.accessibility.Accessible): void;
                getAccessibleSummary(): _javatypes.javax.accessibility.Accessible;
                setAccessibleSummary(arg0: _javatypes.javax.accessibility.Accessible): void;
                getAccessibleRowCount(): number;
                getAccessibleColumnCount(): number;
                getAccessibleAt(arg0: number, arg1: number): _javatypes.javax.accessibility.Accessible;
                getAccessibleRowExtentAt(arg0: number, arg1: number): number;
                getAccessibleColumnExtentAt(arg0: number, arg1: number): number;
                getAccessibleRowHeader(): _javatypes.javax.accessibility.AccessibleTable;
                setAccessibleRowHeader(arg0: _javatypes.javax.accessibility.AccessibleTable): void;
                getAccessibleColumnHeader(): _javatypes.javax.accessibility.AccessibleTable;
                setAccessibleColumnHeader(arg0: _javatypes.javax.accessibility.AccessibleTable): void;
                getAccessibleRowDescription(arg0: number): _javatypes.javax.accessibility.Accessible;
                setAccessibleRowDescription(arg0: number, arg1: _javatypes.javax.accessibility.Accessible): void;
                getAccessibleColumnDescription(arg0: number): _javatypes.javax.accessibility.Accessible;
                setAccessibleColumnDescription(arg0: number, arg1: _javatypes.javax.accessibility.Accessible): void;
                isAccessibleSelected(arg0: number, arg1: number): boolean;
                isAccessibleRowSelected(arg0: number): boolean;
                isAccessibleColumnSelected(arg0: number): boolean;
                getSelectedAccessibleRows(): number[];
                getSelectedAccessibleColumns(): number[];
                
            }
            namespace AccessibleTable {
                interface static {
                    
                    
                    
                }
            }
            interface AccessibleSelection extends _javatypes.java.lang.Interface {
                
                getAccessibleSelectionCount(): number;
                getAccessibleSelection(arg0: number): _javatypes.javax.accessibility.Accessible;
                isAccessibleChildSelected(arg0: number): boolean;
                addAccessibleSelection(arg0: number): void;
                removeAccessibleSelection(arg0: number): void;
                clearAccessibleSelection(): void;
                selectAllAccessibleSelection(): void;
                
            }
            namespace AccessibleSelection {
                interface static {
                    
                    
                    
                }
            }
            interface AccessibleRelationSet extends any {
                
                add(arg0: _javatypes.javax.accessibility.AccessibleRelation): boolean;
                addAll(arg0: _javatypes.javax.accessibility.AccessibleRelation[]): void;
                remove(arg0: _javatypes.javax.accessibility.AccessibleRelation): boolean;
                clear(): void;
                size(): number;
                contains(arg0: string): boolean;
                get(arg0: string): _javatypes.javax.accessibility.AccessibleRelation;
                toArray(): _javatypes.javax.accessibility.AccessibleRelation[];
                toString(): string;
                
            }
            namespace AccessibleRelationSet {
                interface static {
                    new (): _javatypes.javax.accessibility.AccessibleRelationSet;
                    new (arg0: _javatypes.javax.accessibility.AccessibleRelation[]): _javatypes.javax.accessibility.AccessibleRelationSet;
                    
                    
                    
                }
            }
            interface AccessibleRole extends _javatypes.javax.accessibility.AccessibleBundle {
                
                
            }
            namespace AccessibleRole {
                interface static {
                    
                    readonly ALERT: _javatypes.javax.accessibility.AccessibleRole;
                    readonly COLUMN_HEADER: _javatypes.javax.accessibility.AccessibleRole;
                    readonly CANVAS: _javatypes.javax.accessibility.AccessibleRole;
                    readonly COMBO_BOX: _javatypes.javax.accessibility.AccessibleRole;
                    readonly DESKTOP_ICON: _javatypes.javax.accessibility.AccessibleRole;
                    readonly HTML_CONTAINER: _javatypes.javax.accessibility.AccessibleRole;
                    readonly INTERNAL_FRAME: _javatypes.javax.accessibility.AccessibleRole;
                    readonly DESKTOP_PANE: _javatypes.javax.accessibility.AccessibleRole;
                    readonly OPTION_PANE: _javatypes.javax.accessibility.AccessibleRole;
                    readonly WINDOW: _javatypes.javax.accessibility.AccessibleRole;
                    readonly FRAME: _javatypes.javax.accessibility.AccessibleRole;
                    readonly DIALOG: _javatypes.javax.accessibility.AccessibleRole;
                    readonly COLOR_CHOOSER: _javatypes.javax.accessibility.AccessibleRole;
                    readonly DIRECTORY_PANE: _javatypes.javax.accessibility.AccessibleRole;
                    readonly FILE_CHOOSER: _javatypes.javax.accessibility.AccessibleRole;
                    readonly FILLER: _javatypes.javax.accessibility.AccessibleRole;
                    readonly HYPERLINK: _javatypes.javax.accessibility.AccessibleRole;
                    readonly ICON: _javatypes.javax.accessibility.AccessibleRole;
                    readonly LABEL: _javatypes.javax.accessibility.AccessibleRole;
                    readonly ROOT_PANE: _javatypes.javax.accessibility.AccessibleRole;
                    readonly GLASS_PANE: _javatypes.javax.accessibility.AccessibleRole;
                    readonly LAYERED_PANE: _javatypes.javax.accessibility.AccessibleRole;
                    readonly LIST: _javatypes.javax.accessibility.AccessibleRole;
                    readonly LIST_ITEM: _javatypes.javax.accessibility.AccessibleRole;
                    readonly MENU_BAR: _javatypes.javax.accessibility.AccessibleRole;
                    readonly POPUP_MENU: _javatypes.javax.accessibility.AccessibleRole;
                    readonly MENU: _javatypes.javax.accessibility.AccessibleRole;
                    readonly MENU_ITEM: _javatypes.javax.accessibility.AccessibleRole;
                    readonly SEPARATOR: _javatypes.javax.accessibility.AccessibleRole;
                    readonly PAGE_TAB_LIST: _javatypes.javax.accessibility.AccessibleRole;
                    readonly PAGE_TAB: _javatypes.javax.accessibility.AccessibleRole;
                    readonly PANEL: _javatypes.javax.accessibility.AccessibleRole;
                    readonly PROGRESS_BAR: _javatypes.javax.accessibility.AccessibleRole;
                    readonly PASSWORD_TEXT: _javatypes.javax.accessibility.AccessibleRole;
                    readonly PUSH_BUTTON: _javatypes.javax.accessibility.AccessibleRole;
                    readonly TOGGLE_BUTTON: _javatypes.javax.accessibility.AccessibleRole;
                    readonly CHECK_BOX: _javatypes.javax.accessibility.AccessibleRole;
                    readonly RADIO_BUTTON: _javatypes.javax.accessibility.AccessibleRole;
                    readonly ROW_HEADER: _javatypes.javax.accessibility.AccessibleRole;
                    readonly SCROLL_PANE: _javatypes.javax.accessibility.AccessibleRole;
                    readonly SCROLL_BAR: _javatypes.javax.accessibility.AccessibleRole;
                    readonly VIEWPORT: _javatypes.javax.accessibility.AccessibleRole;
                    readonly SLIDER: _javatypes.javax.accessibility.AccessibleRole;
                    readonly SPLIT_PANE: _javatypes.javax.accessibility.AccessibleRole;
                    readonly TABLE: _javatypes.javax.accessibility.AccessibleRole;
                    readonly TEXT: _javatypes.javax.accessibility.AccessibleRole;
                    readonly TREE: _javatypes.javax.accessibility.AccessibleRole;
                    readonly TOOL_BAR: _javatypes.javax.accessibility.AccessibleRole;
                    readonly TOOL_TIP: _javatypes.javax.accessibility.AccessibleRole;
                    readonly AWT_COMPONENT: _javatypes.javax.accessibility.AccessibleRole;
                    readonly SWING_COMPONENT: _javatypes.javax.accessibility.AccessibleRole;
                    readonly UNKNOWN: _javatypes.javax.accessibility.AccessibleRole;
                    readonly STATUS_BAR: _javatypes.javax.accessibility.AccessibleRole;
                    readonly DATE_EDITOR: _javatypes.javax.accessibility.AccessibleRole;
                    readonly SPIN_BOX: _javatypes.javax.accessibility.AccessibleRole;
                    readonly FONT_CHOOSER: _javatypes.javax.accessibility.AccessibleRole;
                    readonly GROUP_BOX: _javatypes.javax.accessibility.AccessibleRole;
                    readonly HEADER: _javatypes.javax.accessibility.AccessibleRole;
                    readonly FOOTER: _javatypes.javax.accessibility.AccessibleRole;
                    readonly PARAGRAPH: _javatypes.javax.accessibility.AccessibleRole;
                    readonly RULER: _javatypes.javax.accessibility.AccessibleRole;
                    readonly EDITBAR: _javatypes.javax.accessibility.AccessibleRole;
                    readonly PROGRESS_MONITOR: _javatypes.javax.accessibility.AccessibleRole;
                    
                    
                }
            }
            interface AccessibleIcon extends _javatypes.java.lang.Interface {
                
                getAccessibleIconDescription(): string;
                setAccessibleIconDescription(arg0: string): void;
                getAccessibleIconWidth(): number;
                getAccessibleIconHeight(): number;
                
            }
            namespace AccessibleIcon {
                interface static {
                    
                    
                    
                }
            }
            interface AccessibleComponent extends _javatypes.java.lang.Interface {
                
                getBackground(): _javatypes.java.awt.Color;
                setBackground(arg0: _javatypes.java.awt.Color): void;
                getForeground(): _javatypes.java.awt.Color;
                setForeground(arg0: _javatypes.java.awt.Color): void;
                getCursor(): _javatypes.java.awt.Cursor;
                setCursor(arg0: _javatypes.java.awt.Cursor): void;
                getFont(): _javatypes.java.awt.Font;
                setFont(arg0: _javatypes.java.awt.Font): void;
                getFontMetrics(arg0: _javatypes.java.awt.Font): _javatypes.java.awt.FontMetrics;
                isEnabled(): boolean;
                setEnabled(arg0: boolean): void;
                isVisible(): boolean;
                setVisible(arg0: boolean): void;
                isShowing(): boolean;
                contains(arg0: _javatypes.java.awt.Point): boolean;
                getLocationOnScreen(): _javatypes.java.awt.Point;
                getLocation(): _javatypes.java.awt.Point;
                setLocation(arg0: _javatypes.java.awt.Point): void;
                getBounds(): _javatypes.java.awt.Rectangle;
                setBounds(arg0: _javatypes.java.awt.Rectangle): void;
                getSize(): _javatypes.java.awt.Dimension;
                setSize(arg0: _javatypes.java.awt.Dimension): void;
                getAccessibleAt(arg0: _javatypes.java.awt.Point): _javatypes.javax.accessibility.Accessible;
                isFocusTraversable(): boolean;
                requestFocus(): void;
                addFocusListener(arg0: _javatypes.java.awt.event.FocusListener): void;
                removeFocusListener(arg0: _javatypes.java.awt.event.FocusListener): void;
                
            }
            namespace AccessibleComponent {
                interface static {
                    
                    
                    
                }
            }
            interface AccessibleEditableText extends _javatypes.java.lang.Interface, _javatypes.javax.accessibility.AccessibleText {
                
                setTextContents(arg0: string): void;
                insertTextAtIndex(arg0: number, arg1: string): void;
                getTextRange(arg0: number, arg1: number): string;
                delete(arg0: number, arg1: number): void;
                cut(arg0: number, arg1: number): void;
                paste(arg0: number): void;
                replaceText(arg0: number, arg1: number, arg2: string): void;
                selectText(arg0: number, arg1: number): void;
                setAttributes(arg0: number, arg1: number, arg2: _javatypes.javax.swing.text.AttributeSet): void;
                
            }
            namespace AccessibleEditableText {
                interface static {
                    
                    
                    
                }
            }
            interface AccessibleAction extends _javatypes.java.lang.Interface {
                
                getAccessibleActionCount(): number;
                getAccessibleActionDescription(arg0: number): string;
                doAccessibleAction(arg0: number): boolean;
                
            }
            namespace AccessibleAction {
                interface static {
                    
                    readonly TOGGLE_EXPAND: string;
                    readonly INCREMENT: string;
                    readonly DECREMENT: string;
                    readonly CLICK: string;
                    readonly TOGGLE_POPUP: string;
                    
                    
                }
            }
            interface AccessibleValue extends _javatypes.java.lang.Interface {
                
                getCurrentAccessibleValue(): _javatypes.java.lang.Number;
                setCurrentAccessibleValue(arg0: _javatypes.java.lang.Number): boolean;
                getMinimumAccessibleValue(): _javatypes.java.lang.Number;
                getMaximumAccessibleValue(): _javatypes.java.lang.Number;
                
            }
            namespace AccessibleValue {
                interface static {
                    
                    
                    
                }
            }
            interface AccessibleText extends _javatypes.java.lang.Interface {
                
                getIndexAtPoint(arg0: _javatypes.java.awt.Point): number;
                getCharacterBounds(arg0: number): _javatypes.java.awt.Rectangle;
                getCharCount(): number;
                getCaretPosition(): number;
                getAtIndex(arg0: number, arg1: number): string;
                getAfterIndex(arg0: number, arg1: number): string;
                getBeforeIndex(arg0: number, arg1: number): string;
                getCharacterAttribute(arg0: number): _javatypes.javax.swing.text.AttributeSet;
                getSelectionStart(): number;
                getSelectionEnd(): number;
                getSelectedText(): string;
                
            }
            namespace AccessibleText {
                interface static {
                    
                    readonly CHARACTER: number;
                    readonly WORD: number;
                    readonly SENTENCE: number;
                    
                    
                }
            }
            interface AccessibleRelation extends _javatypes.javax.accessibility.AccessibleBundle {
                
                getKey(): string;
                getTarget(): any[];
                setTarget(arg0: any): void;
                setTarget(arg0: any[]): void;
                
            }
            namespace AccessibleRelation {
                interface static {
                    new (arg0: string): _javatypes.javax.accessibility.AccessibleRelation;
                    new (arg0: string, arg1: any): _javatypes.javax.accessibility.AccessibleRelation;
                    new (arg0: string, arg1: any[]): _javatypes.javax.accessibility.AccessibleRelation;
                    
                    readonly LABEL_FOR: string;
                    readonly LABELED_BY: string;
                    readonly MEMBER_OF: string;
                    readonly CONTROLLER_FOR: string;
                    readonly CONTROLLED_BY: string;
                    readonly FLOWS_TO: string;
                    readonly FLOWS_FROM: string;
                    readonly SUBWINDOW_OF: string;
                    readonly PARENT_WINDOW_OF: string;
                    readonly EMBEDS: string;
                    readonly EMBEDDED_BY: string;
                    readonly CHILD_NODE_OF: string;
                    readonly LABEL_FOR_PROPERTY: string;
                    readonly LABELED_BY_PROPERTY: string;
                    readonly MEMBER_OF_PROPERTY: string;
                    readonly CONTROLLER_FOR_PROPERTY: string;
                    readonly CONTROLLED_BY_PROPERTY: string;
                    readonly FLOWS_TO_PROPERTY: string;
                    readonly FLOWS_FROM_PROPERTY: string;
                    readonly SUBWINDOW_OF_PROPERTY: string;
                    readonly PARENT_WINDOW_OF_PROPERTY: string;
                    readonly EMBEDS_PROPERTY: string;
                    readonly EMBEDDED_BY_PROPERTY: string;
                    readonly CHILD_NODE_OF_PROPERTY: string;
                    
                    
                }
            }
            interface AccessibleBundle extends any {
                
                toDisplayString(arg0: _javatypes.java.util.Locale): string;
                toDisplayString(): string;
                toString(): string;
                
            }
            namespace AccessibleBundle {
                interface static {
                    new (): _javatypes.javax.accessibility.AccessibleBundle;
                    
                    
                    
                }
            }
            interface AccessibleState extends _javatypes.javax.accessibility.AccessibleBundle {
                
                
            }
            namespace AccessibleState {
                interface static {
                    
                    readonly ACTIVE: _javatypes.javax.accessibility.AccessibleState;
                    readonly PRESSED: _javatypes.javax.accessibility.AccessibleState;
                    readonly ARMED: _javatypes.javax.accessibility.AccessibleState;
                    readonly BUSY: _javatypes.javax.accessibility.AccessibleState;
                    readonly CHECKED: _javatypes.javax.accessibility.AccessibleState;
                    readonly EDITABLE: _javatypes.javax.accessibility.AccessibleState;
                    readonly EXPANDABLE: _javatypes.javax.accessibility.AccessibleState;
                    readonly COLLAPSED: _javatypes.javax.accessibility.AccessibleState;
                    readonly EXPANDED: _javatypes.javax.accessibility.AccessibleState;
                    readonly ENABLED: _javatypes.javax.accessibility.AccessibleState;
                    readonly FOCUSABLE: _javatypes.javax.accessibility.AccessibleState;
                    readonly FOCUSED: _javatypes.javax.accessibility.AccessibleState;
                    readonly ICONIFIED: _javatypes.javax.accessibility.AccessibleState;
                    readonly MODAL: _javatypes.javax.accessibility.AccessibleState;
                    readonly OPAQUE: _javatypes.javax.accessibility.AccessibleState;
                    readonly RESIZABLE: _javatypes.javax.accessibility.AccessibleState;
                    readonly MULTISELECTABLE: _javatypes.javax.accessibility.AccessibleState;
                    readonly SELECTABLE: _javatypes.javax.accessibility.AccessibleState;
                    readonly SELECTED: _javatypes.javax.accessibility.AccessibleState;
                    readonly SHOWING: _javatypes.javax.accessibility.AccessibleState;
                    readonly VISIBLE: _javatypes.javax.accessibility.AccessibleState;
                    readonly VERTICAL: _javatypes.javax.accessibility.AccessibleState;
                    readonly HORIZONTAL: _javatypes.javax.accessibility.AccessibleState;
                    readonly SINGLE_LINE: _javatypes.javax.accessibility.AccessibleState;
                    readonly MULTI_LINE: _javatypes.javax.accessibility.AccessibleState;
                    readonly TRANSIENT: _javatypes.javax.accessibility.AccessibleState;
                    readonly MANAGES_DESCENDANTS: _javatypes.javax.accessibility.AccessibleState;
                    readonly INDETERMINATE: _javatypes.javax.accessibility.AccessibleState;
                    readonly TRUNCATED: _javatypes.javax.accessibility.AccessibleState;
                    
                    
                }
            }
        }
    
        namespace security.auth {
        
            interface Subject extends any, _javatypes.java.io.Serializable {
                
                setReadOnly(): void;
                isReadOnly(): boolean;
                getPrincipals(): _javatypes.java.util.Set<_javatypes.java.security.Principal>;
                getPrincipals<T>(arg0: _javatypes.java.lang.Class<T>): _javatypes.java.util.Set<T>;
                getPublicCredentials(): _javatypes.java.util.Set<any>;
                getPrivateCredentials(): _javatypes.java.util.Set<any>;
                getPublicCredentials<T>(arg0: _javatypes.java.lang.Class<T>): _javatypes.java.util.Set<T>;
                getPrivateCredentials<T>(arg0: _javatypes.java.lang.Class<T>): _javatypes.java.util.Set<T>;
                equals(arg0: any): boolean;
                toString(): string;
                hashCode(): number;
                
            }
            namespace Subject {
                interface static {
                    new (): _javatypes.javax.security.auth.Subject;
                    new (arg0: boolean, arg1: _javatypes.java.util.Set<any>, arg2: _javatypes.java.util.Set<any>, arg3: _javatypes.java.util.Set<any>): _javatypes.javax.security.auth.Subject;
                    
                    
                    getSubject(arg0: _javatypes.java.security.AccessControlContext): _javatypes.javax.security.auth.Subject;
                    doAs<T>(arg0: _javatypes.javax.security.auth.Subject, arg1: _javatypes.java.security.PrivilegedAction<T>): T;
                    doAs<T>(arg0: _javatypes.javax.security.auth.Subject, arg1: _javatypes.java.security.PrivilegedExceptionAction<T>): T;
                    doAsPrivileged<T>(arg0: _javatypes.javax.security.auth.Subject, arg1: _javatypes.java.security.PrivilegedAction<T>, arg2: _javatypes.java.security.AccessControlContext): T;
                    doAsPrivileged<T>(arg0: _javatypes.javax.security.auth.Subject, arg1: _javatypes.java.security.PrivilegedExceptionAction<T>, arg2: _javatypes.java.security.AccessControlContext): T;
                    
                }
            }
        }
    
        namespace annotation.processing {
        
            interface Processor extends _javatypes.java.lang.Interface {
                
                getSupportedOptions(): _javatypes.java.util.Set<string>;
                getSupportedAnnotationTypes(): _javatypes.java.util.Set<string>;
                getSupportedSourceVersion(): _javatypes.javax.lang.model.SourceVersion;
                init(arg0: _javatypes.javax.annotation.processing.ProcessingEnvironment): void;
                process(arg0: _javatypes.java.util.Set<any>, arg1: _javatypes.javax.annotation.processing.RoundEnvironment): boolean;
                getCompletions(arg0: _javatypes.javax.lang.model.element.Element, arg1: _javatypes.javax.lang.model.element.AnnotationMirror, arg2: _javatypes.javax.lang.model.element.ExecutableElement, arg3: string): _javatypes.java.lang.Iterable<any>;
                
            }
            namespace Processor {
                interface static {
                    
                    
                    
                }
            }
            interface ProcessingEnvironment extends _javatypes.java.lang.Interface {
                
                getOptions(): _javatypes.java.util.Map<string, string>;
                getMessager(): _javatypes.javax.annotation.processing.Messager;
                getFiler(): _javatypes.javax.annotation.processing.Filer;
                getElementUtils(): _javatypes.javax.lang.model.util.Elements;
                getTypeUtils(): _javatypes.javax.lang.model.util.Types;
                getSourceVersion(): _javatypes.javax.lang.model.SourceVersion;
                getLocale(): _javatypes.java.util.Locale;
                isPreviewEnabled(): boolean;
                
            }
            namespace ProcessingEnvironment {
                interface static {
                    
                    
                    
                }
            }
            interface RoundEnvironment extends _javatypes.java.lang.Interface {
                
                processingOver(): boolean;
                errorRaised(): boolean;
                getRootElements(): _javatypes.java.util.Set<any>;
                getElementsAnnotatedWith(arg0: _javatypes.javax.lang.model.element.TypeElement): _javatypes.java.util.Set<any>;
                getElementsAnnotatedWithAny(arg0: _javatypes.javax.lang.model.element.TypeElement[]): _javatypes.java.util.Set<any>;
                getElementsAnnotatedWith(arg0: _javatypes.java.lang.Class<any>): _javatypes.java.util.Set<any>;
                getElementsAnnotatedWithAny(arg0: _javatypes.java.util.Set<_javatypes.java.lang.Class<any>>): _javatypes.java.util.Set<any>;
                
            }
            namespace RoundEnvironment {
                interface static {
                    
                    
                    
                }
            }
            interface Messager extends _javatypes.java.lang.Interface {
                
                printMessage(arg0: _javatypes.javax.tools.Diagnostic$Kind, arg1: _javatypes.java.lang.CharSequence): void;
                printMessage(arg0: _javatypes.javax.tools.Diagnostic$Kind, arg1: _javatypes.java.lang.CharSequence, arg2: _javatypes.javax.lang.model.element.Element): void;
                printMessage(arg0: _javatypes.javax.tools.Diagnostic$Kind, arg1: _javatypes.java.lang.CharSequence, arg2: _javatypes.javax.lang.model.element.Element, arg3: _javatypes.javax.lang.model.element.AnnotationMirror): void;
                printMessage(arg0: _javatypes.javax.tools.Diagnostic$Kind, arg1: _javatypes.java.lang.CharSequence, arg2: _javatypes.javax.lang.model.element.Element, arg3: _javatypes.javax.lang.model.element.AnnotationMirror, arg4: _javatypes.javax.lang.model.element.AnnotationValue): void;
                
            }
            namespace Messager {
                interface static {
                    
                    
                    
                }
            }
            interface Filer extends _javatypes.java.lang.Interface {
                
                createSourceFile(arg0: _javatypes.java.lang.CharSequence, arg1: _javatypes.javax.lang.model.element.Element[]): _javatypes.javax.tools.JavaFileObject;
                createClassFile(arg0: _javatypes.java.lang.CharSequence, arg1: _javatypes.javax.lang.model.element.Element[]): _javatypes.javax.tools.JavaFileObject;
                createResource(arg0: _javatypes.javax.tools.JavaFileManager$Location, arg1: _javatypes.java.lang.CharSequence, arg2: _javatypes.java.lang.CharSequence, arg3: _javatypes.javax.lang.model.element.Element[]): _javatypes.javax.tools.FileObject;
                getResource(arg0: _javatypes.javax.tools.JavaFileManager$Location, arg1: _javatypes.java.lang.CharSequence, arg2: _javatypes.java.lang.CharSequence): _javatypes.javax.tools.FileObject;
                
            }
            namespace Filer {
                interface static {
                    
                    
                    
                }
            }
        }
    
        namespace lang.model {
        
            interface SourceVersion extends _javatypes.java.lang.Enum<_javatypes.javax.lang.model.SourceVersion> {
                
                
            }
            namespace SourceVersion {
                interface static {
                    
                    readonly RELEASE_0: _javatypes.javax.lang.model.SourceVersion;
                    readonly RELEASE_1: _javatypes.javax.lang.model.SourceVersion;
                    readonly RELEASE_2: _javatypes.javax.lang.model.SourceVersion;
                    readonly RELEASE_3: _javatypes.javax.lang.model.SourceVersion;
                    readonly RELEASE_4: _javatypes.javax.lang.model.SourceVersion;
                    readonly RELEASE_5: _javatypes.javax.lang.model.SourceVersion;
                    readonly RELEASE_6: _javatypes.javax.lang.model.SourceVersion;
                    readonly RELEASE_7: _javatypes.javax.lang.model.SourceVersion;
                    readonly RELEASE_8: _javatypes.javax.lang.model.SourceVersion;
                    readonly RELEASE_9: _javatypes.javax.lang.model.SourceVersion;
                    readonly RELEASE_10: _javatypes.javax.lang.model.SourceVersion;
                    readonly RELEASE_11: _javatypes.javax.lang.model.SourceVersion;
                    readonly RELEASE_12: _javatypes.javax.lang.model.SourceVersion;
                    readonly RELEASE_13: _javatypes.javax.lang.model.SourceVersion;
                    readonly RELEASE_14: _javatypes.javax.lang.model.SourceVersion;
                    readonly RELEASE_15: _javatypes.javax.lang.model.SourceVersion;
                    readonly RELEASE_16: _javatypes.javax.lang.model.SourceVersion;
                    readonly RELEASE_17: _javatypes.javax.lang.model.SourceVersion;
                    
                    values(): _javatypes.javax.lang.model.SourceVersion[];
                    valueOf(arg0: string): _javatypes.javax.lang.model.SourceVersion;
                    latest(): _javatypes.javax.lang.model.SourceVersion;
                    latestSupported(): _javatypes.javax.lang.model.SourceVersion;
                    isIdentifier(arg0: _javatypes.java.lang.CharSequence): boolean;
                    isName(arg0: _javatypes.java.lang.CharSequence): boolean;
                    isName(arg0: _javatypes.java.lang.CharSequence, arg1: _javatypes.javax.lang.model.SourceVersion): boolean;
                    isKeyword(arg0: _javatypes.java.lang.CharSequence): boolean;
                    isKeyword(arg0: _javatypes.java.lang.CharSequence, arg1: _javatypes.javax.lang.model.SourceVersion): boolean;
                    
                }
            }
            interface AnnotatedConstruct extends _javatypes.java.lang.Interface {
                
                getAnnotationMirrors(): _javatypes.java.util.List<any>;
                getAnnotation<A>(arg0: _javatypes.java.lang.Class<A>): A;
                getAnnotationsByType<A>(arg0: _javatypes.java.lang.Class<A>): A[];
                
            }
            namespace AnnotatedConstruct {
                interface static {
                    
                    
                    
                }
            }
        
            namespace element {
            
                interface Element extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.AnnotatedConstruct {
                    
                    asType(): _javatypes.javax.lang.model.type.TypeMirror;
                    getKind(): _javatypes.javax.lang.model.element.ElementKind;
                    getModifiers(): _javatypes.java.util.Set<_javatypes.javax.lang.model.element.Modifier>;
                    getSimpleName(): _javatypes.javax.lang.model.element.Name;
                    getEnclosingElement(): _javatypes.javax.lang.model.element.Element;
                    getEnclosedElements(): _javatypes.java.util.List<any>;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    getAnnotationMirrors(): _javatypes.java.util.List<any>;
                    getAnnotation<A>(arg0: _javatypes.java.lang.Class<A>): A;
                    getAnnotationsByType<A>(arg0: _javatypes.java.lang.Class<A>): A[];
                    accept<R, P>(arg0: _javatypes.javax.lang.model.element.ElementVisitor<R, P>, arg1: P): R;
                    
                }
                namespace Element {
                    interface static {
                        
                        
                        
                    }
                }
                interface ExecutableElement extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.element.Element, _javatypes.javax.lang.model.element.Parameterizable {
                    
                    asType(): _javatypes.javax.lang.model.type.TypeMirror;
                    getTypeParameters(): _javatypes.java.util.List<any>;
                    getReturnType(): _javatypes.javax.lang.model.type.TypeMirror;
                    getParameters(): _javatypes.java.util.List<any>;
                    getReceiverType(): _javatypes.javax.lang.model.type.TypeMirror;
                    isVarArgs(): boolean;
                    isDefault(): boolean;
                    getThrownTypes(): _javatypes.java.util.List<any>;
                    getDefaultValue(): _javatypes.javax.lang.model.element.AnnotationValue;
                    getSimpleName(): _javatypes.javax.lang.model.element.Name;
                    
                }
                namespace ExecutableElement {
                    interface static {
                        
                        
                        
                    }
                }
                interface AnnotationValue extends _javatypes.java.lang.Interface {
                    
                    getValue(): any;
                    toString(): string;
                    accept<R, P>(arg0: _javatypes.javax.lang.model.element.AnnotationValueVisitor<R, P>, arg1: P): R;
                    
                }
                namespace AnnotationValue {
                    interface static {
                        
                        
                        
                    }
                }
                interface AnnotationMirror extends _javatypes.java.lang.Interface {
                    
                    getAnnotationType(): _javatypes.javax.lang.model.type.DeclaredType;
                    getElementValues(): _javatypes.java.util.Map<any, any>;
                    
                }
                namespace AnnotationMirror {
                    interface static {
                        
                        
                        
                    }
                }
                interface TypeElement extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.element.Element, _javatypes.javax.lang.model.element.Parameterizable, _javatypes.javax.lang.model.element.QualifiedNameable {
                    
                    asType(): _javatypes.javax.lang.model.type.TypeMirror;
                    getEnclosedElements(): _javatypes.java.util.List<any>;
                    getNestingKind(): _javatypes.javax.lang.model.element.NestingKind;
                    getQualifiedName(): _javatypes.javax.lang.model.element.Name;
                    getSimpleName(): _javatypes.javax.lang.model.element.Name;
                    getSuperclass(): _javatypes.javax.lang.model.type.TypeMirror;
                    getInterfaces(): _javatypes.java.util.List<any>;
                    getTypeParameters(): _javatypes.java.util.List<any>;
                    getRecordComponents(): _javatypes.java.util.List<any>;
                    getPermittedSubclasses(): _javatypes.java.util.List<any>;
                    getEnclosingElement(): _javatypes.javax.lang.model.element.Element;
                    
                }
                namespace TypeElement {
                    interface static {
                        
                        
                        
                    }
                }
                interface Modifier extends _javatypes.java.lang.Enum<_javatypes.javax.lang.model.element.Modifier> {
                    
                    toString(): string;
                    
                }
                namespace Modifier {
                    interface static {
                        
                        readonly PUBLIC: _javatypes.javax.lang.model.element.Modifier;
                        readonly PROTECTED: _javatypes.javax.lang.model.element.Modifier;
                        readonly PRIVATE: _javatypes.javax.lang.model.element.Modifier;
                        readonly ABSTRACT: _javatypes.javax.lang.model.element.Modifier;
                        readonly DEFAULT: _javatypes.javax.lang.model.element.Modifier;
                        readonly STATIC: _javatypes.javax.lang.model.element.Modifier;
                        readonly SEALED: _javatypes.javax.lang.model.element.Modifier;
                        readonly NON_SEALED: _javatypes.javax.lang.model.element.Modifier;
                        readonly FINAL: _javatypes.javax.lang.model.element.Modifier;
                        readonly TRANSIENT: _javatypes.javax.lang.model.element.Modifier;
                        readonly VOLATILE: _javatypes.javax.lang.model.element.Modifier;
                        readonly SYNCHRONIZED: _javatypes.javax.lang.model.element.Modifier;
                        readonly NATIVE: _javatypes.javax.lang.model.element.Modifier;
                        readonly STRICTFP: _javatypes.javax.lang.model.element.Modifier;
                        
                        values(): _javatypes.javax.lang.model.element.Modifier[];
                        valueOf(arg0: string): _javatypes.javax.lang.model.element.Modifier;
                        
                    }
                }
                interface AnnotationValueVisitor<R, P> extends _javatypes.java.lang.Interface {
                    
                    visit(arg0: _javatypes.javax.lang.model.element.AnnotationValue, arg1: P): R;
                    visit(arg0: _javatypes.javax.lang.model.element.AnnotationValue): R;
                    visitBoolean(arg0: boolean, arg1: P): R;
                    visitByte(arg0: number, arg1: P): R;
                    visitChar(arg0: number, arg1: P): R;
                    visitDouble(arg0: number, arg1: P): R;
                    visitFloat(arg0: number, arg1: P): R;
                    visitInt(arg0: number, arg1: P): R;
                    visitLong(arg0: number, arg1: P): R;
                    visitShort(arg0: number, arg1: P): R;
                    visitString(arg0: string, arg1: P): R;
                    visitType(arg0: _javatypes.javax.lang.model.type.TypeMirror, arg1: P): R;
                    visitEnumConstant(arg0: _javatypes.javax.lang.model.element.VariableElement, arg1: P): R;
                    visitAnnotation(arg0: _javatypes.javax.lang.model.element.AnnotationMirror, arg1: P): R;
                    visitArray(arg0: _javatypes.java.util.List<any>, arg1: P): R;
                    visitUnknown(arg0: _javatypes.javax.lang.model.element.AnnotationValue, arg1: P): R;
                    
                }
                namespace AnnotationValueVisitor {
                    interface static {
                        
                        
                        
                    }
                }
                interface Parameterizable extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.element.Element {
                    
                    getTypeParameters(): _javatypes.java.util.List<any>;
                    
                }
                namespace Parameterizable {
                    interface static {
                        
                        
                        
                    }
                }
                interface NestingKind extends _javatypes.java.lang.Enum<_javatypes.javax.lang.model.element.NestingKind> {
                    
                    isNested(): boolean;
                    
                }
                namespace NestingKind {
                    interface static {
                        
                        readonly TOP_LEVEL: _javatypes.javax.lang.model.element.NestingKind;
                        readonly MEMBER: _javatypes.javax.lang.model.element.NestingKind;
                        readonly LOCAL: _javatypes.javax.lang.model.element.NestingKind;
                        readonly ANONYMOUS: _javatypes.javax.lang.model.element.NestingKind;
                        
                        values(): _javatypes.javax.lang.model.element.NestingKind[];
                        valueOf(arg0: string): _javatypes.javax.lang.model.element.NestingKind;
                        
                    }
                }
                interface Name extends _javatypes.java.lang.Interface, _javatypes.java.lang.CharSequence {
                    
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    contentEquals(arg0: _javatypes.java.lang.CharSequence): boolean;
                    
                }
                namespace Name {
                    interface static {
                        
                        
                        
                    }
                }
                interface ElementVisitor<R, P> extends _javatypes.java.lang.Interface {
                    
                    visit(arg0: _javatypes.javax.lang.model.element.Element, arg1: P): R;
                    visit(arg0: _javatypes.javax.lang.model.element.Element): R;
                    visitPackage(arg0: _javatypes.javax.lang.model.element.PackageElement, arg1: P): R;
                    visitType(arg0: _javatypes.javax.lang.model.element.TypeElement, arg1: P): R;
                    visitVariable(arg0: _javatypes.javax.lang.model.element.VariableElement, arg1: P): R;
                    visitExecutable(arg0: _javatypes.javax.lang.model.element.ExecutableElement, arg1: P): R;
                    visitTypeParameter(arg0: _javatypes.javax.lang.model.element.TypeParameterElement, arg1: P): R;
                    visitUnknown(arg0: _javatypes.javax.lang.model.element.Element, arg1: P): R;
                    visitModule(arg0: _javatypes.javax.lang.model.element.ModuleElement, arg1: P): R;
                    visitRecordComponent(arg0: _javatypes.javax.lang.model.element.RecordComponentElement, arg1: P): R;
                    
                }
                namespace ElementVisitor {
                    interface static {
                        
                        
                        
                    }
                }
                interface QualifiedNameable extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.element.Element {
                    
                    getQualifiedName(): _javatypes.javax.lang.model.element.Name;
                    
                }
                namespace QualifiedNameable {
                    interface static {
                        
                        
                        
                    }
                }
                interface ElementKind extends _javatypes.java.lang.Enum<_javatypes.javax.lang.model.element.ElementKind> {
                    
                    isClass(): boolean;
                    isInterface(): boolean;
                    isField(): boolean;
                    
                }
                namespace ElementKind {
                    interface static {
                        
                        readonly PACKAGE: _javatypes.javax.lang.model.element.ElementKind;
                        readonly ENUM: _javatypes.javax.lang.model.element.ElementKind;
                        readonly CLASS: _javatypes.javax.lang.model.element.ElementKind;
                        readonly ANNOTATION_TYPE: _javatypes.javax.lang.model.element.ElementKind;
                        readonly INTERFACE: _javatypes.javax.lang.model.element.ElementKind;
                        readonly ENUM_CONSTANT: _javatypes.javax.lang.model.element.ElementKind;
                        readonly FIELD: _javatypes.javax.lang.model.element.ElementKind;
                        readonly PARAMETER: _javatypes.javax.lang.model.element.ElementKind;
                        readonly LOCAL_VARIABLE: _javatypes.javax.lang.model.element.ElementKind;
                        readonly EXCEPTION_PARAMETER: _javatypes.javax.lang.model.element.ElementKind;
                        readonly METHOD: _javatypes.javax.lang.model.element.ElementKind;
                        readonly CONSTRUCTOR: _javatypes.javax.lang.model.element.ElementKind;
                        readonly STATIC_INIT: _javatypes.javax.lang.model.element.ElementKind;
                        readonly INSTANCE_INIT: _javatypes.javax.lang.model.element.ElementKind;
                        readonly TYPE_PARAMETER: _javatypes.javax.lang.model.element.ElementKind;
                        readonly OTHER: _javatypes.javax.lang.model.element.ElementKind;
                        readonly RESOURCE_VARIABLE: _javatypes.javax.lang.model.element.ElementKind;
                        readonly MODULE: _javatypes.javax.lang.model.element.ElementKind;
                        readonly RECORD: _javatypes.javax.lang.model.element.ElementKind;
                        readonly RECORD_COMPONENT: _javatypes.javax.lang.model.element.ElementKind;
                        readonly BINDING_VARIABLE: _javatypes.javax.lang.model.element.ElementKind;
                        
                        values(): _javatypes.javax.lang.model.element.ElementKind[];
                        valueOf(arg0: string): _javatypes.javax.lang.model.element.ElementKind;
                        
                    }
                }
                interface ModuleElement extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.element.Element, _javatypes.javax.lang.model.element.QualifiedNameable {
                    
                    asType(): _javatypes.javax.lang.model.type.TypeMirror;
                    getQualifiedName(): _javatypes.javax.lang.model.element.Name;
                    getSimpleName(): _javatypes.javax.lang.model.element.Name;
                    getEnclosedElements(): _javatypes.java.util.List<any>;
                    isOpen(): boolean;
                    isUnnamed(): boolean;
                    getEnclosingElement(): _javatypes.javax.lang.model.element.Element;
                    getDirectives(): _javatypes.java.util.List<any>;
                    
                }
                namespace ModuleElement {
                    interface static {
                        
                        
                        
                    }
                }
                interface PackageElement extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.element.Element, _javatypes.javax.lang.model.element.QualifiedNameable {
                    
                    asType(): _javatypes.javax.lang.model.type.TypeMirror;
                    getQualifiedName(): _javatypes.javax.lang.model.element.Name;
                    getSimpleName(): _javatypes.javax.lang.model.element.Name;
                    getEnclosedElements(): _javatypes.java.util.List<any>;
                    isUnnamed(): boolean;
                    getEnclosingElement(): _javatypes.javax.lang.model.element.Element;
                    
                }
                namespace PackageElement {
                    interface static {
                        
                        
                        
                    }
                }
                interface VariableElement extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.element.Element {
                    
                    asType(): _javatypes.javax.lang.model.type.TypeMirror;
                    getConstantValue(): any;
                    getSimpleName(): _javatypes.javax.lang.model.element.Name;
                    getEnclosingElement(): _javatypes.javax.lang.model.element.Element;
                    
                }
                namespace VariableElement {
                    interface static {
                        
                        
                        
                    }
                }
                interface TypeParameterElement extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.element.Element {
                    
                    asType(): _javatypes.javax.lang.model.type.TypeMirror;
                    getGenericElement(): _javatypes.javax.lang.model.element.Element;
                    getBounds(): _javatypes.java.util.List<any>;
                    getEnclosingElement(): _javatypes.javax.lang.model.element.Element;
                    
                }
                namespace TypeParameterElement {
                    interface static {
                        
                        
                        
                    }
                }
                interface RecordComponentElement extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.element.Element {
                    
                    getEnclosingElement(): _javatypes.javax.lang.model.element.Element;
                    getSimpleName(): _javatypes.javax.lang.model.element.Name;
                    getAccessor(): _javatypes.javax.lang.model.element.ExecutableElement;
                    
                }
                namespace RecordComponentElement {
                    interface static {
                        
                        
                        
                    }
                }
                interface ModuleElement$Directive extends _javatypes.java.lang.Interface {
                    
                    getKind(): _javatypes.javax.lang.model.element.ModuleElement$DirectiveKind;
                    accept<R, P>(arg0: _javatypes.javax.lang.model.element.ModuleElement$DirectiveVisitor<R, P>, arg1: P): R;
                    
                }
                namespace ModuleElement$Directive {
                    interface static {
                        
                        
                        
                    }
                }
                interface ModuleElement$DirectiveKind extends _javatypes.java.lang.Enum<_javatypes.javax.lang.model.element.ModuleElement$DirectiveKind> {
                    
                    
                }
                namespace ModuleElement$DirectiveKind {
                    interface static {
                        
                        readonly REQUIRES: _javatypes.javax.lang.model.element.ModuleElement$DirectiveKind;
                        readonly EXPORTS: _javatypes.javax.lang.model.element.ModuleElement$DirectiveKind;
                        readonly OPENS: _javatypes.javax.lang.model.element.ModuleElement$DirectiveKind;
                        readonly USES: _javatypes.javax.lang.model.element.ModuleElement$DirectiveKind;
                        readonly PROVIDES: _javatypes.javax.lang.model.element.ModuleElement$DirectiveKind;
                        
                        values(): _javatypes.javax.lang.model.element.ModuleElement$DirectiveKind[];
                        valueOf(arg0: string): _javatypes.javax.lang.model.element.ModuleElement$DirectiveKind;
                        
                    }
                }
                interface ModuleElement$DirectiveVisitor<R, P> extends _javatypes.java.lang.Interface {
                    
                    visit(arg0: _javatypes.javax.lang.model.element.ModuleElement$Directive): R;
                    visit(arg0: _javatypes.javax.lang.model.element.ModuleElement$Directive, arg1: P): R;
                    visitRequires(arg0: _javatypes.javax.lang.model.element.ModuleElement$RequiresDirective, arg1: P): R;
                    visitExports(arg0: _javatypes.javax.lang.model.element.ModuleElement$ExportsDirective, arg1: P): R;
                    visitOpens(arg0: _javatypes.javax.lang.model.element.ModuleElement$OpensDirective, arg1: P): R;
                    visitUses(arg0: _javatypes.javax.lang.model.element.ModuleElement$UsesDirective, arg1: P): R;
                    visitProvides(arg0: _javatypes.javax.lang.model.element.ModuleElement$ProvidesDirective, arg1: P): R;
                    visitUnknown(arg0: _javatypes.javax.lang.model.element.ModuleElement$Directive, arg1: P): R;
                    
                }
                namespace ModuleElement$DirectiveVisitor {
                    interface static {
                        
                        
                        
                    }
                }
                interface ModuleElement$ExportsDirective extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.element.ModuleElement$Directive {
                    
                    getPackage(): _javatypes.javax.lang.model.element.PackageElement;
                    getTargetModules(): _javatypes.java.util.List<any>;
                    
                }
                namespace ModuleElement$ExportsDirective {
                    interface static {
                        
                        
                        
                    }
                }
                interface ModuleElement$UsesDirective extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.element.ModuleElement$Directive {
                    
                    getService(): _javatypes.javax.lang.model.element.TypeElement;
                    
                }
                namespace ModuleElement$UsesDirective {
                    interface static {
                        
                        
                        
                    }
                }
                interface ModuleElement$ProvidesDirective extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.element.ModuleElement$Directive {
                    
                    getService(): _javatypes.javax.lang.model.element.TypeElement;
                    getImplementations(): _javatypes.java.util.List<any>;
                    
                }
                namespace ModuleElement$ProvidesDirective {
                    interface static {
                        
                        
                        
                    }
                }
                interface ModuleElement$RequiresDirective extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.element.ModuleElement$Directive {
                    
                    isStatic(): boolean;
                    isTransitive(): boolean;
                    getDependency(): _javatypes.javax.lang.model.element.ModuleElement;
                    
                }
                namespace ModuleElement$RequiresDirective {
                    interface static {
                        
                        
                        
                    }
                }
                interface ModuleElement$OpensDirective extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.element.ModuleElement$Directive {
                    
                    getPackage(): _javatypes.javax.lang.model.element.PackageElement;
                    getTargetModules(): _javatypes.java.util.List<any>;
                    
                }
                namespace ModuleElement$OpensDirective {
                    interface static {
                        
                        
                        
                    }
                }
            }
        
            namespace util {
            
                interface Types extends _javatypes.java.lang.Interface {
                    
                    asElement(arg0: _javatypes.javax.lang.model.type.TypeMirror): _javatypes.javax.lang.model.element.Element;
                    isSameType(arg0: _javatypes.javax.lang.model.type.TypeMirror, arg1: _javatypes.javax.lang.model.type.TypeMirror): boolean;
                    isSubtype(arg0: _javatypes.javax.lang.model.type.TypeMirror, arg1: _javatypes.javax.lang.model.type.TypeMirror): boolean;
                    isAssignable(arg0: _javatypes.javax.lang.model.type.TypeMirror, arg1: _javatypes.javax.lang.model.type.TypeMirror): boolean;
                    contains(arg0: _javatypes.javax.lang.model.type.TypeMirror, arg1: _javatypes.javax.lang.model.type.TypeMirror): boolean;
                    isSubsignature(arg0: _javatypes.javax.lang.model.type.ExecutableType, arg1: _javatypes.javax.lang.model.type.ExecutableType): boolean;
                    directSupertypes(arg0: _javatypes.javax.lang.model.type.TypeMirror): _javatypes.java.util.List<any>;
                    erasure(arg0: _javatypes.javax.lang.model.type.TypeMirror): _javatypes.javax.lang.model.type.TypeMirror;
                    boxedClass(arg0: _javatypes.javax.lang.model.type.PrimitiveType): _javatypes.javax.lang.model.element.TypeElement;
                    unboxedType(arg0: _javatypes.javax.lang.model.type.TypeMirror): _javatypes.javax.lang.model.type.PrimitiveType;
                    capture(arg0: _javatypes.javax.lang.model.type.TypeMirror): _javatypes.javax.lang.model.type.TypeMirror;
                    getPrimitiveType(arg0: _javatypes.javax.lang.model.type.TypeKind): _javatypes.javax.lang.model.type.PrimitiveType;
                    getNullType(): _javatypes.javax.lang.model.type.NullType;
                    getNoType(arg0: _javatypes.javax.lang.model.type.TypeKind): _javatypes.javax.lang.model.type.NoType;
                    getArrayType(arg0: _javatypes.javax.lang.model.type.TypeMirror): _javatypes.javax.lang.model.type.ArrayType;
                    getWildcardType(arg0: _javatypes.javax.lang.model.type.TypeMirror, arg1: _javatypes.javax.lang.model.type.TypeMirror): _javatypes.javax.lang.model.type.WildcardType;
                    getDeclaredType(arg0: _javatypes.javax.lang.model.element.TypeElement, arg1: _javatypes.javax.lang.model.type.TypeMirror[]): _javatypes.javax.lang.model.type.DeclaredType;
                    getDeclaredType(arg0: _javatypes.javax.lang.model.type.DeclaredType, arg1: _javatypes.javax.lang.model.element.TypeElement, arg2: _javatypes.javax.lang.model.type.TypeMirror[]): _javatypes.javax.lang.model.type.DeclaredType;
                    asMemberOf(arg0: _javatypes.javax.lang.model.type.DeclaredType, arg1: _javatypes.javax.lang.model.element.Element): _javatypes.javax.lang.model.type.TypeMirror;
                    
                }
                namespace Types {
                    interface static {
                        
                        
                        
                    }
                }
                interface Elements extends _javatypes.java.lang.Interface {
                    
                    getPackageElement(arg0: _javatypes.java.lang.CharSequence): _javatypes.javax.lang.model.element.PackageElement;
                    getPackageElement(arg0: _javatypes.javax.lang.model.element.ModuleElement, arg1: _javatypes.java.lang.CharSequence): _javatypes.javax.lang.model.element.PackageElement;
                    getAllPackageElements(arg0: _javatypes.java.lang.CharSequence): _javatypes.java.util.Set<any>;
                    getTypeElement(arg0: _javatypes.java.lang.CharSequence): _javatypes.javax.lang.model.element.TypeElement;
                    getTypeElement(arg0: _javatypes.javax.lang.model.element.ModuleElement, arg1: _javatypes.java.lang.CharSequence): _javatypes.javax.lang.model.element.TypeElement;
                    getAllTypeElements(arg0: _javatypes.java.lang.CharSequence): _javatypes.java.util.Set<any>;
                    getModuleElement(arg0: _javatypes.java.lang.CharSequence): _javatypes.javax.lang.model.element.ModuleElement;
                    getAllModuleElements(): _javatypes.java.util.Set<any>;
                    getElementValuesWithDefaults(arg0: _javatypes.javax.lang.model.element.AnnotationMirror): _javatypes.java.util.Map<any, any>;
                    getDocComment(arg0: _javatypes.javax.lang.model.element.Element): string;
                    isDeprecated(arg0: _javatypes.javax.lang.model.element.Element): boolean;
                    getOrigin(arg0: _javatypes.javax.lang.model.element.Element): _javatypes.javax.lang.model.util.Elements$Origin;
                    getOrigin(arg0: _javatypes.javax.lang.model.AnnotatedConstruct, arg1: _javatypes.javax.lang.model.element.AnnotationMirror): _javatypes.javax.lang.model.util.Elements$Origin;
                    getOrigin(arg0: _javatypes.javax.lang.model.element.ModuleElement, arg1: _javatypes.javax.lang.model.element.ModuleElement$Directive): _javatypes.javax.lang.model.util.Elements$Origin;
                    isBridge(arg0: _javatypes.javax.lang.model.element.ExecutableElement): boolean;
                    getBinaryName(arg0: _javatypes.javax.lang.model.element.TypeElement): _javatypes.javax.lang.model.element.Name;
                    getPackageOf(arg0: _javatypes.javax.lang.model.element.Element): _javatypes.javax.lang.model.element.PackageElement;
                    getModuleOf(arg0: _javatypes.javax.lang.model.element.Element): _javatypes.javax.lang.model.element.ModuleElement;
                    getAllMembers(arg0: _javatypes.javax.lang.model.element.TypeElement): _javatypes.java.util.List<any>;
                    getAllAnnotationMirrors(arg0: _javatypes.javax.lang.model.element.Element): _javatypes.java.util.List<any>;
                    hides(arg0: _javatypes.javax.lang.model.element.Element, arg1: _javatypes.javax.lang.model.element.Element): boolean;
                    overrides(arg0: _javatypes.javax.lang.model.element.ExecutableElement, arg1: _javatypes.javax.lang.model.element.ExecutableElement, arg2: _javatypes.javax.lang.model.element.TypeElement): boolean;
                    getConstantExpression(arg0: any): string;
                    printElements(arg0: _javatypes.java.io.Writer, arg1: _javatypes.javax.lang.model.element.Element[]): void;
                    getName(arg0: _javatypes.java.lang.CharSequence): _javatypes.javax.lang.model.element.Name;
                    isFunctionalInterface(arg0: _javatypes.javax.lang.model.element.TypeElement): boolean;
                    isAutomaticModule(arg0: _javatypes.javax.lang.model.element.ModuleElement): boolean;
                    recordComponentFor(arg0: _javatypes.javax.lang.model.element.ExecutableElement): _javatypes.javax.lang.model.element.RecordComponentElement;
                    
                }
                namespace Elements {
                    interface static {
                        
                        
                        
                    }
                }
                interface Elements$Origin extends _javatypes.java.lang.Enum<_javatypes.javax.lang.model.util.Elements$Origin> {
                    
                    isDeclared(): boolean;
                    
                }
                namespace Elements$Origin {
                    interface static {
                        
                        readonly EXPLICIT: _javatypes.javax.lang.model.util.Elements$Origin;
                        readonly MANDATED: _javatypes.javax.lang.model.util.Elements$Origin;
                        readonly SYNTHETIC: _javatypes.javax.lang.model.util.Elements$Origin;
                        
                        values(): _javatypes.javax.lang.model.util.Elements$Origin[];
                        valueOf(arg0: string): _javatypes.javax.lang.model.util.Elements$Origin;
                        
                    }
                }
            }
        
            namespace type {
            
                interface ExecutableType extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.type.TypeMirror {
                    
                    getTypeVariables(): _javatypes.java.util.List<any>;
                    getReturnType(): _javatypes.javax.lang.model.type.TypeMirror;
                    getParameterTypes(): _javatypes.java.util.List<any>;
                    getReceiverType(): _javatypes.javax.lang.model.type.TypeMirror;
                    getThrownTypes(): _javatypes.java.util.List<any>;
                    
                }
                namespace ExecutableType {
                    interface static {
                        
                        
                        
                    }
                }
                interface PrimitiveType extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.type.TypeMirror {
                    
                    
                }
                namespace PrimitiveType {
                    interface static {
                        
                        
                        
                    }
                }
                interface ArrayType extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.type.ReferenceType {
                    
                    getComponentType(): _javatypes.javax.lang.model.type.TypeMirror;
                    
                }
                namespace ArrayType {
                    interface static {
                        
                        
                        
                    }
                }
                interface NullType extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.type.ReferenceType {
                    
                    
                }
                namespace NullType {
                    interface static {
                        
                        
                        
                    }
                }
                interface NoType extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.type.TypeMirror {
                    
                    
                }
                namespace NoType {
                    interface static {
                        
                        
                        
                    }
                }
                interface TypeKind extends _javatypes.java.lang.Enum<_javatypes.javax.lang.model.type.TypeKind> {
                    
                    isPrimitive(): boolean;
                    
                }
                namespace TypeKind {
                    interface static {
                        
                        readonly BOOLEAN: _javatypes.javax.lang.model.type.TypeKind;
                        readonly BYTE: _javatypes.javax.lang.model.type.TypeKind;
                        readonly SHORT: _javatypes.javax.lang.model.type.TypeKind;
                        readonly INT: _javatypes.javax.lang.model.type.TypeKind;
                        readonly LONG: _javatypes.javax.lang.model.type.TypeKind;
                        readonly CHAR: _javatypes.javax.lang.model.type.TypeKind;
                        readonly FLOAT: _javatypes.javax.lang.model.type.TypeKind;
                        readonly DOUBLE: _javatypes.javax.lang.model.type.TypeKind;
                        readonly VOID: _javatypes.javax.lang.model.type.TypeKind;
                        readonly NONE: _javatypes.javax.lang.model.type.TypeKind;
                        readonly NULL: _javatypes.javax.lang.model.type.TypeKind;
                        readonly ARRAY: _javatypes.javax.lang.model.type.TypeKind;
                        readonly DECLARED: _javatypes.javax.lang.model.type.TypeKind;
                        readonly ERROR: _javatypes.javax.lang.model.type.TypeKind;
                        readonly TYPEVAR: _javatypes.javax.lang.model.type.TypeKind;
                        readonly WILDCARD: _javatypes.javax.lang.model.type.TypeKind;
                        readonly PACKAGE: _javatypes.javax.lang.model.type.TypeKind;
                        readonly EXECUTABLE: _javatypes.javax.lang.model.type.TypeKind;
                        readonly OTHER: _javatypes.javax.lang.model.type.TypeKind;
                        readonly UNION: _javatypes.javax.lang.model.type.TypeKind;
                        readonly INTERSECTION: _javatypes.javax.lang.model.type.TypeKind;
                        readonly MODULE: _javatypes.javax.lang.model.type.TypeKind;
                        
                        values(): _javatypes.javax.lang.model.type.TypeKind[];
                        valueOf(arg0: string): _javatypes.javax.lang.model.type.TypeKind;
                        
                    }
                }
                interface WildcardType extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.type.TypeMirror {
                    
                    getExtendsBound(): _javatypes.javax.lang.model.type.TypeMirror;
                    getSuperBound(): _javatypes.javax.lang.model.type.TypeMirror;
                    
                }
                namespace WildcardType {
                    interface static {
                        
                        
                        
                    }
                }
                interface DeclaredType extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.type.ReferenceType {
                    
                    asElement(): _javatypes.javax.lang.model.element.Element;
                    getEnclosingType(): _javatypes.javax.lang.model.type.TypeMirror;
                    getTypeArguments(): _javatypes.java.util.List<any>;
                    
                }
                namespace DeclaredType {
                    interface static {
                        
                        
                        
                    }
                }
                interface TypeMirror extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.AnnotatedConstruct {
                    
                    getKind(): _javatypes.javax.lang.model.type.TypeKind;
                    equals(arg0: any): boolean;
                    hashCode(): number;
                    toString(): string;
                    getAnnotationMirrors(): _javatypes.java.util.List<any>;
                    getAnnotation<A>(arg0: _javatypes.java.lang.Class<A>): A;
                    getAnnotationsByType<A>(arg0: _javatypes.java.lang.Class<A>): A[];
                    accept<R, P>(arg0: _javatypes.javax.lang.model.type.TypeVisitor<R, P>, arg1: P): R;
                    
                }
                namespace TypeMirror {
                    interface static {
                        
                        
                        
                    }
                }
                interface TypeVisitor<R, P> extends _javatypes.java.lang.Interface {
                    
                    visit(arg0: _javatypes.javax.lang.model.type.TypeMirror, arg1: P): R;
                    visit(arg0: _javatypes.javax.lang.model.type.TypeMirror): R;
                    visitPrimitive(arg0: _javatypes.javax.lang.model.type.PrimitiveType, arg1: P): R;
                    visitNull(arg0: _javatypes.javax.lang.model.type.NullType, arg1: P): R;
                    visitArray(arg0: _javatypes.javax.lang.model.type.ArrayType, arg1: P): R;
                    visitDeclared(arg0: _javatypes.javax.lang.model.type.DeclaredType, arg1: P): R;
                    visitError(arg0: _javatypes.javax.lang.model.type.ErrorType, arg1: P): R;
                    visitTypeVariable(arg0: _javatypes.javax.lang.model.type.TypeVariable, arg1: P): R;
                    visitWildcard(arg0: _javatypes.javax.lang.model.type.WildcardType, arg1: P): R;
                    visitExecutable(arg0: _javatypes.javax.lang.model.type.ExecutableType, arg1: P): R;
                    visitNoType(arg0: _javatypes.javax.lang.model.type.NoType, arg1: P): R;
                    visitUnknown(arg0: _javatypes.javax.lang.model.type.TypeMirror, arg1: P): R;
                    visitUnion(arg0: _javatypes.javax.lang.model.type.UnionType, arg1: P): R;
                    visitIntersection(arg0: _javatypes.javax.lang.model.type.IntersectionType, arg1: P): R;
                    
                }
                namespace TypeVisitor {
                    interface static {
                        
                        
                        
                    }
                }
                interface ReferenceType extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.type.TypeMirror {
                    
                    
                }
                namespace ReferenceType {
                    interface static {
                        
                        
                        
                    }
                }
                interface UnionType extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.type.TypeMirror {
                    
                    getAlternatives(): _javatypes.java.util.List<any>;
                    
                }
                namespace UnionType {
                    interface static {
                        
                        
                        
                    }
                }
                interface TypeVariable extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.type.ReferenceType {
                    
                    asElement(): _javatypes.javax.lang.model.element.Element;
                    getUpperBound(): _javatypes.javax.lang.model.type.TypeMirror;
                    getLowerBound(): _javatypes.javax.lang.model.type.TypeMirror;
                    
                }
                namespace TypeVariable {
                    interface static {
                        
                        
                        
                    }
                }
                interface ErrorType extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.type.DeclaredType {
                    
                    
                }
                namespace ErrorType {
                    interface static {
                        
                        
                        
                    }
                }
                interface IntersectionType extends _javatypes.java.lang.Interface, _javatypes.javax.lang.model.type.TypeMirror {
                    
                    getBounds(): _javatypes.java.util.List<any>;
                    
                }
                namespace IntersectionType {
                    interface static {
                        
                        
                        
                    }
                }
            }
        }
    
        namespace tools {
        
            interface JavaFileObject extends _javatypes.java.lang.Interface, _javatypes.javax.tools.FileObject {
                
                getKind(): _javatypes.javax.tools.JavaFileObject$Kind;
                isNameCompatible(arg0: string, arg1: _javatypes.javax.tools.JavaFileObject$Kind): boolean;
                getNestingKind(): _javatypes.javax.lang.model.element.NestingKind;
                getAccessLevel(): _javatypes.javax.lang.model.element.Modifier;
                
            }
            namespace JavaFileObject {
                interface static {
                    
                    
                    
                }
            }
            interface FileObject extends _javatypes.java.lang.Interface {
                
                toUri(): _javatypes.java.net.URI;
                getName(): string;
                openInputStream(): _javatypes.java.io.InputStream;
                openOutputStream(): _javatypes.java.io.OutputStream;
                openReader(arg0: boolean): _javatypes.java.io.Reader;
                getCharContent(arg0: boolean): _javatypes.java.lang.CharSequence;
                openWriter(): _javatypes.java.io.Writer;
                getLastModified(): number;
                delete(): boolean;
                
            }
            namespace FileObject {
                interface static {
                    
                    
                    
                }
            }
            interface Diagnostic$Kind extends _javatypes.java.lang.Enum<_javatypes.javax.tools.Diagnostic$Kind> {
                
                
            }
            namespace Diagnostic$Kind {
                interface static {
                    
                    readonly ERROR: _javatypes.javax.tools.Diagnostic$Kind;
                    readonly WARNING: _javatypes.javax.tools.Diagnostic$Kind;
                    readonly MANDATORY_WARNING: _javatypes.javax.tools.Diagnostic$Kind;
                    readonly NOTE: _javatypes.javax.tools.Diagnostic$Kind;
                    readonly OTHER: _javatypes.javax.tools.Diagnostic$Kind;
                    
                    values(): _javatypes.javax.tools.Diagnostic$Kind[];
                    valueOf(arg0: string): _javatypes.javax.tools.Diagnostic$Kind;
                    
                }
            }
            interface JavaFileManager$Location extends _javatypes.java.lang.Interface {
                
                getName(): string;
                isOutputLocation(): boolean;
                isModuleOrientedLocation(): boolean;
                
            }
            namespace JavaFileManager$Location {
                interface static {
                    
                    
                    
                }
            }
            interface JavaFileObject$Kind extends _javatypes.java.lang.Enum<_javatypes.javax.tools.JavaFileObject$Kind> {
                readonly extension: string;
                
                
            }
            namespace JavaFileObject$Kind {
                interface static {
                    
                    readonly SOURCE: _javatypes.javax.tools.JavaFileObject$Kind;
                    readonly CLASS: _javatypes.javax.tools.JavaFileObject$Kind;
                    readonly HTML: _javatypes.javax.tools.JavaFileObject$Kind;
                    readonly OTHER: _javatypes.javax.tools.JavaFileObject$Kind;
                    
                    values(): _javatypes.javax.tools.JavaFileObject$Kind[];
                    valueOf(arg0: string): _javatypes.javax.tools.JavaFileObject$Kind;
                    
                }
            }
        }
    
        namespace swing.text {
        
            interface AttributeSet extends _javatypes.java.lang.Interface {
                
                getAttributeCount(): number;
                isDefined(arg0: any): boolean;
                isEqual(arg0: _javatypes.javax.swing.text.AttributeSet): boolean;
                copyAttributes(): _javatypes.javax.swing.text.AttributeSet;
                getAttribute(arg0: any): any;
                getAttributeNames(): _javatypes.java.util.Enumeration<any>;
                containsAttribute(arg0: any, arg1: any): boolean;
                containsAttributes(arg0: _javatypes.javax.swing.text.AttributeSet): boolean;
                getResolveParent(): _javatypes.javax.swing.text.AttributeSet;
                
            }
            namespace AttributeSet {
                interface static {
                    
                    readonly NameAttribute: any;
                    readonly ResolveAttribute: any;
                    
                    
                }
            }
        }
    }

    namespace it.unimi.dsi.fastutil {
    
        interface BidirectionalIterator<K> extends _javatypes.java.lang.Interface, _javatypes.java.util.Iterator<K> {
            
            previous(): K;
            hasPrevious(): boolean;
            
        }
        namespace BidirectionalIterator {
            interface static {
                
                
                
            }
        }
    
        namespace ints {
        
            interface IntList extends _javatypes.java.lang.Interface, _javatypes.java.util.List<number>, _javatypes.java.lang.Comparable<_javatypes.java.util.List<any>>, _javatypes.it.unimi.dsi.fastutil.ints.IntCollection {
                
                iterator(): _javatypes.it.unimi.dsi.fastutil.ints.IntListIterator;
                spliterator(): _javatypes.it.unimi.dsi.fastutil.ints.IntSpliterator;
                listIterator(): _javatypes.it.unimi.dsi.fastutil.ints.IntListIterator;
                listIterator(arg0: number): _javatypes.it.unimi.dsi.fastutil.ints.IntListIterator;
                subList(arg0: number, arg1: number): _javatypes.it.unimi.dsi.fastutil.ints.IntList;
                size(arg0: number): void;
                getElements(arg0: number, arg1: number[], arg2: number, arg3: number): void;
                removeElements(arg0: number, arg1: number): void;
                addElements(arg0: number, arg1: number[]): void;
                addElements(arg0: number, arg1: number[], arg2: number, arg3: number): void;
                setElements(arg0: number[]): void;
                setElements(arg0: number, arg1: number[]): void;
                setElements(arg0: number, arg1: number[], arg2: number, arg3: number): void;
                add(arg0: number): boolean;
                add(arg0: number, arg1: number): void;
                add(arg0: number, arg1: number): void;
                addAll(arg0: number, arg1: _javatypes.it.unimi.dsi.fastutil.ints.IntCollection): boolean;
                set(arg0: number, arg1: number): number;
                replaceAll(arg0: _javatypes.java.util._function.IntUnaryOperator): void;
                replaceAll(arg0: _javatypes.it.unimi.dsi.fastutil.ints.IntUnaryOperator): void;
                replaceAll(arg0: _javatypes.java.util._function.UnaryOperator<number>): void;
                getInt(arg0: number): number;
                indexOf(arg0: number): number;
                lastIndexOf(arg0: number): number;
                contains(arg0: any): boolean;
                get(arg0: number): number;
                indexOf(arg0: any): number;
                lastIndexOf(arg0: any): number;
                add(arg0: number): boolean;
                removeInt(arg0: number): number;
                remove(arg0: any): boolean;
                remove(arg0: number): number;
                set(arg0: number, arg1: number): number;
                addAll(arg0: number, arg1: _javatypes.it.unimi.dsi.fastutil.ints.IntList): boolean;
                addAll(arg0: _javatypes.it.unimi.dsi.fastutil.ints.IntList): boolean;
                sort(arg0: _javatypes.java.util.Comparator<any>): void;
                sort(arg0: _javatypes.it.unimi.dsi.fastutil.ints.IntComparator): void;
                unstableSort(arg0: _javatypes.java.util.Comparator<any>): void;
                unstableSort(arg0: _javatypes.it.unimi.dsi.fastutil.ints.IntComparator): void;
                
            }
            namespace IntList {
                interface static {
                    
                    
                    of(): _javatypes.it.unimi.dsi.fastutil.ints.IntList;
                    of(arg0: number): _javatypes.it.unimi.dsi.fastutil.ints.IntList;
                    of(arg0: number, arg1: number): _javatypes.it.unimi.dsi.fastutil.ints.IntList;
                    of(arg0: number, arg1: number, arg2: number): _javatypes.it.unimi.dsi.fastutil.ints.IntList;
                    of(arg0: number[]): _javatypes.it.unimi.dsi.fastutil.ints.IntList;
                    
                }
            }
            interface IntListIterator extends _javatypes.java.lang.Interface, _javatypes.it.unimi.dsi.fastutil.ints.IntBidirectionalIterator, _javatypes.java.util.ListIterator<number> {
                
                set(arg0: number): void;
                add(arg0: number): void;
                remove(): void;
                set(arg0: number): void;
                add(arg0: number): void;
                next(): number;
                previous(): number;
                
            }
            namespace IntListIterator {
                interface static {
                    
                    
                    
                }
            }
            interface IntSpliterator extends _javatypes.java.lang.Interface, _javatypes.java.util.Spliterator$OfInt {
                
                tryAdvance(arg0: _javatypes.java.util._function.Consumer<any>): boolean;
                tryAdvance(arg0: _javatypes.it.unimi.dsi.fastutil.ints.IntConsumer): boolean;
                forEachRemaining(arg0: _javatypes.java.util._function.Consumer<any>): void;
                forEachRemaining(arg0: _javatypes.it.unimi.dsi.fastutil.ints.IntConsumer): void;
                skip(arg0: number): number;
                trySplit(): _javatypes.it.unimi.dsi.fastutil.ints.IntSpliterator;
                getComparator(): _javatypes.it.unimi.dsi.fastutil.ints.IntComparator;
                
            }
            namespace IntSpliterator {
                interface static {
                    
                    
                    
                }
            }
            interface IntComparator extends _javatypes.java.lang.Interface, _javatypes.java.util.Comparator<number> {
                
                compare(arg0: number, arg1: number): number;
                reversed(): _javatypes.it.unimi.dsi.fastutil.ints.IntComparator;
                compare(arg0: number, arg1: number): number;
                thenComparing(arg0: _javatypes.it.unimi.dsi.fastutil.ints.IntComparator): _javatypes.it.unimi.dsi.fastutil.ints.IntComparator;
                thenComparing(arg0: _javatypes.java.util.Comparator<any>): _javatypes.java.util.Comparator<number>;
                
            }
            namespace IntComparator {
                interface static {
                    
                    
                    
                }
            }
            interface IntCollection extends _javatypes.java.lang.Interface, _javatypes.java.util.Collection<number>, _javatypes.it.unimi.dsi.fastutil.ints.IntIterable {
                
                iterator(): _javatypes.it.unimi.dsi.fastutil.ints.IntIterator;
                intIterator(): _javatypes.it.unimi.dsi.fastutil.ints.IntIterator;
                spliterator(): _javatypes.it.unimi.dsi.fastutil.ints.IntSpliterator;
                intSpliterator(): _javatypes.it.unimi.dsi.fastutil.ints.IntSpliterator;
                add(arg0: number): boolean;
                contains(arg0: number): boolean;
                rem(arg0: number): boolean;
                add(arg0: number): boolean;
                contains(arg0: any): boolean;
                remove(arg0: any): boolean;
                toIntArray(): number[];
                toIntArray(arg0: number[]): number[];
                toArray(arg0: number[]): number[];
                addAll(arg0: _javatypes.it.unimi.dsi.fastutil.ints.IntCollection): boolean;
                containsAll(arg0: _javatypes.it.unimi.dsi.fastutil.ints.IntCollection): boolean;
                removeAll(arg0: _javatypes.it.unimi.dsi.fastutil.ints.IntCollection): boolean;
                removeIf(arg0: _javatypes.java.util._function.Predicate<any>): boolean;
                removeIf(arg0: _javatypes.java.util._function.IntPredicate): boolean;
                removeIf(arg0: _javatypes.it.unimi.dsi.fastutil.ints.IntPredicate): boolean;
                retainAll(arg0: _javatypes.it.unimi.dsi.fastutil.ints.IntCollection): boolean;
                stream(): _javatypes.java.util.stream.Stream<number>;
                intStream(): _javatypes.java.util.stream.IntStream;
                parallelStream(): _javatypes.java.util.stream.Stream<number>;
                intParallelStream(): _javatypes.java.util.stream.IntStream;
                
            }
            namespace IntCollection {
                interface static {
                    
                    
                    
                }
            }
            interface IntUnaryOperator extends _javatypes.java.lang.Interface, _javatypes.java.util._function.UnaryOperator<number>, _javatypes.java.util._function.IntUnaryOperator {
                
                apply(arg0: number): number;
                applyAsInt(arg0: number): number;
                apply(arg0: number): number;
                
            }
            namespace IntUnaryOperator {
                interface static {
                    
                    
                    identity(): _javatypes.it.unimi.dsi.fastutil.ints.IntUnaryOperator;
                    negation(): _javatypes.it.unimi.dsi.fastutil.ints.IntUnaryOperator;
                    
                }
            }
            interface IntPredicate extends _javatypes.java.lang.Interface, _javatypes.java.util._function.Predicate<number>, _javatypes.java.util._function.IntPredicate {
                
                test(arg0: number): boolean;
                and(arg0: _javatypes.java.util._function.IntPredicate): _javatypes.it.unimi.dsi.fastutil.ints.IntPredicate;
                and(arg0: _javatypes.it.unimi.dsi.fastutil.ints.IntPredicate): _javatypes.it.unimi.dsi.fastutil.ints.IntPredicate;
                and(arg0: _javatypes.java.util._function.Predicate<any>): _javatypes.java.util._function.Predicate<number>;
                negate(): _javatypes.it.unimi.dsi.fastutil.ints.IntPredicate;
                or(arg0: _javatypes.java.util._function.IntPredicate): _javatypes.it.unimi.dsi.fastutil.ints.IntPredicate;
                or(arg0: _javatypes.it.unimi.dsi.fastutil.ints.IntPredicate): _javatypes.it.unimi.dsi.fastutil.ints.IntPredicate;
                or(arg0: _javatypes.java.util._function.Predicate<any>): _javatypes.java.util._function.Predicate<number>;
                
            }
            namespace IntPredicate {
                interface static {
                    
                    
                    
                }
            }
            interface IntBidirectionalIterator extends _javatypes.java.lang.Interface, _javatypes.it.unimi.dsi.fastutil.ints.IntIterator, _javatypes.it.unimi.dsi.fastutil.objects.ObjectBidirectionalIterator<number> {
                
                previousInt(): number;
                previous(): number;
                back(arg0: number): number;
                skip(arg0: number): number;
                
            }
            namespace IntBidirectionalIterator {
                interface static {
                    
                    
                    
                }
            }
            interface IntConsumer extends _javatypes.java.lang.Interface, _javatypes.java.util._function.Consumer<number>, _javatypes.java.util._function.IntConsumer {
                
                accept(arg0: number): void;
                andThen(arg0: _javatypes.java.util._function.IntConsumer): _javatypes.it.unimi.dsi.fastutil.ints.IntConsumer;
                andThen(arg0: _javatypes.it.unimi.dsi.fastutil.ints.IntConsumer): _javatypes.it.unimi.dsi.fastutil.ints.IntConsumer;
                andThen(arg0: _javatypes.java.util._function.Consumer<any>): _javatypes.java.util._function.Consumer<number>;
                
            }
            namespace IntConsumer {
                interface static {
                    
                    
                    
                }
            }
            interface IntIterable extends _javatypes.java.lang.Interface, _javatypes.java.lang.Iterable<number> {
                
                iterator(): _javatypes.it.unimi.dsi.fastutil.ints.IntIterator;
                intIterator(): _javatypes.it.unimi.dsi.fastutil.ints.IntIterator;
                spliterator(): _javatypes.it.unimi.dsi.fastutil.ints.IntSpliterator;
                intSpliterator(): _javatypes.it.unimi.dsi.fastutil.ints.IntSpliterator;
                forEach(arg0: _javatypes.java.util._function.IntConsumer): void;
                forEach(arg0: _javatypes.it.unimi.dsi.fastutil.ints.IntConsumer): void;
                forEach(arg0: _javatypes.java.util._function.Consumer<any>): void;
                
            }
            namespace IntIterable {
                interface static {
                    
                    
                    
                }
            }
            interface IntIterator extends _javatypes.java.lang.Interface, _javatypes.java.util.PrimitiveIterator$OfInt {
                
                nextInt(): number;
                next(): number;
                forEachRemaining(arg0: _javatypes.it.unimi.dsi.fastutil.ints.IntConsumer): void;
                forEachRemaining(arg0: _javatypes.java.util._function.Consumer<any>): void;
                skip(arg0: number): number;
                
            }
            namespace IntIterator {
                interface static {
                    
                    
                    
                }
            }
        }
    
        namespace objects {
        
            interface ObjectBidirectionalIterator<K> extends _javatypes.java.lang.Interface, _javatypes.it.unimi.dsi.fastutil.objects.ObjectIterator<K>, _javatypes.it.unimi.dsi.fastutil.BidirectionalIterator<K> {
                
                back(arg0: number): number;
                skip(arg0: number): number;
                
            }
            namespace ObjectBidirectionalIterator {
                interface static {
                    
                    
                    
                }
            }
            interface ObjectIterator<K> extends _javatypes.java.lang.Interface, _javatypes.java.util.Iterator<K> {
                
                skip(arg0: number): number;
                
            }
            namespace ObjectIterator {
                interface static {
                    
                    
                    
                }
            }
        }
    }

    namespace javassist {
    
        interface CtBehavior extends _javatypes.javassist.CtMember {
            
            getLongName(): string;
            getMethodInfo(): _javatypes.javassist.bytecode.MethodInfo;
            getMethodInfo2(): _javatypes.javassist.bytecode.MethodInfo;
            getModifiers(): number;
            setModifiers(arg0: number): void;
            hasAnnotation(arg0: string): boolean;
            getAnnotation(arg0: _javatypes.java.lang.Class<any>): any;
            getAnnotations(): any[];
            getAvailableAnnotations(): any[];
            getParameterAnnotations(): any[][];
            getAvailableParameterAnnotations(): any[][];
            getParameterTypes(): _javatypes.javassist.CtClass[];
            getSignature(): string;
            getGenericSignature(): string;
            setGenericSignature(arg0: string): void;
            getExceptionTypes(): _javatypes.javassist.CtClass[];
            setExceptionTypes(arg0: _javatypes.javassist.CtClass[]): void;
            isEmpty(): boolean;
            setBody(arg0: string): void;
            setBody(arg0: string, arg1: string, arg2: string): void;
            getAttribute(arg0: string): number[];
            setAttribute(arg0: string, arg1: number[]): void;
            useCflow(arg0: string): void;
            addLocalVariable(arg0: string, arg1: _javatypes.javassist.CtClass): void;
            insertParameter(arg0: _javatypes.javassist.CtClass): void;
            addParameter(arg0: _javatypes.javassist.CtClass): void;
            instrument(arg0: _javatypes.javassist.CodeConverter): void;
            instrument(arg0: _javatypes.javassist.expr.ExprEditor): void;
            insertBefore(arg0: string): void;
            insertAfter(arg0: string): void;
            insertAfter(arg0: string, arg1: boolean): void;
            insertAfter(arg0: string, arg1: boolean, arg2: boolean): void;
            addCatch(arg0: string, arg1: _javatypes.javassist.CtClass): void;
            addCatch(arg0: string, arg1: _javatypes.javassist.CtClass, arg2: string): void;
            insertAt(arg0: number, arg1: string): number;
            insertAt(arg0: number, arg1: boolean, arg2: string): number;
            
        }
        namespace CtBehavior {
            interface static {
                
                
                
            }
        }
        interface CtClass extends any {
            
            toString(): string;
            getClassPool(): _javatypes.javassist.ClassPool;
            getClassFile(): _javatypes.javassist.bytecode.ClassFile;
            getClassFile2(): _javatypes.javassist.bytecode.ClassFile;
            getAccessorMaker(): _javatypes.javassist.compiler.AccessorMaker;
            getURL(): _javatypes.java.net.URL;
            isModified(): boolean;
            isFrozen(): boolean;
            freeze(): void;
            defrost(): void;
            isPrimitive(): boolean;
            isArray(): boolean;
            isKotlin(): boolean;
            getComponentType(): _javatypes.javassist.CtClass;
            subtypeOf(arg0: _javatypes.javassist.CtClass): boolean;
            getName(): string;
            getSimpleName(): string;
            getPackageName(): string;
            setName(arg0: string): void;
            getGenericSignature(): string;
            setGenericSignature(arg0: string): void;
            replaceClassName(arg0: string, arg1: string): void;
            replaceClassName(arg0: _javatypes.javassist.ClassMap): void;
            getRefClasses(): _javatypes.java.util.Collection<string>;
            isInterface(): boolean;
            isAnnotation(): boolean;
            isEnum(): boolean;
            getModifiers(): number;
            hasAnnotation(arg0: _javatypes.java.lang.Class<any>): boolean;
            hasAnnotation(arg0: string): boolean;
            getAnnotation(arg0: _javatypes.java.lang.Class<any>): any;
            getAnnotations(): any[];
            getAvailableAnnotations(): any[];
            getDeclaredClasses(): _javatypes.javassist.CtClass[];
            getNestedClasses(): _javatypes.javassist.CtClass[];
            setModifiers(arg0: number): void;
            subclassOf(arg0: _javatypes.javassist.CtClass): boolean;
            getSuperclass(): _javatypes.javassist.CtClass;
            setSuperclass(arg0: _javatypes.javassist.CtClass): void;
            getInterfaces(): _javatypes.javassist.CtClass[];
            setInterfaces(arg0: _javatypes.javassist.CtClass[]): void;
            addInterface(arg0: _javatypes.javassist.CtClass): void;
            getDeclaringClass(): _javatypes.javassist.CtClass;
            getEnclosingMethod(): _javatypes.javassist.CtMethod;
            getEnclosingBehavior(): _javatypes.javassist.CtBehavior;
            makeNestedClass(arg0: string, arg1: boolean): _javatypes.javassist.CtClass;
            getFields(): _javatypes.javassist.CtField[];
            getField(arg0: string): _javatypes.javassist.CtField;
            getField(arg0: string, arg1: string): _javatypes.javassist.CtField;
            getDeclaredFields(): _javatypes.javassist.CtField[];
            getDeclaredField(arg0: string): _javatypes.javassist.CtField;
            getDeclaredField(arg0: string, arg1: string): _javatypes.javassist.CtField;
            getDeclaredBehaviors(): _javatypes.javassist.CtBehavior[];
            getConstructors(): _javatypes.javassist.CtConstructor[];
            getConstructor(arg0: string): _javatypes.javassist.CtConstructor;
            getDeclaredConstructors(): _javatypes.javassist.CtConstructor[];
            getDeclaredConstructor(arg0: _javatypes.javassist.CtClass[]): _javatypes.javassist.CtConstructor;
            getClassInitializer(): _javatypes.javassist.CtConstructor;
            getMethods(): _javatypes.javassist.CtMethod[];
            getMethod(arg0: string, arg1: string): _javatypes.javassist.CtMethod;
            getDeclaredMethods(): _javatypes.javassist.CtMethod[];
            getDeclaredMethod(arg0: string, arg1: _javatypes.javassist.CtClass[]): _javatypes.javassist.CtMethod;
            getDeclaredMethods(arg0: string): _javatypes.javassist.CtMethod[];
            getDeclaredMethod(arg0: string): _javatypes.javassist.CtMethod;
            makeClassInitializer(): _javatypes.javassist.CtConstructor;
            addConstructor(arg0: _javatypes.javassist.CtConstructor): void;
            removeConstructor(arg0: _javatypes.javassist.CtConstructor): void;
            addMethod(arg0: _javatypes.javassist.CtMethod): void;
            removeMethod(arg0: _javatypes.javassist.CtMethod): void;
            addField(arg0: _javatypes.javassist.CtField): void;
            addField(arg0: _javatypes.javassist.CtField, arg1: string): void;
            addField(arg0: _javatypes.javassist.CtField, arg1: _javatypes.javassist.CtField$Initializer): void;
            removeField(arg0: _javatypes.javassist.CtField): void;
            getAttribute(arg0: string): number[];
            setAttribute(arg0: string, arg1: number[]): void;
            instrument(arg0: _javatypes.javassist.CodeConverter): void;
            instrument(arg0: _javatypes.javassist.expr.ExprEditor): void;
            toClass(): _javatypes.java.lang.Class<any>;
            toClass(arg0: _javatypes.java.lang.Class<any>): _javatypes.java.lang.Class<any>;
            toClass(arg0: _javatypes.java.lang.invoke.MethodHandles$Lookup): _javatypes.java.lang.Class<any>;
            toClass(arg0: _javatypes.java.lang.ClassLoader, arg1: _javatypes.java.security.ProtectionDomain): _javatypes.java.lang.Class<any>;
            toClass(arg0: _javatypes.java.lang.ClassLoader): _javatypes.java.lang.Class<any>;
            detach(): void;
            stopPruning(arg0: boolean): boolean;
            prune(): void;
            rebuildClassFile(): void;
            toBytecode(): number[];
            writeFile(): void;
            writeFile(arg0: string): void;
            debugWriteFile(): void;
            debugWriteFile(arg0: string): void;
            toBytecode(arg0: _javatypes.java.io.DataOutputStream): void;
            makeUniqueName(arg0: string): string;
            
        }
        namespace CtClass {
            interface static {
                
                debugDump: string;
                readonly version: string;
                booleanType: _javatypes.javassist.CtClass;
                charType: _javatypes.javassist.CtClass;
                byteType: _javatypes.javassist.CtClass;
                shortType: _javatypes.javassist.CtClass;
                intType: _javatypes.javassist.CtClass;
                longType: _javatypes.javassist.CtClass;
                floatType: _javatypes.javassist.CtClass;
                doubleType: _javatypes.javassist.CtClass;
                voidType: _javatypes.javassist.CtClass;
                
                main(arg0: string[]): void;
                
            }
        }
        interface CtField$Initializer extends any {
            
            
        }
        namespace CtField$Initializer {
            interface static {
                new (): _javatypes.javassist.CtField$Initializer;
                
                
                constant(arg0: number): _javatypes.javassist.CtField$Initializer;
                constant(arg0: boolean): _javatypes.javassist.CtField$Initializer;
                constant(arg0: number): _javatypes.javassist.CtField$Initializer;
                constant(arg0: number): _javatypes.javassist.CtField$Initializer;
                constant(arg0: number): _javatypes.javassist.CtField$Initializer;
                constant(arg0: string): _javatypes.javassist.CtField$Initializer;
                byParameter(arg0: number): _javatypes.javassist.CtField$Initializer;
                byNew(arg0: _javatypes.javassist.CtClass): _javatypes.javassist.CtField$Initializer;
                byNew(arg0: _javatypes.javassist.CtClass, arg1: string[]): _javatypes.javassist.CtField$Initializer;
                byNewWithParams(arg0: _javatypes.javassist.CtClass): _javatypes.javassist.CtField$Initializer;
                byNewWithParams(arg0: _javatypes.javassist.CtClass, arg1: string[]): _javatypes.javassist.CtField$Initializer;
                byCall(arg0: _javatypes.javassist.CtClass, arg1: string): _javatypes.javassist.CtField$Initializer;
                byCall(arg0: _javatypes.javassist.CtClass, arg1: string, arg2: string[]): _javatypes.javassist.CtField$Initializer;
                byCallWithParams(arg0: _javatypes.javassist.CtClass, arg1: string): _javatypes.javassist.CtField$Initializer;
                byCallWithParams(arg0: _javatypes.javassist.CtClass, arg1: string, arg2: string[]): _javatypes.javassist.CtField$Initializer;
                byNewArray(arg0: _javatypes.javassist.CtClass, arg1: number): _javatypes.javassist.CtField$Initializer;
                byNewArray(arg0: _javatypes.javassist.CtClass, arg1: number[]): _javatypes.javassist.CtField$Initializer;
                byExpr(arg0: string): _javatypes.javassist.CtField$Initializer;
                
            }
        }
        interface CtConstructor extends _javatypes.javassist.CtBehavior {
            
            isConstructor(): boolean;
            isClassInitializer(): boolean;
            getLongName(): string;
            getName(): string;
            isEmpty(): boolean;
            callsSuper(): boolean;
            setBody(arg0: string): void;
            setBody(arg0: _javatypes.javassist.CtConstructor, arg1: _javatypes.javassist.ClassMap): void;
            insertBeforeBody(arg0: string): void;
            toMethod(arg0: string, arg1: _javatypes.javassist.CtClass): _javatypes.javassist.CtMethod;
            toMethod(arg0: string, arg1: _javatypes.javassist.CtClass, arg2: _javatypes.javassist.ClassMap): _javatypes.javassist.CtMethod;
            
        }
        namespace CtConstructor {
            interface static {
                new (arg0: _javatypes.javassist.CtClass[], arg1: _javatypes.javassist.CtClass): _javatypes.javassist.CtConstructor;
                new (arg0: _javatypes.javassist.CtConstructor, arg1: _javatypes.javassist.CtClass, arg2: _javatypes.javassist.ClassMap): _javatypes.javassist.CtConstructor;
                
                
                
            }
        }
        interface CtField extends _javatypes.javassist.CtMember {
            
            toString(): string;
            getFieldInfo(): _javatypes.javassist.bytecode.FieldInfo;
            getFieldInfo2(): _javatypes.javassist.bytecode.FieldInfo;
            getDeclaringClass(): _javatypes.javassist.CtClass;
            getName(): string;
            setName(arg0: string): void;
            getModifiers(): number;
            setModifiers(arg0: number): void;
            hasAnnotation(arg0: string): boolean;
            getAnnotation(arg0: _javatypes.java.lang.Class<any>): any;
            getAnnotations(): any[];
            getAvailableAnnotations(): any[];
            getSignature(): string;
            getGenericSignature(): string;
            setGenericSignature(arg0: string): void;
            getType(): _javatypes.javassist.CtClass;
            setType(arg0: _javatypes.javassist.CtClass): void;
            getConstantValue(): any;
            getAttribute(arg0: string): number[];
            setAttribute(arg0: string, arg1: number[]): void;
            
        }
        namespace CtField {
            interface static {
                new (arg0: _javatypes.javassist.CtClass, arg1: string, arg2: _javatypes.javassist.CtClass): _javatypes.javassist.CtField;
                new (arg0: _javatypes.javassist.CtField, arg1: _javatypes.javassist.CtClass): _javatypes.javassist.CtField;
                
                
                make(arg0: string, arg1: _javatypes.javassist.CtClass): _javatypes.javassist.CtField;
                
            }
        }
        interface ClassPool extends any {
            childFirstLookup: boolean;
            
            toString(): string;
            importPackage(arg0: string): void;
            clearImportedPackages(): void;
            getImportedPackages(): _javatypes.java.util.Iterator<string>;
            recordInvalidClassName(arg0: string): void;
            lookupCflow(arg0: string): any[];
            getAndRename(arg0: string, arg1: string): _javatypes.javassist.CtClass;
            get(arg0: string): _javatypes.javassist.CtClass;
            getOrNull(arg0: string): _javatypes.javassist.CtClass;
            getCtClass(arg0: string): _javatypes.javassist.CtClass;
            find(arg0: string): _javatypes.java.net.URL;
            get(arg0: string[]): _javatypes.javassist.CtClass[];
            getMethod(arg0: string, arg1: string): _javatypes.javassist.CtMethod;
            makeClass(arg0: _javatypes.java.io.InputStream): _javatypes.javassist.CtClass;
            makeClass(arg0: _javatypes.java.io.InputStream, arg1: boolean): _javatypes.javassist.CtClass;
            makeClass(arg0: _javatypes.javassist.bytecode.ClassFile): _javatypes.javassist.CtClass;
            makeClass(arg0: _javatypes.javassist.bytecode.ClassFile, arg1: boolean): _javatypes.javassist.CtClass;
            makeClassIfNew(arg0: _javatypes.java.io.InputStream): _javatypes.javassist.CtClass;
            makeClass(arg0: string): _javatypes.javassist.CtClass;
            makeClass(arg0: string, arg1: _javatypes.javassist.CtClass): _javatypes.javassist.CtClass;
            makeInterface(arg0: string): _javatypes.javassist.CtClass;
            makeInterface(arg0: string, arg1: _javatypes.javassist.CtClass): _javatypes.javassist.CtClass;
            makeAnnotation(arg0: string): _javatypes.javassist.CtClass;
            appendSystemPath(): _javatypes.javassist.ClassPath;
            insertClassPath(arg0: _javatypes.javassist.ClassPath): _javatypes.javassist.ClassPath;
            appendClassPath(arg0: _javatypes.javassist.ClassPath): _javatypes.javassist.ClassPath;
            insertClassPath(arg0: string): _javatypes.javassist.ClassPath;
            appendClassPath(arg0: string): _javatypes.javassist.ClassPath;
            removeClassPath(arg0: _javatypes.javassist.ClassPath): void;
            appendPathList(arg0: string): void;
            toClass(arg0: _javatypes.javassist.CtClass): _javatypes.java.lang.Class;
            getClassLoader(): _javatypes.java.lang.ClassLoader;
            toClass(arg0: _javatypes.javassist.CtClass, arg1: _javatypes.java.lang.ClassLoader): _javatypes.java.lang.Class;
            toClass(arg0: _javatypes.javassist.CtClass, arg1: _javatypes.java.lang.ClassLoader, arg2: _javatypes.java.security.ProtectionDomain): _javatypes.java.lang.Class;
            toClass(arg0: _javatypes.javassist.CtClass, arg1: _javatypes.java.lang.Class<any>): _javatypes.java.lang.Class<any>;
            toClass(arg0: _javatypes.javassist.CtClass, arg1: _javatypes.java.lang.invoke.MethodHandles$Lookup): _javatypes.java.lang.Class<any>;
            toClass(arg0: _javatypes.javassist.CtClass, arg1: _javatypes.java.lang.Class<any>, arg2: _javatypes.java.lang.ClassLoader, arg3: _javatypes.java.security.ProtectionDomain): _javatypes.java.lang.Class;
            makePackage(arg0: _javatypes.java.lang.ClassLoader, arg1: string): void;
            
        }
        namespace ClassPool {
            interface static {
                new (): _javatypes.javassist.ClassPool;
                new (arg0: boolean): _javatypes.javassist.ClassPool;
                new (arg0: _javatypes.javassist.ClassPool): _javatypes.javassist.ClassPool;
                
                doPruning: boolean;
                releaseUnmodifiedClassFile: boolean;
                cacheOpenedJarFile: boolean;
                
                getDefault(): _javatypes.javassist.ClassPool;
                
            }
        }
        interface CtMethod extends _javatypes.javassist.CtBehavior {
            
            hashCode(): number;
            equals(arg0: any): boolean;
            getLongName(): string;
            getName(): string;
            setName(arg0: string): void;
            getReturnType(): _javatypes.javassist.CtClass;
            isEmpty(): boolean;
            setBody(arg0: _javatypes.javassist.CtMethod, arg1: _javatypes.javassist.ClassMap): void;
            setWrappedBody(arg0: _javatypes.javassist.CtMethod, arg1: _javatypes.javassist.CtMethod$ConstParameter): void;
            
        }
        namespace CtMethod {
            interface static {
                new (arg0: _javatypes.javassist.CtClass, arg1: string, arg2: _javatypes.javassist.CtClass[], arg3: _javatypes.javassist.CtClass): _javatypes.javassist.CtMethod;
                new (arg0: _javatypes.javassist.CtMethod, arg1: _javatypes.javassist.CtClass, arg2: _javatypes.javassist.ClassMap): _javatypes.javassist.CtMethod;
                
                
                make(arg0: string, arg1: _javatypes.javassist.CtClass): _javatypes.javassist.CtMethod;
                make(arg0: _javatypes.javassist.bytecode.MethodInfo, arg1: _javatypes.javassist.CtClass): _javatypes.javassist.CtMethod;
                
            }
        }
        interface CtMember extends any {
            
            toString(): string;
            getDeclaringClass(): _javatypes.javassist.CtClass;
            visibleFrom(arg0: _javatypes.javassist.CtClass): boolean;
            getModifiers(): number;
            setModifiers(arg0: number): void;
            hasAnnotation(arg0: _javatypes.java.lang.Class<any>): boolean;
            hasAnnotation(arg0: string): boolean;
            getAnnotation(arg0: _javatypes.java.lang.Class<any>): any;
            getAnnotations(): any[];
            getAvailableAnnotations(): any[];
            getName(): string;
            getSignature(): string;
            getGenericSignature(): string;
            setGenericSignature(arg0: string): void;
            getAttribute(arg0: string): number[];
            setAttribute(arg0: string, arg1: number[]): void;
            
        }
        namespace CtMember {
            interface static {
                
                
                
            }
        }
        interface CodeConverter extends any {
            
            replaceNew(arg0: _javatypes.javassist.CtClass, arg1: _javatypes.javassist.CtClass, arg2: string): void;
            replaceNew(arg0: _javatypes.javassist.CtClass, arg1: _javatypes.javassist.CtClass): void;
            redirectFieldAccess(arg0: _javatypes.javassist.CtField, arg1: _javatypes.javassist.CtClass, arg2: string): void;
            replaceFieldRead(arg0: _javatypes.javassist.CtField, arg1: _javatypes.javassist.CtClass, arg2: string): void;
            replaceFieldWrite(arg0: _javatypes.javassist.CtField, arg1: _javatypes.javassist.CtClass, arg2: string): void;
            replaceArrayAccess(arg0: _javatypes.javassist.CtClass, arg1: _javatypes.javassist.CodeConverter$ArrayAccessReplacementMethodNames): void;
            redirectMethodCall(arg0: _javatypes.javassist.CtMethod, arg1: _javatypes.javassist.CtMethod): void;
            redirectMethodCall(arg0: string, arg1: _javatypes.javassist.CtMethod): void;
            redirectMethodCallToStatic(arg0: _javatypes.javassist.CtMethod, arg1: _javatypes.javassist.CtMethod): void;
            insertBeforeMethod(arg0: _javatypes.javassist.CtMethod, arg1: _javatypes.javassist.CtMethod): void;
            insertAfterMethod(arg0: _javatypes.javassist.CtMethod, arg1: _javatypes.javassist.CtMethod): void;
            
        }
        namespace CodeConverter {
            interface static {
                new (): _javatypes.javassist.CodeConverter;
                
                
                
            }
        }
        interface ClassMap extends _javatypes.java.util.HashMap<string, string> {
            
            put(arg0: _javatypes.javassist.CtClass, arg1: _javatypes.javassist.CtClass): void;
            put(arg0: string, arg1: string): string;
            putIfNone(arg0: string, arg1: string): void;
            get(arg0: any): string;
            fix(arg0: _javatypes.javassist.CtClass): void;
            fix(arg0: string): void;
            
        }
        namespace ClassMap {
            interface static {
                new (): _javatypes.javassist.ClassMap;
                
                
                toJvmName(arg0: string): string;
                toJavaName(arg0: string): string;
                
            }
        }
        interface ClassPath extends _javatypes.java.lang.Interface {
            
            openClassfile(arg0: string): _javatypes.java.io.InputStream;
            find(arg0: string): _javatypes.java.net.URL;
            
        }
        namespace ClassPath {
            interface static {
                
                
                
            }
        }
        interface CodeConverter$ArrayAccessReplacementMethodNames extends _javatypes.java.lang.Interface {
            
            byteOrBooleanRead(): string;
            byteOrBooleanWrite(): string;
            charRead(): string;
            charWrite(): string;
            doubleRead(): string;
            doubleWrite(): string;
            floatRead(): string;
            floatWrite(): string;
            intRead(): string;
            intWrite(): string;
            longRead(): string;
            longWrite(): string;
            objectRead(): string;
            objectWrite(): string;
            shortRead(): string;
            shortWrite(): string;
            
        }
        namespace CodeConverter$ArrayAccessReplacementMethodNames {
            interface static {
                
                
                
            }
        }
        interface CtMethod$ConstParameter extends any {
            
            
        }
        namespace CtMethod$ConstParameter {
            interface static {
                
                
                integer(arg0: number): _javatypes.javassist.CtMethod$ConstParameter;
                integer(arg0: number): _javatypes.javassist.CtMethod$ConstParameter;
                string(arg0: string): _javatypes.javassist.CtMethod$ConstParameter;
                
            }
        }
    
        namespace util.proxy {
        
            interface ProxyFactory extends any {
                writeDirectory: string;
                
                isUseCache(): boolean;
                setUseCache(arg0: boolean): void;
                isUseWriteReplace(): boolean;
                setUseWriteReplace(arg0: boolean): void;
                setSuperclass(arg0: _javatypes.java.lang.Class<any>): void;
                getSuperclass(): _javatypes.java.lang.Class<any>;
                setInterfaces(arg0: _javatypes.java.lang.Class<any>[]): void;
                getInterfaces(): _javatypes.java.lang.Class<any>[];
                setFilter(arg0: _javatypes.javassist.util.proxy.MethodFilter): void;
                setGenericSignature(arg0: string): void;
                createClass(): _javatypes.java.lang.Class<any>;
                createClass(arg0: _javatypes.javassist.util.proxy.MethodFilter): _javatypes.java.lang.Class<any>;
                createClass(arg0: _javatypes.java.lang.invoke.MethodHandles$Lookup): _javatypes.java.lang.Class<any>;
                createClass(arg0: _javatypes.java.lang.invoke.MethodHandles$Lookup, arg1: _javatypes.javassist.util.proxy.MethodFilter): _javatypes.java.lang.Class<any>;
                getKey(arg0: _javatypes.java.lang.Class<any>, arg1: _javatypes.java.lang.Class<any>[], arg2: number[], arg3: boolean): string;
                create(arg0: _javatypes.java.lang.Class<any>[], arg1: any[], arg2: _javatypes.javassist.util.proxy.MethodHandler): any;
                create(arg0: _javatypes.java.lang.Class<any>[], arg1: any[]): any;
                setHandler(arg0: _javatypes.javassist.util.proxy.MethodHandler): void;
                
            }
            namespace ProxyFactory {
                interface static {
                    new (): _javatypes.javassist.util.proxy.ProxyFactory;
                    
                    onlyPublicMethods: boolean;
                    useCache: boolean;
                    useWriteReplace: boolean;
                    classLoaderProvider: _javatypes.javassist.util.proxy.ProxyFactory$ClassLoaderProvider;
                    nameGenerator: _javatypes.javassist.util.proxy.ProxyFactory$UniqueName;
                    
                    isProxyClass(arg0: _javatypes.java.lang.Class<any>): boolean;
                    getHandler(arg0: _javatypes.javassist.util.proxy.Proxy): _javatypes.javassist.util.proxy.MethodHandler;
                    
                }
            }
            interface ProxyFactory$ClassLoaderProvider extends _javatypes.java.lang.Interface {
                
                get(arg0: _javatypes.javassist.util.proxy.ProxyFactory): _javatypes.java.lang.ClassLoader;
                
            }
            namespace ProxyFactory$ClassLoaderProvider {
                interface static {
                    
                    
                    
                }
            }
            interface MethodFilter extends _javatypes.java.lang.Interface {
                
                isHandled(arg0: _javatypes.java.lang.reflect.Method): boolean;
                
            }
            namespace MethodFilter {
                interface static {
                    
                    
                    
                }
            }
            interface MethodHandler extends _javatypes.java.lang.Interface {
                
                invoke(arg0: any, arg1: _javatypes.java.lang.reflect.Method, arg2: _javatypes.java.lang.reflect.Method, arg3: any[]): any;
                
            }
            namespace MethodHandler {
                interface static {
                    
                    
                    
                }
            }
            interface Proxy extends _javatypes.java.lang.Interface {
                
                setHandler(arg0: _javatypes.javassist.util.proxy.MethodHandler): void;
                
            }
            namespace Proxy {
                interface static {
                    
                    
                    
                }
            }
            interface ProxyFactory$UniqueName extends _javatypes.java.lang.Interface {
                
                get(arg0: string): string;
                
            }
            namespace ProxyFactory$UniqueName {
                interface static {
                    
                    
                    
                }
            }
        }
    
        namespace bytecode {
        
            interface ClassFile extends any {
                
                compact(): void;
                prune(): void;
                getConstPool(): _javatypes.javassist.bytecode.ConstPool;
                isInterface(): boolean;
                isFinal(): boolean;
                isAbstract(): boolean;
                getAccessFlags(): number;
                setAccessFlags(arg0: number): void;
                getInnerAccessFlags(): number;
                getName(): string;
                setName(arg0: string): void;
                getSuperclass(): string;
                getSuperclassId(): number;
                setSuperclass(arg0: string): void;
                renameClass(arg0: string, arg1: string): void;
                renameClass(arg0: _javatypes.java.util.Map<string, string>): void;
                getRefClasses(arg0: _javatypes.java.util.Map<string, string>): void;
                getInterfaces(): string[];
                setInterfaces(arg0: string[]): void;
                addInterface(arg0: string): void;
                getFields(): _javatypes.java.util.List<_javatypes.javassist.bytecode.FieldInfo>;
                addField(arg0: _javatypes.javassist.bytecode.FieldInfo): void;
                addField2(arg0: _javatypes.javassist.bytecode.FieldInfo): void;
                getMethods(): _javatypes.java.util.List<_javatypes.javassist.bytecode.MethodInfo>;
                getMethod(arg0: string): _javatypes.javassist.bytecode.MethodInfo;
                getStaticInitializer(): _javatypes.javassist.bytecode.MethodInfo;
                addMethod(arg0: _javatypes.javassist.bytecode.MethodInfo): void;
                addMethod2(arg0: _javatypes.javassist.bytecode.MethodInfo): void;
                getAttributes(): _javatypes.java.util.List<_javatypes.javassist.bytecode.AttributeInfo>;
                getAttribute(arg0: string): _javatypes.javassist.bytecode.AttributeInfo;
                removeAttribute(arg0: string): _javatypes.javassist.bytecode.AttributeInfo;
                addAttribute(arg0: _javatypes.javassist.bytecode.AttributeInfo): void;
                getSourceFile(): string;
                write(arg0: _javatypes.java.io.DataOutputStream): void;
                getMajorVersion(): number;
                setMajorVersion(arg0: number): void;
                getMinorVersion(): number;
                setMinorVersion(arg0: number): void;
                setVersionToJava5(): void;
                
            }
            namespace ClassFile {
                interface static {
                    new (arg0: _javatypes.java.io.DataInputStream): _javatypes.javassist.bytecode.ClassFile;
                    new (arg0: boolean, arg1: string, arg2: string): _javatypes.javassist.bytecode.ClassFile;
                    
                    readonly JAVA_1: number;
                    readonly JAVA_2: number;
                    readonly JAVA_3: number;
                    readonly JAVA_4: number;
                    readonly JAVA_5: number;
                    readonly JAVA_6: number;
                    readonly JAVA_7: number;
                    readonly JAVA_8: number;
                    readonly JAVA_9: number;
                    readonly JAVA_10: number;
                    readonly JAVA_11: number;
                    readonly MAJOR_VERSION: number;
                    
                    
                }
            }
            interface ConstPool extends any {
                
                getSize(): number;
                getClassName(): string;
                getThisClassInfo(): number;
                getTag(arg0: number): number;
                getClassInfo(arg0: number): string;
                getClassInfoByDescriptor(arg0: number): string;
                getNameAndTypeName(arg0: number): number;
                getNameAndTypeDescriptor(arg0: number): number;
                getMemberClass(arg0: number): number;
                getMemberNameAndType(arg0: number): number;
                getFieldrefClass(arg0: number): number;
                getFieldrefClassName(arg0: number): string;
                getFieldrefNameAndType(arg0: number): number;
                getFieldrefName(arg0: number): string;
                getFieldrefType(arg0: number): string;
                getMethodrefClass(arg0: number): number;
                getMethodrefClassName(arg0: number): string;
                getMethodrefNameAndType(arg0: number): number;
                getMethodrefName(arg0: number): string;
                getMethodrefType(arg0: number): string;
                getInterfaceMethodrefClass(arg0: number): number;
                getInterfaceMethodrefClassName(arg0: number): string;
                getInterfaceMethodrefNameAndType(arg0: number): number;
                getInterfaceMethodrefName(arg0: number): string;
                getInterfaceMethodrefType(arg0: number): string;
                getLdcValue(arg0: number): any;
                getIntegerInfo(arg0: number): number;
                getFloatInfo(arg0: number): number;
                getLongInfo(arg0: number): number;
                getDoubleInfo(arg0: number): number;
                getStringInfo(arg0: number): string;
                getUtf8Info(arg0: number): string;
                getMethodHandleKind(arg0: number): number;
                getMethodHandleIndex(arg0: number): number;
                getMethodTypeInfo(arg0: number): number;
                getInvokeDynamicBootstrap(arg0: number): number;
                getInvokeDynamicNameAndType(arg0: number): number;
                getInvokeDynamicType(arg0: number): string;
                getDynamicBootstrap(arg0: number): number;
                getDynamicNameAndType(arg0: number): number;
                getDynamicType(arg0: number): string;
                getModuleInfo(arg0: number): string;
                getPackageInfo(arg0: number): string;
                isConstructor(arg0: string, arg1: number): number;
                isMember(arg0: string, arg1: string, arg2: number): number;
                eqMember(arg0: string, arg1: string, arg2: number): string;
                copy(arg0: number, arg1: _javatypes.javassist.bytecode.ConstPool, arg2: _javatypes.java.util.Map<string, string>): number;
                addClassInfo(arg0: _javatypes.javassist.CtClass): number;
                addClassInfo(arg0: string): number;
                addNameAndTypeInfo(arg0: string, arg1: string): number;
                addNameAndTypeInfo(arg0: number, arg1: number): number;
                addFieldrefInfo(arg0: number, arg1: string, arg2: string): number;
                addFieldrefInfo(arg0: number, arg1: number): number;
                addMethodrefInfo(arg0: number, arg1: string, arg2: string): number;
                addMethodrefInfo(arg0: number, arg1: number): number;
                addInterfaceMethodrefInfo(arg0: number, arg1: string, arg2: string): number;
                addInterfaceMethodrefInfo(arg0: number, arg1: number): number;
                addStringInfo(arg0: string): number;
                addIntegerInfo(arg0: number): number;
                addFloatInfo(arg0: number): number;
                addLongInfo(arg0: number): number;
                addDoubleInfo(arg0: number): number;
                addUtf8Info(arg0: string): number;
                addMethodHandleInfo(arg0: number, arg1: number): number;
                addMethodTypeInfo(arg0: number): number;
                addInvokeDynamicInfo(arg0: number, arg1: number): number;
                addDynamicInfo(arg0: number, arg1: number): number;
                addModuleInfo(arg0: number): number;
                addPackageInfo(arg0: number): number;
                getClassNames(): _javatypes.java.util.Set<string>;
                renameClass(arg0: string, arg1: string): void;
                renameClass(arg0: _javatypes.java.util.Map<string, string>): void;
                write(arg0: _javatypes.java.io.DataOutputStream): void;
                print(): void;
                print(arg0: _javatypes.java.io.PrintWriter): void;
                
            }
            namespace ConstPool {
                interface static {
                    new (arg0: string): _javatypes.javassist.bytecode.ConstPool;
                    new (arg0: _javatypes.java.io.DataInputStream): _javatypes.javassist.bytecode.ConstPool;
                    
                    readonly CONST_Class: number;
                    readonly CONST_Fieldref: number;
                    readonly CONST_Methodref: number;
                    readonly CONST_InterfaceMethodref: number;
                    readonly CONST_String: number;
                    readonly CONST_Integer: number;
                    readonly CONST_Float: number;
                    readonly CONST_Long: number;
                    readonly CONST_Double: number;
                    readonly CONST_NameAndType: number;
                    readonly CONST_Utf8: number;
                    readonly CONST_MethodHandle: number;
                    readonly CONST_MethodType: number;
                    readonly CONST_Dynamic: number;
                    readonly CONST_DynamicCallSite: number;
                    readonly CONST_InvokeDynamic: number;
                    readonly CONST_Module: number;
                    readonly CONST_Package: number;
                    readonly THIS: _javatypes.javassist.CtClass;
                    readonly REF_getField: number;
                    readonly REF_getStatic: number;
                    readonly REF_putField: number;
                    readonly REF_putStatic: number;
                    readonly REF_invokeVirtual: number;
                    readonly REF_invokeStatic: number;
                    readonly REF_invokeSpecial: number;
                    readonly REF_newInvokeSpecial: number;
                    readonly REF_invokeInterface: number;
                    
                    
                }
            }
            interface MethodInfo extends any {
                
                toString(): string;
                getName(): string;
                setName(arg0: string): void;
                isMethod(): boolean;
                getConstPool(): _javatypes.javassist.bytecode.ConstPool;
                isConstructor(): boolean;
                isStaticInitializer(): boolean;
                getAccessFlags(): number;
                setAccessFlags(arg0: number): void;
                getDescriptor(): string;
                setDescriptor(arg0: string): void;
                getAttributes(): _javatypes.java.util.List<_javatypes.javassist.bytecode.AttributeInfo>;
                getAttribute(arg0: string): _javatypes.javassist.bytecode.AttributeInfo;
                removeAttribute(arg0: string): _javatypes.javassist.bytecode.AttributeInfo;
                addAttribute(arg0: _javatypes.javassist.bytecode.AttributeInfo): void;
                getExceptionsAttribute(): _javatypes.javassist.bytecode.ExceptionsAttribute;
                getCodeAttribute(): _javatypes.javassist.bytecode.CodeAttribute;
                removeExceptionsAttribute(): void;
                setExceptionsAttribute(arg0: _javatypes.javassist.bytecode.ExceptionsAttribute): void;
                removeCodeAttribute(): void;
                setCodeAttribute(arg0: _javatypes.javassist.bytecode.CodeAttribute): void;
                rebuildStackMapIf6(arg0: _javatypes.javassist.ClassPool, arg1: _javatypes.javassist.bytecode.ClassFile): void;
                rebuildStackMap(arg0: _javatypes.javassist.ClassPool): void;
                rebuildStackMapForME(arg0: _javatypes.javassist.ClassPool): void;
                getLineNumber(arg0: number): number;
                setSuperclass(arg0: string): void;
                
            }
            namespace MethodInfo {
                interface static {
                    new (arg0: _javatypes.javassist.bytecode.ConstPool, arg1: string, arg2: string): _javatypes.javassist.bytecode.MethodInfo;
                    new (arg0: _javatypes.javassist.bytecode.ConstPool, arg1: string, arg2: _javatypes.javassist.bytecode.MethodInfo, arg3: _javatypes.java.util.Map<string, string>): _javatypes.javassist.bytecode.MethodInfo;
                    
                    doPreverify: boolean;
                    readonly nameInit: string;
                    readonly nameClinit: string;
                    
                    
                }
            }
            interface ExceptionsAttribute extends _javatypes.javassist.bytecode.AttributeInfo {
                
                copy(arg0: _javatypes.javassist.bytecode.ConstPool, arg1: _javatypes.java.util.Map<string, string>): _javatypes.javassist.bytecode.AttributeInfo;
                getExceptionIndexes(): number[];
                getExceptions(): string[];
                setExceptionIndexes(arg0: number[]): void;
                setExceptions(arg0: string[]): void;
                tableLength(): number;
                getException(arg0: number): number;
                
            }
            namespace ExceptionsAttribute {
                interface static {
                    new (arg0: _javatypes.javassist.bytecode.ConstPool): _javatypes.javassist.bytecode.ExceptionsAttribute;
                    
                    readonly tag: string;
                    
                    
                }
            }
            interface CodeAttribute extends _javatypes.javassist.bytecode.AttributeInfo, _javatypes.javassist.bytecode.Opcode {
                
                copy(arg0: _javatypes.javassist.bytecode.ConstPool, arg1: _javatypes.java.util.Map<string, string>): _javatypes.javassist.bytecode.AttributeInfo;
                length(): number;
                get(): number[];
                set(arg0: number[]): void;
                getDeclaringClass(): string;
                getMaxStack(): number;
                setMaxStack(arg0: number): void;
                computeMaxStack(): number;
                getMaxLocals(): number;
                setMaxLocals(arg0: number): void;
                getCodeLength(): number;
                getCode(): number[];
                iterator(): _javatypes.javassist.bytecode.CodeIterator;
                getExceptionTable(): _javatypes.javassist.bytecode.ExceptionTable;
                getAttributes(): _javatypes.java.util.List<_javatypes.javassist.bytecode.AttributeInfo>;
                getAttribute(arg0: string): _javatypes.javassist.bytecode.AttributeInfo;
                setAttribute(arg0: _javatypes.javassist.bytecode.StackMapTable): void;
                setAttribute(arg0: _javatypes.javassist.bytecode.StackMap): void;
                insertLocalVar(arg0: number, arg1: number): void;
                
            }
            namespace CodeAttribute {
                interface static {
                    new (arg0: _javatypes.javassist.bytecode.ConstPool, arg1: number, arg2: number, arg3: number[], arg4: _javatypes.javassist.bytecode.ExceptionTable): _javatypes.javassist.bytecode.CodeAttribute;
                    
                    readonly tag: string;
                    
                    
                }
            }
            interface AttributeInfo extends any {
                
                getName(): string;
                getConstPool(): _javatypes.javassist.bytecode.ConstPool;
                length(): number;
                get(): number[];
                set(arg0: number[]): void;
                copy(arg0: _javatypes.javassist.bytecode.ConstPool, arg1: _javatypes.java.util.Map<string, string>): _javatypes.javassist.bytecode.AttributeInfo;
                
            }
            namespace AttributeInfo {
                interface static {
                    new (arg0: _javatypes.javassist.bytecode.ConstPool, arg1: string, arg2: number[]): _javatypes.javassist.bytecode.AttributeInfo;
                    
                    
                    
                }
            }
            interface FieldInfo extends any {
                
                toString(): string;
                getConstPool(): _javatypes.javassist.bytecode.ConstPool;
                getName(): string;
                setName(arg0: string): void;
                getAccessFlags(): number;
                setAccessFlags(arg0: number): void;
                getDescriptor(): string;
                setDescriptor(arg0: string): void;
                getConstantValue(): number;
                getAttributes(): _javatypes.java.util.List<_javatypes.javassist.bytecode.AttributeInfo>;
                getAttribute(arg0: string): _javatypes.javassist.bytecode.AttributeInfo;
                removeAttribute(arg0: string): _javatypes.javassist.bytecode.AttributeInfo;
                addAttribute(arg0: _javatypes.javassist.bytecode.AttributeInfo): void;
                
            }
            namespace FieldInfo {
                interface static {
                    new (arg0: _javatypes.javassist.bytecode.ConstPool, arg1: string, arg2: string): _javatypes.javassist.bytecode.FieldInfo;
                    
                    
                    
                }
            }
            interface Opcode extends _javatypes.java.lang.Interface {
                
                
            }
            namespace Opcode {
                interface static {
                    
                    readonly AALOAD: number;
                    readonly AASTORE: number;
                    readonly ACONST_NULL: number;
                    readonly ALOAD: number;
                    readonly ALOAD_0: number;
                    readonly ALOAD_1: number;
                    readonly ALOAD_2: number;
                    readonly ALOAD_3: number;
                    readonly ANEWARRAY: number;
                    readonly ARETURN: number;
                    readonly ARRAYLENGTH: number;
                    readonly ASTORE: number;
                    readonly ASTORE_0: number;
                    readonly ASTORE_1: number;
                    readonly ASTORE_2: number;
                    readonly ASTORE_3: number;
                    readonly ATHROW: number;
                    readonly BALOAD: number;
                    readonly BASTORE: number;
                    readonly BIPUSH: number;
                    readonly CALOAD: number;
                    readonly CASTORE: number;
                    readonly CHECKCAST: number;
                    readonly D2F: number;
                    readonly D2I: number;
                    readonly D2L: number;
                    readonly DADD: number;
                    readonly DALOAD: number;
                    readonly DASTORE: number;
                    readonly DCMPG: number;
                    readonly DCMPL: number;
                    readonly DCONST_0: number;
                    readonly DCONST_1: number;
                    readonly DDIV: number;
                    readonly DLOAD: number;
                    readonly DLOAD_0: number;
                    readonly DLOAD_1: number;
                    readonly DLOAD_2: number;
                    readonly DLOAD_3: number;
                    readonly DMUL: number;
                    readonly DNEG: number;
                    readonly DREM: number;
                    readonly DRETURN: number;
                    readonly DSTORE: number;
                    readonly DSTORE_0: number;
                    readonly DSTORE_1: number;
                    readonly DSTORE_2: number;
                    readonly DSTORE_3: number;
                    readonly DSUB: number;
                    readonly DUP: number;
                    readonly DUP2: number;
                    readonly DUP2_X1: number;
                    readonly DUP2_X2: number;
                    readonly DUP_X1: number;
                    readonly DUP_X2: number;
                    readonly F2D: number;
                    readonly F2I: number;
                    readonly F2L: number;
                    readonly FADD: number;
                    readonly FALOAD: number;
                    readonly FASTORE: number;
                    readonly FCMPG: number;
                    readonly FCMPL: number;
                    readonly FCONST_0: number;
                    readonly FCONST_1: number;
                    readonly FCONST_2: number;
                    readonly FDIV: number;
                    readonly FLOAD: number;
                    readonly FLOAD_0: number;
                    readonly FLOAD_1: number;
                    readonly FLOAD_2: number;
                    readonly FLOAD_3: number;
                    readonly FMUL: number;
                    readonly FNEG: number;
                    readonly FREM: number;
                    readonly FRETURN: number;
                    readonly FSTORE: number;
                    readonly FSTORE_0: number;
                    readonly FSTORE_1: number;
                    readonly FSTORE_2: number;
                    readonly FSTORE_3: number;
                    readonly FSUB: number;
                    readonly GETFIELD: number;
                    readonly GETSTATIC: number;
                    readonly GOTO: number;
                    readonly GOTO_W: number;
                    readonly I2B: number;
                    readonly I2C: number;
                    readonly I2D: number;
                    readonly I2F: number;
                    readonly I2L: number;
                    readonly I2S: number;
                    readonly IADD: number;
                    readonly IALOAD: number;
                    readonly IAND: number;
                    readonly IASTORE: number;
                    readonly ICONST_0: number;
                    readonly ICONST_1: number;
                    readonly ICONST_2: number;
                    readonly ICONST_3: number;
                    readonly ICONST_4: number;
                    readonly ICONST_5: number;
                    readonly ICONST_M1: number;
                    readonly IDIV: number;
                    readonly IFEQ: number;
                    readonly IFGE: number;
                    readonly IFGT: number;
                    readonly IFLE: number;
                    readonly IFLT: number;
                    readonly IFNE: number;
                    readonly IFNONNULL: number;
                    readonly IFNULL: number;
                    readonly IF_ACMPEQ: number;
                    readonly IF_ACMPNE: number;
                    readonly IF_ICMPEQ: number;
                    readonly IF_ICMPGE: number;
                    readonly IF_ICMPGT: number;
                    readonly IF_ICMPLE: number;
                    readonly IF_ICMPLT: number;
                    readonly IF_ICMPNE: number;
                    readonly IINC: number;
                    readonly ILOAD: number;
                    readonly ILOAD_0: number;
                    readonly ILOAD_1: number;
                    readonly ILOAD_2: number;
                    readonly ILOAD_3: number;
                    readonly IMUL: number;
                    readonly INEG: number;
                    readonly INSTANCEOF: number;
                    readonly INVOKEDYNAMIC: number;
                    readonly INVOKEINTERFACE: number;
                    readonly INVOKESPECIAL: number;
                    readonly INVOKESTATIC: number;
                    readonly INVOKEVIRTUAL: number;
                    readonly IOR: number;
                    readonly IREM: number;
                    readonly IRETURN: number;
                    readonly ISHL: number;
                    readonly ISHR: number;
                    readonly ISTORE: number;
                    readonly ISTORE_0: number;
                    readonly ISTORE_1: number;
                    readonly ISTORE_2: number;
                    readonly ISTORE_3: number;
                    readonly ISUB: number;
                    readonly IUSHR: number;
                    readonly IXOR: number;
                    readonly JSR: number;
                    readonly JSR_W: number;
                    readonly L2D: number;
                    readonly L2F: number;
                    readonly L2I: number;
                    readonly LADD: number;
                    readonly LALOAD: number;
                    readonly LAND: number;
                    readonly LASTORE: number;
                    readonly LCMP: number;
                    readonly LCONST_0: number;
                    readonly LCONST_1: number;
                    readonly LDC: number;
                    readonly LDC2_W: number;
                    readonly LDC_W: number;
                    readonly LDIV: number;
                    readonly LLOAD: number;
                    readonly LLOAD_0: number;
                    readonly LLOAD_1: number;
                    readonly LLOAD_2: number;
                    readonly LLOAD_3: number;
                    readonly LMUL: number;
                    readonly LNEG: number;
                    readonly LOOKUPSWITCH: number;
                    readonly LOR: number;
                    readonly LREM: number;
                    readonly LRETURN: number;
                    readonly LSHL: number;
                    readonly LSHR: number;
                    readonly LSTORE: number;
                    readonly LSTORE_0: number;
                    readonly LSTORE_1: number;
                    readonly LSTORE_2: number;
                    readonly LSTORE_3: number;
                    readonly LSUB: number;
                    readonly LUSHR: number;
                    readonly LXOR: number;
                    readonly MONITORENTER: number;
                    readonly MONITOREXIT: number;
                    readonly MULTIANEWARRAY: number;
                    readonly NEW: number;
                    readonly NEWARRAY: number;
                    readonly NOP: number;
                    readonly POP: number;
                    readonly POP2: number;
                    readonly PUTFIELD: number;
                    readonly PUTSTATIC: number;
                    readonly RET: number;
                    readonly RETURN: number;
                    readonly SALOAD: number;
                    readonly SASTORE: number;
                    readonly SIPUSH: number;
                    readonly SWAP: number;
                    readonly TABLESWITCH: number;
                    readonly WIDE: number;
                    readonly T_BOOLEAN: number;
                    readonly T_CHAR: number;
                    readonly T_FLOAT: number;
                    readonly T_DOUBLE: number;
                    readonly T_BYTE: number;
                    readonly T_SHORT: number;
                    readonly T_INT: number;
                    readonly T_LONG: number;
                    readonly STACK_GROW: number[];
                    
                    
                }
            }
            interface CodeIterator extends any, _javatypes.javassist.bytecode.Opcode {
                
                begin(): void;
                move(arg0: number): void;
                setMark(arg0: number): void;
                setMark2(arg0: number): void;
                getMark(): number;
                getMark2(): number;
                get(): _javatypes.javassist.bytecode.CodeAttribute;
                getCodeLength(): number;
                byteAt(arg0: number): number;
                signedByteAt(arg0: number): number;
                writeByte(arg0: number, arg1: number): void;
                u16bitAt(arg0: number): number;
                s16bitAt(arg0: number): number;
                write16bit(arg0: number, arg1: number): void;
                s32bitAt(arg0: number): number;
                write32bit(arg0: number, arg1: number): void;
                write(arg0: number[], arg1: number): void;
                hasNext(): boolean;
                next(): number;
                lookAhead(): number;
                skipConstructor(): number;
                skipSuperConstructor(): number;
                skipThisConstructor(): number;
                insert(arg0: number[]): number;
                insert(arg0: number, arg1: number[]): void;
                insertAt(arg0: number, arg1: number[]): number;
                insertEx(arg0: number[]): number;
                insertEx(arg0: number, arg1: number[]): void;
                insertExAt(arg0: number, arg1: number[]): number;
                insertGap(arg0: number): number;
                insertGap(arg0: number, arg1: number): number;
                insertExGap(arg0: number): number;
                insertExGap(arg0: number, arg1: number): number;
                insertGapAt(arg0: number, arg1: number, arg2: boolean): _javatypes.javassist.bytecode.CodeIterator$Gap;
                insert(arg0: _javatypes.javassist.bytecode.ExceptionTable, arg1: number): void;
                append(arg0: number[]): number;
                appendGap(arg0: number): void;
                append(arg0: _javatypes.javassist.bytecode.ExceptionTable, arg1: number): void;
                
            }
            namespace CodeIterator {
                interface static {
                    
                    
                    
                }
            }
            interface ExceptionTable extends any, _javatypes.java.lang.Cloneable {
                
                clone(): any;
                size(): number;
                startPc(arg0: number): number;
                setStartPc(arg0: number, arg1: number): void;
                endPc(arg0: number): number;
                setEndPc(arg0: number, arg1: number): void;
                handlerPc(arg0: number): number;
                setHandlerPc(arg0: number, arg1: number): void;
                catchType(arg0: number): number;
                setCatchType(arg0: number, arg1: number): void;
                add(arg0: number, arg1: _javatypes.javassist.bytecode.ExceptionTable, arg2: number): void;
                add(arg0: number, arg1: number, arg2: number, arg3: number, arg4: number): void;
                add(arg0: number, arg1: number, arg2: number, arg3: number): void;
                remove(arg0: number): void;
                copy(arg0: _javatypes.javassist.bytecode.ConstPool, arg1: _javatypes.java.util.Map<string, string>): _javatypes.javassist.bytecode.ExceptionTable;
                
            }
            namespace ExceptionTable {
                interface static {
                    new (arg0: _javatypes.javassist.bytecode.ConstPool): _javatypes.javassist.bytecode.ExceptionTable;
                    
                    
                    
                }
            }
            interface StackMapTable extends _javatypes.javassist.bytecode.AttributeInfo {
                
                copy(arg0: _javatypes.javassist.bytecode.ConstPool, arg1: _javatypes.java.util.Map<string, string>): _javatypes.javassist.bytecode.AttributeInfo;
                insertLocal(arg0: number, arg1: number, arg2: number): void;
                println(arg0: _javatypes.java.io.PrintWriter): void;
                println(arg0: _javatypes.java.io.PrintStream): void;
                removeNew(arg0: number): void;
                
            }
            namespace StackMapTable {
                interface static {
                    
                    readonly tag: string;
                    readonly TOP: number;
                    readonly INTEGER: number;
                    readonly FLOAT: number;
                    readonly DOUBLE: number;
                    readonly LONG: number;
                    readonly NULL: number;
                    readonly THIS: number;
                    readonly OBJECT: number;
                    readonly UNINIT: number;
                    
                    typeTagOf(arg0: number): number;
                    
                }
            }
            interface StackMap extends _javatypes.javassist.bytecode.AttributeInfo {
                
                numOfEntries(): number;
                copy(arg0: _javatypes.javassist.bytecode.ConstPool, arg1: _javatypes.java.util.Map<string, string>): _javatypes.javassist.bytecode.AttributeInfo;
                insertLocal(arg0: number, arg1: number, arg2: number): void;
                removeNew(arg0: number): void;
                print(arg0: _javatypes.java.io.PrintWriter): void;
                
            }
            namespace StackMap {
                interface static {
                    
                    readonly tag: string;
                    readonly TOP: number;
                    readonly INTEGER: number;
                    readonly FLOAT: number;
                    readonly DOUBLE: number;
                    readonly LONG: number;
                    readonly NULL: number;
                    readonly THIS: number;
                    readonly OBJECT: number;
                    readonly UNINIT: number;
                    
                    
                }
            }
            interface CodeIterator$Gap extends any {
                position: number;
                length: number;
                
                
            }
            namespace CodeIterator$Gap {
                interface static {
                    new (): _javatypes.javassist.bytecode.CodeIterator$Gap;
                    
                    
                    
                }
            }
        }
    
        namespace expr {
        
            interface ExprEditor extends any {
                
                doit(arg0: _javatypes.javassist.CtClass, arg1: _javatypes.javassist.bytecode.MethodInfo): boolean;
                edit(arg0: _javatypes.javassist.expr.NewExpr): void;
                edit(arg0: _javatypes.javassist.expr.NewArray): void;
                edit(arg0: _javatypes.javassist.expr.MethodCall): void;
                edit(arg0: _javatypes.javassist.expr.ConstructorCall): void;
                edit(arg0: _javatypes.javassist.expr.FieldAccess): void;
                edit(arg0: _javatypes.javassist.expr.Instanceof): void;
                edit(arg0: _javatypes.javassist.expr.Cast): void;
                edit(arg0: _javatypes.javassist.expr.Handler): void;
                
            }
            namespace ExprEditor {
                interface static {
                    new (): _javatypes.javassist.expr.ExprEditor;
                    
                    
                    
                }
            }
            interface Handler extends _javatypes.javassist.expr.Expr {
                
                where(): _javatypes.javassist.CtBehavior;
                getLineNumber(): number;
                getFileName(): string;
                mayThrow(): _javatypes.javassist.CtClass[];
                getType(): _javatypes.javassist.CtClass;
                isFinally(): boolean;
                replace(arg0: string): void;
                insertBefore(arg0: string): void;
                
            }
            namespace Handler {
                interface static {
                    
                    
                    
                }
            }
            interface NewExpr extends _javatypes.javassist.expr.Expr {
                
                where(): _javatypes.javassist.CtBehavior;
                getLineNumber(): number;
                getFileName(): string;
                getClassName(): string;
                getSignature(): string;
                getConstructor(): _javatypes.javassist.CtConstructor;
                mayThrow(): _javatypes.javassist.CtClass[];
                replace(arg0: string): void;
                
            }
            namespace NewExpr {
                interface static {
                    
                    
                    
                }
            }
            interface ConstructorCall extends _javatypes.javassist.expr.MethodCall {
                
                getMethodName(): string;
                getMethod(): _javatypes.javassist.CtMethod;
                getConstructor(): _javatypes.javassist.CtConstructor;
                isSuper(): boolean;
                
            }
            namespace ConstructorCall {
                interface static {
                    
                    
                    
                }
            }
            interface Instanceof extends _javatypes.javassist.expr.Expr {
                
                where(): _javatypes.javassist.CtBehavior;
                getLineNumber(): number;
                getFileName(): string;
                getType(): _javatypes.javassist.CtClass;
                mayThrow(): _javatypes.javassist.CtClass[];
                replace(arg0: string): void;
                
            }
            namespace Instanceof {
                interface static {
                    
                    
                    
                }
            }
            interface MethodCall extends _javatypes.javassist.expr.Expr {
                
                where(): _javatypes.javassist.CtBehavior;
                getLineNumber(): number;
                getFileName(): string;
                getClassName(): string;
                getMethodName(): string;
                getMethod(): _javatypes.javassist.CtMethod;
                getSignature(): string;
                mayThrow(): _javatypes.javassist.CtClass[];
                isSuper(): boolean;
                replace(arg0: string): void;
                
            }
            namespace MethodCall {
                interface static {
                    
                    
                    
                }
            }
            interface Cast extends _javatypes.javassist.expr.Expr {
                
                where(): _javatypes.javassist.CtBehavior;
                getLineNumber(): number;
                getFileName(): string;
                getType(): _javatypes.javassist.CtClass;
                mayThrow(): _javatypes.javassist.CtClass[];
                replace(arg0: string): void;
                
            }
            namespace Cast {
                interface static {
                    
                    
                    
                }
            }
            interface NewArray extends _javatypes.javassist.expr.Expr {
                
                where(): _javatypes.javassist.CtBehavior;
                getLineNumber(): number;
                getFileName(): string;
                mayThrow(): _javatypes.javassist.CtClass[];
                getComponentType(): _javatypes.javassist.CtClass;
                getDimension(): number;
                getCreatedDimensions(): number;
                replace(arg0: string): void;
                
            }
            namespace NewArray {
                interface static {
                    
                    
                    
                }
            }
            interface FieldAccess extends _javatypes.javassist.expr.Expr {
                
                where(): _javatypes.javassist.CtBehavior;
                getLineNumber(): number;
                getFileName(): string;
                isStatic(): boolean;
                isReader(): boolean;
                isWriter(): boolean;
                getClassName(): string;
                getFieldName(): string;
                getField(): _javatypes.javassist.CtField;
                mayThrow(): _javatypes.javassist.CtClass[];
                getSignature(): string;
                replace(arg0: string): void;
                
            }
            namespace FieldAccess {
                interface static {
                    
                    
                    
                }
            }
            interface Expr extends any, _javatypes.javassist.bytecode.Opcode {
                
                getEnclosingClass(): _javatypes.javassist.CtClass;
                where(): _javatypes.javassist.CtBehavior;
                mayThrow(): _javatypes.javassist.CtClass[];
                indexOfBytecode(): number;
                getLineNumber(): number;
                getFileName(): string;
                replace(arg0: string): void;
                replace(arg0: string, arg1: _javatypes.javassist.expr.ExprEditor): void;
                
            }
            namespace Expr {
                interface static {
                    
                    
                    
                }
            }
        }
    
        namespace compiler {
        
            interface AccessorMaker extends any {
                
                getConstructor(arg0: _javatypes.javassist.CtClass, arg1: string, arg2: _javatypes.javassist.bytecode.MethodInfo): string;
                getMethodAccessor(arg0: string, arg1: string, arg2: string, arg3: _javatypes.javassist.bytecode.MethodInfo): string;
                getFieldGetter(arg0: _javatypes.javassist.bytecode.FieldInfo, arg1: boolean): _javatypes.javassist.bytecode.MethodInfo;
                getFieldSetter(arg0: _javatypes.javassist.bytecode.FieldInfo, arg1: boolean): _javatypes.javassist.bytecode.MethodInfo;
                
            }
            namespace AccessorMaker {
                interface static {
                    new (arg0: _javatypes.javassist.CtClass): _javatypes.javassist.compiler.AccessorMaker;
                    
                    
                    
                }
            }
        }
    }
}

declare namespace Java {
    export function type(className: "xyz.wagyourtail.StringHashTrie"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.StringHashTrie> & _javatypes.xyz.wagyourtail.StringHashTrie.static
    export function type(className: "xyz.wagyourtail.Pair"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.Pair> & _javatypes.xyz.wagyourtail.Pair.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.MethodWrapper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper> & _javatypes.xyz.wagyourtail.jsmacros.core.MethodWrapper.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.Core"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.Core> & _javatypes.xyz.wagyourtail.jsmacros.core.Core.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.language.EventContainer"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.language.EventContainer> & _javatypes.xyz.wagyourtail.jsmacros.core.language.EventContainer.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.language.BaseScriptContext"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.language.BaseScriptContext> & _javatypes.xyz.wagyourtail.jsmacros.core.language.BaseScriptContext.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.language.BaseScriptContext.SleepRunnable"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.language.BaseScriptContext.SleepRunnable> & _javatypes.xyz.wagyourtail.jsmacros.core.language.BaseScriptContext.SleepRunnable.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.language.BaseWrappedException"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.language.BaseWrappedException> & _javatypes.xyz.wagyourtail.jsmacros.core.language.BaseWrappedException.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.language.BaseLanguage"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.language.BaseLanguage> & _javatypes.xyz.wagyourtail.jsmacros.core.language.BaseLanguage.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.language.BaseWrappedException.SourceLocation"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.language.BaseWrappedException.SourceLocation> & _javatypes.xyz.wagyourtail.jsmacros.core.language.BaseWrappedException.SourceLocation.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.helpers.BaseHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper> & _javatypes.xyz.wagyourtail.jsmacros.core.helpers.BaseHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.library.BaseLibrary"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.library.BaseLibrary> & _javatypes.xyz.wagyourtail.jsmacros.core.library.BaseLibrary.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.library.LibraryRegistry"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.library.LibraryRegistry> & _javatypes.xyz.wagyourtail.jsmacros.core.library.LibraryRegistry.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.library.Library"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.library.Library> & _javatypes.xyz.wagyourtail.jsmacros.core.library.Library.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.library.PerLanguageLibrary"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.library.PerLanguageLibrary> & _javatypes.xyz.wagyourtail.jsmacros.core.library.PerLanguageLibrary.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.library.impl.FJsMacros.EventAndContext"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.FJsMacros.EventAndContext> & _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.FJsMacros.EventAndContext.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.library.impl.classes.HTTPRequest"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.HTTPRequest> & _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.HTTPRequest.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.library.impl.classes.HTTPRequest.Response"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.HTTPRequest.Response> & _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.HTTPRequest.Response.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.library.impl.classes.Websocket"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.Websocket> & _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.Websocket.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.library.impl.classes.FileHandler"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.FileHandler> & _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.FileHandler.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.library.impl.classes.ProxyBuilder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ProxyBuilder> & _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ProxyBuilder.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder> & _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.library.impl.classes.LibraryBuilder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.LibraryBuilder> & _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.LibraryBuilder.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.library.impl.classes.Websocket.Disconnected"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.Websocket.Disconnected> & _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.Websocket.Disconnected.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder.FieldBuilder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder.FieldBuilder> & _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder.FieldBuilder.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder.MethodBuilder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder.MethodBuilder> & _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder.MethodBuilder.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder.ConstructorBuilder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder.ConstructorBuilder> & _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder.ConstructorBuilder.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder.AnnotationBuilder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder.AnnotationBuilder> & _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder.AnnotationBuilder.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.library.impl.classes.ProxyBuilder.MethodSigParts"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ProxyBuilder.MethodSigParts> & _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ProxyBuilder.MethodSigParts.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.library.impl.classes.ProxyBuilder.ProxyReference"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ProxyBuilder.ProxyReference> & _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ProxyBuilder.ProxyReference.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder.AnnotationBuilder.AnnotationArrayBuilder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder.AnnotationBuilder.AnnotationArrayBuilder> & _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder.AnnotationBuilder.AnnotationArrayBuilder.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder.BodyBuilder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder.BodyBuilder> & _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder.BodyBuilder.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder.FieldBuilder.FieldInitializerBuilder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder.FieldBuilder.FieldInitializerBuilder> & _javatypes.xyz.wagyourtail.jsmacros.core.library.impl.classes.ClassBuilder.FieldBuilder.FieldInitializerBuilder.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.classes.Mappings"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.classes.Mappings> & _javatypes.xyz.wagyourtail.jsmacros.core.classes.Mappings.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.classes.WrappedClassInstance"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.classes.WrappedClassInstance> & _javatypes.xyz.wagyourtail.jsmacros.core.classes.WrappedClassInstance.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.classes.Mappings.ClassData"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.classes.Mappings.ClassData> & _javatypes.xyz.wagyourtail.jsmacros.core.classes.Mappings.ClassData.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.classes.Mappings.MappedClass"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.classes.Mappings.MappedClass> & _javatypes.xyz.wagyourtail.jsmacros.core.classes.Mappings.MappedClass.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.classes.Mappings.MethodData"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.classes.Mappings.MethodData> & _javatypes.xyz.wagyourtail.jsmacros.core.classes.Mappings.MethodData.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.config.BaseProfile"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.config.BaseProfile> & _javatypes.xyz.wagyourtail.jsmacros.core.config.BaseProfile.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.config.ConfigManager"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.config.ConfigManager> & _javatypes.xyz.wagyourtail.jsmacros.core.config.ConfigManager.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.config.ScriptTrigger"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger> & _javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.config.ScriptTrigger.TriggerType"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger.TriggerType> & _javatypes.xyz.wagyourtail.jsmacros.core.config.ScriptTrigger.TriggerType.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.service.ServiceManager"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.service.ServiceManager> & _javatypes.xyz.wagyourtail.jsmacros.core.service.ServiceManager.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.service.ServiceTrigger"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.service.ServiceTrigger> & _javatypes.xyz.wagyourtail.jsmacros.core.service.ServiceTrigger.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.service.ServiceManager.ServiceStatus"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.service.ServiceManager.ServiceStatus> & _javatypes.xyz.wagyourtail.jsmacros.core.service.ServiceManager.ServiceStatus.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.service.EventService"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.service.EventService> & _javatypes.xyz.wagyourtail.jsmacros.core.service.EventService.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.event.IEventListener"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.event.IEventListener> & _javatypes.xyz.wagyourtail.jsmacros.core.event.IEventListener.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.event.BaseEventRegistry"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.event.BaseEventRegistry> & _javatypes.xyz.wagyourtail.jsmacros.core.event.BaseEventRegistry.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.event.impl.EventCustom"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.event.impl.EventCustom> & _javatypes.xyz.wagyourtail.jsmacros.core.event.impl.EventCustom.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.extensions.ExtensionLoader"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.extensions.ExtensionLoader> & _javatypes.xyz.wagyourtail.jsmacros.core.extensions.ExtensionLoader.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.extensions.Extension"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.extensions.Extension> & _javatypes.xyz.wagyourtail.jsmacros.core.extensions.Extension.static
    export function type(className: "xyz.wagyourtail.jsmacros.core.extensions.Extension.ExtMatch"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.core.extensions.Extension.ExtMatch> & _javatypes.xyz.wagyourtail.jsmacros.core.extensions.Extension.ExtMatch.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.CommandContextHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CommandContextHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CommandContextHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.BlockDataHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockDataHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockDataHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EntityHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemStackHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.BossBarHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BossBarHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BossBarHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.PlayerListEntryHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PlayerListEntryHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PlayerListEntryHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PacketByteBufferHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.StatusEffectHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.StatusEffectHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.StatusEffectHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockPosHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClientPlayerEntityHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.StatsHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.StatsHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.StatsHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.ServerInfoHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ServerInfoHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ServerInfoHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.ModContainerHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ModContainerHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ModContainerHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.BlockHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.ItemHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.CommandNodeHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CommandNodeHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CommandNodeHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.PlayerEntityHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PlayerEntityHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PlayerEntityHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.ChunkHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ChunkHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ChunkHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.BlockStateHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockStateHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.BlockStateHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.ScoreboardsHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ScoreboardsHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ScoreboardsHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.ChatHudLineHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ChatHudLineHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ChatHudLineHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.FormattingHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.FormattingHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.FormattingHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.StyleHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.StyleHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.StyleHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.SuggestionsBuilderHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SuggestionsBuilderHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SuggestionsBuilderHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.EnchantmentHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EnchantmentHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.EnchantmentHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.FluidStateHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.FluidStateHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.FluidStateHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.StateHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.StateHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.StateHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.UniversalBlockStateHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.UniversalBlockStateHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.UniversalBlockStateHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.ScoreboardObjectiveHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ScoreboardObjectiveHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ScoreboardObjectiveHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.TeamHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TeamHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TeamHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.CreativeItemStackHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CreativeItemStackHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CreativeItemStackHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper.SkinOptionsHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper.SkinOptionsHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper.SkinOptionsHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper.VideoOptionsHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper.VideoOptionsHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper.VideoOptionsHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper.MusicOptionsHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper.MusicOptionsHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper.MusicOptionsHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper.ControlOptionsHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper.ControlOptionsHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper.ControlOptionsHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper.ChatOptionsHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper.ChatOptionsHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper.ChatOptionsHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper.AccessibilityOptionsHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper.AccessibilityOptionsHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.OptionsHelper.AccessibilityOptionsHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.FoodComponentHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.FoodComponentHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.FoodComponentHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.LivingEntityHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LivingEntityHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LivingEntityHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.PlayerAbilitiesHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PlayerAbilitiesHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.PlayerAbilitiesHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper.NBTCompoundHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper.NBTCompoundHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper.NBTCompoundHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.DirectionHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.DirectionHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.DirectionHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.VillagerEntityHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.VillagerEntityHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.VillagerEntityHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.MerchantEntityHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.MerchantEntityHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.MerchantEntityHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.ItemEntityHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemEntityHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ItemEntityHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementManagerHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementManagerHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementManagerHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.TradeOfferHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TradeOfferHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TradeOfferHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementProgressHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementProgressHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AdvancementProgressHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper.NBTNumberHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper.NBTNumberHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper.NBTNumberHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper.NBTListHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper.NBTListHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.NBTElementHelper.NBTListHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.ClickableWidgetHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClickableWidgetHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ClickableWidgetHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.LockButtonWidgetHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LockButtonWidgetHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LockButtonWidgetHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper.ButtonBuilder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper.ButtonBuilder> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper.ButtonBuilder.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper.CheckBoxBuilder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper.CheckBoxBuilder> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CheckBoxWidgetHelper.CheckBoxBuilder.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper.CyclicButtonBuilder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper.CyclicButtonBuilder> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.CyclingButtonWidgetHelper.CyclicButtonBuilder.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.LockButtonWidgetHelper.LockButtonBuilder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LockButtonWidgetHelper.LockButtonBuilder> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.LockButtonWidgetHelper.LockButtonBuilder.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper.SliderBuilder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper.SliderBuilder> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.SliderWidgetHelper.SliderBuilder.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper.TextFieldBuilder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper.TextFieldBuilder> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.TextFieldWidgetHelper.TextFieldBuilder.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper.TexturedButtonBuilder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper.TexturedButtonBuilder> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.ButtonWidgetHelper.TexturedButtonBuilder.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.AbstractWidgetBuilder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AbstractWidgetBuilder> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.AbstractWidgetBuilder.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.helpers.entity.specialized.projectile.FishingBobberEntityHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.entity.specialized.projectile.FishingBobberEntityHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.helpers.entity.specialized.projectile.FishingBobberEntityHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.classes.Inventory"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Inventory> & _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Inventory.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.classes.TextBuilder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.TextBuilder> & _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.TextBuilder.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput> & _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.PlayerInput.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.classes.RegistryHelper"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.RegistryHelper> & _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.RegistryHelper.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.classes.ScriptScreen"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.ScriptScreen> & _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.ScriptScreen.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.classes.CustomImage"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage> & _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CustomImage.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.classes.Draw2D"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D> & _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw2D.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.classes.Draw3D"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D> & _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder> & _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandBuilder.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.classes.CommandManager"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandManager> & _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.CommandManager.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.classes.ChatHistoryManager"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.ChatHistoryManager> & _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.ChatHistoryManager.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.classes.Draw3D.Box"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D.Box> & _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D.Box.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.classes.Draw3D.Line"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D.Line> & _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D.Line.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.classes.Draw3D.Surface"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D.Surface> & _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D.Surface.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.classes.Draw3D.Box.Builder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D.Box.Builder> & _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D.Box.Builder.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.classes.Draw3D.Line.Builder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D.Line.Builder> & _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D.Line.Builder.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.classes.Draw3D.Surface.Builder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D.Surface.Builder> & _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.Draw3D.Surface.Builder.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.classes.VillagerInventory"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.VillagerInventory> & _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.VillagerInventory.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder> & _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScannerBuilder.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScanner"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScanner> & _javatypes.xyz.wagyourtail.jsmacros.client.api.classes.worldscanner.WorldScanner.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen> & _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IScreen.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IDraw2D"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IDraw2D> & _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedinterfaces.IDraw2D.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon.Pos3D"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon.Pos3D> & _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon.Pos3D.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon.Vec3D"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon.Vec3D> & _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon.Vec3D.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon.Vec2D"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon.Vec2D> & _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon.Vec2D.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon.Pos2D"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon.Pos2D> & _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.PositionCommon.Pos2D.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Text"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Text> & _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Text.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Rect"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Rect> & _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Rect.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Line"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Line> & _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Line.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Item"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Item> & _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Item.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Image"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Image> & _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Image.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Draw2DElement"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Draw2DElement> & _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Draw2DElement.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.RenderElement"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.RenderElement> & _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.RenderElement.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Alignable"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Alignable> & _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Alignable.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Item.Builder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Item.Builder> & _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Item.Builder.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Image.Builder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Image.Builder> & _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Image.Builder.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Rect.Builder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Rect.Builder> & _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Rect.Builder.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Line.Builder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Line.Builder> & _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Line.Builder.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Text.Builder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Text.Builder> & _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Text.Builder.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Draw2DElement.Builder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Draw2DElement.Builder> & _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.Draw2DElement.Builder.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.RenderElementBuilder"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.RenderElementBuilder> & _javatypes.xyz.wagyourtail.jsmacros.client.api.sharedclasses.RenderCommon.RenderElementBuilder.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.gui.editor.SelectCursor"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.gui.editor.SelectCursor> & _javatypes.xyz.wagyourtail.jsmacros.client.gui.editor.SelectCursor.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.gui.editor.History"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.gui.editor.History> & _javatypes.xyz.wagyourtail.jsmacros.client.gui.editor.History.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.gui.editor.highlighting.AutoCompleteSuggestion"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.gui.editor.highlighting.AutoCompleteSuggestion> & _javatypes.xyz.wagyourtail.jsmacros.client.gui.editor.highlighting.AutoCompleteSuggestion.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.gui.editor.highlighting.AbstractRenderCodeCompiler"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.gui.editor.highlighting.AbstractRenderCodeCompiler> & _javatypes.xyz.wagyourtail.jsmacros.client.gui.editor.highlighting.AbstractRenderCodeCompiler.static
    export function type(className: "xyz.wagyourtail.jsmacros.client.gui.screens.EditorScreen"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.jsmacros.client.gui.screens.EditorScreen> & _javatypes.xyz.wagyourtail.jsmacros.client.gui.screens.EditorScreen.static
    export function type(className: "xyz.wagyourtail.wagyourgui.BaseScreen"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.wagyourgui.BaseScreen> & _javatypes.xyz.wagyourtail.wagyourgui.BaseScreen.static
    export function type(className: "xyz.wagyourtail.wagyourgui.elements.Slider"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.wagyourgui.elements.Slider> & _javatypes.xyz.wagyourtail.wagyourgui.elements.Slider.static
    export function type(className: "xyz.wagyourtail.wagyourgui.elements.CheckBox"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.wagyourgui.elements.CheckBox> & _javatypes.xyz.wagyourtail.wagyourgui.elements.CheckBox.static
    export function type(className: "xyz.wagyourtail.wagyourgui.elements.Scrollbar"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.wagyourgui.elements.Scrollbar> & _javatypes.xyz.wagyourtail.wagyourgui.elements.Scrollbar.static
    export function type(className: "xyz.wagyourtail.wagyourgui.overlays.IOverlayParent"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.wagyourgui.overlays.IOverlayParent> & _javatypes.xyz.wagyourtail.wagyourgui.overlays.IOverlayParent.static
    export function type(className: "xyz.wagyourtail.wagyourgui.overlays.OverlayContainer"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.wagyourgui.overlays.OverlayContainer> & _javatypes.xyz.wagyourtail.wagyourgui.overlays.OverlayContainer.static
    export function type(className: "xyz.wagyourtail.wagyourgui.containers.IContainerParent"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.wagyourgui.containers.IContainerParent> & _javatypes.xyz.wagyourtail.wagyourgui.containers.IContainerParent.static
    export function type(className: "xyz.wagyourtail.wagyourgui.containers.MultiElementContainer"): _javatypes.java.lang.Class<_javatypes.xyz.wagyourtail.wagyourgui.containers.MultiElementContainer> & _javatypes.xyz.wagyourtail.wagyourgui.containers.MultiElementContainer.static
    export function type(className: "com.mojang.brigadier.Command"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.Command> & _javatypes.com.mojang.brigadier.Command.static
    export function type(className: "com.mojang.brigadier.RedirectModifier"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.RedirectModifier> & _javatypes.com.mojang.brigadier.RedirectModifier.static
    export function type(className: "com.mojang.brigadier.AmbiguityConsumer"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.AmbiguityConsumer> & _javatypes.com.mojang.brigadier.AmbiguityConsumer.static
    export function type(className: "com.mojang.brigadier.StringReader"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.StringReader> & _javatypes.com.mojang.brigadier.StringReader.static
    export function type(className: "com.mojang.brigadier.CommandDispatcher"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.CommandDispatcher> & _javatypes.com.mojang.brigadier.CommandDispatcher.static
    export function type(className: "com.mojang.brigadier.ImmutableStringReader"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.ImmutableStringReader> & _javatypes.com.mojang.brigadier.ImmutableStringReader.static
    export function type(className: "com.mojang.brigadier.Message"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.Message> & _javatypes.com.mojang.brigadier.Message.static
    export function type(className: "com.mojang.brigadier.ResultConsumer"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.ResultConsumer> & _javatypes.com.mojang.brigadier.ResultConsumer.static
    export function type(className: "com.mojang.brigadier.ParseResults"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.ParseResults> & _javatypes.com.mojang.brigadier.ParseResults.static
    export function type(className: "com.mojang.brigadier.SingleRedirectModifier"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.SingleRedirectModifier> & _javatypes.com.mojang.brigadier.SingleRedirectModifier.static
    export function type(className: "com.mojang.brigadier.context.StringRange"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.context.StringRange> & _javatypes.com.mojang.brigadier.context.StringRange.static
    export function type(className: "com.mojang.brigadier.context.CommandContext"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.context.CommandContext> & _javatypes.com.mojang.brigadier.context.CommandContext.static
    export function type(className: "com.mojang.brigadier.context.CommandContextBuilder"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.context.CommandContextBuilder> & _javatypes.com.mojang.brigadier.context.CommandContextBuilder.static
    export function type(className: "com.mojang.brigadier.context.ParsedArgument"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.context.ParsedArgument> & _javatypes.com.mojang.brigadier.context.ParsedArgument.static
    export function type(className: "com.mojang.brigadier.context.ParsedCommandNode"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.context.ParsedCommandNode> & _javatypes.com.mojang.brigadier.context.ParsedCommandNode.static
    export function type(className: "com.mojang.brigadier.context.SuggestionContext"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.context.SuggestionContext> & _javatypes.com.mojang.brigadier.context.SuggestionContext.static
    export function type(className: "com.mojang.brigadier.tree.CommandNode"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.tree.CommandNode> & _javatypes.com.mojang.brigadier.tree.CommandNode.static
    export function type(className: "com.mojang.brigadier.tree.LiteralCommandNode"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.tree.LiteralCommandNode> & _javatypes.com.mojang.brigadier.tree.LiteralCommandNode.static
    export function type(className: "com.mojang.brigadier.tree.RootCommandNode"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.tree.RootCommandNode> & _javatypes.com.mojang.brigadier.tree.RootCommandNode.static
    export function type(className: "com.mojang.brigadier.suggestion.SuggestionsBuilder"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.suggestion.SuggestionsBuilder> & _javatypes.com.mojang.brigadier.suggestion.SuggestionsBuilder.static
    export function type(className: "com.mojang.brigadier.suggestion.Suggestions"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.suggestion.Suggestions> & _javatypes.com.mojang.brigadier.suggestion.Suggestions.static
    export function type(className: "com.mojang.brigadier.suggestion.Suggestion"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.suggestion.Suggestion> & _javatypes.com.mojang.brigadier.suggestion.Suggestion.static
    export function type(className: "com.mojang.brigadier.builder.ArgumentBuilder"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.builder.ArgumentBuilder> & _javatypes.com.mojang.brigadier.builder.ArgumentBuilder.static
    export function type(className: "com.mojang.brigadier.builder.LiteralArgumentBuilder"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.builder.LiteralArgumentBuilder> & _javatypes.com.mojang.brigadier.builder.LiteralArgumentBuilder.static
    export function type(className: "com.mojang.brigadier.exceptions.CommandSyntaxException"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.exceptions.CommandSyntaxException> & _javatypes.com.mojang.brigadier.exceptions.CommandSyntaxException.static
    export function type(className: "com.mojang.brigadier.exceptions.CommandExceptionType"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.exceptions.CommandExceptionType> & _javatypes.com.mojang.brigadier.exceptions.CommandExceptionType.static
    export function type(className: "com.mojang.brigadier.exceptions.BuiltInExceptionProvider"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.exceptions.BuiltInExceptionProvider> & _javatypes.com.mojang.brigadier.exceptions.BuiltInExceptionProvider.static
    export function type(className: "com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType> & _javatypes.com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType.static
    export function type(className: "com.mojang.brigadier.exceptions.DynamicCommandExceptionType"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.exceptions.DynamicCommandExceptionType> & _javatypes.com.mojang.brigadier.exceptions.DynamicCommandExceptionType.static
    export function type(className: "com.mojang.brigadier.exceptions.SimpleCommandExceptionType"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.exceptions.SimpleCommandExceptionType> & _javatypes.com.mojang.brigadier.exceptions.SimpleCommandExceptionType.static
    export function type(className: "com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType.Function"): _javatypes.java.lang.Class<_javatypes.com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType.Function> & _javatypes.com.mojang.brigadier.exceptions.Dynamic2CommandExceptionType.Function.static
    export function type(className: "com.mojang.authlib.GameProfile"): _javatypes.java.lang.Class<_javatypes.com.mojang.authlib.GameProfile> & _javatypes.com.mojang.authlib.GameProfile.static
    export function type(className: "com.mojang.authlib.properties.PropertyMap"): _javatypes.java.lang.Class<_javatypes.com.mojang.authlib.properties.PropertyMap> & _javatypes.com.mojang.authlib.properties.PropertyMap.static
    export function type(className: "com.mojang.authlib.properties.Property"): _javatypes.java.lang.Class<_javatypes.com.mojang.authlib.properties.Property> & _javatypes.com.mojang.authlib.properties.Property.static
    export function type(className: "com.google.gson.JsonObject"): _javatypes.java.lang.Class<_javatypes.com.google.gson.JsonObject> & _javatypes.com.google.gson.JsonObject.static
    export function type(className: "com.google.gson.JsonElement"): _javatypes.java.lang.Class<_javatypes.com.google.gson.JsonElement> & _javatypes.com.google.gson.JsonElement.static
    export function type(className: "com.google.gson.JsonPrimitive"): _javatypes.java.lang.Class<_javatypes.com.google.gson.JsonPrimitive> & _javatypes.com.google.gson.JsonPrimitive.static
    export function type(className: "com.google.gson.JsonArray"): _javatypes.java.lang.Class<_javatypes.com.google.gson.JsonArray> & _javatypes.com.google.gson.JsonArray.static
    export function type(className: "com.google.gson.JsonNull"): _javatypes.java.lang.Class<_javatypes.com.google.gson.JsonNull> & _javatypes.com.google.gson.JsonNull.static
    export function type(className: "com.google.common.collect.ForwardingMultimap"): _javatypes.java.lang.Class<_javatypes.com.google.common.collect.ForwardingMultimap> & _javatypes.com.google.common.collect.ForwardingMultimap.static
    export function type(className: "com.google.common.collect.ForwardingObject"): _javatypes.java.lang.Class<_javatypes.com.google.common.collect.ForwardingObject> & _javatypes.com.google.common.collect.ForwardingObject.static
    export function type(className: "com.google.common.collect.Multimap"): _javatypes.java.lang.Class<_javatypes.com.google.common.collect.Multimap> & _javatypes.com.google.common.collect.Multimap.static
    export function type(className: "com.google.common.collect.Multiset"): _javatypes.java.lang.Class<_javatypes.com.google.common.collect.Multiset> & _javatypes.com.google.common.collect.Multiset.static
    export function type(className: "com.google.common.collect.Multiset.Entry"): _javatypes.java.lang.Class<_javatypes.com.google.common.collect.Multiset.Entry> & _javatypes.com.google.common.collect.Multiset.Entry.static
    export function type(className: "com.neovisionaries.ws.client.WebSocket"): _javatypes.java.lang.Class<_javatypes.com.neovisionaries.ws.client.WebSocket> & _javatypes.com.neovisionaries.ws.client.WebSocket.static
    export function type(className: "com.neovisionaries.ws.client.WebSocketException"): _javatypes.java.lang.Class<_javatypes.com.neovisionaries.ws.client.WebSocketException> & _javatypes.com.neovisionaries.ws.client.WebSocketException.static
    export function type(className: "com.neovisionaries.ws.client.WebSocketFrame"): _javatypes.java.lang.Class<_javatypes.com.neovisionaries.ws.client.WebSocketFrame> & _javatypes.com.neovisionaries.ws.client.WebSocketFrame.static
    export function type(className: "com.neovisionaries.ws.client.WebSocketError"): _javatypes.java.lang.Class<_javatypes.com.neovisionaries.ws.client.WebSocketError> & _javatypes.com.neovisionaries.ws.client.WebSocketError.static
    export function type(className: "com.neovisionaries.ws.client.WebSocketState"): _javatypes.java.lang.Class<_javatypes.com.neovisionaries.ws.client.WebSocketState> & _javatypes.com.neovisionaries.ws.client.WebSocketState.static
    export function type(className: "com.neovisionaries.ws.client.WebSocketExtension"): _javatypes.java.lang.Class<_javatypes.com.neovisionaries.ws.client.WebSocketExtension> & _javatypes.com.neovisionaries.ws.client.WebSocketExtension.static
    export function type(className: "com.neovisionaries.ws.client.PayloadGenerator"): _javatypes.java.lang.Class<_javatypes.com.neovisionaries.ws.client.PayloadGenerator> & _javatypes.com.neovisionaries.ws.client.PayloadGenerator.static
    export function type(className: "com.neovisionaries.ws.client.WebSocketListener"): _javatypes.java.lang.Class<_javatypes.com.neovisionaries.ws.client.WebSocketListener> & _javatypes.com.neovisionaries.ws.client.WebSocketListener.static
    export function type(className: "com.neovisionaries.ws.client.ThreadType"): _javatypes.java.lang.Class<_javatypes.com.neovisionaries.ws.client.ThreadType> & _javatypes.com.neovisionaries.ws.client.ThreadType.static
    export function type(className: "io.noties.prism4j.Prism4j.Node"): _javatypes.java.lang.Class<_javatypes.io.noties.prism4j.Prism4j.Node> & _javatypes.io.noties.prism4j.Prism4j.Node.static
    export function type(className: "java.io.IOException"): _javatypes.java.lang.Class<_javatypes.java.io.IOException> & _javatypes.java.io.IOException.static
    export function type(className: "java.io.InputStream"): _javatypes.java.lang.Class<_javatypes.java.io.InputStream> & _javatypes.java.io.InputStream.static
    export function type(className: "java.io.Closeable"): _javatypes.java.lang.Class<_javatypes.java.io.Closeable> & _javatypes.java.io.Closeable.static
    export function type(className: "java.io.PrintStream"): _javatypes.java.lang.Class<_javatypes.java.io.PrintStream> & _javatypes.java.io.PrintStream.static
    export function type(className: "java.io.PrintWriter"): _javatypes.java.lang.Class<_javatypes.java.io.PrintWriter> & _javatypes.java.io.PrintWriter.static
    export function type(className: "java.io.Externalizable"): _javatypes.java.lang.Class<_javatypes.java.io.Externalizable> & _javatypes.java.io.Externalizable.static
    export function type(className: "java.io.Reader"): _javatypes.java.lang.Class<_javatypes.java.io.Reader> & _javatypes.java.io.Reader.static
    export function type(className: "java.io.ObjectOutput"): _javatypes.java.lang.Class<_javatypes.java.io.ObjectOutput> & _javatypes.java.io.ObjectOutput.static
    export function type(className: "java.io.ObjectInput"): _javatypes.java.lang.Class<_javatypes.java.io.ObjectInput> & _javatypes.java.io.ObjectInput.static
    export function type(className: "java.io.OutputStream"): _javatypes.java.lang.Class<_javatypes.java.io.OutputStream> & _javatypes.java.io.OutputStream.static
    export function type(className: "java.io.Writer"): _javatypes.java.lang.Class<_javatypes.java.io.Writer> & _javatypes.java.io.Writer.static
    export function type(className: "java.io.Flushable"): _javatypes.java.lang.Class<_javatypes.java.io.Flushable> & _javatypes.java.io.Flushable.static
    export function type(className: "java.io.DataInput"): _javatypes.java.lang.Class<_javatypes.java.io.DataInput> & _javatypes.java.io.DataInput.static
    export function type(className: "java.io.DataOutput"): _javatypes.java.lang.Class<_javatypes.java.io.DataOutput> & _javatypes.java.io.DataOutput.static
    export function type(className: "java.io.FilterOutputStream"): _javatypes.java.lang.Class<_javatypes.java.io.FilterOutputStream> & _javatypes.java.io.FilterOutputStream.static
    export function type(className: "java.io.DataOutputStream"): _javatypes.java.lang.Class<_javatypes.java.io.DataOutputStream> & _javatypes.java.io.DataOutputStream.static
    export function type(className: "java.io.DataInputStream"): _javatypes.java.lang.Class<_javatypes.java.io.DataInputStream> & _javatypes.java.io.DataInputStream.static
    export function type(className: "java.io.FilterInputStream"): _javatypes.java.lang.Class<_javatypes.java.io.FilterInputStream> & _javatypes.java.io.FilterInputStream.static
    export function type(className: "java.util.ArrayList"): _javatypes.java.lang.Class<_javatypes.java.util.ArrayList> & _javatypes.java.util.ArrayList.static
    export function type(className: "java.util.HashMap"): _javatypes.java.lang.Class<_javatypes.java.util.HashMap> & _javatypes.java.util.HashMap.static
    export function type(className: "java.util.HashSet"): _javatypes.java.lang.Class<_javatypes.java.util.HashSet> & _javatypes.java.util.HashSet.static
    export function type(className: "java.util.SplittableRandom"): _javatypes.java.lang.Class<_javatypes.java.util.SplittableRandom> & _javatypes.java.util.SplittableRandom.static
    export function type(className: "java.util.Iterator"): _javatypes.java.lang.Class<_javatypes.java.util.Iterator> & _javatypes.java.util.Iterator.static
    export function type(className: "java.util.Map.Entry"): _javatypes.java.lang.Class<_javatypes.java.util.Map.Entry> & _javatypes.java.util.Map.Entry.static
    export function type(className: "java.util.Optional"): _javatypes.java.lang.Class<_javatypes.java.util.Optional> & _javatypes.java.util.Optional.static
    export function type(className: "java.util.UUID"): _javatypes.java.lang.Class<_javatypes.java.util.UUID> & _javatypes.java.util.UUID.static
    export function type(className: "java.util.Date"): _javatypes.java.lang.Class<_javatypes.java.util.Date> & _javatypes.java.util.Date.static
    export function type(className: "java.util.BitSet"): _javatypes.java.lang.Class<_javatypes.java.util.BitSet> & _javatypes.java.util.BitSet.static
    export function type(className: "java.util.Comparator"): _javatypes.java.lang.Class<_javatypes.java.util.Comparator> & _javatypes.java.util.Comparator.static
    export function type(className: "java.util.EventListener"): _javatypes.java.lang.Class<_javatypes.java.util.EventListener> & _javatypes.java.util.EventListener.static
    export function type(className: "java.util.EventObject"): _javatypes.java.lang.Class<_javatypes.java.util.EventObject> & _javatypes.java.util.EventObject.static
    export function type(className: "java.util.Enumeration"): _javatypes.java.lang.Class<_javatypes.java.util.Enumeration> & _javatypes.java.util.Enumeration.static
    export function type(className: "java.util.Vector"): _javatypes.java.lang.Class<_javatypes.java.util.Vector> & _javatypes.java.util.Vector.static
    export function type(className: "java.util.Hashtable"): _javatypes.java.lang.Class<_javatypes.java.util.Hashtable> & _javatypes.java.util.Hashtable.static
    export function type(className: "java.util.Locale"): _javatypes.java.lang.Class<_javatypes.java.util.Locale> & _javatypes.java.util.Locale.static
    export function type(className: "java.util.ResourceBundle"): _javatypes.java.lang.Class<_javatypes.java.util.ResourceBundle> & _javatypes.java.util.ResourceBundle.static
    export function type(className: "java.util.Properties"): _javatypes.java.lang.Class<_javatypes.java.util.Properties> & _javatypes.java.util.Properties.static
    export function type(className: "java.util.Locale.Category"): _javatypes.java.lang.Class<_javatypes.java.util.Locale.Category> & _javatypes.java.util.Locale.Category.static
    export function type(className: "java.util.Locale.IsoCountryCode"): _javatypes.java.lang.Class<_javatypes.java.util.Locale.IsoCountryCode> & _javatypes.java.util.Locale.IsoCountryCode.static
    export function type(className: "java.util.Locale.LanguageRange"): _javatypes.java.lang.Class<_javatypes.java.util.Locale.LanguageRange> & _javatypes.java.util.Locale.LanguageRange.static
    export function type(className: "java.util.Locale.FilteringMode"): _javatypes.java.lang.Class<_javatypes.java.util.Locale.FilteringMode> & _javatypes.java.util.Locale.FilteringMode.static
    export function type(className: "java.util.ResourceBundle.Control"): _javatypes.java.lang.Class<_javatypes.java.util.ResourceBundle.Control> & _javatypes.java.util.ResourceBundle.Control.static
    export function type(className: "java.util.AbstractMap"): _javatypes.java.lang.Class<_javatypes.java.util.AbstractMap> & _javatypes.java.util.AbstractMap.static
    export function type(className: "java.util.Dictionary"): _javatypes.java.lang.Class<_javatypes.java.util.Dictionary> & _javatypes.java.util.Dictionary.static
    export function type(className: "java.util.AbstractSet"): _javatypes.java.lang.Class<_javatypes.java.util.AbstractSet> & _javatypes.java.util.AbstractSet.static
    export function type(className: "java.util.Spliterator"): _javatypes.java.lang.Class<_javatypes.java.util.Spliterator> & _javatypes.java.util.Spliterator.static
    export function type(className: "java.util.AbstractList"): _javatypes.java.lang.Class<_javatypes.java.util.AbstractList> & _javatypes.java.util.AbstractList.static
    export function type(className: "java.util.RandomAccess"): _javatypes.java.lang.Class<_javatypes.java.util.RandomAccess> & _javatypes.java.util.RandomAccess.static
    export function type(className: "java.util.ListIterator"): _javatypes.java.lang.Class<_javatypes.java.util.ListIterator> & _javatypes.java.util.ListIterator.static
    export function type(className: "java.util.OptionalInt"): _javatypes.java.lang.Class<_javatypes.java.util.OptionalInt> & _javatypes.java.util.OptionalInt.static
    export function type(className: "java.util.OptionalDouble"): _javatypes.java.lang.Class<_javatypes.java.util.OptionalDouble> & _javatypes.java.util.OptionalDouble.static
    export function type(className: "java.util.IntSummaryStatistics"): _javatypes.java.lang.Class<_javatypes.java.util.IntSummaryStatistics> & _javatypes.java.util.IntSummaryStatistics.static
    export function type(className: "java.util.PrimitiveIterator.OfInt"): _javatypes.java.lang.Class<_javatypes.java.util.PrimitiveIterator.OfInt> & _javatypes.java.util.PrimitiveIterator.OfInt.static
    export function type(className: "java.util.Spliterator.OfInt"): _javatypes.java.lang.Class<_javatypes.java.util.Spliterator.OfInt> & _javatypes.java.util.Spliterator.OfInt.static
    export function type(className: "java.util.OptionalLong"): _javatypes.java.lang.Class<_javatypes.java.util.OptionalLong> & _javatypes.java.util.OptionalLong.static
    export function type(className: "java.util.LongSummaryStatistics"): _javatypes.java.lang.Class<_javatypes.java.util.LongSummaryStatistics> & _javatypes.java.util.LongSummaryStatistics.static
    export function type(className: "java.util.PrimitiveIterator.OfLong"): _javatypes.java.lang.Class<_javatypes.java.util.PrimitiveIterator.OfLong> & _javatypes.java.util.PrimitiveIterator.OfLong.static
    export function type(className: "java.util.Spliterator.OfLong"): _javatypes.java.lang.Class<_javatypes.java.util.Spliterator.OfLong> & _javatypes.java.util.Spliterator.OfLong.static
    export function type(className: "java.util.DoubleSummaryStatistics"): _javatypes.java.lang.Class<_javatypes.java.util.DoubleSummaryStatistics> & _javatypes.java.util.DoubleSummaryStatistics.static
    export function type(className: "java.util.PrimitiveIterator.OfDouble"): _javatypes.java.lang.Class<_javatypes.java.util.PrimitiveIterator.OfDouble> & _javatypes.java.util.PrimitiveIterator.OfDouble.static
    export function type(className: "java.util.Spliterator.OfDouble"): _javatypes.java.lang.Class<_javatypes.java.util.Spliterator.OfDouble> & _javatypes.java.util.Spliterator.OfDouble.static
    export function type(className: "java.util.Spliterator.OfPrimitive"): _javatypes.java.lang.Class<_javatypes.java.util.Spliterator.OfPrimitive> & _javatypes.java.util.Spliterator.OfPrimitive.static
    export function type(className: "java.util.AbstractCollection"): _javatypes.java.lang.Class<_javatypes.java.util.AbstractCollection> & _javatypes.java.util.AbstractCollection.static
    export function type(className: "java.util.PrimitiveIterator"): _javatypes.java.lang.Class<_javatypes.java.util.PrimitiveIterator> & _javatypes.java.util.PrimitiveIterator.static
    export function type(className: "java.util.SortedMap"): _javatypes.java.lang.Class<_javatypes.java.util.SortedMap> & _javatypes.java.util.SortedMap.static
    export function type(className: "java.util.Random"): _javatypes.java.lang.Class<_javatypes.java.util.Random> & _javatypes.java.util.Random.static
    export function type(className: "java.util.Currency"): _javatypes.java.lang.Class<_javatypes.java.util.Currency> & _javatypes.java.util.Currency.static
    export function type(className: "java.util.function.Consumer"): _javatypes.java.lang.Class<_javatypes.java.util._function.Consumer> & _javatypes.java.util._function.Consumer.static
    export function type(className: "java.util.function.IntSupplier"): _javatypes.java.lang.Class<_javatypes.java.util._function.IntSupplier> & _javatypes.java.util._function.IntSupplier.static
    export function type(className: "java.util.function.Function"): _javatypes.java.lang.Class<_javatypes.java.util._function.Function> & _javatypes.java.util._function.Function.static
    export function type(className: "java.util.function.BiConsumer"): _javatypes.java.lang.Class<_javatypes.java.util._function.BiConsumer> & _javatypes.java.util._function.BiConsumer.static
    export function type(className: "java.util.function.BiFunction"): _javatypes.java.lang.Class<_javatypes.java.util._function.BiFunction> & _javatypes.java.util._function.BiFunction.static
    export function type(className: "java.util.function.Predicate"): _javatypes.java.lang.Class<_javatypes.java.util._function.Predicate> & _javatypes.java.util._function.Predicate.static
    export function type(className: "java.util.function.BiPredicate"): _javatypes.java.lang.Class<_javatypes.java.util._function.BiPredicate> & _javatypes.java.util._function.BiPredicate.static
    export function type(className: "java.util.function.Supplier"): _javatypes.java.lang.Class<_javatypes.java.util._function.Supplier> & _javatypes.java.util._function.Supplier.static
    export function type(className: "java.util.function.ToIntFunction"): _javatypes.java.lang.Class<_javatypes.java.util._function.ToIntFunction> & _javatypes.java.util._function.ToIntFunction.static
    export function type(className: "java.util.function.ToLongFunction"): _javatypes.java.lang.Class<_javatypes.java.util._function.ToLongFunction> & _javatypes.java.util._function.ToLongFunction.static
    export function type(className: "java.util.function.ToDoubleFunction"): _javatypes.java.lang.Class<_javatypes.java.util._function.ToDoubleFunction> & _javatypes.java.util._function.ToDoubleFunction.static
    export function type(className: "java.util.function.UnaryOperator"): _javatypes.java.lang.Class<_javatypes.java.util._function.UnaryOperator> & _javatypes.java.util._function.UnaryOperator.static
    export function type(className: "java.util.function.IntPredicate"): _javatypes.java.lang.Class<_javatypes.java.util._function.IntPredicate> & _javatypes.java.util._function.IntPredicate.static
    export function type(className: "java.util.function.IntUnaryOperator"): _javatypes.java.lang.Class<_javatypes.java.util._function.IntUnaryOperator> & _javatypes.java.util._function.IntUnaryOperator.static
    export function type(className: "java.util.function.IntFunction"): _javatypes.java.lang.Class<_javatypes.java.util._function.IntFunction> & _javatypes.java.util._function.IntFunction.static
    export function type(className: "java.util.function.IntToLongFunction"): _javatypes.java.lang.Class<_javatypes.java.util._function.IntToLongFunction> & _javatypes.java.util._function.IntToLongFunction.static
    export function type(className: "java.util.function.IntToDoubleFunction"): _javatypes.java.lang.Class<_javatypes.java.util._function.IntToDoubleFunction> & _javatypes.java.util._function.IntToDoubleFunction.static
    export function type(className: "java.util.function.IntConsumer"): _javatypes.java.lang.Class<_javatypes.java.util._function.IntConsumer> & _javatypes.java.util._function.IntConsumer.static
    export function type(className: "java.util.function.IntBinaryOperator"): _javatypes.java.lang.Class<_javatypes.java.util._function.IntBinaryOperator> & _javatypes.java.util._function.IntBinaryOperator.static
    export function type(className: "java.util.function.ObjIntConsumer"): _javatypes.java.lang.Class<_javatypes.java.util._function.ObjIntConsumer> & _javatypes.java.util._function.ObjIntConsumer.static
    export function type(className: "java.util.function.LongPredicate"): _javatypes.java.lang.Class<_javatypes.java.util._function.LongPredicate> & _javatypes.java.util._function.LongPredicate.static
    export function type(className: "java.util.function.LongUnaryOperator"): _javatypes.java.lang.Class<_javatypes.java.util._function.LongUnaryOperator> & _javatypes.java.util._function.LongUnaryOperator.static
    export function type(className: "java.util.function.LongFunction"): _javatypes.java.lang.Class<_javatypes.java.util._function.LongFunction> & _javatypes.java.util._function.LongFunction.static
    export function type(className: "java.util.function.LongToIntFunction"): _javatypes.java.lang.Class<_javatypes.java.util._function.LongToIntFunction> & _javatypes.java.util._function.LongToIntFunction.static
    export function type(className: "java.util.function.LongToDoubleFunction"): _javatypes.java.lang.Class<_javatypes.java.util._function.LongToDoubleFunction> & _javatypes.java.util._function.LongToDoubleFunction.static
    export function type(className: "java.util.function.LongConsumer"): _javatypes.java.lang.Class<_javatypes.java.util._function.LongConsumer> & _javatypes.java.util._function.LongConsumer.static
    export function type(className: "java.util.function.LongBinaryOperator"): _javatypes.java.lang.Class<_javatypes.java.util._function.LongBinaryOperator> & _javatypes.java.util._function.LongBinaryOperator.static
    export function type(className: "java.util.function.ObjLongConsumer"): _javatypes.java.lang.Class<_javatypes.java.util._function.ObjLongConsumer> & _javatypes.java.util._function.ObjLongConsumer.static
    export function type(className: "java.util.function.LongSupplier"): _javatypes.java.lang.Class<_javatypes.java.util._function.LongSupplier> & _javatypes.java.util._function.LongSupplier.static
    export function type(className: "java.util.function.BinaryOperator"): _javatypes.java.lang.Class<_javatypes.java.util._function.BinaryOperator> & _javatypes.java.util._function.BinaryOperator.static
    export function type(className: "java.util.function.DoublePredicate"): _javatypes.java.lang.Class<_javatypes.java.util._function.DoublePredicate> & _javatypes.java.util._function.DoublePredicate.static
    export function type(className: "java.util.function.DoubleUnaryOperator"): _javatypes.java.lang.Class<_javatypes.java.util._function.DoubleUnaryOperator> & _javatypes.java.util._function.DoubleUnaryOperator.static
    export function type(className: "java.util.function.DoubleFunction"): _javatypes.java.lang.Class<_javatypes.java.util._function.DoubleFunction> & _javatypes.java.util._function.DoubleFunction.static
    export function type(className: "java.util.function.DoubleToIntFunction"): _javatypes.java.lang.Class<_javatypes.java.util._function.DoubleToIntFunction> & _javatypes.java.util._function.DoubleToIntFunction.static
    export function type(className: "java.util.function.DoubleToLongFunction"): _javatypes.java.lang.Class<_javatypes.java.util._function.DoubleToLongFunction> & _javatypes.java.util._function.DoubleToLongFunction.static
    export function type(className: "java.util.function.DoubleConsumer"): _javatypes.java.lang.Class<_javatypes.java.util._function.DoubleConsumer> & _javatypes.java.util._function.DoubleConsumer.static
    export function type(className: "java.util.function.DoubleBinaryOperator"): _javatypes.java.lang.Class<_javatypes.java.util._function.DoubleBinaryOperator> & _javatypes.java.util._function.DoubleBinaryOperator.static
    export function type(className: "java.util.function.ObjDoubleConsumer"): _javatypes.java.lang.Class<_javatypes.java.util._function.ObjDoubleConsumer> & _javatypes.java.util._function.ObjDoubleConsumer.static
    export function type(className: "java.util.function.DoubleSupplier"): _javatypes.java.lang.Class<_javatypes.java.util._function.DoubleSupplier> & _javatypes.java.util._function.DoubleSupplier.static
    export function type(className: "java.util.regex.Pattern"): _javatypes.java.lang.Class<_javatypes.java.util.regex.Pattern> & _javatypes.java.util.regex.Pattern.static
    export function type(className: "java.util.regex.Matcher"): _javatypes.java.lang.Class<_javatypes.java.util.regex.Matcher> & _javatypes.java.util.regex.Matcher.static
    export function type(className: "java.util.regex.MatchResult"): _javatypes.java.lang.Class<_javatypes.java.util.regex.MatchResult> & _javatypes.java.util.regex.MatchResult.static
    export function type(className: "java.util.stream.Stream"): _javatypes.java.lang.Class<_javatypes.java.util.stream.Stream> & _javatypes.java.util.stream.Stream.static
    export function type(className: "java.util.stream.IntStream"): _javatypes.java.lang.Class<_javatypes.java.util.stream.IntStream> & _javatypes.java.util.stream.IntStream.static
    export function type(className: "java.util.stream.LongStream"): _javatypes.java.lang.Class<_javatypes.java.util.stream.LongStream> & _javatypes.java.util.stream.LongStream.static
    export function type(className: "java.util.stream.DoubleStream"): _javatypes.java.lang.Class<_javatypes.java.util.stream.DoubleStream> & _javatypes.java.util.stream.DoubleStream.static
    export function type(className: "java.util.stream.BaseStream"): _javatypes.java.lang.Class<_javatypes.java.util.stream.BaseStream> & _javatypes.java.util.stream.BaseStream.static
    export function type(className: "java.util.stream.IntStream.IntMapMultiConsumer"): _javatypes.java.lang.Class<_javatypes.java.util.stream.IntStream.IntMapMultiConsumer> & _javatypes.java.util.stream.IntStream.IntMapMultiConsumer.static
    export function type(className: "java.util.stream.IntStream.Builder"): _javatypes.java.lang.Class<_javatypes.java.util.stream.IntStream.Builder> & _javatypes.java.util.stream.IntStream.Builder.static
    export function type(className: "java.util.stream.LongStream.LongMapMultiConsumer"): _javatypes.java.lang.Class<_javatypes.java.util.stream.LongStream.LongMapMultiConsumer> & _javatypes.java.util.stream.LongStream.LongMapMultiConsumer.static
    export function type(className: "java.util.stream.LongStream.Builder"): _javatypes.java.lang.Class<_javatypes.java.util.stream.LongStream.Builder> & _javatypes.java.util.stream.LongStream.Builder.static
    export function type(className: "java.util.stream.Collector"): _javatypes.java.lang.Class<_javatypes.java.util.stream.Collector> & _javatypes.java.util.stream.Collector.static
    export function type(className: "java.util.stream.Stream.Builder"): _javatypes.java.lang.Class<_javatypes.java.util.stream.Stream.Builder> & _javatypes.java.util.stream.Stream.Builder.static
    export function type(className: "java.util.stream.DoubleStream.DoubleMapMultiConsumer"): _javatypes.java.lang.Class<_javatypes.java.util.stream.DoubleStream.DoubleMapMultiConsumer> & _javatypes.java.util.stream.DoubleStream.DoubleMapMultiConsumer.static
    export function type(className: "java.util.stream.DoubleStream.Builder"): _javatypes.java.lang.Class<_javatypes.java.util.stream.DoubleStream.Builder> & _javatypes.java.util.stream.DoubleStream.Builder.static
    export function type(className: "java.util.stream.Collector.Characteristics"): _javatypes.java.lang.Class<_javatypes.java.util.stream.Collector.Characteristics> & _javatypes.java.util.stream.Collector.Characteristics.static
    export function type(className: "java.util.random.RandomGenerator"): _javatypes.java.lang.Class<_javatypes.java.util.random.RandomGenerator> & _javatypes.java.util.random.RandomGenerator.static
    export function type(className: "java.util.random.RandomGenerator.SplittableGenerator"): _javatypes.java.lang.Class<_javatypes.java.util.random.RandomGenerator.SplittableGenerator> & _javatypes.java.util.random.RandomGenerator.SplittableGenerator.static
    export function type(className: "java.util.random.RandomGenerator.StreamableGenerator"): _javatypes.java.lang.Class<_javatypes.java.util.random.RandomGenerator.StreamableGenerator> & _javatypes.java.util.random.RandomGenerator.StreamableGenerator.static
    export function type(className: "java.util.concurrent.TimeUnit"): _javatypes.java.lang.Class<_javatypes.java.util.concurrent.TimeUnit> & _javatypes.java.util.concurrent.TimeUnit.static
    export function type(className: "java.util.concurrent.ExecutorService"): _javatypes.java.lang.Class<_javatypes.java.util.concurrent.ExecutorService> & _javatypes.java.util.concurrent.ExecutorService.static
    export function type(className: "java.util.concurrent.Future"): _javatypes.java.lang.Class<_javatypes.java.util.concurrent.Future> & _javatypes.java.util.concurrent.Future.static
    export function type(className: "java.util.concurrent.Executor"): _javatypes.java.lang.Class<_javatypes.java.util.concurrent.Executor> & _javatypes.java.util.concurrent.Executor.static
    export function type(className: "java.util.concurrent.Callable"): _javatypes.java.lang.Class<_javatypes.java.util.concurrent.Callable> & _javatypes.java.util.concurrent.Callable.static
    export function type(className: "java.util.concurrent.CompletableFuture"): _javatypes.java.lang.Class<_javatypes.java.util.concurrent.CompletableFuture> & _javatypes.java.util.concurrent.CompletableFuture.static
    export function type(className: "java.util.concurrent.CompletionStage"): _javatypes.java.lang.Class<_javatypes.java.util.concurrent.CompletionStage> & _javatypes.java.util.concurrent.CompletionStage.static
    export function type(className: "java.nio.ByteBuffer"): _javatypes.java.lang.Class<_javatypes.java.nio.ByteBuffer> & _javatypes.java.nio.ByteBuffer.static
    export function type(className: "java.nio.LongBuffer"): _javatypes.java.lang.Class<_javatypes.java.nio.LongBuffer> & _javatypes.java.nio.LongBuffer.static
    export function type(className: "java.nio.Buffer"): _javatypes.java.lang.Class<_javatypes.java.nio.Buffer> & _javatypes.java.nio.Buffer.static
    export function type(className: "java.nio.ByteOrder"): _javatypes.java.lang.Class<_javatypes.java.nio.ByteOrder> & _javatypes.java.nio.ByteOrder.static
    export function type(className: "java.nio.CharBuffer"): _javatypes.java.lang.Class<_javatypes.java.nio.CharBuffer> & _javatypes.java.nio.CharBuffer.static
    export function type(className: "java.nio.ShortBuffer"): _javatypes.java.lang.Class<_javatypes.java.nio.ShortBuffer> & _javatypes.java.nio.ShortBuffer.static
    export function type(className: "java.nio.IntBuffer"): _javatypes.java.lang.Class<_javatypes.java.nio.IntBuffer> & _javatypes.java.nio.IntBuffer.static
    export function type(className: "java.nio.FloatBuffer"): _javatypes.java.lang.Class<_javatypes.java.nio.FloatBuffer> & _javatypes.java.nio.FloatBuffer.static
    export function type(className: "java.nio.DoubleBuffer"): _javatypes.java.lang.Class<_javatypes.java.nio.DoubleBuffer> & _javatypes.java.nio.DoubleBuffer.static
    export function type(className: "java.nio.MappedByteBuffer"): _javatypes.java.lang.Class<_javatypes.java.nio.MappedByteBuffer> & _javatypes.java.nio.MappedByteBuffer.static
    export function type(className: "java.nio.file.Path"): _javatypes.java.lang.Class<_javatypes.java.nio.file.Path> & _javatypes.java.nio.file.Path.static
    export function type(className: "java.nio.file.Watchable"): _javatypes.java.lang.Class<_javatypes.java.nio.file.Watchable> & _javatypes.java.nio.file.Watchable.static
    export function type(className: "java.nio.file.FileSystem"): _javatypes.java.lang.Class<_javatypes.java.nio.file.FileSystem> & _javatypes.java.nio.file.FileSystem.static
    export function type(className: "java.nio.file.LinkOption"): _javatypes.java.lang.Class<_javatypes.java.nio.file.LinkOption> & _javatypes.java.nio.file.LinkOption.static
    export function type(className: "java.nio.file.WatchService"): _javatypes.java.lang.Class<_javatypes.java.nio.file.WatchService> & _javatypes.java.nio.file.WatchService.static
    export function type(className: "java.nio.file.WatchEvent.Kind"): _javatypes.java.lang.Class<_javatypes.java.nio.file.WatchEvent.Kind> & _javatypes.java.nio.file.WatchEvent.Kind.static
    export function type(className: "java.nio.file.WatchEvent.Modifier"): _javatypes.java.lang.Class<_javatypes.java.nio.file.WatchEvent.Modifier> & _javatypes.java.nio.file.WatchEvent.Modifier.static
    export function type(className: "java.nio.file.WatchKey"): _javatypes.java.lang.Class<_javatypes.java.nio.file.WatchKey> & _javatypes.java.nio.file.WatchKey.static
    export function type(className: "java.nio.file.FileStore"): _javatypes.java.lang.Class<_javatypes.java.nio.file.FileStore> & _javatypes.java.nio.file.FileStore.static
    export function type(className: "java.nio.file.PathMatcher"): _javatypes.java.lang.Class<_javatypes.java.nio.file.PathMatcher> & _javatypes.java.nio.file.PathMatcher.static
    export function type(className: "java.nio.file.WatchEvent"): _javatypes.java.lang.Class<_javatypes.java.nio.file.WatchEvent> & _javatypes.java.nio.file.WatchEvent.static
    export function type(className: "java.nio.file.OpenOption"): _javatypes.java.lang.Class<_javatypes.java.nio.file.OpenOption> & _javatypes.java.nio.file.OpenOption.static
    export function type(className: "java.nio.file.CopyOption"): _javatypes.java.lang.Class<_javatypes.java.nio.file.CopyOption> & _javatypes.java.nio.file.CopyOption.static
    export function type(className: "java.nio.file.DirectoryStream.Filter"): _javatypes.java.lang.Class<_javatypes.java.nio.file.DirectoryStream.Filter> & _javatypes.java.nio.file.DirectoryStream.Filter.static
    export function type(className: "java.nio.file.DirectoryStream"): _javatypes.java.lang.Class<_javatypes.java.nio.file.DirectoryStream> & _javatypes.java.nio.file.DirectoryStream.static
    export function type(className: "java.nio.file.AccessMode"): _javatypes.java.lang.Class<_javatypes.java.nio.file.AccessMode> & _javatypes.java.nio.file.AccessMode.static
    export function type(className: "java.nio.file.attribute.BasicFileAttributes"): _javatypes.java.lang.Class<_javatypes.java.nio.file.attribute.BasicFileAttributes> & _javatypes.java.nio.file.attribute.BasicFileAttributes.static
    export function type(className: "java.nio.file.attribute.FileTime"): _javatypes.java.lang.Class<_javatypes.java.nio.file.attribute.FileTime> & _javatypes.java.nio.file.attribute.FileTime.static
    export function type(className: "java.nio.file.attribute.UserPrincipalLookupService"): _javatypes.java.lang.Class<_javatypes.java.nio.file.attribute.UserPrincipalLookupService> & _javatypes.java.nio.file.attribute.UserPrincipalLookupService.static
    export function type(className: "java.nio.file.attribute.UserPrincipal"): _javatypes.java.lang.Class<_javatypes.java.nio.file.attribute.UserPrincipal> & _javatypes.java.nio.file.attribute.UserPrincipal.static
    export function type(className: "java.nio.file.attribute.GroupPrincipal"): _javatypes.java.lang.Class<_javatypes.java.nio.file.attribute.GroupPrincipal> & _javatypes.java.nio.file.attribute.GroupPrincipal.static
    export function type(className: "java.nio.file.attribute.FileAttribute"): _javatypes.java.lang.Class<_javatypes.java.nio.file.attribute.FileAttribute> & _javatypes.java.nio.file.attribute.FileAttribute.static
    export function type(className: "java.nio.file.spi.FileSystemProvider"): _javatypes.java.lang.Class<_javatypes.java.nio.file.spi.FileSystemProvider> & _javatypes.java.nio.file.spi.FileSystemProvider.static
    export function type(className: "java.nio.charset.Charset"): _javatypes.java.lang.Class<_javatypes.java.nio.charset.Charset> & _javatypes.java.nio.charset.Charset.static
    export function type(className: "java.nio.charset.CharsetDecoder"): _javatypes.java.lang.Class<_javatypes.java.nio.charset.CharsetDecoder> & _javatypes.java.nio.charset.CharsetDecoder.static
    export function type(className: "java.nio.charset.CharsetEncoder"): _javatypes.java.lang.Class<_javatypes.java.nio.charset.CharsetEncoder> & _javatypes.java.nio.charset.CharsetEncoder.static
    export function type(className: "java.nio.charset.CodingErrorAction"): _javatypes.java.lang.Class<_javatypes.java.nio.charset.CodingErrorAction> & _javatypes.java.nio.charset.CodingErrorAction.static
    export function type(className: "java.nio.charset.CoderResult"): _javatypes.java.lang.Class<_javatypes.java.nio.charset.CoderResult> & _javatypes.java.nio.charset.CoderResult.static
    export function type(className: "java.nio.channels.FileChannel"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.FileChannel> & _javatypes.java.nio.channels.FileChannel.static
    export function type(className: "java.nio.channels.AsynchronousFileChannel"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.AsynchronousFileChannel> & _javatypes.java.nio.channels.AsynchronousFileChannel.static
    export function type(className: "java.nio.channels.SeekableByteChannel"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.SeekableByteChannel> & _javatypes.java.nio.channels.SeekableByteChannel.static
    export function type(className: "java.nio.channels.GatheringByteChannel"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.GatheringByteChannel> & _javatypes.java.nio.channels.GatheringByteChannel.static
    export function type(className: "java.nio.channels.ScatteringByteChannel"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.ScatteringByteChannel> & _javatypes.java.nio.channels.ScatteringByteChannel.static
    export function type(className: "java.nio.channels.WritableByteChannel"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.WritableByteChannel> & _javatypes.java.nio.channels.WritableByteChannel.static
    export function type(className: "java.nio.channels.ReadableByteChannel"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.ReadableByteChannel> & _javatypes.java.nio.channels.ReadableByteChannel.static
    export function type(className: "java.nio.channels.FileChannel.MapMode"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.FileChannel.MapMode> & _javatypes.java.nio.channels.FileChannel.MapMode.static
    export function type(className: "java.nio.channels.FileLock"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.FileLock> & _javatypes.java.nio.channels.FileLock.static
    export function type(className: "java.nio.channels.ByteChannel"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.ByteChannel> & _javatypes.java.nio.channels.ByteChannel.static
    export function type(className: "java.nio.channels.AsynchronousChannel"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.AsynchronousChannel> & _javatypes.java.nio.channels.AsynchronousChannel.static
    export function type(className: "java.nio.channels.CompletionHandler"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.CompletionHandler> & _javatypes.java.nio.channels.CompletionHandler.static
    export function type(className: "java.nio.channels.Channel"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.Channel> & _javatypes.java.nio.channels.Channel.static
    export function type(className: "java.nio.channels.InterruptibleChannel"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.InterruptibleChannel> & _javatypes.java.nio.channels.InterruptibleChannel.static
    export function type(className: "java.nio.channels.SocketChannel"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.SocketChannel> & _javatypes.java.nio.channels.SocketChannel.static
    export function type(className: "java.nio.channels.NetworkChannel"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.NetworkChannel> & _javatypes.java.nio.channels.NetworkChannel.static
    export function type(className: "java.nio.channels.SelectableChannel"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.SelectableChannel> & _javatypes.java.nio.channels.SelectableChannel.static
    export function type(className: "java.nio.channels.Selector"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.Selector> & _javatypes.java.nio.channels.Selector.static
    export function type(className: "java.nio.channels.SelectionKey"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.SelectionKey> & _javatypes.java.nio.channels.SelectionKey.static
    export function type(className: "java.nio.channels.DatagramChannel"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.DatagramChannel> & _javatypes.java.nio.channels.DatagramChannel.static
    export function type(className: "java.nio.channels.Pipe"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.Pipe> & _javatypes.java.nio.channels.Pipe.static
    export function type(className: "java.nio.channels.ServerSocketChannel"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.ServerSocketChannel> & _javatypes.java.nio.channels.ServerSocketChannel.static
    export function type(className: "java.nio.channels.Pipe.SourceChannel"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.Pipe.SourceChannel> & _javatypes.java.nio.channels.Pipe.SourceChannel.static
    export function type(className: "java.nio.channels.Pipe.SinkChannel"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.Pipe.SinkChannel> & _javatypes.java.nio.channels.Pipe.SinkChannel.static
    export function type(className: "java.nio.channels.MulticastChannel"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.MulticastChannel> & _javatypes.java.nio.channels.MulticastChannel.static
    export function type(className: "java.nio.channels.MembershipKey"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.MembershipKey> & _javatypes.java.nio.channels.MembershipKey.static
    export function type(className: "java.nio.channels.spi.AbstractInterruptibleChannel"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.spi.AbstractInterruptibleChannel> & _javatypes.java.nio.channels.spi.AbstractInterruptibleChannel.static
    export function type(className: "java.nio.channels.spi.AbstractSelectableChannel"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.spi.AbstractSelectableChannel> & _javatypes.java.nio.channels.spi.AbstractSelectableChannel.static
    export function type(className: "java.nio.channels.spi.SelectorProvider"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.spi.SelectorProvider> & _javatypes.java.nio.channels.spi.SelectorProvider.static
    export function type(className: "java.nio.channels.spi.AbstractSelector"): _javatypes.java.lang.Class<_javatypes.java.nio.channels.spi.AbstractSelector> & _javatypes.java.nio.channels.spi.AbstractSelector.static
    export function type(className: "java.lang.Runnable"): _javatypes.java.lang.Class<_javatypes.java.lang.Runnable> & _javatypes.java.lang.Runnable.static
    export function type(className: "java.lang.Enum"): _javatypes.java.lang.Class<_javatypes.java.lang.Enum> & _javatypes.java.lang.Enum.static
    export function type(className: "java.lang.Number"): _javatypes.java.lang.Class<_javatypes.java.lang.Number> & _javatypes.java.lang.Number.static
    export function type(className: "java.lang.Thread"): _javatypes.java.lang.Class<_javatypes.java.lang.Thread> & _javatypes.java.lang.Thread.static
    export function type(className: "java.lang.AutoCloseable"): _javatypes.java.lang.Class<_javatypes.java.lang.AutoCloseable> & _javatypes.java.lang.AutoCloseable.static
    export function type(className: "java.lang.Comparable"): _javatypes.java.lang.Class<_javatypes.java.lang.Comparable> & _javatypes.java.lang.Comparable.static
    export function type(className: "java.lang.Enum.EnumDesc"): _javatypes.java.lang.Class<_javatypes.java.lang.Enum.EnumDesc> & _javatypes.java.lang.Enum.EnumDesc.static
    export function type(className: "java.lang.ThreadGroup"): _javatypes.java.lang.Class<_javatypes.java.lang.ThreadGroup> & _javatypes.java.lang.ThreadGroup.static
    export function type(className: "java.lang.ClassLoader"): _javatypes.java.lang.Class<_javatypes.java.lang.ClassLoader> & _javatypes.java.lang.ClassLoader.static
    export function type(className: "java.lang.Thread.State"): _javatypes.java.lang.Class<_javatypes.java.lang.Thread.State> & _javatypes.java.lang.Thread.State.static
    export function type(className: "java.lang.Thread.UncaughtExceptionHandler"): _javatypes.java.lang.Class<_javatypes.java.lang.Thread.UncaughtExceptionHandler> & _javatypes.java.lang.Thread.UncaughtExceptionHandler.static
    export function type(className: "java.lang.Module"): _javatypes.java.lang.Class<_javatypes.java.lang.Module> & _javatypes.java.lang.Module.static
    export function type(className: "java.lang.Package"): _javatypes.java.lang.Class<_javatypes.java.lang.Package> & _javatypes.java.lang.Package.static
    export function type(className: "java.lang.ModuleLayer"): _javatypes.java.lang.Class<_javatypes.java.lang.ModuleLayer> & _javatypes.java.lang.ModuleLayer.static
    export function type(className: "java.lang.NamedPackage"): _javatypes.java.lang.Class<_javatypes.java.lang.NamedPackage> & _javatypes.java.lang.NamedPackage.static
    export function type(className: "java.lang.ModuleLayer.Controller"): _javatypes.java.lang.Class<_javatypes.java.lang.ModuleLayer.Controller> & _javatypes.java.lang.ModuleLayer.Controller.static
    export function type(className: "java.lang.Cloneable"): _javatypes.java.lang.Class<_javatypes.java.lang.Cloneable> & _javatypes.java.lang.Cloneable.static
    export function type(className: "java.lang.Character.Subset"): _javatypes.java.lang.Class<_javatypes.java.lang.Character.Subset> & _javatypes.java.lang.Character.Subset.static
    export function type(className: "java.lang.CharSequence"): _javatypes.java.lang.Class<_javatypes.java.lang.CharSequence> & _javatypes.java.lang.CharSequence.static
    export function type(className: "java.lang.StringBuffer"): _javatypes.java.lang.Class<_javatypes.java.lang.StringBuffer> & _javatypes.java.lang.StringBuffer.static
    export function type(className: "java.lang.StringBuilder"): _javatypes.java.lang.Class<_javatypes.java.lang.StringBuilder> & _javatypes.java.lang.StringBuilder.static
    export function type(className: "java.lang.Iterable"): _javatypes.java.lang.Class<_javatypes.java.lang.Iterable> & _javatypes.java.lang.Iterable.static
    export function type(className: "java.lang.Appendable"): _javatypes.java.lang.Class<_javatypes.java.lang.Appendable> & _javatypes.java.lang.Appendable.static
    export function type(className: "java.lang.Readable"): _javatypes.java.lang.Class<_javatypes.java.lang.Readable> & _javatypes.java.lang.Readable.static
    export function type(className: "java.lang.Exception"): _javatypes.java.lang.Class<_javatypes.java.lang.Exception> & _javatypes.java.lang.Exception.static
    export function type(className: "java.lang.AbstractStringBuilder"): _javatypes.java.lang.Class<_javatypes.java.lang.AbstractStringBuilder> & _javatypes.java.lang.AbstractStringBuilder.static
    export function type(className: "java.lang.Void"): _javatypes.java.lang.Class<_javatypes.java.lang.Void> & _javatypes.java.lang.Void.static
    export function type(className: "java.lang.reflect.Method"): _javatypes.java.lang.Class<_javatypes.java.lang.reflect.Method> & _javatypes.java.lang.reflect.Method.static
    export function type(className: "java.lang.reflect.Field"): _javatypes.java.lang.Class<_javatypes.java.lang.reflect.Field> & _javatypes.java.lang.reflect.Field.static
    export function type(className: "java.lang.reflect.AccessibleObject"): _javatypes.java.lang.Class<_javatypes.java.lang.reflect.AccessibleObject> & _javatypes.java.lang.reflect.AccessibleObject.static
    export function type(className: "java.lang.reflect.Member"): _javatypes.java.lang.Class<_javatypes.java.lang.reflect.Member> & _javatypes.java.lang.reflect.Member.static
    export function type(className: "java.lang.reflect.Type"): _javatypes.java.lang.Class<_javatypes.java.lang.reflect.Type> & _javatypes.java.lang.reflect.Type.static
    export function type(className: "java.lang.reflect.AnnotatedType"): _javatypes.java.lang.Class<_javatypes.java.lang.reflect.AnnotatedType> & _javatypes.java.lang.reflect.AnnotatedType.static
    export function type(className: "java.lang.reflect.Executable"): _javatypes.java.lang.Class<_javatypes.java.lang.reflect.Executable> & _javatypes.java.lang.reflect.Executable.static
    export function type(className: "java.lang.reflect.TypeVariable"): _javatypes.java.lang.Class<_javatypes.java.lang.reflect.TypeVariable> & _javatypes.java.lang.reflect.TypeVariable.static
    export function type(className: "java.lang.reflect.AnnotatedElement"): _javatypes.java.lang.Class<_javatypes.java.lang.reflect.AnnotatedElement> & _javatypes.java.lang.reflect.AnnotatedElement.static
    export function type(className: "java.lang.reflect.GenericDeclaration"): _javatypes.java.lang.Class<_javatypes.java.lang.reflect.GenericDeclaration> & _javatypes.java.lang.reflect.GenericDeclaration.static
    export function type(className: "java.lang.reflect.Parameter"): _javatypes.java.lang.Class<_javatypes.java.lang.reflect.Parameter> & _javatypes.java.lang.reflect.Parameter.static
    export function type(className: "java.lang.reflect.Constructor"): _javatypes.java.lang.Class<_javatypes.java.lang.reflect.Constructor> & _javatypes.java.lang.reflect.Constructor.static
    export function type(className: "java.lang.ref.WeakReference"): _javatypes.java.lang.Class<_javatypes.java.lang.ref.WeakReference> & _javatypes.java.lang.ref.WeakReference.static
    export function type(className: "java.lang.ref.Reference"): _javatypes.java.lang.Class<_javatypes.java.lang.ref.Reference> & _javatypes.java.lang.ref.Reference.static
    export function type(className: "java.lang.ref.ReferenceQueue"): _javatypes.java.lang.Class<_javatypes.java.lang.ref.ReferenceQueue> & _javatypes.java.lang.ref.ReferenceQueue.static
    export function type(className: "java.lang.annotation.Annotation"): _javatypes.java.lang.Class<_javatypes.java.lang.annotation.Annotation> & _javatypes.java.lang.annotation.Annotation.static
    export function type(className: "java.lang.constant.Constable"): _javatypes.java.lang.Class<_javatypes.java.lang.constant.Constable> & _javatypes.java.lang.constant.Constable.static
    export function type(className: "java.lang.constant.DynamicConstantDesc"): _javatypes.java.lang.Class<_javatypes.java.lang.constant.DynamicConstantDesc> & _javatypes.java.lang.constant.DynamicConstantDesc.static
    export function type(className: "java.lang.constant.ClassDesc"): _javatypes.java.lang.Class<_javatypes.java.lang.constant.ClassDesc> & _javatypes.java.lang.constant.ClassDesc.static
    export function type(className: "java.lang.constant.MethodHandleDesc"): _javatypes.java.lang.Class<_javatypes.java.lang.constant.MethodHandleDesc> & _javatypes.java.lang.constant.MethodHandleDesc.static
    export function type(className: "java.lang.constant.MethodTypeDesc"): _javatypes.java.lang.Class<_javatypes.java.lang.constant.MethodTypeDesc> & _javatypes.java.lang.constant.MethodTypeDesc.static
    export function type(className: "java.lang.constant.ConstantDesc"): _javatypes.java.lang.Class<_javatypes.java.lang.constant.ConstantDesc> & _javatypes.java.lang.constant.ConstantDesc.static
    export function type(className: "java.lang.constant.DirectMethodHandleDesc"): _javatypes.java.lang.Class<_javatypes.java.lang.constant.DirectMethodHandleDesc> & _javatypes.java.lang.constant.DirectMethodHandleDesc.static
    export function type(className: "java.lang.constant.DirectMethodHandleDesc.Kind"): _javatypes.java.lang.Class<_javatypes.java.lang.constant.DirectMethodHandleDesc.Kind> & _javatypes.java.lang.constant.DirectMethodHandleDesc.Kind.static
    export function type(className: "java.lang.invoke.MethodHandles.Lookup"): _javatypes.java.lang.Class<_javatypes.java.lang.invoke.MethodHandles.Lookup> & _javatypes.java.lang.invoke.MethodHandles.Lookup.static
    export function type(className: "java.lang.invoke.MethodHandles.Lookup.ClassOption"): _javatypes.java.lang.Class<_javatypes.java.lang.invoke.MethodHandles.Lookup.ClassOption> & _javatypes.java.lang.invoke.MethodHandles.Lookup.ClassOption.static
    export function type(className: "java.lang.invoke.MethodType"): _javatypes.java.lang.Class<_javatypes.java.lang.invoke.MethodType> & _javatypes.java.lang.invoke.MethodType.static
    export function type(className: "java.lang.invoke.MethodHandle"): _javatypes.java.lang.Class<_javatypes.java.lang.invoke.MethodHandle> & _javatypes.java.lang.invoke.MethodHandle.static
    export function type(className: "java.lang.invoke.VarHandle"): _javatypes.java.lang.Class<_javatypes.java.lang.invoke.VarHandle> & _javatypes.java.lang.invoke.VarHandle.static
    export function type(className: "java.lang.invoke.MethodHandleInfo"): _javatypes.java.lang.Class<_javatypes.java.lang.invoke.MethodHandleInfo> & _javatypes.java.lang.invoke.MethodHandleInfo.static
    export function type(className: "java.lang.invoke.TypeDescriptor.OfMethod"): _javatypes.java.lang.Class<_javatypes.java.lang.invoke.TypeDescriptor.OfMethod> & _javatypes.java.lang.invoke.TypeDescriptor.OfMethod.static
    export function type(className: "java.lang.invoke.VarHandle.AccessMode"): _javatypes.java.lang.Class<_javatypes.java.lang.invoke.VarHandle.AccessMode> & _javatypes.java.lang.invoke.VarHandle.AccessMode.static
    export function type(className: "java.lang.invoke.VarHandle.VarHandleDesc"): _javatypes.java.lang.Class<_javatypes.java.lang.invoke.VarHandle.VarHandleDesc> & _javatypes.java.lang.invoke.VarHandle.VarHandleDesc.static
    export function type(className: "java.lang.invoke.TypeDescriptor"): _javatypes.java.lang.Class<_javatypes.java.lang.invoke.TypeDescriptor> & _javatypes.java.lang.invoke.TypeDescriptor.static
    export function type(className: "java.lang.invoke.TypeDescriptor.OfField"): _javatypes.java.lang.Class<_javatypes.java.lang.invoke.TypeDescriptor.OfField> & _javatypes.java.lang.invoke.TypeDescriptor.OfField.static
    export function type(className: "java.lang.module.ModuleDescriptor"): _javatypes.java.lang.Class<_javatypes.java.lang.module.ModuleDescriptor> & _javatypes.java.lang.module.ModuleDescriptor.static
    export function type(className: "java.lang.module.ModuleDescriptor.Modifier"): _javatypes.java.lang.Class<_javatypes.java.lang.module.ModuleDescriptor.Modifier> & _javatypes.java.lang.module.ModuleDescriptor.Modifier.static
    export function type(className: "java.lang.module.ModuleDescriptor.Requires"): _javatypes.java.lang.Class<_javatypes.java.lang.module.ModuleDescriptor.Requires> & _javatypes.java.lang.module.ModuleDescriptor.Requires.static
    export function type(className: "java.lang.module.ModuleDescriptor.Exports"): _javatypes.java.lang.Class<_javatypes.java.lang.module.ModuleDescriptor.Exports> & _javatypes.java.lang.module.ModuleDescriptor.Exports.static
    export function type(className: "java.lang.module.ModuleDescriptor.Opens"): _javatypes.java.lang.Class<_javatypes.java.lang.module.ModuleDescriptor.Opens> & _javatypes.java.lang.module.ModuleDescriptor.Opens.static
    export function type(className: "java.lang.module.ModuleDescriptor.Provides"): _javatypes.java.lang.Class<_javatypes.java.lang.module.ModuleDescriptor.Provides> & _javatypes.java.lang.module.ModuleDescriptor.Provides.static
    export function type(className: "java.lang.module.ModuleDescriptor.Version"): _javatypes.java.lang.Class<_javatypes.java.lang.module.ModuleDescriptor.Version> & _javatypes.java.lang.module.ModuleDescriptor.Version.static
    export function type(className: "java.lang.module.ModuleDescriptor.Builder"): _javatypes.java.lang.Class<_javatypes.java.lang.module.ModuleDescriptor.Builder> & _javatypes.java.lang.module.ModuleDescriptor.Builder.static
    export function type(className: "java.lang.module.ModuleDescriptor.Exports.Modifier"): _javatypes.java.lang.Class<_javatypes.java.lang.module.ModuleDescriptor.Exports.Modifier> & _javatypes.java.lang.module.ModuleDescriptor.Exports.Modifier.static
    export function type(className: "java.lang.module.ModuleDescriptor.Requires.Modifier"): _javatypes.java.lang.Class<_javatypes.java.lang.module.ModuleDescriptor.Requires.Modifier> & _javatypes.java.lang.module.ModuleDescriptor.Requires.Modifier.static
    export function type(className: "java.lang.module.ModuleDescriptor.Opens.Modifier"): _javatypes.java.lang.Class<_javatypes.java.lang.module.ModuleDescriptor.Opens.Modifier> & _javatypes.java.lang.module.ModuleDescriptor.Opens.Modifier.static
    export function type(className: "java.lang.module.Configuration"): _javatypes.java.lang.Class<_javatypes.java.lang.module.Configuration> & _javatypes.java.lang.module.Configuration.static
    export function type(className: "java.lang.module.ModuleFinder"): _javatypes.java.lang.Class<_javatypes.java.lang.module.ModuleFinder> & _javatypes.java.lang.module.ModuleFinder.static
    export function type(className: "java.lang.module.ResolvedModule"): _javatypes.java.lang.Class<_javatypes.java.lang.module.ResolvedModule> & _javatypes.java.lang.module.ResolvedModule.static
    export function type(className: "java.lang.module.ModuleReference"): _javatypes.java.lang.Class<_javatypes.java.lang.module.ModuleReference> & _javatypes.java.lang.module.ModuleReference.static
    export function type(className: "java.lang.module.ModuleReader"): _javatypes.java.lang.Class<_javatypes.java.lang.module.ModuleReader> & _javatypes.java.lang.module.ModuleReader.static
    export function type(className: "java.awt.Image"): _javatypes.java.lang.Class<_javatypes.java.awt.Image> & _javatypes.java.awt.Image.static
    export function type(className: "java.awt.Rectangle"): _javatypes.java.lang.Class<_javatypes.java.awt.Rectangle> & _javatypes.java.awt.Rectangle.static
    export function type(className: "java.awt.Graphics"): _javatypes.java.lang.Class<_javatypes.java.awt.Graphics> & _javatypes.java.awt.Graphics.static
    export function type(className: "java.awt.GraphicsConfiguration"): _javatypes.java.lang.Class<_javatypes.java.awt.GraphicsConfiguration> & _javatypes.java.awt.GraphicsConfiguration.static
    export function type(className: "java.awt.ImageCapabilities"): _javatypes.java.lang.Class<_javatypes.java.awt.ImageCapabilities> & _javatypes.java.awt.ImageCapabilities.static
    export function type(className: "java.awt.Shape"): _javatypes.java.lang.Class<_javatypes.java.awt.Shape> & _javatypes.java.awt.Shape.static
    export function type(className: "java.awt.Point"): _javatypes.java.lang.Class<_javatypes.java.awt.Point> & _javatypes.java.awt.Point.static
    export function type(className: "java.awt.Dimension"): _javatypes.java.lang.Class<_javatypes.java.awt.Dimension> & _javatypes.java.awt.Dimension.static
    export function type(className: "java.awt.Transparency"): _javatypes.java.lang.Class<_javatypes.java.awt.Transparency> & _javatypes.java.awt.Transparency.static
    export function type(className: "java.awt.Graphics2D"): _javatypes.java.lang.Class<_javatypes.java.awt.Graphics2D> & _javatypes.java.awt.Graphics2D.static
    export function type(className: "java.awt.Color"): _javatypes.java.lang.Class<_javatypes.java.awt.Color> & _javatypes.java.awt.Color.static
    export function type(className: "java.awt.Font"): _javatypes.java.lang.Class<_javatypes.java.awt.Font> & _javatypes.java.awt.Font.static
    export function type(className: "java.awt.FontMetrics"): _javatypes.java.lang.Class<_javatypes.java.awt.FontMetrics> & _javatypes.java.awt.FontMetrics.static
    export function type(className: "java.awt.Polygon"): _javatypes.java.lang.Class<_javatypes.java.awt.Polygon> & _javatypes.java.awt.Polygon.static
    export function type(className: "java.awt.GraphicsDevice"): _javatypes.java.lang.Class<_javatypes.java.awt.GraphicsDevice> & _javatypes.java.awt.GraphicsDevice.static
    export function type(className: "java.awt.BufferCapabilities"): _javatypes.java.lang.Class<_javatypes.java.awt.BufferCapabilities> & _javatypes.java.awt.BufferCapabilities.static
    export function type(className: "java.awt.Composite"): _javatypes.java.lang.Class<_javatypes.java.awt.Composite> & _javatypes.java.awt.Composite.static
    export function type(className: "java.awt.Paint"): _javatypes.java.lang.Class<_javatypes.java.awt.Paint> & _javatypes.java.awt.Paint.static
    export function type(className: "java.awt.Stroke"): _javatypes.java.lang.Class<_javatypes.java.awt.Stroke> & _javatypes.java.awt.Stroke.static
    export function type(className: "java.awt.RenderingHints.Key"): _javatypes.java.lang.Class<_javatypes.java.awt.RenderingHints.Key> & _javatypes.java.awt.RenderingHints.Key.static
    export function type(className: "java.awt.RenderingHints"): _javatypes.java.lang.Class<_javatypes.java.awt.RenderingHints> & _javatypes.java.awt.RenderingHints.static
    export function type(className: "java.awt.GraphicsConfigTemplate"): _javatypes.java.lang.Class<_javatypes.java.awt.GraphicsConfigTemplate> & _javatypes.java.awt.GraphicsConfigTemplate.static
    export function type(className: "java.awt.Window"): _javatypes.java.lang.Class<_javatypes.java.awt.Window> & _javatypes.java.awt.Window.static
    export function type(className: "java.awt.DisplayMode"): _javatypes.java.lang.Class<_javatypes.java.awt.DisplayMode> & _javatypes.java.awt.DisplayMode.static
    export function type(className: "java.awt.GraphicsDevice.WindowTranslucency"): _javatypes.java.lang.Class<_javatypes.java.awt.GraphicsDevice.WindowTranslucency> & _javatypes.java.awt.GraphicsDevice.WindowTranslucency.static
    export function type(className: "java.awt.PaintContext"): _javatypes.java.lang.Class<_javatypes.java.awt.PaintContext> & _javatypes.java.awt.PaintContext.static
    export function type(className: "java.awt.CompositeContext"): _javatypes.java.lang.Class<_javatypes.java.awt.CompositeContext> & _javatypes.java.awt.CompositeContext.static
    export function type(className: "java.awt.BufferCapabilities.FlipContents"): _javatypes.java.lang.Class<_javatypes.java.awt.BufferCapabilities.FlipContents> & _javatypes.java.awt.BufferCapabilities.FlipContents.static
    export function type(className: "java.awt.AttributeValue"): _javatypes.java.lang.Class<_javatypes.java.awt.AttributeValue> & _javatypes.java.awt.AttributeValue.static
    export function type(className: "java.awt.Container"): _javatypes.java.lang.Class<_javatypes.java.awt.Container> & _javatypes.java.awt.Container.static
    export function type(className: "java.awt.Toolkit"): _javatypes.java.lang.Class<_javatypes.java.awt.Toolkit> & _javatypes.java.awt.Toolkit.static
    export function type(className: "java.awt.Cursor"): _javatypes.java.lang.Class<_javatypes.java.awt.Cursor> & _javatypes.java.awt.Cursor.static
    export function type(className: "java.awt.Dialog.ModalExclusionType"): _javatypes.java.lang.Class<_javatypes.java.awt.Dialog.ModalExclusionType> & _javatypes.java.awt.Dialog.ModalExclusionType.static
    export function type(className: "java.awt.Component"): _javatypes.java.lang.Class<_javatypes.java.awt.Component> & _javatypes.java.awt.Component.static
    export function type(className: "java.awt.AWTKeyStroke"): _javatypes.java.lang.Class<_javatypes.java.awt.AWTKeyStroke> & _javatypes.java.awt.AWTKeyStroke.static
    export function type(className: "java.awt.Event"): _javatypes.java.lang.Class<_javatypes.java.awt.Event> & _javatypes.java.awt.Event.static
    export function type(className: "java.awt.Window.Type"): _javatypes.java.lang.Class<_javatypes.java.awt.Window.Type> & _javatypes.java.awt.Window.Type.static
    export function type(className: "java.awt.Frame"): _javatypes.java.lang.Class<_javatypes.java.awt.Frame> & _javatypes.java.awt.Frame.static
    export function type(className: "java.awt.AWTEvent"): _javatypes.java.lang.Class<_javatypes.java.awt.AWTEvent> & _javatypes.java.awt.AWTEvent.static
    export function type(className: "java.awt.MenuContainer"): _javatypes.java.lang.Class<_javatypes.java.awt.MenuContainer> & _javatypes.java.awt.MenuContainer.static
    export function type(className: "java.awt.MenuBar"): _javatypes.java.lang.Class<_javatypes.java.awt.MenuBar> & _javatypes.java.awt.MenuBar.static
    export function type(className: "java.awt.MenuComponent"): _javatypes.java.lang.Class<_javatypes.java.awt.MenuComponent> & _javatypes.java.awt.MenuComponent.static
    export function type(className: "java.awt.Insets"): _javatypes.java.lang.Class<_javatypes.java.awt.Insets> & _javatypes.java.awt.Insets.static
    export function type(className: "java.awt.PrintJob"): _javatypes.java.lang.Class<_javatypes.java.awt.PrintJob> & _javatypes.java.awt.PrintJob.static
    export function type(className: "java.awt.JobAttributes"): _javatypes.java.lang.Class<_javatypes.java.awt.JobAttributes> & _javatypes.java.awt.JobAttributes.static
    export function type(className: "java.awt.PageAttributes"): _javatypes.java.lang.Class<_javatypes.java.awt.PageAttributes> & _javatypes.java.awt.PageAttributes.static
    export function type(className: "java.awt.EventQueue"): _javatypes.java.lang.Class<_javatypes.java.awt.EventQueue> & _javatypes.java.awt.EventQueue.static
    export function type(className: "java.awt.Dialog.ModalityType"): _javatypes.java.lang.Class<_javatypes.java.awt.Dialog.ModalityType> & _javatypes.java.awt.Dialog.ModalityType.static
    export function type(className: "java.awt.Component.BaselineResizeBehavior"): _javatypes.java.lang.Class<_javatypes.java.awt.Component.BaselineResizeBehavior> & _javatypes.java.awt.Component.BaselineResizeBehavior.static
    export function type(className: "java.awt.PopupMenu"): _javatypes.java.lang.Class<_javatypes.java.awt.PopupMenu> & _javatypes.java.awt.PopupMenu.static
    export function type(className: "java.awt.ComponentOrientation"): _javatypes.java.lang.Class<_javatypes.java.awt.ComponentOrientation> & _javatypes.java.awt.ComponentOrientation.static
    export function type(className: "java.awt.LayoutManager"): _javatypes.java.lang.Class<_javatypes.java.awt.LayoutManager> & _javatypes.java.awt.LayoutManager.static
    export function type(className: "java.awt.FocusTraversalPolicy"): _javatypes.java.lang.Class<_javatypes.java.awt.FocusTraversalPolicy> & _javatypes.java.awt.FocusTraversalPolicy.static
    export function type(className: "java.awt.JobAttributes.DefaultSelectionType"): _javatypes.java.lang.Class<_javatypes.java.awt.JobAttributes.DefaultSelectionType> & _javatypes.java.awt.JobAttributes.DefaultSelectionType.static
    export function type(className: "java.awt.JobAttributes.DestinationType"): _javatypes.java.lang.Class<_javatypes.java.awt.JobAttributes.DestinationType> & _javatypes.java.awt.JobAttributes.DestinationType.static
    export function type(className: "java.awt.JobAttributes.DialogType"): _javatypes.java.lang.Class<_javatypes.java.awt.JobAttributes.DialogType> & _javatypes.java.awt.JobAttributes.DialogType.static
    export function type(className: "java.awt.JobAttributes.MultipleDocumentHandlingType"): _javatypes.java.lang.Class<_javatypes.java.awt.JobAttributes.MultipleDocumentHandlingType> & _javatypes.java.awt.JobAttributes.MultipleDocumentHandlingType.static
    export function type(className: "java.awt.JobAttributes.SidesType"): _javatypes.java.lang.Class<_javatypes.java.awt.JobAttributes.SidesType> & _javatypes.java.awt.JobAttributes.SidesType.static
    export function type(className: "java.awt.SecondaryLoop"): _javatypes.java.lang.Class<_javatypes.java.awt.SecondaryLoop> & _javatypes.java.awt.SecondaryLoop.static
    export function type(className: "java.awt.Menu"): _javatypes.java.lang.Class<_javatypes.java.awt.Menu> & _javatypes.java.awt.Menu.static
    export function type(className: "java.awt.MenuShortcut"): _javatypes.java.lang.Class<_javatypes.java.awt.MenuShortcut> & _javatypes.java.awt.MenuShortcut.static
    export function type(className: "java.awt.MenuItem"): _javatypes.java.lang.Class<_javatypes.java.awt.MenuItem> & _javatypes.java.awt.MenuItem.static
    export function type(className: "java.awt.PageAttributes.ColorType"): _javatypes.java.lang.Class<_javatypes.java.awt.PageAttributes.ColorType> & _javatypes.java.awt.PageAttributes.ColorType.static
    export function type(className: "java.awt.PageAttributes.MediaType"): _javatypes.java.lang.Class<_javatypes.java.awt.PageAttributes.MediaType> & _javatypes.java.awt.PageAttributes.MediaType.static
    export function type(className: "java.awt.PageAttributes.OrientationRequestedType"): _javatypes.java.lang.Class<_javatypes.java.awt.PageAttributes.OrientationRequestedType> & _javatypes.java.awt.PageAttributes.OrientationRequestedType.static
    export function type(className: "java.awt.PageAttributes.OriginType"): _javatypes.java.lang.Class<_javatypes.java.awt.PageAttributes.OriginType> & _javatypes.java.awt.PageAttributes.OriginType.static
    export function type(className: "java.awt.PageAttributes.PrintQualityType"): _javatypes.java.lang.Class<_javatypes.java.awt.PageAttributes.PrintQualityType> & _javatypes.java.awt.PageAttributes.PrintQualityType.static
    export function type(className: "java.awt.image.BufferedImage"): _javatypes.java.lang.Class<_javatypes.java.awt.image.BufferedImage> & _javatypes.java.awt.image.BufferedImage.static
    export function type(className: "java.awt.image.ImageObserver"): _javatypes.java.lang.Class<_javatypes.java.awt.image.ImageObserver> & _javatypes.java.awt.image.ImageObserver.static
    export function type(className: "java.awt.image.ImageProducer"): _javatypes.java.lang.Class<_javatypes.java.awt.image.ImageProducer> & _javatypes.java.awt.image.ImageProducer.static
    export function type(className: "java.awt.image.WritableRenderedImage"): _javatypes.java.lang.Class<_javatypes.java.awt.image.WritableRenderedImage> & _javatypes.java.awt.image.WritableRenderedImage.static
    export function type(className: "java.awt.image.ColorModel"): _javatypes.java.lang.Class<_javatypes.java.awt.image.ColorModel> & _javatypes.java.awt.image.ColorModel.static
    export function type(className: "java.awt.image.WritableRaster"): _javatypes.java.lang.Class<_javatypes.java.awt.image.WritableRaster> & _javatypes.java.awt.image.WritableRaster.static
    export function type(className: "java.awt.image.RenderedImage"): _javatypes.java.lang.Class<_javatypes.java.awt.image.RenderedImage> & _javatypes.java.awt.image.RenderedImage.static
    export function type(className: "java.awt.image.SampleModel"): _javatypes.java.lang.Class<_javatypes.java.awt.image.SampleModel> & _javatypes.java.awt.image.SampleModel.static
    export function type(className: "java.awt.image.Raster"): _javatypes.java.lang.Class<_javatypes.java.awt.image.Raster> & _javatypes.java.awt.image.Raster.static
    export function type(className: "java.awt.image.TileObserver"): _javatypes.java.lang.Class<_javatypes.java.awt.image.TileObserver> & _javatypes.java.awt.image.TileObserver.static
    export function type(className: "java.awt.image.IndexColorModel"): _javatypes.java.lang.Class<_javatypes.java.awt.image.IndexColorModel> & _javatypes.java.awt.image.IndexColorModel.static
    export function type(className: "java.awt.image.ImageConsumer"): _javatypes.java.lang.Class<_javatypes.java.awt.image.ImageConsumer> & _javatypes.java.awt.image.ImageConsumer.static
    export function type(className: "java.awt.image.DataBuffer"): _javatypes.java.lang.Class<_javatypes.java.awt.image.DataBuffer> & _javatypes.java.awt.image.DataBuffer.static
    export function type(className: "java.awt.image.VolatileImage"): _javatypes.java.lang.Class<_javatypes.java.awt.image.VolatileImage> & _javatypes.java.awt.image.VolatileImage.static
    export function type(className: "java.awt.image.BufferedImageOp"): _javatypes.java.lang.Class<_javatypes.java.awt.image.BufferedImageOp> & _javatypes.java.awt.image.BufferedImageOp.static
    export function type(className: "java.awt.image.BufferStrategy"): _javatypes.java.lang.Class<_javatypes.java.awt.image.BufferStrategy> & _javatypes.java.awt.image.BufferStrategy.static
    export function type(className: "java.awt.image.renderable.RenderableImage"): _javatypes.java.lang.Class<_javatypes.java.awt.image.renderable.RenderableImage> & _javatypes.java.awt.image.renderable.RenderableImage.static
    export function type(className: "java.awt.image.renderable.RenderContext"): _javatypes.java.lang.Class<_javatypes.java.awt.image.renderable.RenderContext> & _javatypes.java.awt.image.renderable.RenderContext.static
    export function type(className: "java.awt.geom.Rectangle2D"): _javatypes.java.lang.Class<_javatypes.java.awt.geom.Rectangle2D> & _javatypes.java.awt.geom.Rectangle2D.static
    export function type(className: "java.awt.geom.RectangularShape"): _javatypes.java.lang.Class<_javatypes.java.awt.geom.RectangularShape> & _javatypes.java.awt.geom.RectangularShape.static
    export function type(className: "java.awt.geom.Line2D"): _javatypes.java.lang.Class<_javatypes.java.awt.geom.Line2D> & _javatypes.java.awt.geom.Line2D.static
    export function type(className: "java.awt.geom.Point2D"): _javatypes.java.lang.Class<_javatypes.java.awt.geom.Point2D> & _javatypes.java.awt.geom.Point2D.static
    export function type(className: "java.awt.geom.AffineTransform"): _javatypes.java.lang.Class<_javatypes.java.awt.geom.AffineTransform> & _javatypes.java.awt.geom.AffineTransform.static
    export function type(className: "java.awt.geom.PathIterator"): _javatypes.java.lang.Class<_javatypes.java.awt.geom.PathIterator> & _javatypes.java.awt.geom.PathIterator.static
    export function type(className: "java.awt.geom.Dimension2D"): _javatypes.java.lang.Class<_javatypes.java.awt.geom.Dimension2D> & _javatypes.java.awt.geom.Dimension2D.static
    export function type(className: "java.awt.color.ColorSpace"): _javatypes.java.lang.Class<_javatypes.java.awt.color.ColorSpace> & _javatypes.java.awt.color.ColorSpace.static
    export function type(className: "java.awt.font.GlyphVector"): _javatypes.java.lang.Class<_javatypes.java.awt.font.GlyphVector> & _javatypes.java.awt.font.GlyphVector.static
    export function type(className: "java.awt.font.FontRenderContext"): _javatypes.java.lang.Class<_javatypes.java.awt.font.FontRenderContext> & _javatypes.java.awt.font.FontRenderContext.static
    export function type(className: "java.awt.font.GlyphMetrics"): _javatypes.java.lang.Class<_javatypes.java.awt.font.GlyphMetrics> & _javatypes.java.awt.font.GlyphMetrics.static
    export function type(className: "java.awt.font.GlyphJustificationInfo"): _javatypes.java.lang.Class<_javatypes.java.awt.font.GlyphJustificationInfo> & _javatypes.java.awt.font.GlyphJustificationInfo.static
    export function type(className: "java.awt.font.TextAttribute"): _javatypes.java.lang.Class<_javatypes.java.awt.font.TextAttribute> & _javatypes.java.awt.font.TextAttribute.static
    export function type(className: "java.awt.font.LineMetrics"): _javatypes.java.lang.Class<_javatypes.java.awt.font.LineMetrics> & _javatypes.java.awt.font.LineMetrics.static
    export function type(className: "java.awt.font.TextHitInfo"): _javatypes.java.lang.Class<_javatypes.java.awt.font.TextHitInfo> & _javatypes.java.awt.font.TextHitInfo.static
    export function type(className: "java.awt.im.InputContext"): _javatypes.java.lang.Class<_javatypes.java.awt.im.InputContext> & _javatypes.java.awt.im.InputContext.static
    export function type(className: "java.awt.im.InputMethodHighlight"): _javatypes.java.lang.Class<_javatypes.java.awt.im.InputMethodHighlight> & _javatypes.java.awt.im.InputMethodHighlight.static
    export function type(className: "java.awt.im.InputMethodRequests"): _javatypes.java.lang.Class<_javatypes.java.awt.im.InputMethodRequests> & _javatypes.java.awt.im.InputMethodRequests.static
    export function type(className: "java.awt.event.WindowListener"): _javatypes.java.lang.Class<_javatypes.java.awt.event.WindowListener> & _javatypes.java.awt.event.WindowListener.static
    export function type(className: "java.awt.event.WindowStateListener"): _javatypes.java.lang.Class<_javatypes.java.awt.event.WindowStateListener> & _javatypes.java.awt.event.WindowStateListener.static
    export function type(className: "java.awt.event.WindowFocusListener"): _javatypes.java.lang.Class<_javatypes.java.awt.event.WindowFocusListener> & _javatypes.java.awt.event.WindowFocusListener.static
    export function type(className: "java.awt.event.WindowEvent"): _javatypes.java.lang.Class<_javatypes.java.awt.event.WindowEvent> & _javatypes.java.awt.event.WindowEvent.static
    export function type(className: "java.awt.event.ComponentEvent"): _javatypes.java.lang.Class<_javatypes.java.awt.event.ComponentEvent> & _javatypes.java.awt.event.ComponentEvent.static
    export function type(className: "java.awt.event.KeyEvent"): _javatypes.java.lang.Class<_javatypes.java.awt.event.KeyEvent> & _javatypes.java.awt.event.KeyEvent.static
    export function type(className: "java.awt.event.AWTEventListener"): _javatypes.java.lang.Class<_javatypes.java.awt.event.AWTEventListener> & _javatypes.java.awt.event.AWTEventListener.static
    export function type(className: "java.awt.event.ComponentListener"): _javatypes.java.lang.Class<_javatypes.java.awt.event.ComponentListener> & _javatypes.java.awt.event.ComponentListener.static
    export function type(className: "java.awt.event.FocusListener"): _javatypes.java.lang.Class<_javatypes.java.awt.event.FocusListener> & _javatypes.java.awt.event.FocusListener.static
    export function type(className: "java.awt.event.HierarchyListener"): _javatypes.java.lang.Class<_javatypes.java.awt.event.HierarchyListener> & _javatypes.java.awt.event.HierarchyListener.static
    export function type(className: "java.awt.event.HierarchyBoundsListener"): _javatypes.java.lang.Class<_javatypes.java.awt.event.HierarchyBoundsListener> & _javatypes.java.awt.event.HierarchyBoundsListener.static
    export function type(className: "java.awt.event.KeyListener"): _javatypes.java.lang.Class<_javatypes.java.awt.event.KeyListener> & _javatypes.java.awt.event.KeyListener.static
    export function type(className: "java.awt.event.MouseListener"): _javatypes.java.lang.Class<_javatypes.java.awt.event.MouseListener> & _javatypes.java.awt.event.MouseListener.static
    export function type(className: "java.awt.event.MouseMotionListener"): _javatypes.java.lang.Class<_javatypes.java.awt.event.MouseMotionListener> & _javatypes.java.awt.event.MouseMotionListener.static
    export function type(className: "java.awt.event.MouseWheelListener"): _javatypes.java.lang.Class<_javatypes.java.awt.event.MouseWheelListener> & _javatypes.java.awt.event.MouseWheelListener.static
    export function type(className: "java.awt.event.InputMethodListener"): _javatypes.java.lang.Class<_javatypes.java.awt.event.InputMethodListener> & _javatypes.java.awt.event.InputMethodListener.static
    export function type(className: "java.awt.event.FocusEvent.Cause"): _javatypes.java.lang.Class<_javatypes.java.awt.event.FocusEvent.Cause> & _javatypes.java.awt.event.FocusEvent.Cause.static
    export function type(className: "java.awt.event.ContainerListener"): _javatypes.java.lang.Class<_javatypes.java.awt.event.ContainerListener> & _javatypes.java.awt.event.ContainerListener.static
    export function type(className: "java.awt.event.InputEvent"): _javatypes.java.lang.Class<_javatypes.java.awt.event.InputEvent> & _javatypes.java.awt.event.InputEvent.static
    export function type(className: "java.awt.event.MouseEvent"): _javatypes.java.lang.Class<_javatypes.java.awt.event.MouseEvent> & _javatypes.java.awt.event.MouseEvent.static
    export function type(className: "java.awt.event.HierarchyEvent"): _javatypes.java.lang.Class<_javatypes.java.awt.event.HierarchyEvent> & _javatypes.java.awt.event.HierarchyEvent.static
    export function type(className: "java.awt.event.MouseWheelEvent"): _javatypes.java.lang.Class<_javatypes.java.awt.event.MouseWheelEvent> & _javatypes.java.awt.event.MouseWheelEvent.static
    export function type(className: "java.awt.event.FocusEvent"): _javatypes.java.lang.Class<_javatypes.java.awt.event.FocusEvent> & _javatypes.java.awt.event.FocusEvent.static
    export function type(className: "java.awt.event.ContainerEvent"): _javatypes.java.lang.Class<_javatypes.java.awt.event.ContainerEvent> & _javatypes.java.awt.event.ContainerEvent.static
    export function type(className: "java.awt.event.InputMethodEvent"): _javatypes.java.lang.Class<_javatypes.java.awt.event.InputMethodEvent> & _javatypes.java.awt.event.InputMethodEvent.static
    export function type(className: "java.awt.event.ActionListener"): _javatypes.java.lang.Class<_javatypes.java.awt.event.ActionListener> & _javatypes.java.awt.event.ActionListener.static
    export function type(className: "java.awt.event.ActionEvent"): _javatypes.java.lang.Class<_javatypes.java.awt.event.ActionEvent> & _javatypes.java.awt.event.ActionEvent.static
    export function type(className: "java.awt.datatransfer.Clipboard"): _javatypes.java.lang.Class<_javatypes.java.awt.datatransfer.Clipboard> & _javatypes.java.awt.datatransfer.Clipboard.static
    export function type(className: "java.awt.datatransfer.Transferable"): _javatypes.java.lang.Class<_javatypes.java.awt.datatransfer.Transferable> & _javatypes.java.awt.datatransfer.Transferable.static
    export function type(className: "java.awt.datatransfer.ClipboardOwner"): _javatypes.java.lang.Class<_javatypes.java.awt.datatransfer.ClipboardOwner> & _javatypes.java.awt.datatransfer.ClipboardOwner.static
    export function type(className: "java.awt.datatransfer.DataFlavor"): _javatypes.java.lang.Class<_javatypes.java.awt.datatransfer.DataFlavor> & _javatypes.java.awt.datatransfer.DataFlavor.static
    export function type(className: "java.awt.datatransfer.FlavorListener"): _javatypes.java.lang.Class<_javatypes.java.awt.datatransfer.FlavorListener> & _javatypes.java.awt.datatransfer.FlavorListener.static
    export function type(className: "java.awt.datatransfer.FlavorEvent"): _javatypes.java.lang.Class<_javatypes.java.awt.datatransfer.FlavorEvent> & _javatypes.java.awt.datatransfer.FlavorEvent.static
    export function type(className: "java.awt.datatransfer.FlavorMap"): _javatypes.java.lang.Class<_javatypes.java.awt.datatransfer.FlavorMap> & _javatypes.java.awt.datatransfer.FlavorMap.static
    export function type(className: "java.awt.dnd.DragSource"): _javatypes.java.lang.Class<_javatypes.java.awt.dnd.DragSource> & _javatypes.java.awt.dnd.DragSource.static
    export function type(className: "java.awt.dnd.DragGestureListener"): _javatypes.java.lang.Class<_javatypes.java.awt.dnd.DragGestureListener> & _javatypes.java.awt.dnd.DragGestureListener.static
    export function type(className: "java.awt.dnd.DropTarget"): _javatypes.java.lang.Class<_javatypes.java.awt.dnd.DropTarget> & _javatypes.java.awt.dnd.DropTarget.static
    export function type(className: "java.awt.dnd.DragGestureEvent"): _javatypes.java.lang.Class<_javatypes.java.awt.dnd.DragGestureEvent> & _javatypes.java.awt.dnd.DragGestureEvent.static
    export function type(className: "java.awt.dnd.DragSourceListener"): _javatypes.java.lang.Class<_javatypes.java.awt.dnd.DragSourceListener> & _javatypes.java.awt.dnd.DragSourceListener.static
    export function type(className: "java.awt.dnd.DragGestureRecognizer"): _javatypes.java.lang.Class<_javatypes.java.awt.dnd.DragGestureRecognizer> & _javatypes.java.awt.dnd.DragGestureRecognizer.static
    export function type(className: "java.awt.dnd.DragSourceMotionListener"): _javatypes.java.lang.Class<_javatypes.java.awt.dnd.DragSourceMotionListener> & _javatypes.java.awt.dnd.DragSourceMotionListener.static
    export function type(className: "java.awt.dnd.DropTargetListener"): _javatypes.java.lang.Class<_javatypes.java.awt.dnd.DropTargetListener> & _javatypes.java.awt.dnd.DropTargetListener.static
    export function type(className: "java.awt.dnd.DropTargetDragEvent"): _javatypes.java.lang.Class<_javatypes.java.awt.dnd.DropTargetDragEvent> & _javatypes.java.awt.dnd.DropTargetDragEvent.static
    export function type(className: "java.awt.dnd.DropTargetEvent"): _javatypes.java.lang.Class<_javatypes.java.awt.dnd.DropTargetEvent> & _javatypes.java.awt.dnd.DropTargetEvent.static
    export function type(className: "java.awt.dnd.DropTargetDropEvent"): _javatypes.java.lang.Class<_javatypes.java.awt.dnd.DropTargetDropEvent> & _javatypes.java.awt.dnd.DropTargetDropEvent.static
    export function type(className: "java.awt.dnd.DropTargetContext"): _javatypes.java.lang.Class<_javatypes.java.awt.dnd.DropTargetContext> & _javatypes.java.awt.dnd.DropTargetContext.static
    export function type(className: "java.awt.dnd.DragSourceDragEvent"): _javatypes.java.lang.Class<_javatypes.java.awt.dnd.DragSourceDragEvent> & _javatypes.java.awt.dnd.DragSourceDragEvent.static
    export function type(className: "java.awt.dnd.DragSourceEvent"): _javatypes.java.lang.Class<_javatypes.java.awt.dnd.DragSourceEvent> & _javatypes.java.awt.dnd.DragSourceEvent.static
    export function type(className: "java.awt.dnd.DragSourceDropEvent"): _javatypes.java.lang.Class<_javatypes.java.awt.dnd.DragSourceDropEvent> & _javatypes.java.awt.dnd.DragSourceDropEvent.static
    export function type(className: "java.awt.dnd.DragSourceContext"): _javatypes.java.lang.Class<_javatypes.java.awt.dnd.DragSourceContext> & _javatypes.java.awt.dnd.DragSourceContext.static
    export function type(className: "java.time.Instant"): _javatypes.java.lang.Class<_javatypes.java.time.Instant> & _javatypes.java.time.Instant.static
    export function type(className: "java.time.ZoneOffset"): _javatypes.java.lang.Class<_javatypes.java.time.ZoneOffset> & _javatypes.java.time.ZoneOffset.static
    export function type(className: "java.time.OffsetDateTime"): _javatypes.java.lang.Class<_javatypes.java.time.OffsetDateTime> & _javatypes.java.time.OffsetDateTime.static
    export function type(className: "java.time.ZoneId"): _javatypes.java.lang.Class<_javatypes.java.time.ZoneId> & _javatypes.java.time.ZoneId.static
    export function type(className: "java.time.ZonedDateTime"): _javatypes.java.lang.Class<_javatypes.java.time.ZonedDateTime> & _javatypes.java.time.ZonedDateTime.static
    export function type(className: "java.time.Clock"): _javatypes.java.lang.Class<_javatypes.java.time.Clock> & _javatypes.java.time.Clock.static
    export function type(className: "java.time.Duration"): _javatypes.java.lang.Class<_javatypes.java.time.Duration> & _javatypes.java.time.Duration.static
    export function type(className: "java.time.LocalDate"): _javatypes.java.lang.Class<_javatypes.java.time.LocalDate> & _javatypes.java.time.LocalDate.static
    export function type(className: "java.time.LocalDateTime"): _javatypes.java.lang.Class<_javatypes.java.time.LocalDateTime> & _javatypes.java.time.LocalDateTime.static
    export function type(className: "java.time.Month"): _javatypes.java.lang.Class<_javatypes.java.time.Month> & _javatypes.java.time.Month.static
    export function type(className: "java.time.DayOfWeek"): _javatypes.java.lang.Class<_javatypes.java.time.DayOfWeek> & _javatypes.java.time.DayOfWeek.static
    export function type(className: "java.time.LocalTime"): _javatypes.java.lang.Class<_javatypes.java.time.LocalTime> & _javatypes.java.time.LocalTime.static
    export function type(className: "java.time.InstantSource"): _javatypes.java.lang.Class<_javatypes.java.time.InstantSource> & _javatypes.java.time.InstantSource.static
    export function type(className: "java.time.OffsetTime"): _javatypes.java.lang.Class<_javatypes.java.time.OffsetTime> & _javatypes.java.time.OffsetTime.static
    export function type(className: "java.time.Period"): _javatypes.java.lang.Class<_javatypes.java.time.Period> & _javatypes.java.time.Period.static
    export function type(className: "java.time.temporal.Temporal"): _javatypes.java.lang.Class<_javatypes.java.time.temporal.Temporal> & _javatypes.java.time.temporal.Temporal.static
    export function type(className: "java.time.temporal.TemporalAdjuster"): _javatypes.java.lang.Class<_javatypes.java.time.temporal.TemporalAdjuster> & _javatypes.java.time.temporal.TemporalAdjuster.static
    export function type(className: "java.time.temporal.TemporalField"): _javatypes.java.lang.Class<_javatypes.java.time.temporal.TemporalField> & _javatypes.java.time.temporal.TemporalField.static
    export function type(className: "java.time.temporal.TemporalUnit"): _javatypes.java.lang.Class<_javatypes.java.time.temporal.TemporalUnit> & _javatypes.java.time.temporal.TemporalUnit.static
    export function type(className: "java.time.temporal.ValueRange"): _javatypes.java.lang.Class<_javatypes.java.time.temporal.ValueRange> & _javatypes.java.time.temporal.ValueRange.static
    export function type(className: "java.time.temporal.TemporalAmount"): _javatypes.java.lang.Class<_javatypes.java.time.temporal.TemporalAmount> & _javatypes.java.time.temporal.TemporalAmount.static
    export function type(className: "java.time.temporal.TemporalQuery"): _javatypes.java.lang.Class<_javatypes.java.time.temporal.TemporalQuery> & _javatypes.java.time.temporal.TemporalQuery.static
    export function type(className: "java.time.temporal.TemporalAccessor"): _javatypes.java.lang.Class<_javatypes.java.time.temporal.TemporalAccessor> & _javatypes.java.time.temporal.TemporalAccessor.static
    export function type(className: "java.time.temporal.ChronoField"): _javatypes.java.lang.Class<_javatypes.java.time.temporal.ChronoField> & _javatypes.java.time.temporal.ChronoField.static
    export function type(className: "java.time.temporal.ChronoUnit"): _javatypes.java.lang.Class<_javatypes.java.time.temporal.ChronoUnit> & _javatypes.java.time.temporal.ChronoUnit.static
    export function type(className: "java.time.format.ResolverStyle"): _javatypes.java.lang.Class<_javatypes.java.time.format.ResolverStyle> & _javatypes.java.time.format.ResolverStyle.static
    export function type(className: "java.time.format.DateTimeFormatter"): _javatypes.java.lang.Class<_javatypes.java.time.format.DateTimeFormatter> & _javatypes.java.time.format.DateTimeFormatter.static
    export function type(className: "java.time.format.TextStyle"): _javatypes.java.lang.Class<_javatypes.java.time.format.TextStyle> & _javatypes.java.time.format.TextStyle.static
    export function type(className: "java.time.format.DecimalStyle"): _javatypes.java.lang.Class<_javatypes.java.time.format.DecimalStyle> & _javatypes.java.time.format.DecimalStyle.static
    export function type(className: "java.time.format.FormatStyle"): _javatypes.java.lang.Class<_javatypes.java.time.format.FormatStyle> & _javatypes.java.time.format.FormatStyle.static
    export function type(className: "java.time.chrono.ChronoZonedDateTime"): _javatypes.java.lang.Class<_javatypes.java.time.chrono.ChronoZonedDateTime> & _javatypes.java.time.chrono.ChronoZonedDateTime.static
    export function type(className: "java.time.chrono.Chronology"): _javatypes.java.lang.Class<_javatypes.java.time.chrono.Chronology> & _javatypes.java.time.chrono.Chronology.static
    export function type(className: "java.time.chrono.ChronoLocalDateTime"): _javatypes.java.lang.Class<_javatypes.java.time.chrono.ChronoLocalDateTime> & _javatypes.java.time.chrono.ChronoLocalDateTime.static
    export function type(className: "java.time.chrono.Era"): _javatypes.java.lang.Class<_javatypes.java.time.chrono.Era> & _javatypes.java.time.chrono.Era.static
    export function type(className: "java.time.chrono.ChronoLocalDate"): _javatypes.java.lang.Class<_javatypes.java.time.chrono.ChronoLocalDate> & _javatypes.java.time.chrono.ChronoLocalDate.static
    export function type(className: "java.time.chrono.ChronoPeriod"): _javatypes.java.lang.Class<_javatypes.java.time.chrono.ChronoPeriod> & _javatypes.java.time.chrono.ChronoPeriod.static
    export function type(className: "java.time.chrono.IsoChronology"): _javatypes.java.lang.Class<_javatypes.java.time.chrono.IsoChronology> & _javatypes.java.time.chrono.IsoChronology.static
    export function type(className: "java.time.chrono.IsoEra"): _javatypes.java.lang.Class<_javatypes.java.time.chrono.IsoEra> & _javatypes.java.time.chrono.IsoEra.static
    export function type(className: "java.time.chrono.AbstractChronology"): _javatypes.java.lang.Class<_javatypes.java.time.chrono.AbstractChronology> & _javatypes.java.time.chrono.AbstractChronology.static
    export function type(className: "java.time.zone.ZoneRules"): _javatypes.java.lang.Class<_javatypes.java.time.zone.ZoneRules> & _javatypes.java.time.zone.ZoneRules.static
    export function type(className: "java.time.zone.ZoneOffsetTransition"): _javatypes.java.lang.Class<_javatypes.java.time.zone.ZoneOffsetTransition> & _javatypes.java.time.zone.ZoneOffsetTransition.static
    export function type(className: "java.time.zone.ZoneOffsetTransitionRule"): _javatypes.java.lang.Class<_javatypes.java.time.zone.ZoneOffsetTransitionRule> & _javatypes.java.time.zone.ZoneOffsetTransitionRule.static
    export function type(className: "java.time.zone.ZoneOffsetTransitionRule.TimeDefinition"): _javatypes.java.lang.Class<_javatypes.java.time.zone.ZoneOffsetTransitionRule.TimeDefinition> & _javatypes.java.time.zone.ZoneOffsetTransitionRule.TimeDefinition.static
    export function type(className: "java.security.PublicKey"): _javatypes.java.lang.Class<_javatypes.java.security.PublicKey> & _javatypes.java.security.PublicKey.static
    export function type(className: "java.security.Principal"): _javatypes.java.lang.Class<_javatypes.java.security.Principal> & _javatypes.java.security.Principal.static
    export function type(className: "java.security.Key"): _javatypes.java.lang.Class<_javatypes.java.security.Key> & _javatypes.java.security.Key.static
    export function type(className: "java.security.AccessControlContext"): _javatypes.java.lang.Class<_javatypes.java.security.AccessControlContext> & _javatypes.java.security.AccessControlContext.static
    export function type(className: "java.security.PrivilegedAction"): _javatypes.java.lang.Class<_javatypes.java.security.PrivilegedAction> & _javatypes.java.security.PrivilegedAction.static
    export function type(className: "java.security.PrivilegedExceptionAction"): _javatypes.java.lang.Class<_javatypes.java.security.PrivilegedExceptionAction> & _javatypes.java.security.PrivilegedExceptionAction.static
    export function type(className: "java.security.ProtectionDomain"): _javatypes.java.lang.Class<_javatypes.java.security.ProtectionDomain> & _javatypes.java.security.ProtectionDomain.static
    export function type(className: "java.security.DomainCombiner"): _javatypes.java.lang.Class<_javatypes.java.security.DomainCombiner> & _javatypes.java.security.DomainCombiner.static
    export function type(className: "java.security.Permission"): _javatypes.java.lang.Class<_javatypes.java.security.Permission> & _javatypes.java.security.Permission.static
    export function type(className: "java.security.CodeSource"): _javatypes.java.lang.Class<_javatypes.java.security.CodeSource> & _javatypes.java.security.CodeSource.static
    export function type(className: "java.security.PermissionCollection"): _javatypes.java.lang.Class<_javatypes.java.security.PermissionCollection> & _javatypes.java.security.PermissionCollection.static
    export function type(className: "java.security.CodeSigner"): _javatypes.java.lang.Class<_javatypes.java.security.CodeSigner> & _javatypes.java.security.CodeSigner.static
    export function type(className: "java.security.Guard"): _javatypes.java.lang.Class<_javatypes.java.security.Guard> & _javatypes.java.security.Guard.static
    export function type(className: "java.security.Provider"): _javatypes.java.lang.Class<_javatypes.java.security.Provider> & _javatypes.java.security.Provider.static
    export function type(className: "java.security.Provider.Service"): _javatypes.java.lang.Class<_javatypes.java.security.Provider.Service> & _javatypes.java.security.Provider.Service.static
    export function type(className: "java.security.Timestamp"): _javatypes.java.lang.Class<_javatypes.java.security.Timestamp> & _javatypes.java.security.Timestamp.static
    export function type(className: "java.security.cert.Certificate"): _javatypes.java.lang.Class<_javatypes.java.security.cert.Certificate> & _javatypes.java.security.cert.Certificate.static
    export function type(className: "java.security.cert.CertPath"): _javatypes.java.lang.Class<_javatypes.java.security.cert.CertPath> & _javatypes.java.security.cert.CertPath.static
    export function type(className: "java.math.BigInteger"): _javatypes.java.lang.Class<_javatypes.java.math.BigInteger> & _javatypes.java.math.BigInteger.static
    export function type(className: "java.math.BigDecimal"): _javatypes.java.lang.Class<_javatypes.java.math.BigDecimal> & _javatypes.java.math.BigDecimal.static
    export function type(className: "java.math.RoundingMode"): _javatypes.java.lang.Class<_javatypes.java.math.RoundingMode> & _javatypes.java.math.RoundingMode.static
    export function type(className: "java.math.MathContext"): _javatypes.java.lang.Class<_javatypes.java.math.MathContext> & _javatypes.java.math.MathContext.static
    export function type(className: "java.text.AttributedCharacterIterator"): _javatypes.java.lang.Class<_javatypes.java.text.AttributedCharacterIterator> & _javatypes.java.text.AttributedCharacterIterator.static
    export function type(className: "java.text.AttributedCharacterIterator.Attribute"): _javatypes.java.lang.Class<_javatypes.java.text.AttributedCharacterIterator.Attribute> & _javatypes.java.text.AttributedCharacterIterator.Attribute.static
    export function type(className: "java.text.CharacterIterator"): _javatypes.java.lang.Class<_javatypes.java.text.CharacterIterator> & _javatypes.java.text.CharacterIterator.static
    export function type(className: "java.text.ParsePosition"): _javatypes.java.lang.Class<_javatypes.java.text.ParsePosition> & _javatypes.java.text.ParsePosition.static
    export function type(className: "java.text.Format"): _javatypes.java.lang.Class<_javatypes.java.text.Format> & _javatypes.java.text.Format.static
    export function type(className: "java.text.FieldPosition"): _javatypes.java.lang.Class<_javatypes.java.text.FieldPosition> & _javatypes.java.text.FieldPosition.static
    export function type(className: "java.text.Format.Field"): _javatypes.java.lang.Class<_javatypes.java.text.Format.Field> & _javatypes.java.text.Format.Field.static
    export function type(className: "java.text.NumberFormat"): _javatypes.java.lang.Class<_javatypes.java.text.NumberFormat> & _javatypes.java.text.NumberFormat.static
    export function type(className: "java.text.NumberFormat.Style"): _javatypes.java.lang.Class<_javatypes.java.text.NumberFormat.Style> & _javatypes.java.text.NumberFormat.Style.static
    export function type(className: "java.beans.PropertyChangeListener"): _javatypes.java.lang.Class<_javatypes.java.beans.PropertyChangeListener> & _javatypes.java.beans.PropertyChangeListener.static
    export function type(className: "java.beans.PropertyChangeEvent"): _javatypes.java.lang.Class<_javatypes.java.beans.PropertyChangeEvent> & _javatypes.java.beans.PropertyChangeEvent.static
    export function type(className: "java.net.Socket"): _javatypes.java.lang.Class<_javatypes.java.net.Socket> & _javatypes.java.net.Socket.static
    export function type(className: "java.net.SocketAddress"): _javatypes.java.lang.Class<_javatypes.java.net.SocketAddress> & _javatypes.java.net.SocketAddress.static
    export function type(className: "java.net.InetAddress"): _javatypes.java.lang.Class<_javatypes.java.net.InetAddress> & _javatypes.java.net.InetAddress.static
    export function type(className: "java.net.SocketOption"): _javatypes.java.lang.Class<_javatypes.java.net.SocketOption> & _javatypes.java.net.SocketOption.static
    export function type(className: "java.net.Proxy"): _javatypes.java.lang.Class<_javatypes.java.net.Proxy> & _javatypes.java.net.Proxy.static
    export function type(className: "java.net.SocketImplFactory"): _javatypes.java.lang.Class<_javatypes.java.net.SocketImplFactory> & _javatypes.java.net.SocketImplFactory.static
    export function type(className: "java.net.NetworkInterface"): _javatypes.java.lang.Class<_javatypes.java.net.NetworkInterface> & _javatypes.java.net.NetworkInterface.static
    export function type(className: "java.net.SocketImpl"): _javatypes.java.lang.Class<_javatypes.java.net.SocketImpl> & _javatypes.java.net.SocketImpl.static
    export function type(className: "java.net.Proxy.Type"): _javatypes.java.lang.Class<_javatypes.java.net.Proxy.Type> & _javatypes.java.net.Proxy.Type.static
    export function type(className: "java.net.InterfaceAddress"): _javatypes.java.lang.Class<_javatypes.java.net.InterfaceAddress> & _javatypes.java.net.InterfaceAddress.static
    export function type(className: "java.net.SocketOptions"): _javatypes.java.lang.Class<_javatypes.java.net.SocketOptions> & _javatypes.java.net.SocketOptions.static
    export function type(className: "java.net.ProtocolFamily"): _javatypes.java.lang.Class<_javatypes.java.net.ProtocolFamily> & _javatypes.java.net.ProtocolFamily.static
    export function type(className: "java.net.DatagramSocket"): _javatypes.java.lang.Class<_javatypes.java.net.DatagramSocket> & _javatypes.java.net.DatagramSocket.static
    export function type(className: "java.net.ServerSocket"): _javatypes.java.lang.Class<_javatypes.java.net.ServerSocket> & _javatypes.java.net.ServerSocket.static
    export function type(className: "java.net.DatagramPacket"): _javatypes.java.lang.Class<_javatypes.java.net.DatagramPacket> & _javatypes.java.net.DatagramPacket.static
    export function type(className: "java.net.DatagramSocketImplFactory"): _javatypes.java.lang.Class<_javatypes.java.net.DatagramSocketImplFactory> & _javatypes.java.net.DatagramSocketImplFactory.static
    export function type(className: "java.net.DatagramSocketImpl"): _javatypes.java.lang.Class<_javatypes.java.net.DatagramSocketImpl> & _javatypes.java.net.DatagramSocketImpl.static
    export function type(className: "org.slf4j.Logger"): _javatypes.java.lang.Class<_javatypes.org.slf4j.Logger> & _javatypes.org.slf4j.Logger.static
    export function type(className: "org.slf4j.Marker"): _javatypes.java.lang.Class<_javatypes.org.slf4j.Marker> & _javatypes.org.slf4j.Marker.static
    export function type(className: "org.slf4j.event.Level"): _javatypes.java.lang.Class<_javatypes.org.slf4j.event.Level> & _javatypes.org.slf4j.event.Level.static
    export function type(className: "org.slf4j.spi.LoggingEventBuilder"): _javatypes.java.lang.Class<_javatypes.org.slf4j.spi.LoggingEventBuilder> & _javatypes.org.slf4j.spi.LoggingEventBuilder.static
    export function type(className: "org.joor.Reflect"): _javatypes.java.lang.Class<_javatypes.org.joor.Reflect> & _javatypes.org.joor.Reflect.static
    export function type(className: "org.joor.CompileOptions"): _javatypes.java.lang.Class<_javatypes.org.joor.CompileOptions> & _javatypes.org.joor.CompileOptions.static
    export function type(className: "org.joml.Vector3f"): _javatypes.java.lang.Class<_javatypes.org.joml.Vector3f> & _javatypes.org.joml.Vector3f.static
    export function type(className: "org.joml.Vector3fc"): _javatypes.java.lang.Class<_javatypes.org.joml.Vector3fc> & _javatypes.org.joml.Vector3fc.static
    export function type(className: "org.joml.Vector3dc"): _javatypes.java.lang.Class<_javatypes.org.joml.Vector3dc> & _javatypes.org.joml.Vector3dc.static
    export function type(className: "org.joml.Vector3ic"): _javatypes.java.lang.Class<_javatypes.org.joml.Vector3ic> & _javatypes.org.joml.Vector3ic.static
    export function type(className: "org.joml.Vector2fc"): _javatypes.java.lang.Class<_javatypes.org.joml.Vector2fc> & _javatypes.org.joml.Vector2fc.static
    export function type(className: "org.joml.Vector2dc"): _javatypes.java.lang.Class<_javatypes.org.joml.Vector2dc> & _javatypes.org.joml.Vector2dc.static
    export function type(className: "org.joml.Vector2ic"): _javatypes.java.lang.Class<_javatypes.org.joml.Vector2ic> & _javatypes.org.joml.Vector2ic.static
    export function type(className: "org.joml.Matrix4fc"): _javatypes.java.lang.Class<_javatypes.org.joml.Matrix4fc> & _javatypes.org.joml.Matrix4fc.static
    export function type(className: "org.joml.Matrix3fc"): _javatypes.java.lang.Class<_javatypes.org.joml.Matrix3fc> & _javatypes.org.joml.Matrix3fc.static
    export function type(className: "org.joml.Matrix3dc"): _javatypes.java.lang.Class<_javatypes.org.joml.Matrix3dc> & _javatypes.org.joml.Matrix3dc.static
    export function type(className: "org.joml.Matrix3x2fc"): _javatypes.java.lang.Class<_javatypes.org.joml.Matrix3x2fc> & _javatypes.org.joml.Matrix3x2fc.static
    export function type(className: "org.joml.Matrix4x3fc"): _javatypes.java.lang.Class<_javatypes.org.joml.Matrix4x3fc> & _javatypes.org.joml.Matrix4x3fc.static
    export function type(className: "org.joml.Matrix4dc"): _javatypes.java.lang.Class<_javatypes.org.joml.Matrix4dc> & _javatypes.org.joml.Matrix4dc.static
    export function type(className: "org.joml.Quaternionfc"): _javatypes.java.lang.Class<_javatypes.org.joml.Quaternionfc> & _javatypes.org.joml.Quaternionfc.static
    export function type(className: "org.joml.Quaternionf"): _javatypes.java.lang.Class<_javatypes.org.joml.Quaternionf> & _javatypes.org.joml.Quaternionf.static
    export function type(className: "org.joml.Vector3i"): _javatypes.java.lang.Class<_javatypes.org.joml.Vector3i> & _javatypes.org.joml.Vector3i.static
    export function type(className: "org.joml.Vector3d"): _javatypes.java.lang.Class<_javatypes.org.joml.Vector3d> & _javatypes.org.joml.Vector3d.static
    export function type(className: "org.joml.Matrix3f"): _javatypes.java.lang.Class<_javatypes.org.joml.Matrix3f> & _javatypes.org.joml.Matrix3f.static
    export function type(className: "org.joml.Matrix4f"): _javatypes.java.lang.Class<_javatypes.org.joml.Matrix4f> & _javatypes.org.joml.Matrix4f.static
    export function type(className: "org.joml.AxisAngle4f"): _javatypes.java.lang.Class<_javatypes.org.joml.AxisAngle4f> & _javatypes.org.joml.AxisAngle4f.static
    export function type(className: "org.joml.Quaterniond"): _javatypes.java.lang.Class<_javatypes.org.joml.Quaterniond> & _javatypes.org.joml.Quaterniond.static
    export function type(className: "org.joml.Matrix3x2dc"): _javatypes.java.lang.Class<_javatypes.org.joml.Matrix3x2dc> & _javatypes.org.joml.Matrix3x2dc.static
    export function type(className: "org.joml.Matrix4x3dc"): _javatypes.java.lang.Class<_javatypes.org.joml.Matrix4x3dc> & _javatypes.org.joml.Matrix4x3dc.static
    export function type(className: "org.joml.Quaterniondc"): _javatypes.java.lang.Class<_javatypes.org.joml.Quaterniondc> & _javatypes.org.joml.Quaterniondc.static
    export function type(className: "org.joml.Vector2d"): _javatypes.java.lang.Class<_javatypes.org.joml.Vector2d> & _javatypes.org.joml.Vector2d.static
    export function type(className: "org.joml.Matrix2dc"): _javatypes.java.lang.Class<_javatypes.org.joml.Matrix2dc> & _javatypes.org.joml.Matrix2dc.static
    export function type(className: "org.joml.Matrix2fc"): _javatypes.java.lang.Class<_javatypes.org.joml.Matrix2fc> & _javatypes.org.joml.Matrix2fc.static
    export function type(className: "org.joml.Vector2i"): _javatypes.java.lang.Class<_javatypes.org.joml.Vector2i> & _javatypes.org.joml.Vector2i.static
    export function type(className: "org.joml.Vector2f"): _javatypes.java.lang.Class<_javatypes.org.joml.Vector2f> & _javatypes.org.joml.Vector2f.static
    export function type(className: "org.joml.Matrix3d"): _javatypes.java.lang.Class<_javatypes.org.joml.Matrix3d> & _javatypes.org.joml.Matrix3d.static
    export function type(className: "org.joml.Matrix4d"): _javatypes.java.lang.Class<_javatypes.org.joml.Matrix4d> & _javatypes.org.joml.Matrix4d.static
    export function type(className: "org.joml.Matrix4x3f"): _javatypes.java.lang.Class<_javatypes.org.joml.Matrix4x3f> & _javatypes.org.joml.Matrix4x3f.static
    export function type(className: "org.joml.Matrix4x3d"): _javatypes.java.lang.Class<_javatypes.org.joml.Matrix4x3d> & _javatypes.org.joml.Matrix4x3d.static
    export function type(className: "org.joml.AxisAngle4d"): _javatypes.java.lang.Class<_javatypes.org.joml.AxisAngle4d> & _javatypes.org.joml.AxisAngle4d.static
    export function type(className: "org.joml.Vector4f"): _javatypes.java.lang.Class<_javatypes.org.joml.Vector4f> & _javatypes.org.joml.Vector4f.static
    export function type(className: "org.joml.Vector4fc"): _javatypes.java.lang.Class<_javatypes.org.joml.Vector4fc> & _javatypes.org.joml.Vector4fc.static
    export function type(className: "org.joml.Vector4d"): _javatypes.java.lang.Class<_javatypes.org.joml.Vector4d> & _javatypes.org.joml.Vector4d.static
    export function type(className: "org.joml.Vector4dc"): _javatypes.java.lang.Class<_javatypes.org.joml.Vector4dc> & _javatypes.org.joml.Vector4dc.static
    export function type(className: "org.joml.Matrix3x2f"): _javatypes.java.lang.Class<_javatypes.org.joml.Matrix3x2f> & _javatypes.org.joml.Matrix3x2f.static
    export function type(className: "org.joml.Vector4i"): _javatypes.java.lang.Class<_javatypes.org.joml.Vector4i> & _javatypes.org.joml.Vector4i.static
    export function type(className: "org.joml.Vector4ic"): _javatypes.java.lang.Class<_javatypes.org.joml.Vector4ic> & _javatypes.org.joml.Vector4ic.static
    export function type(className: "org.joml.Matrix3x2d"): _javatypes.java.lang.Class<_javatypes.org.joml.Matrix3x2d> & _javatypes.org.joml.Matrix3x2d.static
    export function type(className: "org.joml.Matrix2d"): _javatypes.java.lang.Class<_javatypes.org.joml.Matrix2d> & _javatypes.org.joml.Matrix2d.static
    export function type(className: "org.joml.Matrix2f"): _javatypes.java.lang.Class<_javatypes.org.joml.Matrix2f> & _javatypes.org.joml.Matrix2f.static
    export function type(className: "javax.sound.sampled.Clip"): _javatypes.java.lang.Class<_javatypes.javax.sound.sampled.Clip> & _javatypes.javax.sound.sampled.Clip.static
    export function type(className: "javax.sound.sampled.DataLine"): _javatypes.java.lang.Class<_javatypes.javax.sound.sampled.DataLine> & _javatypes.javax.sound.sampled.DataLine.static
    export function type(className: "javax.sound.sampled.AudioFormat"): _javatypes.java.lang.Class<_javatypes.javax.sound.sampled.AudioFormat> & _javatypes.javax.sound.sampled.AudioFormat.static
    export function type(className: "javax.sound.sampled.AudioInputStream"): _javatypes.java.lang.Class<_javatypes.javax.sound.sampled.AudioInputStream> & _javatypes.javax.sound.sampled.AudioInputStream.static
    export function type(className: "javax.sound.sampled.AudioFormat.Encoding"): _javatypes.java.lang.Class<_javatypes.javax.sound.sampled.AudioFormat.Encoding> & _javatypes.javax.sound.sampled.AudioFormat.Encoding.static
    export function type(className: "javax.sound.sampled.TargetDataLine"): _javatypes.java.lang.Class<_javatypes.javax.sound.sampled.TargetDataLine> & _javatypes.javax.sound.sampled.TargetDataLine.static
    export function type(className: "javax.sound.sampled.Line"): _javatypes.java.lang.Class<_javatypes.javax.sound.sampled.Line> & _javatypes.javax.sound.sampled.Line.static
    export function type(className: "javax.sound.sampled.Line.Info"): _javatypes.java.lang.Class<_javatypes.javax.sound.sampled.Line.Info> & _javatypes.javax.sound.sampled.Line.Info.static
    export function type(className: "javax.sound.sampled.Control"): _javatypes.java.lang.Class<_javatypes.javax.sound.sampled.Control> & _javatypes.javax.sound.sampled.Control.static
    export function type(className: "javax.sound.sampled.Control.Type"): _javatypes.java.lang.Class<_javatypes.javax.sound.sampled.Control.Type> & _javatypes.javax.sound.sampled.Control.Type.static
    export function type(className: "javax.sound.sampled.LineListener"): _javatypes.java.lang.Class<_javatypes.javax.sound.sampled.LineListener> & _javatypes.javax.sound.sampled.LineListener.static
    export function type(className: "javax.sound.sampled.LineEvent"): _javatypes.java.lang.Class<_javatypes.javax.sound.sampled.LineEvent> & _javatypes.javax.sound.sampled.LineEvent.static
    export function type(className: "javax.sound.sampled.LineEvent.Type"): _javatypes.java.lang.Class<_javatypes.javax.sound.sampled.LineEvent.Type> & _javatypes.javax.sound.sampled.LineEvent.Type.static
    export function type(className: "javax.accessibility.Accessible"): _javatypes.java.lang.Class<_javatypes.javax.accessibility.Accessible> & _javatypes.javax.accessibility.Accessible.static
    export function type(className: "javax.accessibility.AccessibleContext"): _javatypes.java.lang.Class<_javatypes.javax.accessibility.AccessibleContext> & _javatypes.javax.accessibility.AccessibleContext.static
    export function type(className: "javax.accessibility.AccessibleRole"): _javatypes.java.lang.Class<_javatypes.javax.accessibility.AccessibleRole> & _javatypes.javax.accessibility.AccessibleRole.static
    export function type(className: "javax.accessibility.AccessibleStateSet"): _javatypes.java.lang.Class<_javatypes.javax.accessibility.AccessibleStateSet> & _javatypes.javax.accessibility.AccessibleStateSet.static
    export function type(className: "javax.accessibility.AccessibleAction"): _javatypes.java.lang.Class<_javatypes.javax.accessibility.AccessibleAction> & _javatypes.javax.accessibility.AccessibleAction.static
    export function type(className: "javax.accessibility.AccessibleComponent"): _javatypes.java.lang.Class<_javatypes.javax.accessibility.AccessibleComponent> & _javatypes.javax.accessibility.AccessibleComponent.static
    export function type(className: "javax.accessibility.AccessibleSelection"): _javatypes.java.lang.Class<_javatypes.javax.accessibility.AccessibleSelection> & _javatypes.javax.accessibility.AccessibleSelection.static
    export function type(className: "javax.accessibility.AccessibleText"): _javatypes.java.lang.Class<_javatypes.javax.accessibility.AccessibleText> & _javatypes.javax.accessibility.AccessibleText.static
    export function type(className: "javax.accessibility.AccessibleEditableText"): _javatypes.java.lang.Class<_javatypes.javax.accessibility.AccessibleEditableText> & _javatypes.javax.accessibility.AccessibleEditableText.static
    export function type(className: "javax.accessibility.AccessibleValue"): _javatypes.java.lang.Class<_javatypes.javax.accessibility.AccessibleValue> & _javatypes.javax.accessibility.AccessibleValue.static
    export function type(className: "javax.accessibility.AccessibleIcon"): _javatypes.java.lang.Class<_javatypes.javax.accessibility.AccessibleIcon> & _javatypes.javax.accessibility.AccessibleIcon.static
    export function type(className: "javax.accessibility.AccessibleRelationSet"): _javatypes.java.lang.Class<_javatypes.javax.accessibility.AccessibleRelationSet> & _javatypes.javax.accessibility.AccessibleRelationSet.static
    export function type(className: "javax.accessibility.AccessibleTable"): _javatypes.java.lang.Class<_javatypes.javax.accessibility.AccessibleTable> & _javatypes.javax.accessibility.AccessibleTable.static
    export function type(className: "javax.accessibility.AccessibleState"): _javatypes.java.lang.Class<_javatypes.javax.accessibility.AccessibleState> & _javatypes.javax.accessibility.AccessibleState.static
    export function type(className: "javax.accessibility.AccessibleRelation"): _javatypes.java.lang.Class<_javatypes.javax.accessibility.AccessibleRelation> & _javatypes.javax.accessibility.AccessibleRelation.static
    export function type(className: "javax.accessibility.AccessibleBundle"): _javatypes.java.lang.Class<_javatypes.javax.accessibility.AccessibleBundle> & _javatypes.javax.accessibility.AccessibleBundle.static
    export function type(className: "javax.security.auth.Subject"): _javatypes.java.lang.Class<_javatypes.javax.security.auth.Subject> & _javatypes.javax.security.auth.Subject.static
    export function type(className: "javax.annotation.processing.Processor"): _javatypes.java.lang.Class<_javatypes.javax.annotation.processing.Processor> & _javatypes.javax.annotation.processing.Processor.static
    export function type(className: "javax.annotation.processing.ProcessingEnvironment"): _javatypes.java.lang.Class<_javatypes.javax.annotation.processing.ProcessingEnvironment> & _javatypes.javax.annotation.processing.ProcessingEnvironment.static
    export function type(className: "javax.annotation.processing.RoundEnvironment"): _javatypes.java.lang.Class<_javatypes.javax.annotation.processing.RoundEnvironment> & _javatypes.javax.annotation.processing.RoundEnvironment.static
    export function type(className: "javax.annotation.processing.Messager"): _javatypes.java.lang.Class<_javatypes.javax.annotation.processing.Messager> & _javatypes.javax.annotation.processing.Messager.static
    export function type(className: "javax.annotation.processing.Filer"): _javatypes.java.lang.Class<_javatypes.javax.annotation.processing.Filer> & _javatypes.javax.annotation.processing.Filer.static
    export function type(className: "javax.lang.model.SourceVersion"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.SourceVersion> & _javatypes.javax.lang.model.SourceVersion.static
    export function type(className: "javax.lang.model.AnnotatedConstruct"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.AnnotatedConstruct> & _javatypes.javax.lang.model.AnnotatedConstruct.static
    export function type(className: "javax.lang.model.element.Element"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.element.Element> & _javatypes.javax.lang.model.element.Element.static
    export function type(className: "javax.lang.model.element.AnnotationMirror"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.element.AnnotationMirror> & _javatypes.javax.lang.model.element.AnnotationMirror.static
    export function type(className: "javax.lang.model.element.ExecutableElement"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.element.ExecutableElement> & _javatypes.javax.lang.model.element.ExecutableElement.static
    export function type(className: "javax.lang.model.element.TypeElement"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.element.TypeElement> & _javatypes.javax.lang.model.element.TypeElement.static
    export function type(className: "javax.lang.model.element.AnnotationValue"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.element.AnnotationValue> & _javatypes.javax.lang.model.element.AnnotationValue.static
    export function type(className: "javax.lang.model.element.ElementKind"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.element.ElementKind> & _javatypes.javax.lang.model.element.ElementKind.static
    export function type(className: "javax.lang.model.element.Modifier"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.element.Modifier> & _javatypes.javax.lang.model.element.Modifier.static
    export function type(className: "javax.lang.model.element.Name"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.element.Name> & _javatypes.javax.lang.model.element.Name.static
    export function type(className: "javax.lang.model.element.ElementVisitor"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.element.ElementVisitor> & _javatypes.javax.lang.model.element.ElementVisitor.static
    export function type(className: "javax.lang.model.element.Parameterizable"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.element.Parameterizable> & _javatypes.javax.lang.model.element.Parameterizable.static
    export function type(className: "javax.lang.model.element.AnnotationValueVisitor"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.element.AnnotationValueVisitor> & _javatypes.javax.lang.model.element.AnnotationValueVisitor.static
    export function type(className: "javax.lang.model.element.QualifiedNameable"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.element.QualifiedNameable> & _javatypes.javax.lang.model.element.QualifiedNameable.static
    export function type(className: "javax.lang.model.element.NestingKind"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.element.NestingKind> & _javatypes.javax.lang.model.element.NestingKind.static
    export function type(className: "javax.lang.model.element.VariableElement"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.element.VariableElement> & _javatypes.javax.lang.model.element.VariableElement.static
    export function type(className: "javax.lang.model.element.PackageElement"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.element.PackageElement> & _javatypes.javax.lang.model.element.PackageElement.static
    export function type(className: "javax.lang.model.element.TypeParameterElement"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.element.TypeParameterElement> & _javatypes.javax.lang.model.element.TypeParameterElement.static
    export function type(className: "javax.lang.model.element.ModuleElement"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.element.ModuleElement> & _javatypes.javax.lang.model.element.ModuleElement.static
    export function type(className: "javax.lang.model.element.RecordComponentElement"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.element.RecordComponentElement> & _javatypes.javax.lang.model.element.RecordComponentElement.static
    export function type(className: "javax.lang.model.element.ModuleElement.Directive"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.element.ModuleElement.Directive> & _javatypes.javax.lang.model.element.ModuleElement.Directive.static
    export function type(className: "javax.lang.model.element.ModuleElement.DirectiveKind"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.element.ModuleElement.DirectiveKind> & _javatypes.javax.lang.model.element.ModuleElement.DirectiveKind.static
    export function type(className: "javax.lang.model.element.ModuleElement.DirectiveVisitor"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.element.ModuleElement.DirectiveVisitor> & _javatypes.javax.lang.model.element.ModuleElement.DirectiveVisitor.static
    export function type(className: "javax.lang.model.element.ModuleElement.RequiresDirective"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.element.ModuleElement.RequiresDirective> & _javatypes.javax.lang.model.element.ModuleElement.RequiresDirective.static
    export function type(className: "javax.lang.model.element.ModuleElement.ExportsDirective"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.element.ModuleElement.ExportsDirective> & _javatypes.javax.lang.model.element.ModuleElement.ExportsDirective.static
    export function type(className: "javax.lang.model.element.ModuleElement.OpensDirective"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.element.ModuleElement.OpensDirective> & _javatypes.javax.lang.model.element.ModuleElement.OpensDirective.static
    export function type(className: "javax.lang.model.element.ModuleElement.UsesDirective"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.element.ModuleElement.UsesDirective> & _javatypes.javax.lang.model.element.ModuleElement.UsesDirective.static
    export function type(className: "javax.lang.model.element.ModuleElement.ProvidesDirective"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.element.ModuleElement.ProvidesDirective> & _javatypes.javax.lang.model.element.ModuleElement.ProvidesDirective.static
    export function type(className: "javax.lang.model.util.Elements"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.util.Elements> & _javatypes.javax.lang.model.util.Elements.static
    export function type(className: "javax.lang.model.util.Types"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.util.Types> & _javatypes.javax.lang.model.util.Types.static
    export function type(className: "javax.lang.model.util.Elements.Origin"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.util.Elements.Origin> & _javatypes.javax.lang.model.util.Elements.Origin.static
    export function type(className: "javax.lang.model.type.TypeMirror"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.type.TypeMirror> & _javatypes.javax.lang.model.type.TypeMirror.static
    export function type(className: "javax.lang.model.type.DeclaredType"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.type.DeclaredType> & _javatypes.javax.lang.model.type.DeclaredType.static
    export function type(className: "javax.lang.model.type.ExecutableType"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.type.ExecutableType> & _javatypes.javax.lang.model.type.ExecutableType.static
    export function type(className: "javax.lang.model.type.PrimitiveType"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.type.PrimitiveType> & _javatypes.javax.lang.model.type.PrimitiveType.static
    export function type(className: "javax.lang.model.type.TypeKind"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.type.TypeKind> & _javatypes.javax.lang.model.type.TypeKind.static
    export function type(className: "javax.lang.model.type.NullType"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.type.NullType> & _javatypes.javax.lang.model.type.NullType.static
    export function type(className: "javax.lang.model.type.NoType"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.type.NoType> & _javatypes.javax.lang.model.type.NoType.static
    export function type(className: "javax.lang.model.type.ArrayType"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.type.ArrayType> & _javatypes.javax.lang.model.type.ArrayType.static
    export function type(className: "javax.lang.model.type.WildcardType"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.type.WildcardType> & _javatypes.javax.lang.model.type.WildcardType.static
    export function type(className: "javax.lang.model.type.ReferenceType"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.type.ReferenceType> & _javatypes.javax.lang.model.type.ReferenceType.static
    export function type(className: "javax.lang.model.type.TypeVisitor"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.type.TypeVisitor> & _javatypes.javax.lang.model.type.TypeVisitor.static
    export function type(className: "javax.lang.model.type.ErrorType"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.type.ErrorType> & _javatypes.javax.lang.model.type.ErrorType.static
    export function type(className: "javax.lang.model.type.TypeVariable"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.type.TypeVariable> & _javatypes.javax.lang.model.type.TypeVariable.static
    export function type(className: "javax.lang.model.type.UnionType"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.type.UnionType> & _javatypes.javax.lang.model.type.UnionType.static
    export function type(className: "javax.lang.model.type.IntersectionType"): _javatypes.java.lang.Class<_javatypes.javax.lang.model.type.IntersectionType> & _javatypes.javax.lang.model.type.IntersectionType.static
    export function type(className: "javax.tools.Diagnostic.Kind"): _javatypes.java.lang.Class<_javatypes.javax.tools.Diagnostic.Kind> & _javatypes.javax.tools.Diagnostic.Kind.static
    export function type(className: "javax.tools.JavaFileObject"): _javatypes.java.lang.Class<_javatypes.javax.tools.JavaFileObject> & _javatypes.javax.tools.JavaFileObject.static
    export function type(className: "javax.tools.JavaFileManager.Location"): _javatypes.java.lang.Class<_javatypes.javax.tools.JavaFileManager.Location> & _javatypes.javax.tools.JavaFileManager.Location.static
    export function type(className: "javax.tools.FileObject"): _javatypes.java.lang.Class<_javatypes.javax.tools.FileObject> & _javatypes.javax.tools.FileObject.static
    export function type(className: "javax.tools.JavaFileObject.Kind"): _javatypes.java.lang.Class<_javatypes.javax.tools.JavaFileObject.Kind> & _javatypes.javax.tools.JavaFileObject.Kind.static
    export function type(className: "javax.swing.text.AttributeSet"): _javatypes.java.lang.Class<_javatypes.javax.swing.text.AttributeSet> & _javatypes.javax.swing.text.AttributeSet.static
    export function type(className: "it.unimi.dsi.fastutil.BidirectionalIterator"): _javatypes.java.lang.Class<_javatypes.it.unimi.dsi.fastutil.BidirectionalIterator> & _javatypes.it.unimi.dsi.fastutil.BidirectionalIterator.static
    export function type(className: "it.unimi.dsi.fastutil.ints.IntList"): _javatypes.java.lang.Class<_javatypes.it.unimi.dsi.fastutil.ints.IntList> & _javatypes.it.unimi.dsi.fastutil.ints.IntList.static
    export function type(className: "it.unimi.dsi.fastutil.ints.IntCollection"): _javatypes.java.lang.Class<_javatypes.it.unimi.dsi.fastutil.ints.IntCollection> & _javatypes.it.unimi.dsi.fastutil.ints.IntCollection.static
    export function type(className: "it.unimi.dsi.fastutil.ints.IntListIterator"): _javatypes.java.lang.Class<_javatypes.it.unimi.dsi.fastutil.ints.IntListIterator> & _javatypes.it.unimi.dsi.fastutil.ints.IntListIterator.static
    export function type(className: "it.unimi.dsi.fastutil.ints.IntSpliterator"): _javatypes.java.lang.Class<_javatypes.it.unimi.dsi.fastutil.ints.IntSpliterator> & _javatypes.it.unimi.dsi.fastutil.ints.IntSpliterator.static
    export function type(className: "it.unimi.dsi.fastutil.ints.IntUnaryOperator"): _javatypes.java.lang.Class<_javatypes.it.unimi.dsi.fastutil.ints.IntUnaryOperator> & _javatypes.it.unimi.dsi.fastutil.ints.IntUnaryOperator.static
    export function type(className: "it.unimi.dsi.fastutil.ints.IntComparator"): _javatypes.java.lang.Class<_javatypes.it.unimi.dsi.fastutil.ints.IntComparator> & _javatypes.it.unimi.dsi.fastutil.ints.IntComparator.static
    export function type(className: "it.unimi.dsi.fastutil.ints.IntBidirectionalIterator"): _javatypes.java.lang.Class<_javatypes.it.unimi.dsi.fastutil.ints.IntBidirectionalIterator> & _javatypes.it.unimi.dsi.fastutil.ints.IntBidirectionalIterator.static
    export function type(className: "it.unimi.dsi.fastutil.ints.IntConsumer"): _javatypes.java.lang.Class<_javatypes.it.unimi.dsi.fastutil.ints.IntConsumer> & _javatypes.it.unimi.dsi.fastutil.ints.IntConsumer.static
    export function type(className: "it.unimi.dsi.fastutil.ints.IntIterable"): _javatypes.java.lang.Class<_javatypes.it.unimi.dsi.fastutil.ints.IntIterable> & _javatypes.it.unimi.dsi.fastutil.ints.IntIterable.static
    export function type(className: "it.unimi.dsi.fastutil.ints.IntIterator"): _javatypes.java.lang.Class<_javatypes.it.unimi.dsi.fastutil.ints.IntIterator> & _javatypes.it.unimi.dsi.fastutil.ints.IntIterator.static
    export function type(className: "it.unimi.dsi.fastutil.ints.IntPredicate"): _javatypes.java.lang.Class<_javatypes.it.unimi.dsi.fastutil.ints.IntPredicate> & _javatypes.it.unimi.dsi.fastutil.ints.IntPredicate.static
    export function type(className: "it.unimi.dsi.fastutil.objects.ObjectBidirectionalIterator"): _javatypes.java.lang.Class<_javatypes.it.unimi.dsi.fastutil.objects.ObjectBidirectionalIterator> & _javatypes.it.unimi.dsi.fastutil.objects.ObjectBidirectionalIterator.static
    export function type(className: "it.unimi.dsi.fastutil.objects.ObjectIterator"): _javatypes.java.lang.Class<_javatypes.it.unimi.dsi.fastutil.objects.ObjectIterator> & _javatypes.it.unimi.dsi.fastutil.objects.ObjectIterator.static
    export function type(className: "javassist.CtClass"): _javatypes.java.lang.Class<_javatypes.javassist.CtClass> & _javatypes.javassist.CtClass.static
    export function type(className: "javassist.CtBehavior"): _javatypes.java.lang.Class<_javatypes.javassist.CtBehavior> & _javatypes.javassist.CtBehavior.static
    export function type(className: "javassist.CtField.Initializer"): _javatypes.java.lang.Class<_javatypes.javassist.CtField.Initializer> & _javatypes.javassist.CtField.Initializer.static
    export function type(className: "javassist.CtMember"): _javatypes.java.lang.Class<_javatypes.javassist.CtMember> & _javatypes.javassist.CtMember.static
    export function type(className: "javassist.CodeConverter"): _javatypes.java.lang.Class<_javatypes.javassist.CodeConverter> & _javatypes.javassist.CodeConverter.static
    export function type(className: "javassist.ClassPool"): _javatypes.java.lang.Class<_javatypes.javassist.ClassPool> & _javatypes.javassist.ClassPool.static
    export function type(className: "javassist.ClassMap"): _javatypes.java.lang.Class<_javatypes.javassist.ClassMap> & _javatypes.javassist.ClassMap.static
    export function type(className: "javassist.CtMethod"): _javatypes.java.lang.Class<_javatypes.javassist.CtMethod> & _javatypes.javassist.CtMethod.static
    export function type(className: "javassist.CtField"): _javatypes.java.lang.Class<_javatypes.javassist.CtField> & _javatypes.javassist.CtField.static
    export function type(className: "javassist.CtConstructor"): _javatypes.java.lang.Class<_javatypes.javassist.CtConstructor> & _javatypes.javassist.CtConstructor.static
    export function type(className: "javassist.ClassPath"): _javatypes.java.lang.Class<_javatypes.javassist.ClassPath> & _javatypes.javassist.ClassPath.static
    export function type(className: "javassist.CtMethod.ConstParameter"): _javatypes.java.lang.Class<_javatypes.javassist.CtMethod.ConstParameter> & _javatypes.javassist.CtMethod.ConstParameter.static
    export function type(className: "javassist.CodeConverter.ArrayAccessReplacementMethodNames"): _javatypes.java.lang.Class<_javatypes.javassist.CodeConverter.ArrayAccessReplacementMethodNames> & _javatypes.javassist.CodeConverter.ArrayAccessReplacementMethodNames.static
    export function type(className: "javassist.util.proxy.ProxyFactory"): _javatypes.java.lang.Class<_javatypes.javassist.util.proxy.ProxyFactory> & _javatypes.javassist.util.proxy.ProxyFactory.static
    export function type(className: "javassist.util.proxy.MethodFilter"): _javatypes.java.lang.Class<_javatypes.javassist.util.proxy.MethodFilter> & _javatypes.javassist.util.proxy.MethodFilter.static
    export function type(className: "javassist.util.proxy.MethodHandler"): _javatypes.java.lang.Class<_javatypes.javassist.util.proxy.MethodHandler> & _javatypes.javassist.util.proxy.MethodHandler.static
    export function type(className: "javassist.util.proxy.ProxyFactory.ClassLoaderProvider"): _javatypes.java.lang.Class<_javatypes.javassist.util.proxy.ProxyFactory.ClassLoaderProvider> & _javatypes.javassist.util.proxy.ProxyFactory.ClassLoaderProvider.static
    export function type(className: "javassist.util.proxy.ProxyFactory.UniqueName"): _javatypes.java.lang.Class<_javatypes.javassist.util.proxy.ProxyFactory.UniqueName> & _javatypes.javassist.util.proxy.ProxyFactory.UniqueName.static
    export function type(className: "javassist.util.proxy.Proxy"): _javatypes.java.lang.Class<_javatypes.javassist.util.proxy.Proxy> & _javatypes.javassist.util.proxy.Proxy.static
    export function type(className: "javassist.bytecode.ConstPool"): _javatypes.java.lang.Class<_javatypes.javassist.bytecode.ConstPool> & _javatypes.javassist.bytecode.ConstPool.static
    export function type(className: "javassist.bytecode.MethodInfo"): _javatypes.java.lang.Class<_javatypes.javassist.bytecode.MethodInfo> & _javatypes.javassist.bytecode.MethodInfo.static
    export function type(className: "javassist.bytecode.ClassFile"): _javatypes.java.lang.Class<_javatypes.javassist.bytecode.ClassFile> & _javatypes.javassist.bytecode.ClassFile.static
    export function type(className: "javassist.bytecode.FieldInfo"): _javatypes.java.lang.Class<_javatypes.javassist.bytecode.FieldInfo> & _javatypes.javassist.bytecode.FieldInfo.static
    export function type(className: "javassist.bytecode.AttributeInfo"): _javatypes.java.lang.Class<_javatypes.javassist.bytecode.AttributeInfo> & _javatypes.javassist.bytecode.AttributeInfo.static
    export function type(className: "javassist.bytecode.ExceptionsAttribute"): _javatypes.java.lang.Class<_javatypes.javassist.bytecode.ExceptionsAttribute> & _javatypes.javassist.bytecode.ExceptionsAttribute.static
    export function type(className: "javassist.bytecode.CodeAttribute"): _javatypes.java.lang.Class<_javatypes.javassist.bytecode.CodeAttribute> & _javatypes.javassist.bytecode.CodeAttribute.static
    export function type(className: "javassist.bytecode.Opcode"): _javatypes.java.lang.Class<_javatypes.javassist.bytecode.Opcode> & _javatypes.javassist.bytecode.Opcode.static
    export function type(className: "javassist.bytecode.CodeIterator"): _javatypes.java.lang.Class<_javatypes.javassist.bytecode.CodeIterator> & _javatypes.javassist.bytecode.CodeIterator.static
    export function type(className: "javassist.bytecode.ExceptionTable"): _javatypes.java.lang.Class<_javatypes.javassist.bytecode.ExceptionTable> & _javatypes.javassist.bytecode.ExceptionTable.static
    export function type(className: "javassist.bytecode.StackMapTable"): _javatypes.java.lang.Class<_javatypes.javassist.bytecode.StackMapTable> & _javatypes.javassist.bytecode.StackMapTable.static
    export function type(className: "javassist.bytecode.StackMap"): _javatypes.java.lang.Class<_javatypes.javassist.bytecode.StackMap> & _javatypes.javassist.bytecode.StackMap.static
    export function type(className: "javassist.bytecode.CodeIterator.Gap"): _javatypes.java.lang.Class<_javatypes.javassist.bytecode.CodeIterator.Gap> & _javatypes.javassist.bytecode.CodeIterator.Gap.static
    export function type(className: "javassist.expr.ExprEditor"): _javatypes.java.lang.Class<_javatypes.javassist.expr.ExprEditor> & _javatypes.javassist.expr.ExprEditor.static
    export function type(className: "javassist.expr.NewExpr"): _javatypes.java.lang.Class<_javatypes.javassist.expr.NewExpr> & _javatypes.javassist.expr.NewExpr.static
    export function type(className: "javassist.expr.NewArray"): _javatypes.java.lang.Class<_javatypes.javassist.expr.NewArray> & _javatypes.javassist.expr.NewArray.static
    export function type(className: "javassist.expr.MethodCall"): _javatypes.java.lang.Class<_javatypes.javassist.expr.MethodCall> & _javatypes.javassist.expr.MethodCall.static
    export function type(className: "javassist.expr.ConstructorCall"): _javatypes.java.lang.Class<_javatypes.javassist.expr.ConstructorCall> & _javatypes.javassist.expr.ConstructorCall.static
    export function type(className: "javassist.expr.FieldAccess"): _javatypes.java.lang.Class<_javatypes.javassist.expr.FieldAccess> & _javatypes.javassist.expr.FieldAccess.static
    export function type(className: "javassist.expr.Instanceof"): _javatypes.java.lang.Class<_javatypes.javassist.expr.Instanceof> & _javatypes.javassist.expr.Instanceof.static
    export function type(className: "javassist.expr.Cast"): _javatypes.java.lang.Class<_javatypes.javassist.expr.Cast> & _javatypes.javassist.expr.Cast.static
    export function type(className: "javassist.expr.Handler"): _javatypes.java.lang.Class<_javatypes.javassist.expr.Handler> & _javatypes.javassist.expr.Handler.static
    export function type(className: "javassist.expr.Expr"): _javatypes.java.lang.Class<_javatypes.javassist.expr.Expr> & _javatypes.javassist.expr.Expr.static
    export function type(className: "javassist.compiler.AccessorMaker"): _javatypes.java.lang.Class<_javatypes.javassist.compiler.AccessorMaker> & _javatypes.javassist.compiler.AccessorMaker.static
}